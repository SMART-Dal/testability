Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,AntBytecodeEnhancedTest,testDirtyChecking,Magic Number,The method contains a magic number: 987L,24
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,AntBytecodeEnhancedTest,testDirtyChecking,Magic Number,The method contains a magic number: 123L,24
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,FlushTypeTest,testAutoFlushHQLSubSelect,Long Statement,The length of the statement "assertEquals(0L`session.createQuery("select count(*) " + "from User u " + "where u.favoriteColor in (select distinct(p.color) from Product p)").uniqueResult());" is 160.,48
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,FlushTypeTest,testAutoFlushHQLThetaJoinSelect,Long Statement,The length of the statement "assertEquals(0L`session.createQuery("select count(*) " + "from User u` Product p " + "where u.favoriteColor = p.color").uniqueResult());" is 136.,65
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,FlushTypeTest,testAutoFlushSQLAlwaysFlush,Long Statement,The length of the statement "assertEquals(product.getId()`session.createSQLQuery("select id from product").setFlushMode(FlushMode.ALWAYS).uniqueResult());" is 125.,95
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,FlushTypeTest,testAutoFlushSQLAddSynchronization,Long Statement,The length of the statement "assertEquals(product.getId()`session.createSQLQuery("select id from product").addSynchronizedEntityClass(Product.class).uniqueResult());" is 136.,108
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,AutoDirtyCheckingTest,testDirtyChecking,Magic Number,The method contains a magic number: 123L,23
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,SelfDirtyCheckingEntity,markDirtyProperty,Magic Number,The method contains a magic number: 2,52
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,BytecodeEnhancedTest,testDirtyChecking,Magic Number,The method contains a magic number: 987L,22
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.flushing,BytecodeEnhancedTest,testDirtyChecking,Magic Number,The method contains a magic number: 123L,22
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.inheritance,OverrideIdentifierDefinitionTest,testAddBook,Magic Number,The method contains a magic number: 1234567890123L,61
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.inheritance,InheritanceGroupByTest,testTree,Long Statement,The length of the statement "List<Object[]> result2=(List<Object[]>)session.createQuery("select distinct a` a.id from FirmUser a order by id").list();" is 121.,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.inheritance,InheritanceGroupByTest,testTree,Long Statement,The length of the statement "List<FirmUser> result3=(List<FirmUser>)session.createSQLQuery("select * " + "from FIRM_USER a " + "LEFT JOIN BASE_USER b ON a.id = b.id "+ "order by a.id").addEntity("a"`FirmUser.class).setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY).list();" is 245.,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,HiloIdentifierTest,testHiloIdentifierGenerator,Magic Number,The method contains a magic number: 8,22
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,IdentityVsSequenceIdentifierTest,entities,Long Statement,The length of the statement "return new Class<?>[]{IdentityIdentifier.class`SequenceIdentifier.class`TableSequenceIdentifier.class`AssignTableSequenceIdentifier.class};" is 139.,17
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,IdentityVsSequenceIdentifierTest,testIdentityIdentifierGenerator,Magic Number,The method contains a magic number: 5,36
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,IdentityVsSequenceIdentifierTest,testSequenceIdentifierGenerator,Magic Number,The method contains a magic number: 5,49
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,IdentityVsSequenceIdentifierTest,testTableSequenceIdentifierGenerator,Magic Number,The method contains a magic number: 5,62
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,IdentityVsSequenceIdentifierTest,testAssignTableSequenceIdentifierGenerator,Magic Number,The method contains a magic number: 5,75
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,PostgreSQLAutoTest,testBatch,Magic Number,The method contains a magic number: 3,31
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,SequenceVsTableGeneratorTest,testSequenceIdentifierGenerator,Magic Number,The method contains a magic number: 5,26
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,SequenceVsTableGeneratorTest,testTableSequenceIdentifierGenerator,Magic Number,The method contains a magic number: 5,37
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,AbstractPooledSequenceIdentifierTest,insertSequences,Magic Number,The method contains a magic number: 8,27
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,AbstractPooledSequenceIdentifierTest,insertSequences,Magic Number,The method contains a magic number: 8,27
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,AbstractPooledSequenceIdentifierTest,insertSequences,Magic Number,The method contains a magic number: 11,27
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,AbstractPooledSequenceIdentifierTest,insertSequences,Magic Number,The method contains a magic number: 3,27
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,UUIDIdentifierTest,testAssignedIdentifierGenerator,Long Statement,The length of the statement "assertSame(assignedUUIDIdentifier`session.createQuery("from AssignedUUIDIdentifier where uuid = :uuid").setParameter("uuid"`assignedUUIDIdentifier.uuid).uniqueResult());" is 169.,26
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.idgenerator,AutoIdentifierMySQLTest,test,Magic Number,The method contains a magic number: 3,27
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.mapping,CompositeIdWithManyToOneTest,test,Magic Number,The method contains a magic number: 2,58
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,ReadOnlyCacheConcurrencyStrategyTest,testCollectionCache,Magic Number,The method contains a magic number: 2,72
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,ReadOnlyCacheConcurrencyStrategyTest,testCollectionCache,Magic Number,The method contains a magic number: 2,72
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,ReadWriteCacheConcurrencyStrategyWithLockTimeoutTest,getProperties,Magic Number,The method contains a magic number: 250,52
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,ReadWriteCacheConcurrencyStrategyWithLockTimeoutTest,testRepositoryEntityUpdate,Magic Number,The method contains a magic number: 100,70
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,ReadWriteCacheConcurrencyStrategyWithLockTimeoutTest,cacheKey,Long Statement,The length of the statement "return new CacheKey(identifier`p.getIdentifierType()`p.getRootEntityName()`null`(SessionFactoryImplementor)getSessionFactory());" is 128.,135
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testLoadFromCollectionCache,Magic Number,The method contains a magic number: 2,73
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testInvalidateEntityCollectionCacheOnAddingEntries,Magic Number,The method contains a magic number: 2,82
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testInvalidateEntityCollectionCacheOnAddingEntries,Magic Number,The method contains a magic number: 3,82
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testInvalidateEntityCollectionCacheOnRemovingEntries,Magic Number,The method contains a magic number: 2,103
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testConsistencyWhenSQLUpdating,Long Statement,The length of the statement "session.createSQLQuery("update Commit c " + "set c.review = true ").addSynchronizedEntityClass(Commit.class).executeUpdate();" is 125.,162
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testInvalidateEmbeddableCollectionCacheOnRemovingEntries,Magic Number,The method contains a magic number: 2,222
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testInvalidateEmbeddableCollectionCacheOnAddingEntries,Magic Number,The method contains a magic number: 2,236
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,CollectionCacheTest,testInvalidateEmbeddableCollectionCacheOnAddingEntries,Magic Number,The method contains a magic number: 3,236
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,getLatestPosts,Long Statement,The length of the statement "return (List<Post>)session.createQuery("select p " + "from Post p " + "order by p.createdOn desc").setMaxResults(10).setCacheable(true).list();" is 143.,61
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,getLatestPosts,Magic Number,The method contains a magic number: 10,61
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,getLatestPostsByAuthorId,Long Statement,The length of the statement "return (List<Post>)session.createQuery("select p " + "from Post p " + "join p.author a "+ "where a.id = :authorId "+ "order by p.createdOn desc").setParameter("authorId"`1L).setMaxResults(10).setCacheable(true).list();" is 218.,72
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,getLatestPostsByAuthorId,Magic Number,The method contains a magic number: 10,72
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,getLatestPostsByAuthor,Long Statement,The length of the statement "return (List<Post>)session.createQuery("select p " + "from Post p " + "join p.author a "+ "where a = :author "+ "order by p.createdOn desc").setParameter("author"`author).setMaxResults(10).setCacheable(true).list();" is 215.,86
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,getLatestPostsByAuthor,Magic Number,The method contains a magic number: 10,86
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,test2ndLevelCacheWithQueryInvalidation,Magic Number,The method contains a magic number: 2,134
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,test2ndLevelCacheWithQueryInvalidation,Magic Number,The method contains a magic number: 2,134
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,QueryCacheTest,test2ndLevelCacheWithNativeQuerySynchronization,Long Statement,The length of the statement "assertEquals(1`session.createSQLQuery("update Author set name = '\"'||name||'\"' ").addSynchronizedEntityClass(Author.class).executeUpdate());" is 142.,171
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,ReadOnlyCacheConcurrencyStrategyCollectionsTest,testCollectionCache,Magic Number,The method contains a magic number: 2,50
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cache,ReadOnlyCacheConcurrencyStrategyCollectionsTest,testCollectionCache,Magic Number,The method contains a magic number: 2,50
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,RuntimeProxyDirtyCheckingTest,testAutoFlushHQL,Magic Number,The method contains a magic number: 123L,34
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,RuntimeProxyDirtyCheckingTest,execute,Magic Number,The method contains a magic number: 123L,38
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,init,Long Statement,The length of the statement "try (PreparedStatement postStatement=connection.prepareStatement(INSERT_POST);PreparedStatement postCommentStatement=connection.prepareStatement(INSERT_POST_COMMENT);PreparedStatement postDetailsStatement=connection.prepareStatement(INSERT_POST_DETAILS)){" is 255.,44
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,init,Magic Number,The method contains a magic number: 100,44
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,init,Magic Number,The method contains a magic number: 100,44
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,testJdbcOneToManyMapping,Long Statement,The length of the statement "try (PreparedStatement statement=connection.prepareStatement("SELECT * " + "FROM post AS p " + "JOIN post_comment AS pc ON p.id = pc.post_id "+ "WHERE "+ " p.id BETWEEN ? AND ? + 1")){" is 184.,100
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,testJdbcOneToManyMapping,Magic Number,The method contains a magic number: 2,100
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,toPosts,Magic Number,The method contains a magic number: 2,122
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,toPosts,Magic Number,The method contains a magic number: 3,122
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,toPosts,Magic Number,The method contains a magic number: 4,122
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,toPosts,Magic Number,The method contains a magic number: 5,122
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,toPosts,Magic Number,The method contains a magic number: 6,122
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,testJPAParameterBinding,Long Statement,The length of the statement "List<Post> posts=entityManager.createQuery("select distinct p " + "from Post p " + "join fetch p.comments "+ "where "+ " p.id BETWEEN :id AND :id + 1"`Post.class).setParameter("id"`id).getResultList();" is 201.,142
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,getPostCount,Magic Number,The method contains a magic number: 10,158
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.jpa,EntityGraphMapperTest,getPostCommentCount,Magic Number,The method contains a magic number: 10,162
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.util,AbstractTest,newEntityManagerFactory,Long Statement,The length of the statement "PersistenceUnitInfo persistenceUnitInfo=new PersistenceUnitInfoImpl(getClass().getSimpleName()`entityClassNames()`getProperties());" is 131.,554
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.util,AbstractTest,newEntityManagerFactory,Long Statement,The length of the statement "EntityManagerFactoryBuilderImpl entityManagerFactoryBuilder=new EntityManagerFactoryBuilderImpl(new PersistenceUnitInfoDescriptor(persistenceUnitInfo)`configuration);" is 166.,554
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.util,AbstractTest,newDataSource,Long Statement,The length of the statement "return ProxyDataSourceBuilder.create(getDataSourceProvider().dataSource()).name(getClass().getName()).listener(listener).build();" is 129.,582
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.util,AbstractTest,executeAsync,Magic Number,The method contains a magic number: 100,749
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.util,PersistenceUnitInfoImpl,newJTAPersistenceUnitInfo,Long Statement,The length of the statement "PersistenceUnitInfoImpl persistenceUnitInfo=new PersistenceUnitInfoImpl(persistenceUnitName`mappingFileNames`properties);" is 121.,23
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cascade,OneToManyCascadeTest,testCascadeTypeMerge,Long Statement,The length of the statement "post.getComments().stream().filter(comment -> comment.getReview().toLowerCase().contains("nice")).findAny().ifPresent(comment -> comment.setReview("Keep up the good work!"));" is 174.,45
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cascade,OneToManyCascadeTest,testOrphanRemoval,Long Statement,The length of the statement "Post post=(Post)session.createQuery("select p " + "from Post p " + "join fetch p.comments "+ "where p.id = :id").setParameter("id"`1L).uniqueResult();" is 150.,63
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cascade,ManyToManyCascadeAllParentSideTest,getByName,Long Statement,The length of the statement "return (Author)session.createQuery("select a from Author a where a.fullName = :fullName").setParameter("fullName"`fullName).uniqueResult();" is 139.,67
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cascade,ManyToManyCascadeAllBothSidesTest,getByName,Long Statement,The length of the statement "@SuppressWarnings("unchecked") List<Author> authors=(List<Author>)session.createQuery("select a from Author a where a.fullName = :fullName").setParameter("fullName"`fullName).list();" is 182.,67
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cascade,ManyToManyCascadeDissociationTest,testCascadeTypeDelete,Magic Number,The method contains a magic number: 2,51
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.cascade,ManyToManyCascadeDissociationTest,getByName,Long Statement,The length of the statement "return (Author)session.createQuery("select a from Author a join fetch a.books where a.fullName = :fullName").setParameter("fullName"`fullName).uniqueResult();" is 158.,68
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiFetchStrategyTest,entities,Long Statement,The length of the statement "return new Class<?>[]{WarehouseProductInfo.class`Importer.class`Image.class`Product.class`Company.class`SubVersion.class`Version.class};" is 136.,32
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiFetchStrategyTest,init,Magic Number,The method contains a magic number: 101,45
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiFetchStrategyTest,testFetchChild,Long Statement,The length of the statement "Product product=(Product)session.createQuery("select p " + "from Product p " + "where p.id = :productId").setParameter("productId"`productId).uniqueResult();" is 157.,83
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiFetchStrategyTest,testFetchChild,Long Statement,The length of the statement "List products=session.createCriteria(Product.class).add(Restrictions.eq("id"`productId)).setResultTransformer(CriteriaSpecification.DISTINCT_ROOT_ENTITY).list();" is 161.,83
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiFetchStrategyTest,testFetchChild,Magic Number,The method contains a magic number: 2,83
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiMultiEagerCollectionFetchStrategyTest,entities,Long Statement,The length of the statement "return new Class<?>[]{WarehouseProductInfo.class`Importer.class`Image.class`Product.class`Company.class`SubVersion.class`Version.class`Review.class};" is 149.,31
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiMultiEagerCollectionFetchStrategyTest,init,Magic Number,The method contains a magic number: 101,45
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiMultiEagerCollectionFetchStrategyTest,testFetchChild,Long Statement,The length of the statement "Product product=(Product)session.createQuery("select p " + "from Product p " + "where p.id = :productId").setParameter("productId"`productId).uniqueResult();" is 157.,93
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiMultiEagerCollectionFetchStrategyTest,testFetchChild,Long Statement,The length of the statement "List products=session.createCriteria(Product.class).add(Restrictions.eq("id"`productId)).setResultTransformer(CriteriaSpecification.DISTINCT_ROOT_ENTITY).list();" is 161.,93
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.fetch,HibernateApiMultiEagerCollectionFetchStrategyTest,testFetchChild,Magic Number,The method contains a magic number: 4,93
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.entityidentifier,EntityIdentifierTest,testEntityIdentifier,Long Statement,The length of the statement "assertSame(1`session.createQuery("select ea " + "from EntityAttribute ea " + "where "+ " ea.entityIdentifier = :entityIdentifier").setParameter("entityIdentifier"`new EntityIdentifier(product.getClass()`product.getId())).list().size());" is 236.,19
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,CustomFetchSizeFetchingTest,fetchSize,Magic Number,The method contains a magic number: 10,19
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,SqlCascadeDeleteBatchingTest,testCascadeDelete,Long Statement,The length of the statement "LOGGER.info("{}.testCascadeDelete took {} millis"`getClass().getSimpleName()`TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos.get()));" is 146.,41
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,SqlCascadeDeleteBatchingTest,itemsCount,Magic Number,The method contains a magic number: 3,80
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,TunedBatchInsertTest,batchSize,Magic Number,The method contains a magic number: 50,12
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoBatchingTest,testInsertAndUpdate,Long Statement,The length of the statement "LOGGER.info("{}.testInsert took {} millis"`getClass().getSimpleName()`TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos));" is 133.,32
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoBatchingTest,testInsertAndUpdate,Long Statement,The length of the statement "LOGGER.info("{}.testUpdate took {} millis"`getClass().getSimpleName()`TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos));" is 133.,32
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoBatchingTest,testCascadeDelete,Long Statement,The length of the statement "List<Post> posts=session.createQuery("select distinct p " + "from Post p " + "join fetch p.details d "+ "join fetch p.comments c").list();" is 138.,79
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoBatchingTest,testCascadeDelete,Long Statement,The length of the statement "LOGGER.info("{}.testCascadeDelete took {} millis"`getClass().getSimpleName()`TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos.get()));" is 146.,79
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoBatchingTest,testOrphanRemoval,Long Statement,The length of the statement "List<Post> posts=session.createQuery("select distinct p " + "from Post p " + "join fetch p.details d "+ "join fetch p.comments c").list();" is 138.,101
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoBatchingTest,testOrphanRemoval,Long Statement,The length of the statement "LOGGER.info("{}.testOrphanRemoval took {} millis"`getClass().getSimpleName()`TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos.get()));" is 146.,101
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoBatchingTest,itemsCount,Magic Number,The method contains a magic number: 3,151
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoFetchingTest,testFetchSize,Long Statement,The length of the statement "LOGGER.info("{}.testFetch took {} millis"`getClass().getSimpleName()`TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startNanos));" is 132.,33
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoFetchingTest,itemsCount,Magic Number,The method contains a magic number: 10,71
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.batch,NoFetchingTest,fetchSize,Magic Number,The method contains a magic number: 10,79
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,EntityOptimisticLockingOnBidirectionalParentOwningCollectionTest,EntityOptimisticLockingOnBidirectionalParentOwningCollectionTest,Long Statement,The length of the statement "super(EntityOptimisticLockingOnBidirectionalParentOwningCollectionTest.Post.class`EntityOptimisticLockingOnBidirectionalParentOwningCollectionTest.Comment.class);" is 162.,100
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,addProduct,Magic Number,The method contains a magic number: 199.99,30
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,addProduct,Magic Number,The method contains a magic number: 7L,30
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,canConcurrentlyModifyEachOfSubEntities,Magic Number,The method contains a magic number: 1000L,111
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,canConcurrentlyModifyEachOfSubEntities,Magic Number,The method contains a magic number: 1000L,111
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,optimisticLockingViolationForConcurrentStockModifications,Long Statement,The length of the statement "executeOperations(new IncLikes()`new ModifyQuantity(100L)`new ModifyDescription("Plasma HDTV")`new ModifyQuantity(1000L));" is 122.,126
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,optimisticLockingViolationForConcurrentStockModifications,Magic Number,The method contains a magic number: 100L,126
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,optimisticLockingViolationForConcurrentStockModifications,Magic Number,The method contains a magic number: 1000L,126
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,optimisticLockingViolationForConcurrentProductModifications,Long Statement,The length of the statement "executeOperations(new IncLikes()`new ModifyDescription("LCD TV")`new ModifyDescription("Plasma HDTV")`new ModifyQuantity(1L));" is 126.,137
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootEntityMultipleVersionsTest,optimisticLockingViolationForConcurrentLikeModifications,Magic Number,The method contains a magic number: 2L,151
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,LockModePessimisticReadWriteIntegrationTest,init,Magic Number,The method contains a magic number: 12.99,41
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,LockModePessimisticReadWriteIntegrationTest,testPessimisticReadWithPessimisticWriteNoWait,Long Statement,The length of the statement "session.buildLockRequest(new LockOptions(LockMode.PESSIMISTIC_WRITE)).setTimeOut(Session.LockRequest.PESSIMISTIC_NO_WAIT).lock(product);" is 136.,106
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,AbstractLockModeOptimisticTest,init,Magic Number,The method contains a magic number: 12.99,33
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootDirtyVersioningTest,testOptimisticLocking,Magic Number,The method contains a magic number: 199.99,94
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootDirtyVersioningTest,testOptimisticLocking,Magic Number,The method contains a magic number: 7L,94
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,LockModePessimisticForceIncrementTest,testConcurrentPessimisticForceIncrementLockingWithLockWaiting,Magic Number,The method contains a magic number: 500,60
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootOneVersionTest,testOptimisticLocking,Magic Number,The method contains a magic number: 199.99,87
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingOneRootOneVersionTest,testOptimisticLocking,Magic Number,The method contains a magic number: 7L,87
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,CascadeLockTest,testCascadeLockOnManagedEntity,Long Statement,The length of the statement "Post post=(Post)session.createQuery("select p " + "from Post p " + "join fetch p.details "+ "where "+ " p.id = :id").setParameter("id"`1L).uniqueResult();" is 154.,49
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,CascadeLockTest,testCascadeLockOnDetachedEntityWithoutScope,Long Statement,The length of the statement "Post post=doInTransaction(session -> (Post)session.createQuery("select p " + "from Post p " + "join fetch p.details "+ "join fetch p.comments "+ "where "+ " p.id = :id").setParameter("id"`1L).uniqueResult());" is 208.,73
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,CascadeLockTest,testCascadeLockOnDetachedEntityWithScope,Long Statement,The length of the statement "Post post=doInTransaction(session -> (Post)session.createQuery("select p " + "from Post p " + "join fetch p.details "+ "join fetch p.comments "+ "where "+ " p.id = :id").setParameter("id"`1L).uniqueResult());" is 208.,110
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,CascadeLockTest,testUpdateOnDetachedEntity,Long Statement,The length of the statement "Post post=doInTransaction(session -> (Post)session.createQuery("select p " + "from Post p " + "join fetch p.details "+ "join fetch p.comments "+ "where "+ " p.id = :id").setParameter("id"`1L).uniqueResult());" is 208.,147
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,LockModeOptimisticTest,testImplicitOptimisticLocking,Magic Number,The method contains a magic number: 14.49,20
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,LockModeOptimisticTest,testExplicitOptimisticLocking,Magic Number,The method contains a magic number: 14.49,39
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,EntityFirstLevelCacheReuseTest,testOptimisticLocking,Long Statement,The length of the statement "assertEquals(6L`((Number)session.createSQLQuery("select quantity from product where id = :id").setParameter("id"`product.getId()).uniqueResult()).longValue());" is 159.,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,EntityFirstLevelCacheReuseTest,testOptimisticLocking,Magic Number,The method contains a magic number: 7L,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,EntityFirstLevelCacheReuseTest,testOptimisticLocking,Magic Number,The method contains a magic number: 6L,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,EntityFirstLevelCacheReuseTest,testOptimisticLocking,Magic Number,The method contains a magic number: 7L,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,EntityFirstLevelCacheReuseTest,testOptimisticLocking,Magic Number,The method contains a magic number: 6L,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,LockModeOptimisticRaceConditionTest,interceptor,Magic Number,The method contains a magic number: 500,21
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,LockModeOptimisticRaceConditionTest,beforeTransactionCompletion,Magic Number,The method contains a magic number: 500,24
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingVersionlessTest,init,Magic Number,The method contains a magic number: 199.99,26
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingVersionlessTest,init,Magic Number,The method contains a magic number: 7L,26
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingVersionlessTest,testVersionlessOptimisticLockingWhenMerging,Magic Number,The method contains a magic number: 21.22,42
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.concurrency,OptimisticLockingVersionlessTest,testVersionlessOptimisticLockingWhenReattaching,Magic Number,The method contains a magic number: 21.22,59
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,InternalDataSourceConnectionProviderTest,getProperties,Magic Number,The method contains a magic number: 5,11
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,InternalDataSourceConnectionProviderTest,newSessionFactory,Long Statement,The length of the statement "return new Configuration().addProperties(properties).addAnnotatedClass(SecurityId.class).buildSessionFactory(new StandardServiceRegistryBuilder().applySettings(properties).build());" is 181.,28
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationDriverConnectionProviderTest,test,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,27
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationDriverConnectionProviderTest,execute,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,35
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,ExternalDataSourceConnectionProviderTest,newSessionFactory,Long Statement,The length of the statement "return new Configuration().addProperties(properties).addAnnotatedClass(SecurityId.class).buildSessionFactory(new StandardServiceRegistryBuilder().applySettings(properties).build());" is 181.,24
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationExternalDataSourceExternalconfgiurationConnectionProviderTest,test,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,18
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationExternalDataSourceExternalconfgiurationConnectionProviderTest,execute,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,26
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationInternalC3P0ConnectionProviderTest,test,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,22
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationInternalC3P0ConnectionProviderTest,execute,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,30
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,DriverConnectionProviderTest,newSessionFactory,Long Statement,The length of the statement "return new Configuration().addProperties(properties).addAnnotatedClass(SecurityId.class).buildSessionFactory(new StandardServiceRegistryBuilder().applySettings(properties).build());" is 181.,25
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationExternalDataSourceConnectionProviderTest,test,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,22
vladmihalcea_hibernate-master-class,com.vladmihalcea.hibernate.masterclass.laboratory.testenv,TransactionIsolationExternalDataSourceConnectionProviderTest,execute,Long Statement,The length of the statement "LOGGER.debug("Transaction isolation level is {}"`Environment.isolationLevelToString(connection.getTransactionIsolation()));" is 123.,30

Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
spring-projects_spring-session,org.springframework.session,ReactiveMapSessionRepository,findById,Long Statement,The length of the statement "return Mono.defer(() -> Mono.justOrEmpty(this.sessions.get(id)).filter((session) -> !session.isExpired()).map(MapSession::new).switchIfEmpty(deleteById(id).then(Mono.empty())));" is 177.,83
spring-projects_spring-session,org.springframework.session,PrincipalNameIndexResolverTests,resolveFromSpringSecurityContext,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken(PRINCIPAL_NAME`"notused"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 144.,55
spring-projects_spring-session,org.springframework.session,MapSessionRepositoryTests,getSessionExpired,Magic Number,The method contains a magic number: 5,44
spring-projects_spring-session,org.springframework.session,MapSessionRepositoryTests,createSessionCustomDefaultExpiration,Magic Number,The method contains a magic number: 10,61
spring-projects_spring-session,org.springframework.session,ReactiveMapSessionRepositoryTests,constructorMapWhenNullThenThrowsIllegalArgumentException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new ReactiveMapSessionRepository(null)).withMessage("sessions cannot be null");" is 133.,61
spring-projects_spring-session,org.springframework.session,ReactiveMapSessionRepositoryTests,findByIdWhenExpiredRemovesFromSessionMap,Magic Number,The method contains a magic number: 5,83
spring-projects_spring-session,org.springframework.session,ReactiveMapSessionRepositoryTests,createSessionWhenCustomMaxInactiveIntervalThenCustomMaxInactiveInterval,Magic Number,The method contains a magic number: 10,104
spring-projects_spring-session,org.springframework.session,DelegatingIndexResolverTests,resolve,Magic Number,The method contains a magic number: 2,41
spring-projects_spring-session,org.springframework.session,MapSessionTests,setup,Magic Number,The method contains a magic number: 1413258262962L,33
spring-projects_spring-session,org.springframework.session,MapSessionTests,constructorNullSession,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new MapSession((Session)null)).withMessage("session cannot be null");" is 123.,39
spring-projects_spring-session,org.springframework.session,MapSessionTests,getRequiredAttributeWhenNullThenException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.session.getRequiredAttribute("attrName")).withMessage("Required attribute 'attrName' is missing.");" is 158.,70
spring-projects_spring-session,org.springframework.session,MapSessionTests,isExpiredExact,Magic Number,The method contains a magic number: 1413260062962L,116
spring-projects_spring-session,org.springframework.session,MapSessionTests,isExpiredOneMsTooSoon,Magic Number,The method contains a magic number: 1413260062961L,122
spring-projects_spring-session,org.springframework.session,MapSessionTests,isExpiredOneMsAfter,Magic Number,The method contains a magic number: 1413260062963L,128
spring-projects_spring-session,org.springframework.session.web.context,AbstractHttpSessionApplicationInitializer,registerFilter,Long Statement,The length of the statement "throw new IllegalStateException("Duplicate Filter registration for '" + filterName + "'. Check to ensure the Filter is only configured once.");" is 143.,175
spring-projects_spring-session,org.springframework.session.web.server.session,SpringSessionWebSessionStore,retrieveSession,Long Statement,The length of the statement "return this.sessions.findById(sessionId).doOnNext((session) -> session.setLastAccessedTime(this.clock.instant())).map(this::existingSession);" is 141.,92
spring-projects_spring-session,org.springframework.session.web.server.session,SpringSessionWebSessionStoreTests,constructorWhenNullRepositoryThenThrowsIllegalArgumentException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new SpringSessionWebSessionStore<S>(null)).withMessage("reactiveSessionRepository cannot be null");" is 153.,67
spring-projects_spring-session,org.springframework.session.web.server.session,SpringSessionWebSessionStoreTests,setClockWhenNullThenException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.webSessionStore.setClock(null)).withMessage("clock cannot be null");" is 127.,247
spring-projects_spring-session,org.springframework.session.web.socket.server,SessionRepositoryMessageInterceptor,SessionRepositoryMessageInterceptor,Long Statement,The length of the statement "this.matchingMessageTypes=EnumSet.of(SimpMessageType.CONNECT`SimpMessageType.MESSAGE`SimpMessageType.SUBSCRIBE`SimpMessageType.UNSUBSCRIBE);" is 140.,73
spring-projects_spring-session,org.springframework.session.web.socket.server,SessionRepositoryMessageInterceptorTests,preSendconstructorNullRepository,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new SessionRepositoryMessageInterceptor<>(null)).withMessage("sessionRepository cannot be null");" is 151.,84
spring-projects_spring-session,org.springframework.session.web.socket.server,SessionRepositoryMessageInterceptorTests,setMatchingMessageTypesNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.interceptor.setMatchingMessageTypes(null)).withMessage("matchingMessageTypes cannot be null or empty");" is 162.,131
spring-projects_spring-session,org.springframework.session.web.socket.server,SessionRepositoryMessageInterceptorTests,setMatchingMessageTypesEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.interceptor.setMatchingMessageTypes(Collections.emptySet())).withMessage("matchingMessageTypes cannot be null or empty");" is 180.,137
spring-projects_spring-session,org.springframework.session.web.socket.handler,WebSocketRegistryListener,onApplicationEvent,Long Statement,The length of the statement "String httpSessionId=(sessionAttributes != null) ? SessionRepositoryMessageInterceptor.getSessionId(sessionAttributes) : null;" is 126.,57
spring-projects_spring-session,org.springframework.session.web.socket.handler,WebSocketRegistryListenerTests,onApplicationEventConnectDisconnectCleanup,Long Statement,The length of the statement "Map<String`Map<String`WebSocketSession>> httpSessionIdToWsSessions=(Map<String`Map<String`WebSocketSession>>)ReflectionTestUtils.getField(this.listener`"httpSessionIdToWsSessions");" is 181.,144
spring-projects_spring-session,org.springframework.session.web.socket.handler,WebSocketConnectHandlerDecoratorFactoryTests,constructorNullEventPublisher,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new WebSocketConnectHandlerDecoratorFactory(null)).withMessage("eventPublisher cannot be null");" is 150.,60
spring-projects_spring-session,org.springframework.session.web.socket.handler,WebSocketConnectHandlerDecoratorFactoryTests,decorateAfterConnectionEstablishedEventError,Long Statement,The length of the statement "willThrow(new IllegalStateException("Test throw on publishEvent")).given(this.eventPublisher).publishEvent(any(ApplicationEvent.class));" is 136.,76
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapper,trackContentLength,Magic Number,The method contains a magic number: 4,166
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapper,trackContentLength,Magic Number,The method contains a magic number: 5,166
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,writeCookieValue,Complex Method,Cyclomatic complexity of the method is 8,119
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,writeCookieValue,Long Statement,The length of the statement "ZonedDateTime expires=(maxAge != 0) ? ZonedDateTime.now(this.clock).plusSeconds(maxAge) : Instant.EPOCH.atZone(ZoneOffset.UTC);" is 127.,119
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Complex Conditional,The conditional expression (end > 1) && (value.charAt(0) == '"') && (value.charAt(end - 1) == '"') is complex.,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Complex Conditional,The conditional expression c < 0x21 || c == 0x22 || c == 0x2c || c == 0x3b || c == 0x5c || c == 0x7f is complex.,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Magic Number,The method contains a magic number: 0x21,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Magic Number,The method contains a magic number: 0x22,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Magic Number,The method contains a magic number: 0x2c,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Magic Number,The method contains a magic number: 0x3b,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Magic Number,The method contains a magic number: 0x5c,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateValue,Magic Number,The method contains a magic number: 0x7f,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,getMaxAge,Long Statement,The length of the statement "if (this.rememberMeRequestAttribute != null && cookieValue.getRequest().getAttribute(this.rememberMeRequestAttribute) != null) {" is 128.,215
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateDomain,Complex Conditional,The conditional expression !domainValid.get(cur) || ((prev == '.' || prev == -1) && (cur == '.' || cur == '-')) || (prev == '-' && cur == '.') is complex.,232
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validateDomain,Long Statement,The length of the statement "if (!domainValid.get(cur) || ((prev == '.' || prev == -1) && (cur == '.' || cur == '-')) || (prev == '-' && cur == '.')) {" is 122.,232
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validatePath,Complex Conditional,The conditional expression ch < 0x20 || ch > 0x7E || ch == ';' is complex.,251
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validatePath,Magic Number,The method contains a magic number: 0x20,251
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializer,validatePath,Magic Number,The method contains a magic number: 0x7E,251
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,readCookieValuesSingleAndInvalidName,Long Statement,The length of the statement "this.request.setCookies(createCookie(this.cookieName`this.sessionId`useBase64Encoding)`createCookie(this.cookieName + "INVALID"`this.sessionId + "INVALID"`useBase64Encoding));" is 175.,94
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,readCookieValuesMulti,Long Statement,The length of the statement "this.request.setCookies(createCookie(this.cookieName`this.sessionId`useBase64Encoding)`createCookie(this.cookieName`secondSession`useBase64Encoding));" is 150.,103
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,readCookieValuesMultiCustomSessionCookieName,Long Statement,The length of the statement "this.request.setCookies(createCookie(this.cookieName`this.sessionId`useBase64Encoding)`createCookie(this.cookieName`secondSession`useBase64Encoding));" is 150.,113
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,readCookieValuesNullCookieValueAndNotNullCookie,Long Statement,The length of the statement "this.request.setCookies(createCookie(this.cookieName`null`useBase64Encoding)`createCookie(this.cookieName`this.sessionId`useBase64Encoding));" is 141.,141
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,setDomainNameAndDomainNamePatternThrows,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.serializer.setDomainNamePattern(".*")).withMessage("Cannot set both domainName and domainNamePattern");" is 159.,199
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,setDomainNamePatternAndDomainNameThrows,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.serializer.setDomainName("example.com")).withMessage("Cannot set both domainName and domainNamePattern");" is 161.,228
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,setCookieNameNullThrows,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.serializer.setCookieName(null)).withMessage("cookieName cannot be null");" is 132.,251
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,writeCookieCookieMaxAgeExplicit,Magic Number,The method contains a magic number: 100,298
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,writeCookieCookieMaxAgeExplicit,Magic Number,The method contains a magic number: 100,298
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,writeCookieCookieMaxAgeExplicitEmptyCookie,Magic Number,The method contains a magic number: 100,310
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,writeCookieCookieMaxAgeExplicitCookieValue,Magic Number,The method contains a magic number: 100,322
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,writeCookieCookieMaxAgeExplicitCookieValue,Magic Number,The method contains a magic number: 100,322
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,writeCookieRememberMeCookieMaxAgeOverride,Magic Number,The method contains a magic number: 100,425
spring-projects_spring-session,org.springframework.session.web.http,DefaultCookieSerializerTests,writeCookieRememberMeCookieMaxAgeOverride,Magic Number,The method contains a magic number: 100,425
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,printWriterWriteCharIntInt,Magic Number,The method contains a magic number: 2,92
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,printWriterWriteCharIntInt,Magic Number,The method contains a magic number: 3,92
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,printWriterWriteStringIntInt,Magic Number,The method contains a magic number: 2,112
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,printWriterWriteStringIntInt,Magic Number,The method contains a magic number: 3,112
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,printWriterAppendCharSequenceIntInt,Magic Number,The method contains a magic number: 3,352
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,outputStreamWriteByteIntInt,Magic Number,The method contains a magic number: 2,399
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteIntMultiDigitCommits,Magic Number,The method contains a magic number: 10000,556
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPlus1PrintWriterWriteIntMultiDigitCommits,Magic Number,The method contains a magic number: 10000,566
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteCharIntIntCommits,Magic Number,The method contains a magic number: 2,580
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteCharIntIntCommits,Magic Number,The method contains a magic number: 3,580
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteCharIntIntCommits,Magic Number,The method contains a magic number: 3,580
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteCharCommits,Magic Number,The method contains a magic number: 4,592
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteStringIntIntCommits,Magic Number,The method contains a magic number: 2,602
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteStringIntIntCommits,Magic Number,The method contains a magic number: 3,602
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterWriteStringIntIntCommits,Magic Number,The method contains a magic number: 3,602
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintIntCommits,Magic Number,The method contains a magic number: 1234,663
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintLongCommits,Magic Number,The method contains a magic number: 12345,673
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintFloatCommits,Magic Number,The method contains a magic number: 12345,683
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintDoubleCommits,Magic Number,The method contains a magic number: 1.2345,693
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintCharArrayCommits,Magic Number,The method contains a magic number: 10,703
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintlnIntCommits,Magic Number,The method contains a magic number: 12345,762
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintlnLongCommits,Magic Number,The method contains a magic number: 12345678,772
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintlnFloatCommits,Magic Number,The method contains a magic number: 1234,782
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterPrintlnCharArrayCommits,Magic Number,The method contains a magic number: 20,802
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPrintWriterAppendCharSequenceIntIntCommits,Magic Number,The method contains a magic number: 3,842
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamWriteIntMultiDigitCommits,Magic Number,The method contains a magic number: 10000,874
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPlus1OutputStreamWriteIntMultiDigitCommits,Magic Number,The method contains a magic number: 10000,884
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthPlus1OutputStreamWriteByteArrayMultiDigitCommits,Long Statement,The length of the statement "String expected="{\n" + " \"parameterName\" : \"_csrf\"`\n" + " \"token\" : \"06300b65-c4aa-4c8f-8cda-39ee17f545a0\"`\n"+ " \"headerName\" : \"X-CSRF-TOKEN\"\n"+ "}";" is 166.,899
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamPrintIntCommits,Magic Number,The method contains a magic number: 1234,935
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamPrintLongCommits,Magic Number,The method contains a magic number: 12345,945
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamPrintFloatCommits,Magic Number,The method contains a magic number: 12345,955
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamPrintDoubleCommits,Magic Number,The method contains a magic number: 1.2345,965
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamPrintlnIntCommits,Magic Number,The method contains a magic number: 12345,1014
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamPrintlnLongCommits,Magic Number,The method contains a magic number: 12345678,1024
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,contentLengthOutputStreamPrintlnFloatCommits,Magic Number,The method contains a magic number: 1234,1034
spring-projects_spring-session,org.springframework.session.web.http,OnCommittedResponseWrapperTests,addHeaderContentLengthPrintWriterWriteStringCommits,Magic Number,The method contains a magic number: 1234,1083
spring-projects_spring-session,org.springframework.session.web.http,HeaderHttpSessionIdResolverTests,createResolverWithNullHeaderName,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new HeaderHttpSessionIdResolver(null)).withMessage("headerName cannot be null");" is 134.,70
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterCreateDate,Magic Number,The method contains a magic number: 5000,108
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterCreateDate,Magic Number,The method contains a magic number: 50L,108
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Magic Number,The method contains a magic number: 5000,112
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterCreateSetsLastAccessedTime,Magic Number,The method contains a magic number: 5,135
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Magic Number,The method contains a magic number: 5,144
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterLastAccessedTime,Magic Number,The method contains a magic number: 5L,155
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterLastAccessedTime,Magic Number,The method contains a magic number: 50L,155
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Magic Number,The method contains a magic number: 5L,159
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterMaxInactiveIntervalDefault,Magic Number,The method contains a magic number: 1800,238
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Magic Number,The method contains a magic number: 1800,241
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterMaxInactiveIntervalOverride,Magic Number,The method contains a magic number: 600,251
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterGetSessionNewWhenResponseCommittedThenException,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,427
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterChangeSessionIdNoSession,Empty catch clause,The method has an empty catch block.,541
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,545
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterSessionContext,Empty catch clause,The method has an empty catch block.,639
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,642
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateInvalidateIllegalState,Empty catch clause,The method has an empty catch block.,692
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,695
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateCreationTimeIllegalState,Empty catch clause,The method has an empty catch block.,709
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,712
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateAttributeIllegalState,Empty catch clause,The method has an empty catch block.,726
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,729
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateValueIllegalState,Empty catch clause,The method has an empty catch block.,743
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,746
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateAttributeNamesIllegalState,Empty catch clause,The method has an empty catch block.,760
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,763
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateValueNamesIllegalState,Empty catch clause,The method has an empty catch block.,777
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,780
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateSetAttributeIllegalState,Empty catch clause,The method has an empty catch block.,794
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,797
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidatePutValueIllegalState,Empty catch clause,The method has an empty catch block.,811
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,814
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateRemoveAttributeIllegalState,Empty catch clause,The method has an empty catch block.,828
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,831
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateRemoveValueIllegalState,Empty catch clause,The method has an empty catch block.,845
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,848
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateNewIllegalState,Empty catch clause,The method has an empty catch block.,862
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,865
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateLastAccessedTimeIllegalState,Empty catch clause,The method has an empty catch block.,879
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Empty catch clause,The method has an empty catch block.,882
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInvalidateMaxInteractiveInterval,Magic Number,The method contains a magic number: 3600,937
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Magic Number,The method contains a magic number: 3600,940
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterSendError,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1024
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterSendErrorAndMessage,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1037
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterSendRedirect,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1050
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterFlushBuffer,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1063
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterOutputFlush,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1076
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterOutputClose,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1089
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterWriterFlush,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1102
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterWriterClose,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException {" is 124.,1115
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterInclude,Long Statement,The length of the statement "@Override public void doFilter( HttpServletRequest wrappedRequest` HttpServletResponse wrappedResponse) throws IOException` ServletException {" is 142.,1128
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilterSessionRetrievalIsCached,Magic Number,The method contains a magic number: 3,1312
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,setHttpSessionIdResolverNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.filter.setHttpSessionIdResolver(null)).withMessage("httpSessionIdResolver cannot be null");" is 150.,1351
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,assertNewSession,Long Statement,The length of the statement "assertThat(cookie.getSecure()).describedAs("Cookie secured is expected to be " + this.request.isSecure()).isEqualTo(this.request.isSecure());" is 141.,1475
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,assertNewSession,Long Statement,The length of the statement "assertThat(this.request.getSession(false)).describedAs("The original HttpServletRequest HttpSession should be null").isNull();" is 126.,1475
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,assertNoSession,Long Statement,The length of the statement "assertThat(this.request.getSession(false)).describedAs("The original HttpServletRequest HttpSession should be null").isNull();" is 126.,1487
spring-projects_spring-session,org.springframework.session.web.http,SessionRepositoryFilterTests,doFilter,Long Statement,The length of the statement "@Override protected void doFilterInternal( HttpServletRequest request` HttpServletResponse response` FilterChain filterChain) throws ServletException` IOException {" is 164.,1525
spring-projects_spring-session,org.springframework.session.web.http,OncePerRequestFilterAopTests,doFilterOnce,Long Statement,The length of the statement "assertThatCode(() -> filter.doFilter(new MockHttpServletRequest()`new MockHttpServletResponse()`new MockFilterChain())).as("`doFilter` does not throw NPE with the bean is being proxied by Spring AOP").doesNotThrowAnyException();" is 228.,40
spring-projects_spring-session,org.springframework.session.web.http,OncePerRequestFilterTests,setup,Long Statement,The length of the statement "@Override protected void doFilterInternal( HttpServletRequest request` HttpServletResponse response` FilterChain filterChain) throws ServletException` IOException {" is 164.,54
spring-projects_spring-session,org.springframework.session.web.http,OncePerRequestFilterTests,doFilterOtherSubclassInvoked,Long Statement,The length of the statement "@Override protected void doFilterInternal( HttpServletRequest request` HttpServletResponse response` FilterChain filterChain) throws ServletException` IOException {" is 164.,87
spring-projects_spring-session,org.springframework.session.web.http,CookieHttpSessionIdResolverTests,onNewSessionTwiceNewId,Magic Number,The method contains a magic number: 2,92
spring-projects_spring-session,org.springframework.session.web.http,CookieHttpSessionIdResolverTests,createSessionCookieValue,Long Statement,The length of the statement "assertThat(createSessionCookieValue(17)).isEqualToIgnoringCase("0 0 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 a 10 b 11 c 12 d 13 e 14 f 15 10 16");" is 142.,144
spring-projects_spring-session,org.springframework.session.web.http,CookieHttpSessionIdResolverTests,createSessionCookieValue,Magic Number,The method contains a magic number: 17,144
spring-projects_spring-session,org.springframework.session.security,SpringSessionBackedSessionRegistry,getAllPrincipals,Long Statement,The length of the statement "throw new UnsupportedOperationException("SpringSessionBackedSessionRegistry does " + "not support retrieving all principals` since Spring Session provides " + "no way to obtain that information");" is 196.,55
spring-projects_spring-session,org.springframework.session.security,SpringSessionBackedSessionRegistry,getAllSessions,Long Statement,The length of the statement "if (includeExpiredSessions || !Boolean.TRUE.equals(session.getAttribute(SpringSessionBackedSessionInformation.EXPIRED_ATTR))) {" is 127.,62
spring-projects_spring-session,org.springframework.session.security,SpringSessionBackedSessionInformation,expireNow,Long Statement,The length of the statement "logger.debug("Expiring session " + getSessionId() + " for user '"+ getPrincipal()+ "'` presumably because maximum allowed concurrent "+ "sessions was exceeded");" is 161.,75
spring-projects_spring-session,org.springframework.session.security,SpringSessionBackedSessionRegistryTest,sessionInformationForExistingSession,Long Statement,The length of the statement "assertThat(sessionInfo.getLastRequest().toInstant().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(NOW.truncatedTo(ChronoUnit.MILLIS));" is 130.,74
spring-projects_spring-session,org.springframework.session.security,SpringSessionBackedSessionRegistryTest,sessionInformationForExpiredSession,Long Statement,The length of the statement "assertThat(sessionInfo.getLastRequest().toInstant().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(NOW.truncatedTo(ChronoUnit.MILLIS));" is 130.,88
spring-projects_spring-session,org.springframework.session.security,SpringSessionBackedSessionRegistryTest,getAllSessionsForAuthenticatedPrincipal,Long Statement,The length of the statement "List<SessionInformation> allSessionInfos=this.sessionRegistry.getAllSessions((AuthenticatedPrincipal)() -> USER_NAME`true);" is 123.,115
spring-projects_spring-session,org.springframework.session.security,SpringSessionBackedSessionRegistryTest,expireNow,Long Statement,The length of the statement "assertThat(captor.getValue().<Boolean>getAttribute(SpringSessionBackedSessionInformation.EXPIRED_ATTR)).isEqualTo(Boolean.TRUE);" is 128.,140
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServices,rememberMeRequested,Complex Conditional,The conditional expression rememberMe.equalsIgnoreCase("true") || rememberMe.equalsIgnoreCase("on") || rememberMe.equalsIgnoreCase("yes")|| rememberMe.equals("1") is complex.,80
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServices,rememberMeRequested,Long Statement,The length of the statement "if (rememberMe.equalsIgnoreCase("true") || rememberMe.equalsIgnoreCase("on") || rememberMe.equalsIgnoreCase("yes")|| rememberMe.equals("1")) {" is 142.,80
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,create,Magic Number,The method contains a magic number: 2592000,47
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,createWithNullParameter,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.rememberMeServices.setRememberMeParameterName(null)).withMessage("rememberMeParameterName cannot be empty or null");" is 175.,64
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,createWithCustomValidity,Magic Number,The method contains a magic number: 100000,78
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,createWithCustomValidity,Magic Number,The method contains a magic number: 100000,78
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,loginSuccess,Magic Number,The method contains a magic number: 2592000,108
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,loginSuccessWithCustomParameter,Magic Number,The method contains a magic number: 2592000,125
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,loginSuccessWithAlwaysRemember,Magic Number,The method contains a magic number: 2592000,143
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,loginSuccessWithCustomValidity,Magic Number,The method contains a magic number: 100000,159
spring-projects_spring-session,org.springframework.session.security.web.authentication,SpringSessionRememberMeServicesTests,loginSuccessWithCustomValidity,Magic Number,The method contains a magic number: 100000,159
spring-projects_spring-session,org.springframework.session.config.annotation.web.server,SpringWebSessionConfigurationTests,missingReactiveSessionRepositoryBreaksAppContext,Long Statement,The length of the statement "assertThatExceptionOfType(UnsatisfiedDependencyException.class).isThrownBy(this.context::refresh).withMessageContaining("Error creating bean with name 'webSessionManager'").withMessageContaining("No qualifying bean of type '" + ReactiveSessionRepository.class.getCanonicalName());" is 280.,72
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfiguration,init,Long Statement,The length of the statement "CookieSerializer cookieSerializer=(this.cookieSerializer != null) ? this.cookieSerializer : createDefaultCookieSerializer();" is 124.,110
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfiguration,setApplicationContext,Long Identifier,The length of the field usesSpringSessionRememberMeServices is 35.,130
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfiguration,setApplicationContext,Long Statement,The length of the statement "this.usesSpringSessionRememberMeServices=!ObjectUtils.isEmpty(applicationContext.getBeanNamesForType(SpringSessionRememberMeServices.class));" is 141.,130
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfiguration,createDefaultCookieSerializer,Complex Method,Cyclomatic complexity of the method is 8,158
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfiguration,createDefaultCookieSerializer,Long Identifier,The length of the field usesSpringSessionRememberMeServices is 35.,158
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,EnableSpringHttpSessionCustomCookieSerializerTests,usesReadSessionIds,Long Statement,The length of the statement "given(this.cookieSerializer.readCookieValues(any(HttpServletRequest.class))).willReturn(Collections.singletonList(sessionId));" is 126.,91
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfigurationTests,noSessionRepositoryConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(UnsatisfiedDependencyException.class).isThrownBy(() -> registerAndRefresh(EmptyConfiguration.class)).withMessageContaining("org.springframework.session.SessionRepository");" is 198.,64
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfigurationTests,sessionCookieConfigConfiguration,Long Statement,The length of the statement "CookieHttpSessionIdResolver httpSessionIdResolver=(CookieHttpSessionIdResolver)ReflectionTestUtils.getField(sessionRepositoryFilter`"httpSessionIdResolver");" is 157.,80
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfigurationTests,sessionCookieConfigConfiguration,Long Statement,The length of the statement "DefaultCookieSerializer cookieSerializer=(DefaultCookieSerializer)ReflectionTestUtils.getField(httpSessionIdResolver`"cookieSerializer");" is 137.,80
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfigurationTests,sessionCookieConfigConfiguration,Magic Number,The method contains a magic number: 600,80
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfigurationTests,rememberMeServicesConfiguration,Long Statement,The length of the statement "CookieHttpSessionIdResolver httpSessionIdResolver=(CookieHttpSessionIdResolver)ReflectionTestUtils.getField(sessionRepositoryFilter`"httpSessionIdResolver");" is 157.,98
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfigurationTests,rememberMeServicesConfiguration,Long Statement,The length of the statement "DefaultCookieSerializer cookieSerializer=(DefaultCookieSerializer)ReflectionTestUtils.getField(httpSessionIdResolver`"cookieSerializer");" is 137.,98
spring-projects_spring-session,org.springframework.session.config.annotation.web.http,SpringHttpSessionConfigurationTests,rememberMeServicesConfiguration,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(cookieSerializer`"rememberMeRequestAttribute")).isEqualTo(SpringSessionRememberMeServices.REMEMBER_ME_LOGIN_ATTR);" is 154.,98
spring-projects_spring-session,sample,SessionConfig,hazelcastInstance,Long Statement,The length of the statement "MapAttributeConfig attributeConfig=new MapAttributeConfig().setName(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractor(PrincipalNameExtractor.class.getName());" is 181.,37
spring-projects_spring-session,sample,SessionConfig,hazelcastInstance,Long Statement,The length of the statement "config.getMapConfig(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addMapAttributeConfig(attributeConfig).addMapIndexConfig(new MapIndexConfig(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE`false));" is 223.,37
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.anyRequest().authenticated()).requestCache((requestCache) -> requestCache.requestCache(new NullRequestCache())).httpBasic(Customizer.withDefaults());" is 197.,32
spring-projects_spring-session,sample,RestTests,unauthenticatedUserSentToLogInPage,Long Statement,The length of the statement "assertThatExceptionOfType(HttpClientErrorException.class).isThrownBy(() -> getForUser(this.baseUrl + "/"`headers`String.class)).satisfies((e) -> assertThat(e.getStatusCode()).isEqualTo(HttpStatus.UNAUTHORIZED));" is 211.,58
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,ApplicationTests,run,Long Statement,The length of the statement "ListenableFuture<WebSocketSession> wsSession=sockJsClient.doHandshake(this.webSocketHandler`"ws://localhost:" + this.port + "/sockjs");" is 135.,63
spring-projects_spring-session,sample,ApplicationTests,run,Magic Number,The method contains a magic number: 2,63
spring-projects_spring-session,sample,Config,dataSource,Long Statement,The length of the statement "return new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.H2).addScript("org/springframework/session/jdbc/schema-h2.sql").build();" is 138.,33
spring-projects_spring-session,sample,SessionConfig,hazelcastInstance,Long Statement,The length of the statement "MapAttributeConfig attributeConfig=new MapAttributeConfig().setName(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractor(PrincipalNameExtractor.class.getName());" is 181.,37
spring-projects_spring-session,sample,SessionConfig,hazelcastInstance,Long Statement,The length of the statement "config.getMapConfig(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addMapAttributeConfig(attributeConfig).addMapIndexConfig(new MapIndexConfig(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE`false));" is 223.,37
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.anyRequest().authenticated()).requestCache((requestCache) -> requestCache.requestCache(new NullRequestCache())).httpBasic(Customizer.withDefaults());" is 197.,32
spring-projects_spring-session,sample,RestTests,unauthenticatedUserSentToLogInPage,Long Statement,The length of the statement "assertThatExceptionOfType(HttpClientErrorException.class).isThrownBy(() -> getForUser(this.baseUrl + "/"`headers`String.class)).satisfies((e) -> assertThat(e.getStatusCode()).isEqualTo(HttpStatus.UNAUTHORIZED));" is 211.,58
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,EmbeddedRedisConfig,redisContainer,Magic Number,The method contains a magic number: 6379,33
spring-projects_spring-session,sample,ApplicationTests,run,Long Statement,The length of the statement "ListenableFuture<WebSocketSession> wsSession=sockJsClient.doHandshake(this.webSocketHandler`"ws://localhost:" + this.port + "/sockjs");" is 135.,63
spring-projects_spring-session,sample,ApplicationTests,run,Magic Number,The method contains a magic number: 2,63
spring-projects_spring-session,sample,Config,dataSource,Long Statement,The length of the statement "return new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.H2).addScript("org/springframework/session/jdbc/schema-h2.sql").build();" is 138.,33
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,44
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,35
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "MapAttributeConfig attributeConfig=new MapAttributeConfig().setName(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractor(PrincipalNameExtractor.class.getName());" is 181.,36
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "config.getMapConfig(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addMapAttributeConfig(attributeConfig).addMapIndexConfig(new MapIndexConfig(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE`false));" is 223.,36
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,34
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.loginPage("/login").permitAll());" is 227.,35
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.loginPage("/login").permitAll());" is 227.,34
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,28
spring-projects_spring-session,sample.config,WebSocketSecurityConfig,configureInbound,Long Statement,The length of the statement "messages.simpMessageDestMatchers("/queue/**"`"/topic/**").denyAll().simpSubscribeDestMatchers("/queue/**/*-user*"`"/topic/**/*-user*").denyAll().anyMessage().authenticated();" is 174.,30
spring-projects_spring-session,sample.config,WebSecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,53
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "AttributeConfig attributeConfig=new AttributeConfig().setName(Hazelcast4IndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractorClassName(Hazelcast4PrincipalNameExtractor.class.getName());" is 195.,37
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "config.getMapConfig(Hazelcast4IndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addAttributeConfig(attributeConfig).addIndexConfig(new IndexConfig(IndexType.HASH`Hazelcast4IndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE));" is 225.,37
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,29
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,44
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,35
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "MapAttributeConfig attributeConfig=new MapAttributeConfig().setName(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractor(PrincipalNameExtractor.class.getName());" is 181.,36
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "config.getMapConfig(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addMapAttributeConfig(attributeConfig).addMapIndexConfig(new MapIndexConfig(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE`false));" is 223.,36
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,34
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.loginPage("/login").permitAll());" is 227.,35
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.loginPage("/login").permitAll());" is 227.,34
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,28
spring-projects_spring-session,sample.config,WebSocketSecurityConfig,configureInbound,Long Statement,The length of the statement "messages.simpMessageDestMatchers("/queue/**"`"/topic/**").denyAll().simpSubscribeDestMatchers("/queue/**/*-user*"`"/topic/**/*-user*").denyAll().anyMessage().authenticated();" is 174.,30
spring-projects_spring-session,sample.config,WebSecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,53
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "AttributeConfig attributeConfig=new AttributeConfig().setName(Hazelcast4IndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractorClassName(Hazelcast4PrincipalNameExtractor.class.getName());" is 195.,37
spring-projects_spring-session,sample.config,SessionConfig,hazelcastConfig,Long Statement,The length of the statement "config.getMapConfig(Hazelcast4IndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addAttributeConfig(attributeConfig).addIndexConfig(new IndexConfig(IndexType.HASH`Hazelcast4IndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE));" is 225.,37
spring-projects_spring-session,sample.config,SecurityConfig,configure,Long Statement,The length of the statement "http.authorizeRequests((authorize) -> authorize.requestMatchers(PathRequest.toStaticResources().atCommonLocations()).permitAll().anyRequest().authenticated()).formLogin((formLogin) -> formLogin.permitAll());" is 207.,29
spring-projects_spring-session,org.springframework.session.mongodb.examples,SessionAttributeForm,toString,Long Statement,The length of the statement "return "SessionAttributeForm{" + "attributeName='" + this.attributeName + '\''+ "` attributeValue='"+ this.attributeValue+ '\''+ '}';" is 133.,67
spring-projects_spring-session,org.springframework.session.mongodb.examples,SessionAttributeForm,toString,Long Statement,The length of the statement "return "SessionAttributeForm{" + "attributeName='" + this.attributeName + '\''+ "` attributeValue='"+ this.attributeValue+ '\''+ '}';" is 133.,67
spring-projects_spring-session,org.springframework.session.mongodb.examples.config,SecurityConfig,configureGlobal,Long Statement,The length of the statement "auth.inMemoryAuthentication().withUser(User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build());" is 134.,31
spring-projects_spring-session,org.springframework.session.mongodb.examples.config,HttpSessionConfig,jdkMongoSessionConverter,Magic Number,The method contains a magic number: 30,29
spring-projects_spring-session,org.springframework.session.mongodb.examples.config,SecurityConfig,configureGlobal,Long Statement,The length of the statement "auth.inMemoryAuthentication().withUser(User.withDefaultPasswordEncoder().username("user").password("password").roles("USER").build());" is 134.,31
spring-projects_spring-session,org.springframework.session.mongodb.examples.config,HttpSessionConfig,jdkMongoSessionConverter,Magic Number,The method contains a magic number: 30,29
spring-projects_spring-session,rest,RestMockMvcTests,setup,Long Statement,The length of the statement "this.mvc=MockMvcBuilders.webAppContextSetup(this.context).alwaysDo(print()).addFilters(this.sessionRepositoryFilter).apply(springSecurity()).build();" is 149.,66
spring-projects_spring-session,rest,RestMockMvcTests,setup,Long Statement,The length of the statement "this.mvc=MockMvcBuilders.webAppContextSetup(this.context).alwaysDo(print()).addFilters(this.sessionRepositoryFilter).apply(springSecurity()).build();" is 149.,66
spring-projects_spring-session,docs,IndexDocTests,newReactiveRedisSessionRepository,Long Statement,The length of the statement "RedisSerializationContext<String`Object> serializationContext=RedisSerializationContext.<String`Object>newSerializationContext(new JdkSerializationRedisSerializer()).build();" is 174.,132
spring-projects_spring-session,docs,IndexDocTests,newReactiveRedisSessionRepository,Long Statement,The length of the statement "RedisSerializationContext<String`Object> serializationContext=RedisSerializationContext.<String`Object>newSerializationContext(new JdkSerializationRedisSerializer()).build();" is 174.,132
spring-projects_spring-session,docs.http,HazelcastHttpSessionConfig,hazelcastInstance,Long Statement,The length of the statement "MapAttributeConfig attributeConfig=new MapAttributeConfig().setName(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractor(PrincipalNameExtractor.class.getName());" is 181.,39
spring-projects_spring-session,docs.http,HazelcastHttpSessionConfig,hazelcastInstance,Long Statement,The length of the statement "config.getMapConfig(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addMapAttributeConfig(attributeConfig).addMapIndexConfig(new MapIndexConfig(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE`false));" is 223.,39
spring-projects_spring-session,docs.http,HazelcastHttpSessionConfig,hazelcastInstance,Long Statement,The length of the statement "MapAttributeConfig attributeConfig=new MapAttributeConfig().setName(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractor(PrincipalNameExtractor.class.getName());" is 181.,39
spring-projects_spring-session,docs.http,HazelcastHttpSessionConfig,hazelcastInstance,Long Statement,The length of the statement "config.getMapConfig(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addMapAttributeConfig(attributeConfig).addMapIndexConfig(new MapIndexConfig(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE`false));" is 223.,39
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationTests,setup,Long Statement,The length of the statement "this.mockMvc=MockMvcBuilders.webAppContextSetup(this.context).addFilters(this.springSessionRepositoryFilter).apply(springSecurity()).build();" is 141.,65
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationTests,authenticateWhenSpringSessionRememberMeEnabledThenCookieMaxAgeAndSessionExpirationSet,Magic Number,The method contains a magic number: 30,76
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationXmlTests,setup,Long Statement,The length of the statement "this.mockMvc=MockMvcBuilders.webAppContextSetup(this.context).addFilters(this.springSessionRepositoryFilter).apply(springSecurity()).build();" is 141.,65
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationXmlTests,authenticateWhenSpringSessionRememberMeEnabledThenCookieMaxAgeAndSessionExpirationSet,Magic Number,The method contains a magic number: 30,76
spring-projects_spring-session,docs.security,SecurityConfiguration,configure,Magic Number,The method contains a magic number: 2,38
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationTests,setup,Long Statement,The length of the statement "this.mockMvc=MockMvcBuilders.webAppContextSetup(this.context).addFilters(this.springSessionRepositoryFilter).apply(springSecurity()).build();" is 141.,65
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationTests,authenticateWhenSpringSessionRememberMeEnabledThenCookieMaxAgeAndSessionExpirationSet,Magic Number,The method contains a magic number: 30,76
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationXmlTests,setup,Long Statement,The length of the statement "this.mockMvc=MockMvcBuilders.webAppContextSetup(this.context).addFilters(this.springSessionRepositoryFilter).apply(springSecurity()).build();" is 141.,65
spring-projects_spring-session,docs.security,RememberMeSecurityConfigurationXmlTests,authenticateWhenSpringSessionRememberMeEnabledThenCookieMaxAgeAndSessionExpirationSet,Magic Number,The method contains a magic number: 30,76
spring-projects_spring-session,docs.security,SecurityConfiguration,configure,Magic Number,The method contains a magic number: 2,38
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepository,save,Long Statement,The length of the statement "this.mongoOperations.save(Assert.requireNonNull(MongoSessionUtils.convertToDBObject(this.mongoSessionConverter`session)`"convertToDBObject must not null!")`this.collectionName);" is 177.,95
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepository,findByIndexNameAndIndexValue,Long Statement,The length of the statement "return Optional.ofNullable(this.mongoSessionConverter.getQueryForIndex(indexName`indexValue)).map((query) -> this.mongoOperations.find(query`Document.class`this.collectionName)).orElse(Collections.emptyList()).stream().map((dbSession) -> MongoSessionUtils.convertToSession(this.mongoSessionConverter`dbSession)).collect(Collectors.toMap(MongoSession::getId`(mapSession) -> mapSession));" is 386.,123
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverter,convert,Long Statement,The length of the statement "Duration maxIntervalDuration=(maxInterval instanceof Duration) ? (Duration)maxInterval : Duration.parse(maxInterval.toString());" is 128.,112
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverter,deserializeAttributes,Long Statement,The length of the statement "byte[] attributesBytes=((sessionAttributes instanceof Binary) ? ((Binary)sessionAttributes).getData() : (byte[])sessionAttributes);" is 131.,157
spring-projects_spring-session,org.springframework.session.data.mongo,MongoSessionUtils,convertToDBObject,Long Statement,The length of the statement "return (DBObject)mongoSessionConverter.convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class));" is 138.,35
spring-projects_spring-session,org.springframework.session.data.mongo,MongoSessionUtils,convertToSession,Long Statement,The length of the statement "return (MongoSession)mongoSessionConverter.convert(session`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class));" is 142.,42
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverter,ensureIndexes,Long Statement,The length of the statement "sessionCollectionIndexes.ensureIndex(new Index(EXPIRE_AT_FIELD_NAME`Sort.Direction.ASC).named(EXPIRE_AT_FIELD_NAME).expire(0));" is 127.,69
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverter,extractPrincipal,Long Statement,The length of the statement "return this.indexResolver.resolveIndexesFor(expiringSession).get(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME);" is 125.,91
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,createSession,Long Statement,The length of the statement "return Mono.justOrEmpty(this.maxInactiveIntervalInSeconds).map(MongoSession::new).doOnNext((mongoSession) -> publishEvent(new SessionCreatedEvent(this`mongoSession))).switchIfEmpty(Mono.just(new MongoSession()));" is 212.,77
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,save,Long Statement,The length of the statement "return this.mongoOperations.remove(Query.query(Criteria.where("_id").is(session.getOriginalSessionId()))`this.collectionName).then(this.mongoOperations.save(dbObject`this.collectionName));" is 188.,97
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,findById,Long Statement,The length of the statement "return findSession(id).map((document) -> MongoSessionUtils.convertToSession(this.mongoSessionConverter`document)).filter((mongoSession) -> !mongoSession.isExpired()).switchIfEmpty(Mono.defer(() -> this.deleteById(id).then(Mono.empty())));" is 238.,118
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,deleteById,Long Statement,The length of the statement "return findSession(id).flatMap((document) -> this.mongoOperations.remove(document`this.collectionName).then(Mono.just(document))).map((document) -> MongoSessionUtils.convertToSession(this.mongoSessionConverter`document)).doOnNext((mongoSession) -> publishEvent(new SessionDeletedEvent(this`mongoSession))).then();" is 313.,127
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverterTest,constructorNullSerializer,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new JdkMongoSessionConverter(null`new DeserializingConverter()`this.inactiveInterval));" is 141.,44
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverterTest,constructorNullDeserializer,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new JdkMongoSessionConverter(new SerializingConverter()`null`this.inactiveInterval));" is 139.,50
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldCreateSession,Long Statement,The length of the statement "assertThat(session.getMaxInactiveInterval().getSeconds()).isEqualTo(MongoIndexedSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 125.,70
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldCreateSessionWhenMaxInactiveIntervalNotDefined,Long Statement,The length of the statement "assertThat(session.getMaxInactiveInterval().getSeconds()).isEqualTo(MongoIndexedSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 125.,82
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldSaveSession,Long Statement,The length of the statement "given(this.converter.convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class))).willReturn(dbSession);" is 143.,95
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(sessionDocument);" is 145.,111
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,111
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(sessionDocument);" is 145.,133
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,133
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(mongoSession);" is 154.,158
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(eq(sessionId)`eq(Document.class)`eq(MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME))).willReturn(sessionDocument);" is 157.,158
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSessionsMapByPrincipal,Long Statement,The length of the statement "given(this.mongoOperations.find(any(Query.class)`eq(Document.class)`eq(MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME))).willReturn(Collections.singletonList(document));" is 176.,183
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSessionsMapByPrincipal,Long Statement,The length of the statement "given(this.converter.convert(document`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 142.,183
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSessionsMapByPrincipal,Magic Number,The method contains a magic number: 1800,183
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldCreateSession,Long Statement,The length of the statement "assertThat(mongoSession.getMaxInactiveInterval().getSeconds()).isEqualTo(ReactiveMongoSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 131.,80
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldCreateSessionWhenMaxInactiveIntervalNotDefined,Long Statement,The length of the statement "assertThat(mongoSession.getMaxInactiveInterval().getSeconds()).isEqualTo(ReactiveMongoSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 131.,94
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldSaveSession,Long Statement,The length of the statement "given(this.converter.convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class))).willReturn(dbSession);" is 143.,112
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(sessionDocument));" is 157.,132
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,132
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(sessionDocument));" is 157.,154
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.mongoOperations.remove(sessionDocument`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(DeleteResult.acknowledged(1)));" is 159.,154
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,154
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(sessionDocument));" is 157.,183
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,183
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,verifyRoundTripSecuritySerialization,Long Statement,The length of the statement "assertThat(deserialized).isEqualToComparingOnlyGivenFields(toSerialize`"id"`"createdMillis"`"accessedMillis"`"intervalSeconds"`"expireAt");" is 139.,55
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,verifyRoundTripSecuritySerialization,Long Statement,The length of the statement "assertThat(springSecurityContextBefore).isEqualToComparingOnlyGivenFields(springSecurityContextAfter`"authentication.principal"`"authentication.authorities"`"authentication.authenticated");" is 189.,55
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,sessionWrapperWithNoMaxIntervalShouldFallbackToDefaultValues,Magic Number,The method contains a magic number: 30,114
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,convertToSession,Long Statement,The length of the statement "return (MongoSession)getMongoSessionConverter().convert(session`TypeDescriptor.valueOf(DBObject.class)`TypeDescriptor.valueOf(MongoSession.class));" is 147.,130
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,convertToDBObject,Long Statement,The length of the statement "return (DBObject)getMongoSessionConverter().convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class));" is 143.,136
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepository,save,Long Statement,The length of the statement "this.mongoOperations.save(Assert.requireNonNull(MongoSessionUtils.convertToDBObject(this.mongoSessionConverter`session)`"convertToDBObject must not null!")`this.collectionName);" is 177.,95
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepository,findByIndexNameAndIndexValue,Long Statement,The length of the statement "return Optional.ofNullable(this.mongoSessionConverter.getQueryForIndex(indexName`indexValue)).map((query) -> this.mongoOperations.find(query`Document.class`this.collectionName)).orElse(Collections.emptyList()).stream().map((dbSession) -> MongoSessionUtils.convertToSession(this.mongoSessionConverter`dbSession)).collect(Collectors.toMap(MongoSession::getId`(mapSession) -> mapSession));" is 386.,123
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverter,convert,Long Statement,The length of the statement "Duration maxIntervalDuration=(maxInterval instanceof Duration) ? (Duration)maxInterval : Duration.parse(maxInterval.toString());" is 128.,112
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverter,deserializeAttributes,Long Statement,The length of the statement "byte[] attributesBytes=((sessionAttributes instanceof Binary) ? ((Binary)sessionAttributes).getData() : (byte[])sessionAttributes);" is 131.,157
spring-projects_spring-session,org.springframework.session.data.mongo,MongoSessionUtils,convertToDBObject,Long Statement,The length of the statement "return (DBObject)mongoSessionConverter.convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class));" is 138.,35
spring-projects_spring-session,org.springframework.session.data.mongo,MongoSessionUtils,convertToSession,Long Statement,The length of the statement "return (MongoSession)mongoSessionConverter.convert(session`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class));" is 142.,42
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverter,ensureIndexes,Long Statement,The length of the statement "sessionCollectionIndexes.ensureIndex(new Index(EXPIRE_AT_FIELD_NAME`Sort.Direction.ASC).named(EXPIRE_AT_FIELD_NAME).expire(0));" is 127.,69
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverter,extractPrincipal,Long Statement,The length of the statement "return this.indexResolver.resolveIndexesFor(expiringSession).get(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME);" is 125.,91
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,createSession,Long Statement,The length of the statement "return Mono.justOrEmpty(this.maxInactiveIntervalInSeconds).map(MongoSession::new).doOnNext((mongoSession) -> publishEvent(new SessionCreatedEvent(this`mongoSession))).switchIfEmpty(Mono.just(new MongoSession()));" is 212.,77
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,save,Long Statement,The length of the statement "return this.mongoOperations.remove(Query.query(Criteria.where("_id").is(session.getOriginalSessionId()))`this.collectionName).then(this.mongoOperations.save(dbObject`this.collectionName));" is 188.,97
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,findById,Long Statement,The length of the statement "return findSession(id).map((document) -> MongoSessionUtils.convertToSession(this.mongoSessionConverter`document)).filter((mongoSession) -> !mongoSession.isExpired()).switchIfEmpty(Mono.defer(() -> this.deleteById(id).then(Mono.empty())));" is 238.,118
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepository,deleteById,Long Statement,The length of the statement "return findSession(id).flatMap((document) -> this.mongoOperations.remove(document`this.collectionName).then(Mono.just(document))).map((document) -> MongoSessionUtils.convertToSession(this.mongoSessionConverter`document)).doOnNext((mongoSession) -> publishEvent(new SessionDeletedEvent(this`mongoSession))).then();" is 313.,127
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverterTest,constructorNullSerializer,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new JdkMongoSessionConverter(null`new DeserializingConverter()`this.inactiveInterval));" is 141.,44
spring-projects_spring-session,org.springframework.session.data.mongo,JdkMongoSessionConverterTest,constructorNullDeserializer,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new JdkMongoSessionConverter(new SerializingConverter()`null`this.inactiveInterval));" is 139.,50
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldCreateSession,Long Statement,The length of the statement "assertThat(session.getMaxInactiveInterval().getSeconds()).isEqualTo(MongoIndexedSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 125.,70
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldCreateSessionWhenMaxInactiveIntervalNotDefined,Long Statement,The length of the statement "assertThat(session.getMaxInactiveInterval().getSeconds()).isEqualTo(MongoIndexedSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 125.,82
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldSaveSession,Long Statement,The length of the statement "given(this.converter.convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class))).willReturn(dbSession);" is 143.,95
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(sessionDocument);" is 145.,111
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,111
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(sessionDocument);" is 145.,133
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,133
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(mongoSession);" is 154.,158
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(eq(sessionId)`eq(Document.class)`eq(MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME))).willReturn(sessionDocument);" is 157.,158
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSessionsMapByPrincipal,Long Statement,The length of the statement "given(this.mongoOperations.find(any(Query.class)`eq(Document.class)`eq(MongoIndexedSessionRepository.DEFAULT_COLLECTION_NAME))).willReturn(Collections.singletonList(document));" is 176.,183
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSessionsMapByPrincipal,Long Statement,The length of the statement "given(this.converter.convert(document`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 142.,183
spring-projects_spring-session,org.springframework.session.data.mongo,MongoIndexedSessionRepositoryTest,shouldGetSessionsMapByPrincipal,Magic Number,The method contains a magic number: 1800,183
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldCreateSession,Long Statement,The length of the statement "assertThat(mongoSession.getMaxInactiveInterval().getSeconds()).isEqualTo(ReactiveMongoSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 131.,80
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldCreateSessionWhenMaxInactiveIntervalNotDefined,Long Statement,The length of the statement "assertThat(mongoSession.getMaxInactiveInterval().getSeconds()).isEqualTo(ReactiveMongoSessionRepository.DEFAULT_INACTIVE_INTERVAL);" is 131.,94
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldSaveSession,Long Statement,The length of the statement "given(this.converter.convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class))).willReturn(dbSession);" is 143.,112
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(sessionDocument));" is 157.,132
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldGetSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,132
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(sessionDocument));" is 157.,154
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.mongoOperations.remove(sessionDocument`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(DeleteResult.acknowledged(1)));" is 159.,154
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldHandleExpiredSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,154
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.mongoOperations.findById(sessionId`Document.class`ReactiveMongoSessionRepository.DEFAULT_COLLECTION_NAME)).willReturn(Mono.just(sessionDocument));" is 157.,183
spring-projects_spring-session,org.springframework.session.data.mongo,ReactiveMongoSessionRepositoryTest,shouldDeleteSession,Long Statement,The length of the statement "given(this.converter.convert(sessionDocument`TypeDescriptor.valueOf(Document.class)`TypeDescriptor.valueOf(MongoSession.class))).willReturn(session);" is 149.,183
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,verifyRoundTripSecuritySerialization,Long Statement,The length of the statement "assertThat(deserialized).isEqualToComparingOnlyGivenFields(toSerialize`"id"`"createdMillis"`"accessedMillis"`"intervalSeconds"`"expireAt");" is 139.,55
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,verifyRoundTripSecuritySerialization,Long Statement,The length of the statement "assertThat(springSecurityContextBefore).isEqualToComparingOnlyGivenFields(springSecurityContextAfter`"authentication.principal"`"authentication.authorities"`"authentication.authenticated");" is 189.,55
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,sessionWrapperWithNoMaxIntervalShouldFallbackToDefaultValues,Magic Number,The method contains a magic number: 30,114
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,convertToSession,Long Statement,The length of the statement "return (MongoSession)getMongoSessionConverter().convert(session`TypeDescriptor.valueOf(DBObject.class)`TypeDescriptor.valueOf(MongoSession.class));" is 147.,130
spring-projects_spring-session,org.springframework.session.data.mongo,AbstractMongoSessionConverterTest,convertToDBObject,Long Statement,The length of the statement "return (DBObject)getMongoSessionConverter().convert(session`TypeDescriptor.valueOf(MongoSession.class)`TypeDescriptor.valueOf(DBObject.class));" is 143.,136
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfiguration,mongoSessionRepository,Long Statement,The length of the statement "JdkMongoSessionConverter mongoSessionConverter=new JdkMongoSessionConverter(new SerializingConverter()`new DeserializingConverter(this.classLoader)`Duration.ofSeconds(MongoIndexedSessionRepository.DEFAULT_INACTIVE_INTERVAL));" is 225.,71
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfiguration,mongoSessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(repository));" is 126.,71
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfiguration,setImportMetadata,Long Statement,The length of the statement "AnnotationAttributes attributes=AnnotationAttributes.fromMap(importMetadata.getAnnotationAttributes(EnableMongoHttpSession.class.getName()));" is 141.,114
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,noMongoOperationsConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(UnsatisfiedDependencyException.class).isThrownBy(() -> registerAndRefresh(EmptyConfiguration.class)).withMessageContaining("mongoSessionRepository");" is 175.,70
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,customMaxInactiveIntervalInSeconds,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,108
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,customMaxInactiveIntervalInSeconds,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"maxInactiveIntervalInSeconds")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 128.,108
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,setCustomMaxInactiveIntervalInSeconds,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,120
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,setCustomMaxInactiveIntervalInSeconds,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"maxInactiveIntervalInSeconds")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 128.,120
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,sessionRepositoryCustomizer,Magic Number,The method contains a magic number: 10000,157
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfiguration,mongoSessionRepository,Long Statement,The length of the statement "JdkMongoSessionConverter mongoSessionConverter=new JdkMongoSessionConverter(new SerializingConverter()`new DeserializingConverter(this.classLoader)`Duration.ofSeconds(MongoIndexedSessionRepository.DEFAULT_INACTIVE_INTERVAL));" is 225.,71
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfiguration,mongoSessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(repository));" is 126.,71
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfiguration,setImportMetadata,Long Statement,The length of the statement "AnnotationAttributes attributes=AnnotationAttributes.fromMap(importMetadata.getAnnotationAttributes(EnableMongoHttpSession.class.getName()));" is 141.,114
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,noMongoOperationsConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(UnsatisfiedDependencyException.class).isThrownBy(() -> registerAndRefresh(EmptyConfiguration.class)).withMessageContaining("mongoSessionRepository");" is 175.,70
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,customMaxInactiveIntervalInSeconds,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,108
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,customMaxInactiveIntervalInSeconds,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"maxInactiveIntervalInSeconds")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 128.,108
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,setCustomMaxInactiveIntervalInSeconds,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,120
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,setCustomMaxInactiveIntervalInSeconds,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"maxInactiveIntervalInSeconds")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 128.,120
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.http,MongoHttpSessionConfigurationTest,sessionRepositoryCustomizer,Magic Number,The method contains a magic number: 10000,157
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfiguration,reactiveMongoSessionRepository,Long Statement,The length of the statement "JdkMongoSessionConverter mongoSessionConverter=new JdkMongoSessionConverter(new SerializingConverter()`new DeserializingConverter(this.classLoader)`Duration.ofSeconds(ReactiveMongoSessionRepository.DEFAULT_INACTIVE_INTERVAL));" is 226.,74
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfiguration,reactiveMongoSessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(repository));" is 126.,74
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfiguration,setImportMetadata,Long Statement,The length of the statement "AnnotationAttributes attributes=AnnotationAttributes.fromMap(importMetadata.getAnnotationAttributes(EnableMongoWebSession.class.getName()));" is 140.,122
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,missingReactorSessionRepositoryBreaksAppContext,Long Statement,The length of the statement "assertThatExceptionOfType(UnsatisfiedDependencyException.class).isThrownBy(this.context::refresh).withMessageContaining("Error creating bean with name 'reactiveMongoSessionRepository'").withMessageContaining("No qualifying bean of type '" + ReactiveMongoOperations.class.getCanonicalName());" is 291.,88
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,overridingIntervalAndCollectionNameThroughAnnotationShouldWork,Magic Number,The method contains a magic number: 123,128
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,overrideCollectionAndInactiveIntervalThroughConfigurationOptions,Magic Number,The method contains a magic number: 123,165
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,sessionRepositoryCustomizer,Magic Number,The method contains a magic number: 10000,178
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfiguration,reactiveMongoSessionRepository,Long Statement,The length of the statement "JdkMongoSessionConverter mongoSessionConverter=new JdkMongoSessionConverter(new SerializingConverter()`new DeserializingConverter(this.classLoader)`Duration.ofSeconds(ReactiveMongoSessionRepository.DEFAULT_INACTIVE_INTERVAL));" is 226.,74
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfiguration,reactiveMongoSessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(repository));" is 126.,74
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfiguration,setImportMetadata,Long Statement,The length of the statement "AnnotationAttributes attributes=AnnotationAttributes.fromMap(importMetadata.getAnnotationAttributes(EnableMongoWebSession.class.getName()));" is 140.,122
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,missingReactorSessionRepositoryBreaksAppContext,Long Statement,The length of the statement "assertThatExceptionOfType(UnsatisfiedDependencyException.class).isThrownBy(this.context::refresh).withMessageContaining("Error creating bean with name 'reactiveMongoSessionRepository'").withMessageContaining("No qualifying bean of type '" + ReactiveMongoOperations.class.getCanonicalName());" is 291.,88
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,overridingIntervalAndCollectionNameThroughAnnotationShouldWork,Magic Number,The method contains a magic number: 123,128
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,overrideCollectionAndInactiveIntervalThroughConfigurationOptions,Magic Number,The method contains a magic number: 123,165
spring-projects_spring-session,org.springframework.session.data.mongo.config.annotation.web.reactive,ReactiveMongoWebSessionConfigurationTest,sessionRepositoryCustomizer,Magic Number,The method contains a magic number: 10000,178
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoRepositoryJdkSerializationITest,findByDeletedSecurityPrincipalNameReload,Long Statement,The length of the statement "Map<String`MongoSession> findByPrincipalName=this.repository.findByIndexNameAndIndexValue(INDEX_NAME`getChangedSecurityName());" is 127.,46
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "FluxExchangeResult<String> loginResult=this.client.post().uri("/login").contentType(MediaType.APPLICATION_FORM_URLENCODED).body(BodyInserters.fromFormData("username"`"admin").with("password"`"password")).exchange().returnResult(String.class);" is 242.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isOk().returnResult(String.class).getResponseBody().as(StepVerifier::create).expectNext("HelloWorld").verifyComplete();" is 213.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "String newSessionId=this.client.post().uri("/logout").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().returnResult(String.class).getResponseCookies().getFirst("SESSION").getValue();" is 205.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`newSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 215.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 220.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractMongoRepositoryITest,saves,Long Statement,The length of the statement "Authentication toSaveToken=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 136.,61
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractMongoRepositoryITest,putAllOnSingleAttrDoesNotRemoveOld,Magic Number,The method contains a magic number: 2,92
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractMongoRepositoryITest,loadExpiredSession,Magic Number,The method contains a magic number: 31,368
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractITest,setup,Long Statement,The length of the statement "this.context.setAuthentication(new UsernamePasswordAuthenticationToken("username-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 158.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractITest,setup,Long Statement,The length of the statement "this.changedContext.setAuthentication(new UsernamePasswordAuthenticationToken("changedContext-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 171.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "ReflectionUtils.makeAccessible(Assert.requireNonNull(mongoSessionConverterField`"mongoSessionConverter must not be null!"));" is 124.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "AbstractMongoSessionConverter sessionConverter=(AbstractMongoSessionConverter)ReflectionUtils.getField(mongoSessionConverterField`this.sessionRepository);" is 154.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "DeserializingConverter deserializingConverter=(DeserializingConverter)extractField(JdkMongoSessionConverter.class`"deserializer"`jdkMongoSessionConverter);" is 155.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "DefaultDeserializer deserializer=(DefaultDeserializer)extractField(DeserializingConverter.class`"deserializer"`deserializingConverter);" is 135.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "FluxExchangeResult<String> loginResult=this.client.post().uri("/login").contentType(MediaType.APPLICATION_FORM_URLENCODED).body(BodyInserters.fromFormData("username"`"admin").with("password"`"password")).exchange().returnResult(String.class);" is 242.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isOk().returnResult(String.class).getResponseBody().as(StepVerifier::create).expectNext("HelloWorld").verifyComplete();" is 213.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "String newSessionId=this.client.post().uri("/logout").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().returnResult(String.class).getResponseCookies().getFirst("SESSION").getValue();" is 205.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`newSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 215.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 220.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoRepositoryJdkSerializationITest,findByDeletedSecurityPrincipalNameReload,Long Statement,The length of the statement "Map<String`MongoSession> findByPrincipalName=this.repository.findByIndexNameAndIndexValue(INDEX_NAME`getChangedSecurityName());" is 127.,46
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "FluxExchangeResult<String> loginResult=this.client.post().uri("/login").contentType(MediaType.APPLICATION_FORM_URLENCODED).body(BodyInserters.fromFormData("username"`"admin").with("password"`"password")).exchange().returnResult(String.class);" is 242.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isOk().returnResult(String.class).getResponseBody().as(StepVerifier::create).expectNext("HelloWorld").verifyComplete();" is 213.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "String newSessionId=this.client.post().uri("/logout").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().returnResult(String.class).getResponseCookies().getFirst("SESSION").getValue();" is 205.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`newSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 215.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbDeleteJacksonSessionVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 220.,73
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractMongoRepositoryITest,saves,Long Statement,The length of the statement "Authentication toSaveToken=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 136.,61
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractMongoRepositoryITest,putAllOnSingleAttrDoesNotRemoveOld,Magic Number,The method contains a magic number: 2,92
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractMongoRepositoryITest,loadExpiredSession,Magic Number,The method contains a magic number: 31,368
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractITest,setup,Long Statement,The length of the statement "this.context.setAuthentication(new UsernamePasswordAuthenticationToken("username-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 158.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractITest,setup,Long Statement,The length of the statement "this.changedContext.setAuthentication(new UsernamePasswordAuthenticationToken("changedContext-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 171.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "ReflectionUtils.makeAccessible(Assert.requireNonNull(mongoSessionConverterField`"mongoSessionConverter must not be null!"));" is 124.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "AbstractMongoSessionConverter sessionConverter=(AbstractMongoSessionConverter)ReflectionUtils.getField(mongoSessionConverterField`this.sessionRepository);" is 154.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "DeserializingConverter deserializingConverter=(DeserializingConverter)extractField(JdkMongoSessionConverter.class`"deserializer"`jdkMongoSessionConverter);" is 155.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,AbstractClassLoaderTest,verifyContainerClassLoaderLoadedIntoConverter,Long Statement,The length of the statement "DefaultDeserializer deserializer=(DefaultDeserializer)extractField(DeserializingConverter.class`"deserializer"`deserializingConverter);" is 135.,47
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "FluxExchangeResult<String> loginResult=this.client.post().uri("/login").contentType(MediaType.APPLICATION_FORM_URLENCODED).body(BodyInserters.fromFormData("username"`"admin").with("password"`"password")).exchange().returnResult(String.class);" is 242.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isOk().returnResult(String.class).getResponseBody().as(StepVerifier::create).expectNext("HelloWorld").verifyComplete();" is 213.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "String newSessionId=this.client.post().uri("/logout").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().returnResult(String.class).getResponseCookies().getFirst("SESSION").getValue();" is 205.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`newSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 215.,71
spring-projects_spring-session,org.springframework.session.data.mongo.integration,MongoDbLogoutVerificationTest,logoutShouldDeleteOldSessionFromMongoDB,Long Statement,The length of the statement "this.client.get().uri("/hello").cookie("SESSION"`originalSessionId).exchange().expectStatus().isFound().expectHeader().value(HttpHeaders.LOCATION`(value) -> AssertionsForClassTypes.assertThat(value).isEqualTo("/login"));" is 220.,71
spring-projects_spring-session,org.springframework.session.jdbc,OracleJdbcIndexedSessionRepositoryCustomizer,customize,Long Identifier,The length of the field CREATE_SESSION_ATTRIBUTE_QUERY is 30.,46
spring-projects_spring-session,org.springframework.session.jdbc,Db2JdbcIndexedSessionRepositoryCustomizer,customize,Long Identifier,The length of the field CREATE_SESSION_ATTRIBUTE_QUERY is 30.,45
spring-projects_spring-session,org.springframework.session.jdbc,SqlServerJdbcIndexedSessionRepositoryCustomizer,customize,Long Identifier,The length of the field CREATE_SESSION_ATTRIBUTE_QUERY is 30.,45
spring-projects_spring-session,org.springframework.session.jdbc,MySqlJdbcIndexedSessionRepositoryCustomizer,customize,Long Identifier,The length of the field CREATE_SESSION_ATTRIBUTE_QUERY is 30.,38
spring-projects_spring-session,org.springframework.session.jdbc,PostgreSqlJdbcIndexedSessionRepositoryCustomizer,customize,Long Identifier,The length of the field CREATE_SESSION_ATTRIBUTE_QUERY is 30.,39
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setListSessionsByPrincipalNameQuery,Long Identifier,The length of the parameter listSessionsByPrincipalNameQuery is 32.,340
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setListSessionsByPrincipalNameQuery,Long Identifier,The length of the field listSessionsByPrincipalNameQuery is 32.,340
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setDeleteSessionsByExpiryTimeQuery,Long Identifier,The length of the parameter deleteSessionsByExpiryTimeQuery is 31.,349
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setDeleteSessionsByExpiryTimeQuery,Long Identifier,The length of the field deleteSessionsByExpiryTimeQuery is 31.,349
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,findById,Long Statement,The length of the statement "List<JdbcSession> sessions=JdbcIndexedSessionRepository.this.jdbcOperations.query(JdbcIndexedSessionRepository.this.getSessionQuery`(ps) -> ps.setString(1`id)`JdbcIndexedSessionRepository.this.extractor);" is 204.,425
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,deleteById,Long Statement,The length of the statement "this.transactionOperations.executeWithoutResult((status) -> JdbcIndexedSessionRepository.this.jdbcOperations.update(JdbcIndexedSessionRepository.this.deleteSessionQuery`id));" is 174.,448
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,findByIndexNameAndIndexValue,Long Identifier,The length of the field listSessionsByPrincipalNameQuery is 32.,454
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,findByIndexNameAndIndexValue,Long Statement,The length of the statement "List<JdbcSession> sessions=this.transactionOperations.execute((status) -> JdbcIndexedSessionRepository.this.jdbcOperations.query(JdbcIndexedSessionRepository.this.listSessionsByPrincipalNameQuery`(ps) -> ps.setString(1`indexValue)`JdbcIndexedSessionRepository.this.extractor));" is 277.,454
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,insertSessionAttributes,Empty catch clause,The method has an empty catch block.,474
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,insertSessionAttributes,Empty catch clause,The method has an empty catch block.,474
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,insertSessionAttributes,Magic Number,The method contains a magic number: 2,474
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,insertSessionAttributes,Magic Number,The method contains a magic number: 3,474
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,insertSessionAttributes,Magic Number,The method contains a magic number: 2,474
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,insertSessionAttributes,Magic Number,The method contains a magic number: 3,474
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setValues,Magic Number,The method contains a magic number: 2,482
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setValues,Magic Number,The method contains a magic number: 3,482
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,updateSessionAttributes,Magic Number,The method contains a magic number: 2,525
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,updateSessionAttributes,Magic Number,The method contains a magic number: 3,525
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,updateSessionAttributes,Magic Number,The method contains a magic number: 2,525
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,updateSessionAttributes,Magic Number,The method contains a magic number: 3,525
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setValues,Magic Number,The method contains a magic number: 2,531
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setValues,Magic Number,The method contains a magic number: 3,531
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,deleteSessionAttributes,Magic Number,The method contains a magic number: 2,557
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,deleteSessionAttributes,Magic Number,The method contains a magic number: 2,557
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,setValues,Magic Number,The method contains a magic number: 2,562
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,cleanUpExpiredSessions,Long Identifier,The length of the field deleteSessionsByExpiryTimeQuery is 31.,585
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,cleanUpExpiredSessions,Long Statement,The length of the statement "Integer deletedCount=this.transactionOperations.execute((status) -> JdbcIndexedSessionRepository.this.jdbcOperations.update(JdbcIndexedSessionRepository.this.deleteSessionsByExpiryTimeQuery`System.currentTimeMillis()));" is 219.,585
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,prepareQueries,Long Identifier,The length of the field listSessionsByPrincipalNameQuery is 32.,606
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,prepareQueries,Long Identifier,The length of the field deleteSessionsByExpiryTimeQuery is 31.,606
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,prepareQueries,Long Identifier,The length of the field CREATE_SESSION_ATTRIBUTE_QUERY is 30.,606
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,prepareQueries,Long Identifier,The length of the field UPDATE_SESSION_ATTRIBUTE_QUERY is 30.,606
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,prepareQueries,Long Identifier,The length of the field DELETE_SESSION_ATTRIBUTE_QUERY is 30.,606
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,prepareQueries,Long Identifier,The length of the field LIST_SESSIONS_BY_PRINCIPAL_NAME_QUERY is 37.,606
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,prepareQueries,Long Identifier,The length of the field DELETE_SESSIONS_BY_EXPIRY_TIME_QUERY is 36.,606
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepository,serialize,Long Statement,The length of the statement "return (byte[])this.conversionService.convert(object`TypeDescriptor.valueOf(Object.class)`TypeDescriptor.valueOf(byte[].class));" is 128.,622
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,constructorNullJdbcOperations,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new JdbcIndexedSessionRepository(null`TransactionOperations.withoutTransaction())).withMessage("jdbcOperations must not be null");" is 184.,86
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,constructorNullTransactionOperations,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new JdbcIndexedSessionRepository(this.jdbcOperations`null)).withMessage("transactionOperations must not be null");" is 168.,93
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setTableNameNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setTableName(null)).withMessage("Table name must not be empty");" is 134.,100
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setTableNameEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setTableName(" ")).withMessage("Table name must not be empty");" is 133.,106
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setCreateSessionQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setCreateSessionQuery(null)).withMessage("Query must not be empty");" is 138.,112
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setCreateSessionQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setCreateSessionQuery(" ")).withMessage("Query must not be empty");" is 137.,118
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setCreateSessionAttributeQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setCreateSessionAttributeQuery(null)).withMessage("Query must not be empty");" is 147.,124
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setCreateSessionAttributeQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setCreateSessionAttributeQuery(" ")).withMessage("Query must not be empty");" is 146.,130
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setGetSessionQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setGetSessionQuery(null)).withMessage("Query must not be empty");" is 135.,136
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setGetSessionQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setGetSessionQuery(" ")).withMessage("Query must not be empty");" is 134.,142
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setUpdateSessionQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setUpdateSessionQuery(null)).withMessage("Query must not be empty");" is 138.,148
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setUpdateSessionQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setUpdateSessionQuery(" ")).withMessage("Query must not be empty");" is 137.,154
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setUpdateSessionAttributeQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setUpdateSessionAttributeQuery(null)).withMessage("Query must not be empty");" is 147.,160
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setUpdateSessionAttributeQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setUpdateSessionAttributeQuery(" ")).withMessage("Query must not be empty");" is 146.,166
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setDeleteSessionAttributeQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setDeleteSessionAttributeQuery(null)).withMessage("Query must not be empty");" is 147.,172
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setDeleteSessionAttributeQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setDeleteSessionAttributeQuery(" ")).withMessage("Query must not be empty");" is 146.,178
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setDeleteSessionQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setDeleteSessionQuery(null)).withMessage("Query must not be empty");" is 138.,184
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setDeleteSessionQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setDeleteSessionQuery(" ")).withMessage("Query must not be empty");" is 137.,190
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setListSessionsByPrincipalNameQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setListSessionsByPrincipalNameQuery(null)).withMessage("Query must not be empty");" is 152.,196
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setListSessionsByPrincipalNameQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setListSessionsByPrincipalNameQuery(" ")).withMessage("Query must not be empty");" is 151.,202
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setDeleteSessionsByLastAccessTimeQueryNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setDeleteSessionsByExpiryTimeQuery(null)).withMessage("Query must not be empty");" is 151.,208
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setDeleteSessionsByLastAccessTimeQueryEmpty,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setDeleteSessionsByExpiryTimeQuery(" ")).withMessage("Query must not be empty");" is 150.,214
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setLobHandlerNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setLobHandler(null)).withMessage("LobHandler must not be null");" is 134.,220
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setConversionServiceNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setConversionService(null)).withMessage("conversionService must not be null");" is 148.,226
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setFlushModeNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setFlushMode(null)).withMessage("flushMode must not be null");" is 132.,232
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,setSaveModeNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setSaveMode(null)).withMessage("saveMode must not be null");" is 130.,238
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveNewWithSingleAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).update(startsWith("INSERT INTO SPRING_SESSION (")`isA(PreparedStatementSetter.class));" is 123.,285
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveNewWithSingleAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).update(startsWith("INSERT INTO SPRING_SESSION_ATTRIBUTES (")`isA(PreparedStatementSetter.class));" is 134.,285
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveNewWithMultipleAttributes,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).update(startsWith("INSERT INTO SPRING_SESSION (")`isA(PreparedStatementSetter.class));" is 123.,300
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveNewWithMultipleAttributes,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).batchUpdate(startsWith("INSERT INTO SPRING_SESSION_ATTRIBUTES (")`isA(BatchPreparedStatementSetter.class));" is 144.,300
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedAddSingleAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).update(startsWith("INSERT INTO SPRING_SESSION_ATTRIBUTES (")`isA(PreparedStatementSetter.class));" is 134.,316
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedAddMultipleAttributes,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).batchUpdate(startsWith("INSERT INTO SPRING_SESSION_ATTRIBUTES (")`isA(BatchPreparedStatementSetter.class));" is 144.,329
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedModifySingleAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).update(startsWith("UPDATE SPRING_SESSION_ATTRIBUTES SET")`isA(PreparedStatementSetter.class));" is 131.,343
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedModifyMultipleAttributes,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).batchUpdate(startsWith("UPDATE SPRING_SESSION_ATTRIBUTES SET")`isA(BatchPreparedStatementSetter.class));" is 141.,358
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedRemoveSingleAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).update(startsWith("DELETE FROM SPRING_SESSION_ATTRIBUTES WHERE")`isA(PreparedStatementSetter.class));" is 138.,375
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedRemoveMultipleAttributes,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).batchUpdate(startsWith("DELETE FROM SPRING_SESSION_ATTRIBUTES WHERE")`isA(BatchPreparedStatementSetter.class));" is 148.,401
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedAddAndModifyAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations).update(startsWith("INSERT INTO SPRING_SESSION_ATTRIBUTES (")`isA(PreparedStatementSetter.class));" is 125.,418
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedModifyAndRemoveAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations).update(startsWith("DELETE FROM SPRING_SESSION_ATTRIBUTES WHERE")`isA(PreparedStatementSetter.class));" is 129.,444
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveUpdatedRemoveAndAddAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations).update(startsWith("UPDATE SPRING_SESSION_ATTRIBUTES SET")`isA(PreparedStatementSetter.class));" is 122.,460
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,getSessionNotFound,Long Statement,The length of the statement "given(this.jdbcOperations.query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class))).willReturn(Collections.emptyList());" is 153.,499
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,getSessionNotFound,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class));" is 127.,499
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,getSessionExpired,Long Statement,The length of the statement "given(this.jdbcOperations.query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class))).willReturn(Collections.singletonList(expired));" is 164.,513
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,getSessionExpired,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class));" is 127.,513
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "given(this.jdbcOperations.query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class))).willReturn(Collections.singletonList(saved));" is 162.,529
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class));" is 127.,529
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameNotFound,Long Statement,The length of the statement "given(this.jdbcOperations.query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class))).willReturn(Collections.emptyList());" is 153.,565
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameNotFound,Long Statement,The length of the statement "Map<String`JdbcSession> sessions=this.repository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`principal);" is 148.,565
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameNotFound,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class));" is 127.,565
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken(principal`"notused"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 139.,580
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "given(this.jdbcOperations.query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class))).willReturn(saved);" is 135.,580
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "Map<String`JdbcSession> sessions=this.repository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`principal);" is 148.,580
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).query(isA(String.class)`isA(PreparedStatementSetter.class)`isA(ResultSetExtractor.class));" is 127.,580
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Magic Number,The method contains a magic number: 2,580
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Magic Number,The method contains a magic number: 2,580
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveWithSaveModeOnSetAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations).update(startsWith("UPDATE SPRING_SESSION_ATTRIBUTES SET")`isA(PreparedStatementSetter.class));" is 122.,624
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveWithSaveModeOnGetAttribute,Magic Number,The method contains a magic number: 2,640
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveWithSaveModeOnGetAttributeAndNewAttributeSetAndGet,Long Statement,The length of the statement "verify(this.jdbcOperations`times(1)).update(startsWith("INSERT INTO SPRING_SESSION_ATTRIBUTES (")`isA(PreparedStatementSetter.class));" is 134.,658
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,saveWithSaveModeAlways,Magic Number,The method contains a magic number: 3,672
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,flushModeImmediateSetAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations).update(startsWith("INSERT INTO SPRING_SESSION_ATTRIBUTES (")`isA(PreparedStatementSetter.class));" is 125.,690
spring-projects_spring-session,org.springframework.session.jdbc,JdbcIndexedSessionRepositoryTests,flushModeImmediateRemoveAttribute,Long Statement,The length of the statement "verify(this.jdbcOperations).update(startsWith("DELETE FROM SPRING_SESSION_ATTRIBUTES WHERE")`isA(PreparedStatementSetter.class));" is 129.,701
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,setUp,Long Statement,The length of the statement "this.context.setAuthentication(new UsernamePasswordAuthenticationToken("username-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 158.,87
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,setUp,Long Statement,The length of the statement "this.changedContext.setAuthentication(new UsernamePasswordAuthenticationToken("changedContext-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 171.,87
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,saves,Long Statement,The length of the statement "Authentication toSaveToken=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 136.,112
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,putAllOnSingleAttrDoesNotRemoveOld,Magic Number,The method contains a magic number: 2,151
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,updateLastAccessedTime,Long Statement,The length of the statement "assertThat(session.getLastAccessedTime().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(lastAccessedTime.truncatedTo(ChronoUnit.MILLIS));" is 132.,174
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,findByDeletedSecurityPrincipalNameReload,Long Statement,The length of the statement "Map<String`JdbcSession> findByPrincipalName=this.repository.findByIndexNameAndIndexValue(INDEX_NAME`getChangedSecurityName());" is 126.,490
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,cleanupInactiveSessionsUsingRepositoryDefinedInterval,Magic Number,The method contains a magic number: 10,533
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,cleanupInactiveSessionsUsingRepositoryDefinedInterval,Magic Number,The method contains a magic number: 30,533
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,cleanupInactiveSessionsUsingSessionDefinedInterval,Magic Number,The method contains a magic number: 45,561
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,cleanupInactiveSessionsUsingSessionDefinedInterval,Magic Number,The method contains a magic number: 40,561
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,cleanupInactiveSessionsUsingSessionDefinedInterval,Magic Number,The method contains a magic number: 50,561
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,saveWithLargeAttribute,Magic Number,The method contains a magic number: 4000,782
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,saveNewSessionAttributeConcurrently,Magic Number,The method contains a magic number: 2,796
spring-projects_spring-session,org.springframework.session.jdbc,AbstractJdbcIndexedSessionRepositoryITests,saveNewSessionAttributeConcurrently,Magic Number,The method contains a magic number: 3,796
spring-projects_spring-session,org.springframework.session.jdbc,OracleJdbcIndexedSessionRepositoryITests,setUpClass,Long Statement,The length of the statement "Assumptions.assumeTrue(TestcontainersConfiguration.getInstance().getProperties().containsKey("oracle.container.image")`"Testcontainers property `oracle.container.image` is set");" is 178.,45
spring-projects_spring-session,org.springframework.session.jdbc,DatabaseContainers,oracle,Long Statement,The length of the statement "this.waitStrategy=new LogMessageWaitStrategy().withRegEx(".*DATABASE IS READY TO USE!.*\\s").withStartupTimeout(Duration.ofMinutes(10));" is 136.,52
spring-projects_spring-session,org.springframework.session.jdbc,DatabaseContainers,oracle,Magic Number,The method contains a magic number: 10,52
spring-projects_spring-session,org.springframework.session.jdbc,DatabaseContainers,configure,Long Statement,The length of the statement "this.waitStrategy=new LogMessageWaitStrategy().withRegEx(".*DATABASE IS READY TO USE!.*\\s").withStartupTimeout(Duration.ofMinutes(10));" is 136.,55
spring-projects_spring-session,org.springframework.session.jdbc,DatabaseContainers,configure,Magic Number,The method contains a magic number: 10,55
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfiguration,sessionRepository,Complex Method,Cyclomatic complexity of the method is 8,113
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfiguration,sessionRepository,Long Identifier,The length of the field springSessionConversionService is 30.,113
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfiguration,sessionRepository,Long Statement,The length of the statement "JdbcIndexedSessionRepository sessionRepository=new JdbcIndexedSessionRepository(jdbcTemplate`this.transactionOperations);" is 121.,113
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfiguration,sessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(sessionRepository));" is 133.,113
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfiguration,setSpringSessionConversionService,Long Identifier,The length of the field springSessionConversionService is 30.,214
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,noDataSourceConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> registerAndRefresh(NoDataSourceConfiguration.class)).withMessageContaining("expected at least 1 bean which qualifies as autowire candidate");" is 213.,74
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,defaultConfiguration,Long Statement,The length of the statement "assertThat(sessionRepository).extracting("transactionOperations").hasFieldOrPropertyWithValue("propagationBehavior"`TransactionDefinition.PROPAGATION_REQUIRES_NEW);" is 164.,81
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customMaxInactiveIntervalInSecondsAnnotation,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,109
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customMaxInactiveIntervalInSecondsAnnotation,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"defaultMaxInactiveInterval")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 126.,109
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customMaxInactiveIntervalInSecondsSetter,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,120
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customMaxInactiveIntervalInSecondsSetter,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"defaultMaxInactiveInterval")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 126.,120
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customFlushModeAnnotation,Long Statement,The length of the statement "assertThat(this.context.getBean(JdbcHttpSessionConfiguration.class)).hasFieldOrPropertyWithValue("flushMode"`FlushMode.IMMEDIATE);" is 130.,148
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customFlushModeSetter,Long Statement,The length of the statement "assertThat(this.context.getBean(JdbcHttpSessionConfiguration.class)).hasFieldOrPropertyWithValue("flushMode"`FlushMode.IMMEDIATE);" is 130.,155
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customSaveModeAnnotation,Long Statement,The length of the statement "assertThat(this.context.getBean(JdbcHttpSessionConfiguration.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 125.,162
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,customSaveModeSetter,Long Statement,The length of the statement "assertThat(this.context.getBean(JdbcHttpSessionConfiguration.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 125.,169
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,multipleDataSourceConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> registerAndRefresh(DataSourceConfiguration.class`MultipleDataSourceConfiguration.class)).withMessageContaining("expected single matching bean but found 2");" is 228.,228
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,sessionRepositoryCustomizer,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,291
spring-projects_spring-session,org.springframework.session.jdbc.config.annotation.web.http,JdbcHttpSessionConfigurationTests,sessionRepositoryCustomizer,Long Statement,The length of the statement "assertThat(sessionRepository).hasFieldOrPropertyWithValue("defaultMaxInactiveInterval"`MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 121.,291
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionExpirationPolicy,onExpirationUpdated,Magic Number,The method contains a magic number: 5,76
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepository,save,Long Statement,The length of the statement "return this.sessionRedisOperations.hasKey(sessionKey).flatMap((exists) -> exists ? session.save() : Mono.error(new IllegalStateException("Session was invalidated")));" is 166.,121
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepository,findById,Long Statement,The length of the statement "return this.sessionRedisOperations.opsForHash().entries(sessionKey).collectMap((e) -> e.getKey().toString()`Map.Entry::getValue).filter((map) -> !map.isEmpty()).map(new RedisSessionMapper(id)).filter((session) -> !session.isExpired()).map((session) -> new RedisSession(session`false)).switchIfEmpty(Mono.defer(() -> deleteById(id).then(Mono.empty())));" is 352.,131
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepository,RedisIndexedSessionRepository,Long Statement,The length of the statement "this.expirationPolicy=new RedisSessionExpirationPolicy(sessionRedisOperations`this::getExpirationsKey`this::getSessionKey);" is 123.,312
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepository,configureSessionChannels,Long Identifier,The length of the field sessionCreatedChannelPrefixBytes is 32.,394
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepository,onMessage,Long Identifier,The length of the field sessionCreatedChannelPrefixBytes is 32.,518
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepository,onMessage,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Map<Object`Object> loaded=(Map<Object`Object>)this.defaultSerializer.deserialize(message.getBody());" is 131.,518
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,constructor_NullRedisOperations_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new ReactiveRedisSessionRepository(null)).withMessageContaining("sessionRedisOperations cannot be null");" is 159.,79
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setDefaultMaxInactiveInterval_ValidInterval_ShouldSetInterval,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(this.sessionRepository`"defaultMaxInactiveInterval")).isEqualTo(Duration.ofMinutes(10));" is 128.,85
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setDefaultMaxInactiveInterval_ValidInterval_ShouldSetInterval,Magic Number,The method contains a magic number: 10,85
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setDefaultMaxInactiveInterval_ValidInterval_ShouldSetInterval,Magic Number,The method contains a magic number: 10,85
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setDefaultMaxInactiveInterval_NullInterval_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.sessionRepository.setDefaultMaxInactiveInterval(null)).withMessage("defaultMaxInactiveInterval must not be null");" is 173.,92
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setKeyNamespace_NullNamespace_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.sessionRepository.setKeyNamespace(null)).withMessage("keyNamespace must not be empty");" is 146.,111
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setRedisKeyNamespace_NullNamespace_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.sessionRepository.setRedisKeyNamespace(null)).withMessage("namespace must not be empty");" is 148.,117
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setKeyNamespace_EmptyNamespace_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.sessionRepository.setKeyNamespace(" ")).withMessage("keyNamespace must not be empty");" is 145.,123
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setRedisKeyNamespace_EmptyNamespace_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.sessionRepository.setRedisKeyNamespace(" ")).withMessage("namespace must not be empty");" is 147.,129
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setFlushMode_NullFlushMode_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.sessionRepository.setFlushMode(null)).withMessage("flushMode must not be null");" is 139.,141
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,setSaveMode_NullSaveMode_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.sessionRepository.setSaveMode(null)).withMessage("saveMode must not be null");" is 137.,154
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,createSession_DefaultMaxInactiveInterval_ShouldCreateSession,Long Statement,The length of the statement "assertThat(redisSession.getMaxInactiveInterval()).isEqualTo(Duration.ofSeconds(MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS));" is 130.,160
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,createSession_CustomMaxInactiveInterval_ShouldCreateSession,Magic Number,The method contains a magic number: 10,169
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,createSession_CustomMaxInactiveInterval_ShouldCreateSession,Magic Number,The method contains a magic number: 10,169
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,createSession_ImmediateFlushMode_ShouldCreateSession,Magic Number,The method contains a magic number: 3,178
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,save_NewSession_ShouldSaveSession,Magic Number,The method contains a magic number: 3,191
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,save_NewSessionAndCustomKeyNamespace_ShouldSaveSession,Magic Number,The method contains a magic number: 3,204
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,save_NewSessionAndChangedSessionId_ShouldSaveSession,Magic Number,The method contains a magic number: 3,218
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,save_SessionExistsAndHasChanges_ShouldSaveSession,Magic Number,The method contains a magic number: 2,232
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,saveWithSaveModeOnGetAttribute,Magic Number,The method contains a magic number: 2,279
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,saveWithSaveModeAlways,Magic Number,The method contains a magic number: 3,300
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,save_SessionNotExists_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.sessionRepository.save(session)).withMessage("Session was invalidated");" is 128.,321
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,findById_SessionExists_ShouldReturnSession,Long Statement,The length of the statement "given(this.sessionHashOperations.entries(eq(TEST_SESSION_KEY))).willReturn(mapOf(RedisSessionMapper.CREATION_TIME_KEY`Instant.EPOCH.toEpochMilli()`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`now.toEpochMilli()`RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS`RedisSessionMapper.ATTRIBUTE_PREFIX + "attribute1"`"value1"));" is 364.,331
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,findById_SessionExists_ShouldReturnSession,Long Statement,The length of the statement "assertThat(session.getMaxInactiveInterval()).isEqualTo(Duration.ofSeconds(MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS));" is 125.,331
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,findById_SessionExistsAndIsExpired_ShouldReturnNull,Long Statement,The length of the statement "given(this.sessionHashOperations.entries(eq(TEST_SESSION_KEY))).willReturn(mapOf(RedisSessionMapper.CREATION_TIME_KEY`Instant.EPOCH.toEpochMilli()`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`Instant.EPOCH.toEpochMilli()`RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS`RedisSessionMapper.ATTRIBUTE_PREFIX + "attribute1"`"value1"));" is 374.,354
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,getExpiry,Long Statement,The length of the statement "return Date.from(Instant.ofEpochMilli(session.getLastAccessedTime().toEpochMilli()).plusSeconds(session.getMaxInactiveInterval().getSeconds()));" is 144.,398
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryTests,mapOf,Magic Number,The method contains a magic number: 2,403
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,setup,Magic Number,The method contains a magic number: 1404360000000L,98
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,setup,Magic Number,The method contains a magic number: 1404360000000L,98
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,setApplicationEventPublisherNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.redisRepository.setApplicationEventPublisher(null)).withMessage("applicationEventPublisher cannot be null");" is 167.,110
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,changeSessionIdWhenSaved,Magic Number,The method contains a magic number: 2,133
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveNewSession,Long Statement,The length of the statement "assertThat(delta.get(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY)).isEqualTo((int)Duration.ofSeconds(MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS).getSeconds());" is 166.,165
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveNewSession,Magic Number,The method contains a magic number: 3,165
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveJavadocSummary,Long Statement,The length of the statement "String backgroundExpireKey="spring:session:expirations:" + RedisSessionExpirationPolicy.roundUpToNextMinute(RedisSessionExpirationPolicy.expiresInMillis(session));" is 163.,194
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveJavadocSummary,Magic Number,The method contains a magic number: 5,194
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveJavadocSummary,Magic Number,The method contains a magic number: 1800L,194
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveJavadoc,Long Statement,The length of the statement "given(this.redisOperations.boundValueOps("spring:session:sessions:expires:session-id")).willReturn(this.boundValueOperations);" is 126.,221
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveJavadoc,Magic Number,The method contains a magic number: 5,221
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveLastAccessChanged,Long Statement,The length of the statement "assertThat(getDelta()).isEqualTo(map(RedisSessionMapper.LAST_ACCESSED_TIME_KEY`session.getLastAccessedTime().toEpochMilli()));" is 126.,243
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveLastAccessChanged,Magic Number,The method contains a magic number: 12345678L,243
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveSetAttribute,Long Statement,The length of the statement "assertThat(getDelta()).isEqualTo(map(RedisIndexedSessionRepository.getSessionAttrNameKey(attrName)`session.getAttribute(attrName)));" is 132.,257
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,delete,Long Statement,The length of the statement "Map map=map(RedisIndexedSessionRepository.getSessionAttrNameKey(attrName)`expected.getAttribute(attrName)`RedisSessionMapper.CREATION_TIME_KEY`expected.getCreationTime().toEpochMilli()`RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`(int)expected.getMaxInactiveInterval().getSeconds()`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`expected.getLastAccessedTime().toEpochMilli());" is 371.,311
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,delete,Magic Number,The method contains a magic number: 60,311
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "Map map=map(RedisIndexedSessionRepository.getSessionAttrNameKey(attribute1)`expected.getAttribute(attribute1)`RedisIndexedSessionRepository.getSessionAttrNameKey(attribute2)`expected.getAttribute(attribute2)`RedisSessionMapper.CREATION_TIME_KEY`expected.getCreationTime().toEpochMilli()`RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`(int)expected.getMaxInactiveInterval().getSeconds()`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`expected.getLastAccessedTime().toEpochMilli());" is 473.,355
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "assertThat(session.getCreationTime().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(expected.getCreationTime().truncatedTo(ChronoUnit.MILLIS));" is 138.,355
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "assertThat(session.getLastAccessedTime().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(expected.getLastAccessedTime().truncatedTo(ChronoUnit.MILLIS));" is 146.,355
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,getSessionFound,Magic Number,The method contains a magic number: 60,355
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,getSessionExpired,Long Statement,The length of the statement "Map map=map(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`1`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`Instant.now().minus(5`ChronoUnit.MINUTES).toEpochMilli());" is 159.,385
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,getSessionExpired,Magic Number,The method contains a magic number: 5,385
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalNameExpired,Long Statement,The length of the statement "Map map=map(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`1`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`Instant.now().minus(5`ChronoUnit.MINUTES).toEpochMilli());" is 159.,397
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalNameExpired,Long Statement,The length of the statement "assertThat(this.redisRepository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`"principal")).isEmpty();" is 144.,397
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalNameExpired,Magic Number,The method contains a magic number: 5,397
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalName,Long Statement,The length of the statement "Map map=map(RedisSessionMapper.CREATION_TIME_KEY`createdTime.toEpochMilli()`RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`(int)maxInactive.getSeconds()`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`lastAccessed.toEpochMilli());" is 222.,413
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalName,Long Statement,The length of the statement "Map<String`RedisSession> sessionIdToSessions=this.redisRepository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`"principal");" is 167.,413
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalName,Long Statement,The length of the statement "assertThat(session.getLastAccessedTime().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(lastAccessed.truncatedTo(ChronoUnit.MILLIS));" is 128.,413
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalName,Long Statement,The length of the statement "assertThat(session.getCreationTime().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(createdTime.truncatedTo(ChronoUnit.MILLIS));" is 123.,413
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalName,Magic Number,The method contains a magic number: 10,413
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,findByPrincipalName,Magic Number,The method contains a magic number: 10,413
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageDeletedSessionFound,Long Statement,The length of the statement "Map map=map(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`0`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`System.currentTimeMillis() - TimeUnit.MINUTES.toMillis(5));" is 160.,493
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageDeletedSessionFound,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,493
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageDeletedSessionFound,Magic Number,The method contains a magic number: 5,493
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageDeletedSessionNotFound,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,520
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageExpiredSessionFound,Long Statement,The length of the statement "Map map=map(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`1`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`System.currentTimeMillis() - TimeUnit.MINUTES.toMillis(5));" is 160.,543
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageExpiredSessionFound,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,543
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageExpiredSessionFound,Magic Number,The method contains a magic number: 5,543
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageExpiredSessionNotFound,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,570
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateCreate,Long Statement,The length of the statement "assertThat(delta.get(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY)).isEqualTo((int)Duration.ofSeconds(MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS).getSeconds());" is 166.,632
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateCreate,Magic Number,The method contains a magic number: 3,632
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateCreateWithCustomMaxInactiveInterval,Magic Number,The method contains a magic number: 60,651
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateCreateWithCustomMaxInactiveInterval,Magic Number,The method contains a magic number: 3,651
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateCreateWithCustomMaxInactiveInterval,Magic Number,The method contains a magic number: 60,651
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateSetAttribute,Long Statement,The length of the statement "assertThat(delta).isEqualTo(map(RedisIndexedSessionRepository.getSessionAttrNameKey(attrName)`session.getAttribute(attrName)));" is 127.,664
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateSetAttribute,Magic Number,The method contains a magic number: 2,664
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateRemoveAttribute,Long Statement,The length of the statement "assertThat(delta).isEqualTo(map(RedisIndexedSessionRepository.getSessionAttrNameKey(attrName)`session.getAttribute(attrName)));" is 127.,681
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeImmediateRemoveAttribute,Magic Number,The method contains a magic number: 2,681
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeSetLastAccessedTime,Long Statement,The length of the statement "assertThat(delta).isEqualTo(map(RedisSessionMapper.LAST_ACCESSED_TIME_KEY`session.getLastAccessedTime().toEpochMilli()));" is 121.,715
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,flushModeSetLastAccessedTime,Magic Number,The method contains a magic number: 2,715
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,setFlushModeNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.redisRepository.setFlushMode(null)).withMessage("flushMode cannot be null");" is 135.,732
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,setRedisKeyNamespaceNullNamespace,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.redisRepository.setRedisKeyNamespace(null)).withMessage("namespace cannot be null or empty");" is 152.,754
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,setRedisKeyNamespaceEmptyNamespace,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.redisRepository.setRedisKeyNamespace(" ")).withMessage("namespace cannot be null or empty");" is 151.,760
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageDeletedInOtherDatabase,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,796
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,onMessageExpiredInOtherDatabase,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,814
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveWithSaveModeOnGetAttribute,Magic Number,The method contains a magic number: 2,849
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,saveWithSaveModeAlways,Magic Number,The method contains a magic number: 3,866
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryTests,map,Magic Number,The method contains a magic number: 2,887
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionExpirationPolicyTests,setup,Long Statement,The length of the statement "this.policy=new RedisSessionExpirationPolicy(this.sessionRedisOperations`repository::getExpirationsKey`repository::getSessionKey);" is 130.,66
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionExpirationPolicyTests,setup,Magic Number,The method contains a magic number: 1429116694675L,66
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionExpirationPolicyTests,onExpirationUpdatedDoNotSendDeleteWhenExpirationTimeDoesNotChange,Magic Number,The method contains a magic number: 10,96
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionExpirationPolicyTests,onExpirationUpdatedAddsExpirationTimeRoundedUp,Magic Number,The method contains a magic number: 5,110
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionExpirationPolicyTests,onExpirationUpdatedSetExpireSession,Magic Number,The method contains a magic number: 5,124
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionExpirationPolicyTests,onExpirationUpdatedDeleteOnZero,Magic Number,The method contains a magic number: 5,135
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,constructor_NullId_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new RedisSessionMapper(null)).withMessage("sessionId must not be empty");" is 127.,48
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,constructor_EmptyId_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new RedisSessionMapper(" ")).withMessage("sessionId must not be empty");" is 126.,54
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_EmptyMap_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.mapper.apply(Collections.emptyMap())).withMessage("map must not be empty");" is 134.,66
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_MapWithoutCreationTime_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.mapper.apply(sessionMap)).withMessage(RedisSessionMapper.CREATION_TIME_KEY + " key must not be null");" is 158.,72
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_MapWithoutCreationTime_ShouldThrowException,Magic Number,The method contains a magic number: 1800,72
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_MapWithoutLastAccessedTime_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.mapper.apply(sessionMap)).withMessage(RedisSessionMapper.LAST_ACCESSED_TIME_KEY + " key must not be null");" is 163.,81
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_MapWithoutLastAccessedTime_ShouldThrowException,Magic Number,The method contains a magic number: 1800,81
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_MapWithoutMaxInactiveInterval_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.mapper.apply(sessionMap)).withMessage(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY + " key must not be null");" is 166.,90
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_ValidMap_ShouldReturnSession,Magic Number,The method contains a magic number: 1800,99
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionMapperTests,apply_ValidMap_ShouldReturnSession,Magic Number,The method contains a magic number: 30,99
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,setUp,Magic Number,The method contains a magic number: 1404360000000L,69
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,setUp,Magic Number,The method contains a magic number: 1404360000000L,69
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,constructorWithNullReactiveRedisOperations,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new ReactiveRedisSessionRepository(null)).withMessageContaining("sessionRedisOperations cannot be null");" is 159.,79
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,nullRedisKeyNamespace,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setRedisKeyNamespace(null)).withMessage("namespace cannot be null or empty");" is 147.,92
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,emptyRedisKeyNamespace,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setRedisKeyNamespace("")).withMessage("namespace cannot be null or empty");" is 145.,98
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,customMaxInactiveInterval,Magic Number,The method contains a magic number: 600,104
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,customMaxInactiveInterval,Magic Number,The method contains a magic number: 600,104
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,createSessionDefaultMaxInactiveInterval,Long Statement,The length of the statement "StepVerifier.create(this.repository.createSession()).consumeNextWith((session) -> assertThat(session.getMaxInactiveInterval()).isEqualTo(Duration.ofSeconds(MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS))).verifyComplete();" is 225.,111
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,createSessionCustomMaxInactiveInterval,Long Statement,The length of the statement "StepVerifier.create(this.repository.createSession()).consumeNextWith((session) -> assertThat(session.getMaxInactiveInterval()).isEqualTo(Duration.ofSeconds(600))).verifyComplete();" is 180.,119
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,createSessionCustomMaxInactiveInterval,Magic Number,The method contains a magic number: 600,119
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,createSessionCustomMaxInactiveInterval,Magic Number,The method contains a magic number: 600,119
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveNewSession,Long Statement,The length of the statement "assertThat(delta.get(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY)).isEqualTo((int)newSession.getMaxInactiveInterval().getSeconds());" is 133.,129
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveNewSession,Long Statement,The length of the statement "assertThat(delta.get(RedisSessionMapper.LAST_ACCESSED_TIME_KEY)).isEqualTo(newSession.getLastAccessedTime().toEpochMilli());" is 124.,129
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveNewSession,Magic Number,The method contains a magic number: 3,129
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveCustomNegativeMaxInactiveIntervalNewSession,Long Statement,The length of the statement "assertThat(delta.get(RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY)).isEqualTo((int)newSession.getMaxInactiveInterval().getSeconds());" is 133.,154
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveCustomNegativeMaxInactiveIntervalNewSession,Long Statement,The length of the statement "assertThat(delta.get(RedisSessionMapper.LAST_ACCESSED_TIME_KEY)).isEqualTo(newSession.getLastAccessedTime().toEpochMilli());" is 124.,154
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveCustomNegativeMaxInactiveIntervalNewSession,Magic Number,The method contains a magic number: 3,154
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveLastAccessChanged,Long Statement,The length of the statement "assertThat(this.delta.getAllValues().get(0)).isEqualTo(map(RedisSessionMapper.LAST_ACCESSED_TIME_KEY`session.getLastAccessedTime().toEpochMilli()));" is 148.,195
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveLastAccessChanged,Magic Number,The method contains a magic number: 12345678L,195
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveSetAttribute,Long Statement,The length of the statement "assertThat(this.delta.getAllValues().get(0)).isEqualTo(map(RedisIndexedSessionRepository.getSessionAttrNameKey(attrName)`session.getAttribute(attrName)));" is 154.,217
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveRemoveAttribute,Long Statement,The length of the statement "assertThat(this.delta.getAllValues().get(0)).isEqualTo(map(RedisIndexedSessionRepository.getSessionAttrNameKey(attrName)`null));" is 128.,240
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "Map map=map(RedisSessionMapper.ATTRIBUTE_PREFIX + attribute1`expected.getAttribute(attribute1)`RedisSessionMapper.ATTRIBUTE_PREFIX + attribute2`expected.getAttribute(attribute2)`RedisSessionMapper.CREATION_TIME_KEY`expected.getCreationTime().toEpochMilli()`RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`(int)expected.getMaxInactiveInterval().getSeconds()`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`expected.getLastAccessedTime().toEpochMilli());" is 443.,302
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "assertThat(session.getCreationTime().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(expected.getCreationTime().truncatedTo(ChronoUnit.MILLIS));" is 138.,302
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,getSessionFound,Long Statement,The length of the statement "assertThat(session.getLastAccessedTime().truncatedTo(ChronoUnit.MILLIS)).isEqualTo(expected.getLastAccessedTime().truncatedTo(ChronoUnit.MILLIS));" is 146.,302
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,getSessionFound,Magic Number,The method contains a magic number: 60,302
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,getSessionExpired,Long Statement,The length of the statement "Map map=map(RedisSessionMapper.CREATION_TIME_KEY`0L`RedisSessionMapper.MAX_INACTIVE_INTERVAL_KEY`1`RedisSessionMapper.LAST_ACCESSED_TIME_KEY`Instant.now().minus(5`ChronoUnit.MINUTES).toEpochMilli());" is 199.,337
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,getSessionExpired,Magic Number,The method contains a magic number: 5,337
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveWithSaveModeOnGetAttribute,Magic Number,The method contains a magic number: 2,392
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,saveWithSaveModeAlways,Magic Number,The method contains a magic number: 3,416
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryTests,map,Magic Number,The method contains a magic number: 2,440
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryITests,putAllOnSingleAttrDoesNotRemoveOld,Magic Number,The method contains a magic number: 2,82
spring-projects_spring-session,org.springframework.session.data.redis,ReactiveRedisSessionRepositoryITests,changeSessionSaveOldSessionInstance,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.repository.save(toSave).block()).withMessage("Session was invalidated");" is 128.,197
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_NewSession_ShouldSaveSession,Long Statement,The length of the statement "assertThat(session.getMaxInactiveInterval()).isEqualTo(Duration.ofSeconds(MapSession.DEFAULT_MAX_INACTIVE_INTERVAL_SECONDS));" is 125.,56
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_DeletedSession_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.sessionRepository.save(session)).withMessage("Session was invalidated");" is 128.,70
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_ConcurrentUpdates_ShouldSaveSession,Magic Number,The method contains a magic number: 2L,78
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_ConcurrentUpdates_ShouldSaveSession,Magic Number,The method contains a magic number: 2L,78
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_ConcurrentUpdates_ShouldSaveSession,Magic Number,The method contains a magic number: 3,78
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_ChangeSessionIdOnDeletedSession_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.sessionRepository.save(session)).withMessage("Session was invalidated");" is 128.,158
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_ChangeSessionIdConcurrent_ShouldThrowException,Long Statement,The length of the statement "assertThatIllegalStateException().isThrownBy(() -> this.sessionRepository.save(copy2)).withMessage("Session was invalidated");" is 126.,171
spring-projects_spring-session,org.springframework.session.data.redis,RedisSessionRepositoryITests,save_ChangeSessionIdConcurrent_ShouldThrowException,Magic Number,The method contains a magic number: 2L,171
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,setup,Long Statement,The length of the statement "this.context.setAuthentication(new UsernamePasswordAuthenticationToken("username-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 158.,79
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,setup,Long Statement,The length of the statement "this.changedContext.setAuthentication(new UsernamePasswordAuthenticationToken("changedContext-" + UUID.randomUUID()`"na"`AuthorityUtils.createAuthorityList("ROLE_USER")));" is 171.,79
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,saves,Long Statement,The length of the statement "Authentication toSaveToken=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 136.,93
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,saves,Long Statement,The length of the statement "assertThat(this.registry.getEvent(toSave.getId()).getSession().<String>getAttribute(expectedAttributeName)).isEqualTo(expectedAttributeValue);" is 142.,93
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,putAllOnSingleAttrDoesNotRemoveOld,Magic Number,The method contains a magic number: 2,137
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,findByPrincipalNameExpireRemovesIndex,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,181
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,findBySecurityPrincipalNameExpireRemovesIndex,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,344
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,findByDeletedSecurityPrincipalNameReload,Long Statement,The length of the statement "Map<String`RedisSession> findByPrincipalName=this.repository.findByIndexNameAndIndexValue(INDEX_NAME`getChangedSecurityName());" is 127.,437
spring-projects_spring-session,org.springframework.session.data.redis,RedisIndexedSessionRepositoryITests,changeSessionIdWhenSessionExpiresThenRemovesAllPrincipalIndexIds,Long Statement,The length of the statement "DefaultMessage message=new DefaultMessage(channel.getBytes(StandardCharsets.UTF_8)`body.getBytes(StandardCharsets.UTF_8));" is 122.,476
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfiguration,sessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(sessionRepository));" is 133.,80
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfiguration,setRedisConnectionFactory,Long Identifier,The length of the parameter springSessionRedisConnectionFactory is 35.,111
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfiguration,createReactiveRedisTemplate,Long Statement,The length of the statement "RedisSerializer<Object> defaultSerializer=(this.defaultRedisSerializer != null) ? this.defaultRedisSerializer : new JdkSerializationRedisSerializer(this.classLoader);" is 166.,158
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfiguration,createReactiveRedisTemplate,Long Statement,The length of the statement "RedisSerializationContext<String`Object> serializationContext=RedisSerializationContext.<String`Object>newSerializationContext(defaultSerializer).key(keySerializer).hashKey(keySerializer).build();" is 196.,158
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,springSessionRedisOperationsResolvingConfiguration,Long Statement,The length of the statement "ReactiveRedisOperations<String`Object> springSessionRedisOperations=this.context.getBean(SpringSessionRedisOperationsResolvingConfig.class).getSpringSessionRedisOperations();" is 174.,77
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,springSessionRedisOperationsResolvingConfiguration,Long Statement,The length of the statement "assertThat((ReactiveRedisOperations)ReflectionTestUtils.getField(repository`"sessionRedisOperations")).isEqualTo(springSessionRedisOperations);" is 143.,77
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customMaxInactiveInterval,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,99
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customMaxInactiveInterval,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"defaultMaxInactiveInterval")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 126.,99
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customSaveModeAnnotation,Long Statement,The length of the statement "assertThat(this.context.getBean(ReactiveRedisSessionRepository.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 127.,109
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customSaveModeSetter,Long Statement,The length of the statement "assertThat(this.context.getBean(ReactiveRedisSessionRepository.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 127.,116
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,qualifiedConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisConnectionFactory redisConnectionFactory=this.context.getBean("qualifiedRedisConnectionFactory"`ReactiveRedisConnectionFactory.class);" is 147.,123
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,qualifiedConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisOperations redisOperations=(ReactiveRedisOperations)ReflectionTestUtils.getField(repository`"sessionRedisOperations");" is 131.,123
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,primaryConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisConnectionFactory redisConnectionFactory=this.context.getBean("primaryRedisConnectionFactory"`ReactiveRedisConnectionFactory.class);" is 145.,139
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,primaryConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisOperations redisOperations=(ReactiveRedisOperations)ReflectionTestUtils.getField(repository`"sessionRedisOperations");" is 131.,139
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,qualifiedAndPrimaryConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisConnectionFactory redisConnectionFactory=this.context.getBean("qualifiedRedisConnectionFactory"`ReactiveRedisConnectionFactory.class);" is 147.,155
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,qualifiedAndPrimaryConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisOperations redisOperations=(ReactiveRedisOperations)ReflectionTestUtils.getField(repository`"sessionRedisOperations");" is 131.,155
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,namedConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisConnectionFactory redisConnectionFactory=this.context.getBean("redisConnectionFactory"`ReactiveRedisConnectionFactory.class);" is 138.,171
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,namedConnectionFactoryRedisConfig,Long Statement,The length of the statement "ReactiveRedisOperations redisOperations=(ReactiveRedisOperations)ReflectionTestUtils.getField(repository`"sessionRedisOperations");" is 131.,171
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,multipleConnectionFactoryRedisConfig,Long Statement,The length of the statement "assertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> registerAndRefresh(RedisConfig.class`MultipleConnectionFactoryRedisConfig.class)).withMessageContaining("expected single matching bean but found 2");" is 221.,187
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customRedisSerializerConfig,Long Statement,The length of the statement "@SuppressWarnings("unchecked") RedisSerializer<Object> redisSerializer=this.context.getBean("springSessionDefaultRedisSerializer"`RedisSerializer.class);" is 153.,194
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customRedisSerializerConfig,Long Statement,The length of the statement "ReactiveRedisOperations redisOperations=(ReactiveRedisOperations)ReflectionTestUtils.getField(repository`"sessionRedisOperations");" is 131.,194
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customRedisSerializerConfig,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(serializationContext.getValueSerializationPair().getReader()`"serializer")).isEqualTo(redisSerializer);" is 143.,194
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customRedisSerializerConfig,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(serializationContext.getValueSerializationPair().getWriter()`"serializer")).isEqualTo(redisSerializer);" is 143.,194
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customRedisSerializerConfig,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(serializationContext.getHashValueSerializationPair().getReader()`"serializer")).isEqualTo(redisSerializer);" is 147.,194
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,customRedisSerializerConfig,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(serializationContext.getHashValueSerializationPair().getWriter()`"serializer")).isEqualTo(redisSerializer);" is 147.,194
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,sessionRepositoryCustomizer,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,218
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.server,RedisWebSessionConfigurationTests,sessionRepositoryCustomizer,Long Statement,The length of the statement "assertThat(sessionRepository).hasFieldOrPropertyWithValue("defaultMaxInactiveInterval"`MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 121.,218
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfiguration,sessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(sessionRepository));" is 133.,118
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfiguration,springSessionRedisMessageListenerContainer,Long Statement,The length of the statement "container.addMessageListener(sessionRepository`Arrays.asList(new ChannelTopic(sessionRepository.getSessionDeletedChannel())`new ChannelTopic(sessionRepository.getSessionExpiredChannel())));" is 189.,142
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfiguration,springSessionRedisMessageListenerContainer,Long Statement,The length of the statement "container.addMessageListener(sessionRepository`Collections.singletonList(new PatternTopic(sessionRepository.getSessionCreatedChannelPrefix() + "*")));" is 150.,142
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfiguration,setRedisConnectionFactory,Long Identifier,The length of the parameter springSessionRedisConnectionFactory is 35.,203
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfiguration,resolveDatabase,Long Statement,The length of the statement "if (ClassUtils.isPresent("io.lettuce.core.RedisClient"`null) && this.redisConnectionFactory instanceof LettuceConnectionFactory) {" is 130.,295
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfiguration,resolveDatabase,Long Statement,The length of the statement "if (ClassUtils.isPresent("redis.clients.jedis.Jedis"`null) && this.redisConnectionFactory instanceof JedisConnectionFactory) {" is 126.,295
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationOverrideSessionTaskExecutors,overrideSessionTaskExecutors,Long Identifier,The length of the field springSessionRedisSubscriptionExecutor is 38.,64
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationOverrideSessionTaskExecutors,overrideSessionTaskExecutors,Long Identifier,The length of the field springSessionRedisTaskExecutor is 30.,64
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationOverrideSessionTaskExecutor,overrideSessionTaskExecutor,Long Identifier,The length of the field springSessionRedisTaskExecutor is 30.,59
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationMockTests,enableRedisKeyspaceNotificationsInitializerAfterPropertiesSetWhenNoOpThenNoInteractionWithConnectionFactory,Long Statement,The length of the statement "EnableRedisKeyspaceNotificationsInitializer init=new EnableRedisKeyspaceNotificationsInitializer(this.factory`ConfigureRedisAction.NO_OP);" is 138.,50
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationMockTests,enableRedisKeyspaceNotificationsInitializerAfterPropertiesSetWhenExceptionThenCloseConnection,Empty catch clause,The method has an empty catch block.,60
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,EnableRedisKeyspaceNotificationsInitializerTests,setup,Long Statement,The length of the statement "this.initializer=new RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer(this.connectionFactory`new ConfigureNotifyKeyspaceEventsAction());" is 161.,54
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,customSaveModeAnnotation,Long Statement,The length of the statement "assertThat(this.context.getBean(RedisIndexedSessionRepository.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 126.,150
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,customSaveModeSetter,Long Statement,The length of the statement "assertThat(this.context.getBean(RedisIndexedSessionRepository.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 126.,157
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,qualifiedConnectionFactoryRedisConfig,Long Statement,The length of the statement "RedisConnectionFactory redisConnectionFactory=this.context.getBean("qualifiedRedisConnectionFactory"`RedisConnectionFactory.class);" is 131.,164
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,primaryConnectionFactoryRedisConfig,Long Statement,The length of the statement "RedisConnectionFactory redisConnectionFactory=this.context.getBean("primaryRedisConnectionFactory"`RedisConnectionFactory.class);" is 129.,180
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,qualifiedAndPrimaryConnectionFactoryRedisConfig,Long Statement,The length of the statement "RedisConnectionFactory redisConnectionFactory=this.context.getBean("qualifiedRedisConnectionFactory"`RedisConnectionFactory.class);" is 131.,196
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,namedConnectionFactoryRedisConfig,Long Statement,The length of the statement "RedisConnectionFactory redisConnectionFactory=this.context.getBean("redisConnectionFactory"`RedisConnectionFactory.class);" is 122.,212
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,multipleConnectionFactoryRedisConfig,Long Statement,The length of the statement "assertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> registerAndRefresh(RedisConfig.class`MultipleConnectionFactoryRedisConfig.class)).withMessageContaining("expected single matching bean but found 2");" is 221.,228
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,customRedisMessageListenerContainerConfig,Magic Number,The method contains a magic number: 2,246
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,sessionRepositoryCustomizer,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,255
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,RedisHttpSessionConfigurationTests,sessionRepositoryCustomizer,Long Statement,The length of the statement "assertThat(sessionRepository).hasFieldOrPropertyWithValue("defaultMaxInactiveInterval"`MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 121.,255
spring-projects_spring-session,org.springframework.session.data.redis.config.annotation.web.http,EnableRedisHttpSessionExpireSessionDestroyedTests,expireFiresSessionExpiredEvent,Long Statement,The length of the statement "Authentication toSaveToken=new UsernamePasswordAuthenticationToken("user"`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 134.,62
spring-projects_spring-session,org.springframework.session.data.redis.config,ConfigureNotifyKeyspaceEventsAction,getNotifyOptions,Long Statement,The length of the statement "throw new IllegalStateException("Unable to configure Redis to keyspace notifications. See https://docs.spring.io/spring-session/docs/current/reference/html5/#api-redisindexedsessionrepository-sessiondestroyedevent"`ex);" is 219.,72
spring-projects_spring-session,org.springframework.session.data.redis.taskexecutor,RedisListenerContainerTaskExecutorITests,testRedisDelEventsAreDispatchedInSessionTaskExecutor,Long Statement,The length of the statement "BoundSetOperations<Object`Object> ops=this.redis.boundSetOps("spring:session:RedisListenerContainerTaskExecutorITests:expirations:dummy");" is 138.,56
spring-projects_spring-session,org.springframework.session.data,SessionEventRegistry,waitForEvent,Magic Number,The method contains a magic number: 10000,57
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastSessionSerializer,read,Empty catch clause,The method has an empty catch block.,114
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepository,save,Complex Method,Cyclomatic complexity of the method is 8,246
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,constructorNullHazelcastInstance,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new HazelcastIndexedSessionRepository(null)).withMessage("HazelcastInstance must not be null");" is 149.,83
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,setSaveModeNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setSaveMode(null)).withMessage("saveMode must not be null");" is 130.,89
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameNotFound,Long Statement,The length of the statement "Map<String`HazelcastSession> sessions=this.repository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`principal);" is 153.,362
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken(principal`"notused"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 139.,376
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "Map<String`HazelcastSession> sessions=this.repository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`principal);" is 153.,376
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Magic Number,The method contains a magic number: 2,376
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Magic Number,The method contains a magic number: 2,376
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,saveWithSaveModeOnGetAttribute,Magic Number,The method contains a magic number: 2,432
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastIndexedSessionRepositoryTests,saveWithSaveModeAlways,Magic Number,The method contains a magic number: 3,451
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastSessionSerializerTests,setUp,Long Statement,The length of the statement "SerializerConfig serializerConfig=new SerializerConfig().setImplementation(new HazelcastSessionSerializer()).setTypeClass(MapSession.class);" is 140.,39
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastSessionSerializerTests,serializeSessionWithStreamSerializer,Magic Number,The method contains a magic number: 3,48
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastSessionSerializerTests,serializeSessionWithStreamSerializer,Magic Number,The method contains a magic number: 5,48
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastITestUtils,embeddedHazelcastServer,Long Statement,The length of the statement "MapAttributeConfig attributeConfig=new MapAttributeConfig().setName(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractor(PrincipalNameExtractor.class.getName());" is 181.,39
spring-projects_spring-session,org.springframework.session.hazelcast,HazelcastITestUtils,embeddedHazelcastServer,Long Statement,The length of the statement "config.getMapConfig(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addMapAttributeConfig(attributeConfig).addMapIndexConfig(new MapIndexConfig(HazelcastIndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE`false));" is 223.,39
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,saveSessionTest,Long Statement,The length of the statement "Authentication toSaveToken=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 136.,74
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,saveSessionTest,Long Statement,The length of the statement "assertThat(session.<String>getAttribute(expectedAttributeName)).isEqualTo(sessionToSave.getAttribute(expectedAttributeName));" is 125.,74
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,expiredSessionTest,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,104
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,saveUpdatesTimeToLiveTest,Magic Number,The method contains a magic number: 3,145
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,saveUpdatesTimeToLiveTest,Magic Number,The method contains a magic number: 2000,145
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,saveUpdatesTimeToLiveTest,Magic Number,The method contains a magic number: 2000,145
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,changeSessionIdNoEventTest,Magic Number,The method contains a magic number: 30,163
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,updateMaxInactiveIntervalTest,Long Statement,The length of the statement "assertThat(this.registry.<SessionExpiredEvent>getEvent(sessionToUpdate.getId())).isInstanceOf(SessionExpiredEvent.class);" is 121.,181
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcastIndexedSessionRepositoryTests,updateMaxInactiveIntervalTest,Magic Number,The method contains a magic number: 30,181
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventRegistry,waitForEvent,Magic Number,The method contains a magic number: 10000,57
spring-projects_spring-session,org.springframework.session.hazelcast,FlushImmediateHazelcastIndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindByPrincipalName,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 139.,55
spring-projects_spring-session,org.springframework.session.hazelcast,FlushImmediateHazelcastIndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindByPrincipalName,Long Statement,The length of the statement "Map<String`HazelcastIndexedSessionRepository.HazelcastSession> findByPrincipalName=this.repository.findByPrincipalName(username);" is 129.,55
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcastIndexedSessionRepositoryITests,createAndDestroySession,Long Statement,The length of the statement "IMap<String`MapSession> hazelcastMap=this.hazelcastInstance.getMap(HazelcastIndexedSessionRepository.DEFAULT_SESSION_MAP_NAME);" is 127.,53
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcastIndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindById,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken("saves-" + System.currentTimeMillis()`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 168.,187
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcastIndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindByPrincipal,Long Statement,The length of the statement "Assumptions.assumeTrue(this.hazelcastInstance instanceof HazelcastInstanceProxy`"Hazelcast runs in embedded server topology");" is 126.,205
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcastIndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindByPrincipal,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 139.,205
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcastIndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindByPrincipal,Long Statement,The length of the statement "assertThat(this.repository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`username)).hasSize(1);" is 137.,205
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4SessionUpdateEntryProcessor,process,Long Statement,The length of the statement "((ExtendedMapEntry<String`MapSession>)entry).setValue(value`value.getMaxInactiveInterval().getSeconds()`TimeUnit.SECONDS);" is 122.,44
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,constructorNullHazelcastInstance,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new Hazelcast4IndexedSessionRepository(null)).withMessage("HazelcastInstance must not be null");" is 150.,81
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,setSaveModeNull,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> this.repository.setSaveMode(null)).withMessage("saveMode must not be null");" is 130.,87
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameNotFound,Long Statement,The length of the statement "Map<String`HazelcastSession> sessions=this.repository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`principal);" is 153.,359
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken(principal`"notused"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 139.,373
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Long Statement,The length of the statement "Map<String`HazelcastSession> sessions=this.repository.findByIndexNameAndIndexValue(FindByIndexNameSessionRepository.PRINCIPAL_NAME_INDEX_NAME`principal);" is 153.,373
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Magic Number,The method contains a magic number: 2,373
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,findByIndexNameAndIndexValuePrincipalIndexNameFound,Magic Number,The method contains a magic number: 2,373
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,saveWithSaveModeOnSetAttribute,Long Statement,The length of the statement "ArgumentCaptor<Hazelcast4SessionUpdateEntryProcessor> captor=ArgumentCaptor.forClass(Hazelcast4SessionUpdateEntryProcessor.class);" is 130.,410
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,saveWithSaveModeOnGetAttribute,Long Statement,The length of the statement "ArgumentCaptor<Hazelcast4SessionUpdateEntryProcessor> captor=ArgumentCaptor.forClass(Hazelcast4SessionUpdateEntryProcessor.class);" is 130.,430
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,saveWithSaveModeOnGetAttribute,Magic Number,The method contains a magic number: 2,430
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,saveWithSaveModeAlways,Long Statement,The length of the statement "ArgumentCaptor<Hazelcast4SessionUpdateEntryProcessor> captor=ArgumentCaptor.forClass(Hazelcast4SessionUpdateEntryProcessor.class);" is 130.,450
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4IndexedSessionRepositoryTests,saveWithSaveModeAlways,Magic Number,The method contains a magic number: 3,450
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4SessionUpdateEntryProcessorTest,shouldUpdateMaxInactiveIntervalOnSessionAndSetMapEntryValueWithNewTimeToLive,Magic Number,The method contains a magic number: 123L,54
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4SessionUpdateEntryProcessorTest,shouldSetMapEntryValueWithOldTimeToLiveIfNoChangeToMaxInactiveIntervalIsRegistered,Magic Number,The method contains a magic number: 123L,70
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4SessionUpdateEntryProcessorTest,shouldUpdateLastAccessTimeOnSessionAndSetMapEntryValueWithOldTimeToLive,Magic Number,The method contains a magic number: 1234L,86
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,saveSessionTest,Long Statement,The length of the statement "Authentication toSaveToken=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 136.,73
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,saveSessionTest,Long Statement,The length of the statement "assertThat(session.<String>getAttribute(expectedAttributeName)).isEqualTo(sessionToSave.getAttribute(expectedAttributeName));" is 125.,73
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,expiredSessionTest,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,103
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,saveUpdatesTimeToLiveTest,Magic Number,The method contains a magic number: 3,144
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,saveUpdatesTimeToLiveTest,Magic Number,The method contains a magic number: 2000,144
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,saveUpdatesTimeToLiveTest,Magic Number,The method contains a magic number: 2000,144
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,changeSessionIdNoEventTest,Magic Number,The method contains a magic number: 30,162
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,updateMaxInactiveIntervalTest,Long Statement,The length of the statement "assertThat(this.registry.<SessionExpiredEvent>getEvent(sessionToUpdate.getId())).isInstanceOf(SessionExpiredEvent.class);" is 121.,180
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,updateMaxInactiveIntervalTest,Magic Number,The method contains a magic number: 30,180
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventHazelcast4IndexedSessionRepositoryTests,updateSessionAndExpireAfterOriginalTimeToLiveTest,Long Statement,The length of the statement "assertThat(this.registry.<SessionExpiredEvent>getEvent(sessionToUpdate.getId())).isInstanceOf(SessionExpiredEvent.class);" is 121.,202
spring-projects_spring-session,org.springframework.session.hazelcast,FlushImmediateHazelcast4IndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindByPrincipalName,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken(username`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 139.,55
spring-projects_spring-session,org.springframework.session.hazelcast,FlushImmediateHazelcast4IndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindByPrincipalName,Long Statement,The length of the statement "Map<String`Hazelcast4IndexedSessionRepository.HazelcastSession> findByPrincipalName=this.repository.findByPrincipalName(username);" is 130.,55
spring-projects_spring-session,org.springframework.session.hazelcast,SessionEventRegistry,waitForEvent,Magic Number,The method contains a magic number: 10000,57
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcast4IndexedSessionRepositoryITests,createAndDestroySession,Long Statement,The length of the statement "IMap<String`MapSession> hazelcastMap=this.hazelcastInstance.getMap(Hazelcast4IndexedSessionRepository.DEFAULT_SESSION_MAP_NAME);" is 128.,52
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcast4IndexedSessionRepositoryITests,createSessionWithSecurityContextAndFindById,Long Statement,The length of the statement "Authentication authentication=new UsernamePasswordAuthenticationToken("saves-" + System.currentTimeMillis()`"password"`AuthorityUtils.createAuthorityList("ROLE_USER"));" is 168.,186
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcast4IndexedSessionRepositoryITests,createAndUpdateSessionWhileKeepingOriginalTimeToLiveConfiguredOnRepository,Long Statement,The length of the statement "final IMap<String`MapSession> hazelcastMap=this.hazelcastInstance.getMap(Hazelcast4IndexedSessionRepository.DEFAULT_SESSION_MAP_NAME);" is 134.,204
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcast4IndexedSessionRepositoryITests,createAndUpdateSessionWhileKeepingOriginalTimeToLiveConfiguredOnRepository,Magic Number,The method contains a magic number: 1800,204
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcast4IndexedSessionRepositoryITests,createAndUpdateSessionWhileKeepingTimeToLiveSetOnSession,Long Statement,The length of the statement "final IMap<String`MapSession> hazelcastMap=this.hazelcastInstance.getMap(Hazelcast4IndexedSessionRepository.DEFAULT_SESSION_MAP_NAME);" is 134.,227
spring-projects_spring-session,org.springframework.session.hazelcast,AbstractHazelcast4IndexedSessionRepositoryITests,createAndUpdateSessionWhileKeepingTimeToLiveSetOnSession,Magic Number,The method contains a magic number: 23,227
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4ITestUtils,embeddedHazelcastServer,Long Statement,The length of the statement "AttributeConfig attributeConfig=new AttributeConfig().setName(Hazelcast4IndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE).setExtractorClassName(Hazelcast4PrincipalNameExtractor.class.getName());" is 195.,40
spring-projects_spring-session,org.springframework.session.hazelcast,Hazelcast4ITestUtils,embeddedHazelcastServer,Long Statement,The length of the statement "config.getMapConfig(Hazelcast4IndexedSessionRepository.DEFAULT_SESSION_MAP_NAME).addAttributeConfig(attributeConfig).addIndexConfig(new IndexConfig(IndexType.HASH`Hazelcast4IndexedSessionRepository.PRINCIPAL_NAME_ATTRIBUTE));" is 225.,40
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfiguration,setHazelcastInstance,Long Identifier,The length of the parameter springSessionHazelcastInstance is 30.,118
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfiguration,setHazelcast4SessionRepositoryCustomizer,Long Identifier,The length of the field hazelcast4SessionRepositoryCustomizers is 38.,145
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfiguration,createHazelcastIndexedSessionRepository,Long Statement,The length of the statement "this.sessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(sessionRepository));" is 133.,172
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfiguration,createHazelcast4IndexedSessionRepository,Long Identifier,The length of the field hazelcast4SessionRepositoryCustomizers is 38.,190
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfiguration,createHazelcast4IndexedSessionRepository,Long Statement,The length of the statement "this.hazelcast4SessionRepositoryCustomizers.forEach((sessionRepositoryCustomizer) -> sessionRepositoryCustomizer.customize(sessionRepository));" is 143.,190
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,noHazelcastInstanceConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> registerAndRefresh(NoHazelcastInstanceConfiguration.class)).withMessageContaining("HazelcastInstance");" is 175.,67
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,setCustomMaxInactiveIntervalInSeconds,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,101
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,setCustomMaxInactiveIntervalInSeconds,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"defaultMaxInactiveInterval")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 126.,101
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,customMaxInactiveIntervalInSeconds,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,111
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,customMaxInactiveIntervalInSeconds,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"defaultMaxInactiveInterval")).isEqualTo(MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 126.,111
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,customSaveModeAnnotation,Long Statement,The length of the statement "assertThat(this.context.getBean(HazelcastIndexedSessionRepository.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 130.,157
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,customSaveModeSetter,Long Statement,The length of the statement "assertThat(this.context.getBean(HazelcastIndexedSessionRepository.class)).hasFieldOrPropertyWithValue("saveMode"`SaveMode.ALWAYS);" is 130.,164
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,qualifiedHazelcastInstanceConfiguration,Long Identifier,The length of the field qualifiedHazelcastInstanceSessions is 34.,171
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,qualifiedHazelcastInstanceConfiguration,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"sessions")).isEqualTo(QualifiedHazelcastInstanceConfiguration.qualifiedHazelcastInstanceSessions);" is 150.,171
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,primaryHazelcastInstanceConfiguration,Long Identifier,The length of the field primaryHazelcastInstanceSessions is 32.,184
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,primaryHazelcastInstanceConfiguration,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"sessions")).isEqualTo(PrimaryHazelcastInstanceConfiguration.primaryHazelcastInstanceSessions);" is 146.,184
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,qualifiedAndPrimaryHazelcastInstanceConfiguration,Long Identifier,The length of the field qualifiedHazelcastInstanceSessions is 34.,196
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,qualifiedAndPrimaryHazelcastInstanceConfiguration,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"sessions")).isEqualTo(QualifiedAndPrimaryHazelcastInstanceConfiguration.qualifiedHazelcastInstanceSessions);" is 160.,196
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,namedHazelcastInstanceConfiguration,Long Statement,The length of the statement "assertThat(ReflectionTestUtils.getField(repository`"sessions")).isEqualTo(NamedHazelcastInstanceConfiguration.hazelcastInstanceSessions);" is 137.,209
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,multipleHazelcastInstanceConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(BeanCreationException.class).isThrownBy(() -> registerAndRefresh(MultipleHazelcastInstanceConfiguration.class)).withMessageContaining("expected single matching bean but found 2");" is 205.,221
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,sessionRepositoryCustomizer,Long Identifier,The length of the field MAX_INACTIVE_INTERVAL_IN_SECONDS is 32.,239
spring-projects_spring-session,org.springframework.session.hazelcast.config.annotation.web.http,HazelcastHttpSessionConfigurationTests,sessionRepositoryCustomizer,Long Statement,The length of the statement "assertThat(sessionRepository).hasFieldOrPropertyWithValue("defaultMaxInactiveInterval"`MAX_INACTIVE_INTERVAL_IN_SECONDS);" is 121.,239
spring-projects_spring-session,org.springframework.gradle.sagan,Release,toString,Long Statement,The length of the statement "return "Release{" + "version='" + version + '\''+ "` status="+ status+ "` current="+ current+ "` referenceDocUrl='"+ referenceDocUrl+ '\''+ "` apiDocUrl='"+ apiDocUrl+ '\''+ '}';" is 178.,75
spring-projects_spring-session,org.springframework.gradle.maven,MavenPublishingConventionsPlugin,apply,Long Statement,The length of the statement "publishing.getPublications().withType(MavenPublication.class).all((mavenPublication) -> MavenPublishingConventionsPlugin.this.customizePom(mavenPublication.getPom()`project));" is 175.,35
spring-projects_spring-session,org.springframework.gradle.maven,MavenPublishingConventionsPlugin,execute,Long Statement,The length of the statement "publishing.getPublications().withType(MavenPublication.class).all((mavenPublication) -> MavenPublishingConventionsPlugin.this.customizePom(mavenPublication.getPom()`project));" is 175.,38
spring-projects_spring-session,org.springframework.gradle.maven,SpringNexusPublishPlugin,apply,Long Statement,The length of the statement "nexusRepository.getSnapshotRepositoryUrl().set(URI.create("https://s01.oss.sonatype.org/content/repositories/snapshots/"));" is 123.,14
spring-projects_spring-session,org.springframework.gradle.maven,SpringNexusPublishPlugin,apply,Magic Number,The method contains a magic number: 3,14
spring-projects_spring-session,org.springframework.gradle.maven,SpringNexusPublishPlugin,apply,Magic Number,The method contains a magic number: 3,14
spring-projects_spring-session,org.springframework.gradle.maven,SpringNexusPublishPlugin,execute,Long Statement,The length of the statement "nexusRepository.getSnapshotRepositoryUrl().set(URI.create("https://s01.oss.sonatype.org/content/repositories/snapshots/"));" is 123.,19
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,findMilestoneNumberByTitle,Long Statement,The length of the statement "String url=this.baseUrl + "/repos/" + repositoryRef.getOwner()+ "/"+ repositoryRef.getName()+ "/milestones?per_page=100";" is 121.,50
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,findMilestoneNumberByTitle,Long Statement,The length of the statement "throw new RuntimeException("Could not find milestone with title " + milestoneTitle + " for repository "+ repositoryRef+ ". Response "+ response);" is 145.,50
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,findMilestoneNumberByTitle,Long Statement,The length of the statement "throw new RuntimeException("Could not find open milestone with title " + milestoneTitle + " for repository "+ repositoryRef+ " Got "+ milestones);" is 146.,50
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,findMilestoneNumberByTitle,Long Statement,The length of the statement "throw new RuntimeException("It is possible there are too many open milestones open (only 100 are supported). Could not find open milestone with title " + milestoneTitle + " for repository "+ repositoryRef+ " Got "+ milestones);" is 227.,50
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,findMilestoneNumberByTitle,Long Statement,The length of the statement "throw new RuntimeException("Could not find open milestone with title " + milestoneTitle + " for repository "+ repositoryRef`e);" is 127.,50
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,findMilestoneNumberByTitle,Magic Number,The method contains a magic number: 100,50
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,isOpenIssuesForMilestoneNumber,Long Statement,The length of the statement "String url=this.baseUrl + "/repos/" + repositoryRef.getOwner()+ "/"+ repositoryRef.getName()+ "/issues?per_page=1&milestone="+ milestoneNumber;" is 143.,74
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,isOpenIssuesForMilestoneNumber,Long Statement,The length of the statement "throw new RuntimeException("Could not find issues for milestone number " + milestoneNumber + " for repository "+ repositoryRef+ ". Response "+ response);" is 153.,74
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApi,isOpenIssuesForMilestoneNumber,Long Statement,The length of the statement "throw new RuntimeException("Could not find issues for milestone number " + milestoneNumber + " for repository "+ repositoryRef`e);" is 130.,74
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestonePlugin,apply,Long Statement,The length of the statement "project.getTasks().register("gitHubCheckMilestoneHasNoOpenIssues"`GitHubMilestoneHasNoOpenIssuesTask.class`new Action<GitHubMilestoneHasNoOpenIssuesTask>(){" is 156.,24
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestonePlugin,apply,Long Statement,The length of the statement "githubCheckMilestoneHasNoOpenIssues.setDescription("Checks if there are any open issues for the specified repository and milestone");" is 133.,24
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestonePlugin,execute,Long Identifier,The length of the parameter githubCheckMilestoneHasNoOpenIssues is 35.,27
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestonePlugin,execute,Long Statement,The length of the statement "githubCheckMilestoneHasNoOpenIssues.setDescription("Checks if there are any open issues for the specified repository and milestone");" is 133.,27
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneHasNoOpenIssuesTask,checkHasNoOpenIssues,Long Statement,The length of the statement "throw new IllegalStateException("The repository " + this.repository + " has open issues for milestone with the title "+ this.milestoneTitle+ " and number "+ milestoneNumber);" is 174.,37
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneHasNoOpenIssuesTask,checkHasNoOpenIssues,Long Statement,The length of the statement "System.out.println("The repository " + this.repository + " has no open issues for milestone with the title "+ this.milestoneTitle+ " and number "+ milestoneNumber);" is 164.,37
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenFoundThenSuccess,Long Statement,The length of the statement "String responseJson="[\n" + " {\n" + " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/207\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207/labels\"`\n"+ " \"id\":6611880`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNjYxMTg4MA==\"`\n"+ " \"number\":207`\n"+ " \"title\":\"5.6.x\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jgrandja\"`\n"+ " \"id\":10884212`\n"+ " \"node_id\":\"MDQ6VXNlcjEwODg0MjEy\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/10884212?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jgrandja\"`\n"+ " \"html_url\":\"https://github.com/jgrandja\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jgrandja/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jgrandja/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jgrandja/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jgrandja/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jgrandja/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jgrandja/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jgrandja/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jgrandja/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jgrandja/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":1`\n"+ " \"closed_issues\":0`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2021-03-31T11:29:17Z\"`\n"+ " \"updated_at\":\"2021-03-31T11:30:47Z\"`\n"+ " \"due_on\":null`\n"+ " \"closed_at\":null\n"+ " }`\n"+ " {\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/191\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191/labels\"`\n"+ " \"id\":5884208`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNTg4NDIwOA==\"`\n"+ " \"number\":191`\n"+ " \"title\":\"5.5.0-RC1\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":21`\n"+ " \"closed_issues\":23`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2020-09-16T13:28:03Z\"`\n"+ " \"updated_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"due_on\":\"2021-04-12T07:00:00Z\"`\n"+ " \"closed_at\":null\n"+ " }\n"+ "]";" is 3662.,39
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenFoundThenSuccess,Long Statement,The length of the statement "assertThat(recordedRequest.getRequestUrl().toString()).isEqualTo(this.baseUrl + "/repos/spring-projects/spring-security/milestones?per_page=100");" is 146.,39
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenFoundThenSuccess,Magic Number,The method contains a magic number: 191,39
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenNotFoundThenException,Long Statement,The length of the statement "String responseJson="[\n" + " {\n" + " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/207\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207/labels\"`\n"+ " \"id\":6611880`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNjYxMTg4MA==\"`\n"+ " \"number\":207`\n"+ " \"title\":\"5.6.x\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jgrandja\"`\n"+ " \"id\":10884212`\n"+ " \"node_id\":\"MDQ6VXNlcjEwODg0MjEy\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/10884212?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jgrandja\"`\n"+ " \"html_url\":\"https://github.com/jgrandja\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jgrandja/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jgrandja/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jgrandja/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jgrandja/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jgrandja/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jgrandja/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jgrandja/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jgrandja/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jgrandja/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":1`\n"+ " \"closed_issues\":0`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2021-03-31T11:29:17Z\"`\n"+ " \"updated_at\":\"2021-03-31T11:30:47Z\"`\n"+ " \"due_on\":null`\n"+ " \"closed_at\":null\n"+ " }`\n"+ " {\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/191\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191/labels\"`\n"+ " \"id\":5884208`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNTg4NDIwOA==\"`\n"+ " \"number\":191`\n"+ " \"title\":\"5.5.0-RC1\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":21`\n"+ " \"closed_issues\":23`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2020-09-16T13:28:03Z\"`\n"+ " \"updated_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"due_on\":\"2021-04-12T07:00:00Z\"`\n"+ " \"closed_at\":null\n"+ " }\n"+ "]";" is 3662.,128
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenNotFoundThenException,Long Statement,The length of the statement "assertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> this.github.findMilestoneNumberByTitle(this.repositoryRef`"missing"));" is 137.,128
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenAllClosedThenFalse,Long Statement,The length of the statement "assertThat(recordedRequest.getRequestUrl().toString()).isEqualTo(this.baseUrl + "/repos/spring-projects/spring-security/issues?per_page=1&milestone=" + milestoneNumber);" is 169.,212
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenAllClosedThenFalse,Magic Number,The method contains a magic number: 202,212
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenOpenIssuesThenTrue,Long Statement,The length of the statement "String responseJson="[\n" + " {\n" + " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562\"`\n"+ " \"repository_url\":\"https://api.github.com/repos/spring-projects/spring-security\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562/labels{/name}\"`\n"+ " \"comments_url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562/comments\"`\n"+ " \"events_url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562/events\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/pull/9562\"`\n"+ " \"id\":851886504`\n"+ " \"node_id\":\"MDExOlB1bGxSZXF1ZXN0NjEwMjMzMDcw\"`\n"+ " \"number\":9562`\n"+ " \"title\":\"Add package-list\"`\n"+ " \"user\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"labels\":[\n"+ " {\n"+ " \"id\":322225043`\n"+ " \"node_id\":\"MDU6TGFiZWwzMjIyMjUwNDM=\"`\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/labels/in:%20build\"`\n"+ " \"name\":\"in: build\"`\n"+ " \"color\":\"e8f9de\"`\n"+ " \"default\":false`\n"+ " \"description\":\"An issue in the build\"\n"+ " }`\n"+ " {\n"+ " \"id\":322225079`\n"+ " \"node_id\":\"MDU6TGFiZWwzMjIyMjUwNzk=\"`\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/labels/type:%20bug\"`\n"+ " \"name\":\"type: bug\"`\n"+ " \"color\":\"e3d9fc\"`\n"+ " \"default\":false`\n"+ " \"description\":\"A general bug\"\n"+ " }\n"+ " ]`\n"+ " \"state\":\"open\"`\n"+ " \"locked\":false`\n"+ " \"assignee\":{\n"+ " \"login\":\"rwinch\"`\n"+ " \"id\":362503`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjUwMw==\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/362503?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/rwinch\"`\n"+ " \"html_url\":\"https://github.com/rwinch\"`\n"+ " \"followers_url\":\"https://api.github.com/users/rwinch/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/rwinch/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/rwinch/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/rwinch/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/rwinch/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/rwinch/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/rwinch/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/rwinch/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/rwinch/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"assignees\":[\n"+ " {\n"+ " \"login\":\"rwinch\"`\n"+ " \"id\":362503`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjUwMw==\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/362503?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/rwinch\"`\n"+ " \"html_url\":\"https://github.com/rwinch\"`\n"+ " \"followers_url\":\"https://api.github.com/users/rwinch/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/rwinch/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/rwinch/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/rwinch/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/rwinch/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/rwinch/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/rwinch/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/rwinch/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/rwinch/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }\n"+ " ]`\n"+ " \"milestone\":{\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/191\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191/labels\"`\n"+ " \"id\":5884208`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNTg4NDIwOA==\"`\n"+ " \"number\":191`\n"+ " \"title\":\"5.5.0-RC1\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":21`\n"+ " \"closed_issues\":23`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2020-09-16T13:28:03Z\"`\n"+ " \"updated_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"due_on\":\"2021-04-12T07:00:00Z\"`\n"+ " \"closed_at\":null\n"+ " }`\n"+ " \"comments\":0`\n"+ " \"created_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"updated_at\":\"2021-04-07T17:00:00Z\"`\n"+ " \"closed_at\":null`\n"+ " \"author_association\":\"MEMBER\"`\n"+ " \"active_lock_reason\":null`\n"+ " \"pull_request\":{\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/pulls/9562\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/pull/9562\"`\n"+ " \"diff_url\":\"https://github.com/spring-projects/spring-security/pull/9562.diff\"`\n"+ " \"patch_url\":\"https://github.com/spring-projects/spring-security/pull/9562.patch\"\n"+ " }`\n"+ " \"body\":\"Closes gh-9528\\r\\n\\r\\n<!--\\r\\nFor Security Vulnerabilities` please use https://pivotal.io/security#reporting\\r\\n-->\\r\\n\\r\\n<!--\\r\\nBefore creating new features` we recommend creating an issue to discuss the feature. This ensures that everyone is on the same page before extensive work is done.\\r\\n\\r\\nThanks for contributing to Spring Security. Please provide a brief description of your pull-request and reference any related issue numbers (prefix references with gh-).\\r\\n-->\\r\\n\"`\n"+ " \"performed_via_github_app\":null\n"+ " }\n"+ "]";" is 7832.,225
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenOpenIssuesThenTrue,Long Statement,The length of the statement "assertThat(recordedRequest.getRequestUrl().toString()).isEqualTo(this.baseUrl + "/repos/spring-projects/spring-security/issues?per_page=1&milestone=" + milestoneNumber);" is 169.,225
spring-projects_spring-session,org.springframework.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenOpenIssuesThenTrue,Magic Number,The method contains a magic number: 191,225
spring-projects_spring-session,io.spring.gradle.convention,ManagementConfigurationPlugin,apply,Long Statement,The length of the statement "mavenPublication.versionMapping((versions) -> versions.allVariants(versionMapping -> versionMapping.fromResolutionResult()));" is 125.,41
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,applyWhenIsReleaseWithForceLocalThenShouldIncludeReleaseAndLocalRepos,Magic Number,The method contains a magic number: 5,102
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,applyWhenIsReleaseWithForceMilestoneAndLocalThenShouldIncludeMilestoneAndLocalRepos,Magic Number,The method contains a magic number: 6,114
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertSnapshotRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(0)).getUrl().toString()).isEqualTo("https://repo.maven.apache.org/maven2/");" is 130.,126
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertSnapshotRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(1)).getUrl().toString()).isEqualTo("https://jcenter.bintray.com/");" is 121.,126
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertSnapshotRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(2)).getUrl().toString()).isEqualTo("https://repo.spring.io/snapshot/");" is 125.,126
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertSnapshotRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(3)).getUrl().toString()).isEqualTo("https://repo.spring.io/milestone/");" is 126.,126
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertSnapshotRepository,Magic Number,The method contains a magic number: 6,126
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertSnapshotRepository,Magic Number,The method contains a magic number: 2,126
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertSnapshotRepository,Magic Number,The method contains a magic number: 3,126
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertMilestoneRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(0)).getUrl().toString()).isEqualTo("https://repo.maven.apache.org/maven2/");" is 130.,138
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertMilestoneRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(1)).getUrl().toString()).isEqualTo("https://jcenter.bintray.com/");" is 121.,138
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertMilestoneRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(2)).getUrl().toString()).isEqualTo("https://repo.spring.io/milestone/");" is 126.,138
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertMilestoneRepository,Magic Number,The method contains a magic number: 5,138
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertMilestoneRepository,Magic Number,The method contains a magic number: 2,138
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertReleaseRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(0)).getUrl().toString()).isEqualTo("https://repo.maven.apache.org/maven2/");" is 130.,148
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertReleaseRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(1)).getUrl().toString()).isEqualTo("https://jcenter.bintray.com/");" is 121.,148
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertReleaseRepository,Long Statement,The length of the statement "assertThat(((MavenArtifactRepository)repositories.get(2)).getUrl().toString()).isEqualTo("https://repo.spring.io/release/");" is 124.,148
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertReleaseRepository,Magic Number,The method contains a magic number: 4,148
spring-projects_spring-session,io.spring.gradle.convention,RepositoryConventionPluginTests,assertReleaseRepository,Magic Number,The method contains a magic number: 2,148
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,build,Long Statement,The length of the statement "BuildResult result=this.testKit.withProjectResource("samples/showcase/").withArguments("build"`"--stacktrace").forwardOutput().build();" is 135.,25
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "BuildResult result=this.testKit.withProjectResource("samples/showcase/").withArguments("install"`"--stacktrace").build();" is 121.,34
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "assertThat(pomTextNoSpace).contains("<dependency>\n <groupId>org.springframework</groupId>\n <artifactId>spring-test</artifactId>\n <scope>test</scope>\n <version>4.3.6.RELEASE</version>\n </dependency>".replaceAll("\\s"`""));" is 226.,34
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "assertThat(pomTextNoSpace).contains("<developers>\n <developer>\n <id>rwinch</id>\n <name>Rob Winch</name>\n <email>rwinch@pivotal.io</email>\n </developer>\n <developer>\n <id>jgrandja</id>\n <name>Joe Grandja</name>\n <email>jgrandja@pivotal.io</email>\n </developer>\n </developers>".replaceAll("\\s"`""));" is 309.,34
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "assertThat(pomTextNoSpace).contains("<scm>\n <connection>scm:git:git://github.com/spring-projects/spring-security</connection>\n <developerConnection>scm:git:git://github.com/spring-projects/spring-security</developerConnection>\n <url>https://github.com/spring-projects/spring-security</url>\n </scm>".replaceAll("\\s"`""));" is 325.,34
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "assertThat(pomTextNoSpace).contains("<organization>\n <name>spring.io</name>\n <url>https://spring.io/</url>\n </organization>".replaceAll("\\s"`""));" is 150.,34
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "assertThat(pomTextNoSpace).contains(" <licenses>\n <license>\n <name>The Apache Software License` Version 2.0</name>\n <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n <distribution>repo</distribution>\n </license>\n </licenses>".replaceAll("\\s"`""));" is 264.,34
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "assertThat(pomTextNoSpace).contains("<scm>\n <connection>scm:git:git://github.com/spring-projects/spring-security</connection>\n <developerConnection>scm:git:git://github.com/spring-projects/spring-security</developerConnection>\n <url>https://github.com/spring-projects/spring-security</url>\n </scm>".replaceAll("\\s"`""));" is 325.,34
spring-projects_spring-session,io.spring.gradle.convention,ShowcaseITest,install,Long Statement,The length of the statement "BuildResult secondBuild=this.testKit.withProjectResource("samples/showcase/").withArguments("mavenBom"`"--stacktrace").build();" is 127.,34
spring-projects_spring-session,io.spring.gradle.convention,SpringMavenPluginITest,install,Long Statement,The length of the statement "assertThat(pomText.replaceAll("\\s"`"")).contains("<dependency>\n <groupId>aopalliance</groupId>\n <artifactId>aopalliance</artifactId>\n <version>1.0</version>\n <scope>compile</scope>\n <optional>true</optional>\n </dependency>".replaceAll("\\s"`""));" is 253.,27
spring-projects_spring-session,io.spring.gradle.convention,SpringMavenPluginITest,signArchivesWhenInMemory,Long Statement,The length of the statement "BuildResult result=this.testKit.withProjectResource("samples/maven/signing").withArguments("signArchives").withEnvironment(map).forwardOutput().build();" is 152.,40
spring-projects_spring-session,io.spring.gradle.convention,SpringMavenPluginITest,signArchivesWhenInMemory,Magic Number,The method contains a magic number: 2,40
spring-projects_spring-session,io.spring.gradle.convention,IncludeCheckRemotePluginTest,applyWhenExtensionPropertiesNoTasksThenCreateCheckRemoteTaskWithDefaultTask,Long Statement,The length of the statement "this.rootProject.getExtensions().configure(IncludeCheckRemotePlugin.IncludeCheckRemoteExtension.class`(includeCheckRemoteExtension) -> {" is 136.,42
spring-projects_spring-session,io.spring.gradle.convention,IncludeCheckRemotePluginTest,applyWhenExtensionPropertiesTasksThenCreateCheckRemoteWithProvidedTasks,Long Statement,The length of the statement "this.rootProject.getExtensions().configure(IncludeCheckRemotePlugin.IncludeCheckRemoteExtension.class`(includeCheckRemoteExtension) -> {" is 136.,56
spring-projects_spring-session,io.spring.gradle.convention,IncludeCheckRemotePluginTest,applyWhenExtensionPropertiesThenRegisterIncludeRepoTaskWithExtensionProperties,Long Statement,The length of the statement "this.rootProject.getExtensions().configure(IncludeCheckRemotePlugin.IncludeCheckRemoteExtension.class`(includeCheckRemoteExtension) -> {" is 136.,71
spring-projects_spring-session,io.spring.gradle.convention,IncludeCheckRemotePluginTest,applyWhenRegisterTasksThenCheckRemoteDirSameAsIncludeRepoOutputDir,Long Statement,The length of the statement "this.rootProject.getExtensions().configure(IncludeCheckRemotePlugin.IncludeCheckRemoteExtension.class`(includeCheckRemoteExtension) -> {" is 136.,87
spring-projects_spring-session,io.spring.gradle.convention,IntegrationTestPluginITest,checkWithPropdeps,Long Statement,The length of the statement "BuildResult result=this.testKit.withProjectResource("samples/integrationtest/withpropdeps/").withArguments("check").build();" is 124.,33
spring-projects_spring-session,io.spring.gradle.convention,IntegrationTestPluginITest,checkWithGroovy,Long Statement,The length of the statement "BuildResult result=this.testKit.withProjectResource("samples/integrationtest/withgroovy/").withArguments("check").build();" is 122.,43
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenFoundThenSuccess,Long Statement,The length of the statement "String responseJson="[\n" + " {\n" + " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/207\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207/labels\"`\n"+ " \"id\":6611880`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNjYxMTg4MA==\"`\n"+ " \"number\":207`\n"+ " \"title\":\"5.6.x\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jgrandja\"`\n"+ " \"id\":10884212`\n"+ " \"node_id\":\"MDQ6VXNlcjEwODg0MjEy\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/10884212?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jgrandja\"`\n"+ " \"html_url\":\"https://github.com/jgrandja\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jgrandja/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jgrandja/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jgrandja/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jgrandja/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jgrandja/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jgrandja/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jgrandja/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jgrandja/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jgrandja/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":1`\n"+ " \"closed_issues\":0`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2021-03-31T11:29:17Z\"`\n"+ " \"updated_at\":\"2021-03-31T11:30:47Z\"`\n"+ " \"due_on\":null`\n"+ " \"closed_at\":null\n"+ " }`\n"+ " {\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/191\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191/labels\"`\n"+ " \"id\":5884208`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNTg4NDIwOA==\"`\n"+ " \"number\":191`\n"+ " \"title\":\"5.5.0-RC1\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":21`\n"+ " \"closed_issues\":23`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2020-09-16T13:28:03Z\"`\n"+ " \"updated_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"due_on\":\"2021-04-12T07:00:00Z\"`\n"+ " \"closed_at\":null\n"+ " }\n"+ "]";" is 3662.,41
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenFoundThenSuccess,Long Statement,The length of the statement "assertThat(recordedRequest.getRequestUrl().toString()).isEqualTo(this.baseUrl + "/repos/spring-projects/spring-security/milestones?per_page=100");" is 146.,41
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenFoundThenSuccess,Magic Number,The method contains a magic number: 191,41
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenNotFoundThenException,Long Statement,The length of the statement "String responseJson="[\n" + " {\n" + " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/207\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/207/labels\"`\n"+ " \"id\":6611880`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNjYxMTg4MA==\"`\n"+ " \"number\":207`\n"+ " \"title\":\"5.6.x\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jgrandja\"`\n"+ " \"id\":10884212`\n"+ " \"node_id\":\"MDQ6VXNlcjEwODg0MjEy\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/10884212?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jgrandja\"`\n"+ " \"html_url\":\"https://github.com/jgrandja\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jgrandja/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jgrandja/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jgrandja/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jgrandja/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jgrandja/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jgrandja/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jgrandja/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jgrandja/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jgrandja/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":1`\n"+ " \"closed_issues\":0`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2021-03-31T11:29:17Z\"`\n"+ " \"updated_at\":\"2021-03-31T11:30:47Z\"`\n"+ " \"due_on\":null`\n"+ " \"closed_at\":null\n"+ " }`\n"+ " {\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/191\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191/labels\"`\n"+ " \"id\":5884208`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNTg4NDIwOA==\"`\n"+ " \"number\":191`\n"+ " \"title\":\"5.5.0-RC1\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":21`\n"+ " \"closed_issues\":23`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2020-09-16T13:28:03Z\"`\n"+ " \"updated_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"due_on\":\"2021-04-12T07:00:00Z\"`\n"+ " \"closed_at\":null\n"+ " }\n"+ "]";" is 3662.,130
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,findMilestoneNumberByTitleWhenNotFoundThenException,Long Statement,The length of the statement "assertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> this.github.findMilestoneNumberByTitle(this.repositoryRef`"missing"));" is 137.,130
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenAllClosedThenFalse,Long Statement,The length of the statement "assertThat(recordedRequest.getRequestUrl().toString()).isEqualTo(this.baseUrl + "/repos/spring-projects/spring-security/issues?per_page=1&milestone=" + milestoneNumber);" is 169.,214
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenAllClosedThenFalse,Magic Number,The method contains a magic number: 202,214
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenOpenIssuesThenTrue,Long Statement,The length of the statement "String responseJson="[\n" + " {\n" + " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562\"`\n"+ " \"repository_url\":\"https://api.github.com/repos/spring-projects/spring-security\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562/labels{/name}\"`\n"+ " \"comments_url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562/comments\"`\n"+ " \"events_url\":\"https://api.github.com/repos/spring-projects/spring-security/issues/9562/events\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/pull/9562\"`\n"+ " \"id\":851886504`\n"+ " \"node_id\":\"MDExOlB1bGxSZXF1ZXN0NjEwMjMzMDcw\"`\n"+ " \"number\":9562`\n"+ " \"title\":\"Add package-list\"`\n"+ " \"user\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"labels\":[\n"+ " {\n"+ " \"id\":322225043`\n"+ " \"node_id\":\"MDU6TGFiZWwzMjIyMjUwNDM=\"`\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/labels/in:%20build\"`\n"+ " \"name\":\"in: build\"`\n"+ " \"color\":\"e8f9de\"`\n"+ " \"default\":false`\n"+ " \"description\":\"An issue in the build\"\n"+ " }`\n"+ " {\n"+ " \"id\":322225079`\n"+ " \"node_id\":\"MDU6TGFiZWwzMjIyMjUwNzk=\"`\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/labels/type:%20bug\"`\n"+ " \"name\":\"type: bug\"`\n"+ " \"color\":\"e3d9fc\"`\n"+ " \"default\":false`\n"+ " \"description\":\"A general bug\"\n"+ " }\n"+ " ]`\n"+ " \"state\":\"open\"`\n"+ " \"locked\":false`\n"+ " \"assignee\":{\n"+ " \"login\":\"rwinch\"`\n"+ " \"id\":362503`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjUwMw==\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/362503?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/rwinch\"`\n"+ " \"html_url\":\"https://github.com/rwinch\"`\n"+ " \"followers_url\":\"https://api.github.com/users/rwinch/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/rwinch/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/rwinch/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/rwinch/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/rwinch/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/rwinch/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/rwinch/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/rwinch/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/rwinch/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"assignees\":[\n"+ " {\n"+ " \"login\":\"rwinch\"`\n"+ " \"id\":362503`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjUwMw==\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/362503?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/rwinch\"`\n"+ " \"html_url\":\"https://github.com/rwinch\"`\n"+ " \"followers_url\":\"https://api.github.com/users/rwinch/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/rwinch/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/rwinch/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/rwinch/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/rwinch/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/rwinch/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/rwinch/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/rwinch/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/rwinch/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }\n"+ " ]`\n"+ " \"milestone\":{\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/milestone/191\"`\n"+ " \"labels_url\":\"https://api.github.com/repos/spring-projects/spring-security/milestones/191/labels\"`\n"+ " \"id\":5884208`\n"+ " \"node_id\":\"MDk6TWlsZXN0b25lNTg4NDIwOA==\"`\n"+ " \"number\":191`\n"+ " \"title\":\"5.5.0-RC1\"`\n"+ " \"description\":\"\"`\n"+ " \"creator\":{\n"+ " \"login\":\"jzheaux\"`\n"+ " \"id\":3627351`\n"+ " \"node_id\":\"MDQ6VXNlcjM2MjczNTE=\"`\n"+ " \"avatar_url\":\"https://avatars.githubusercontent.com/u/3627351?v=4\"`\n"+ " \"gravatar_id\":\"\"`\n"+ " \"url\":\"https://api.github.com/users/jzheaux\"`\n"+ " \"html_url\":\"https://github.com/jzheaux\"`\n"+ " \"followers_url\":\"https://api.github.com/users/jzheaux/followers\"`\n"+ " \"following_url\":\"https://api.github.com/users/jzheaux/following{/other_user}\"`\n"+ " \"gists_url\":\"https://api.github.com/users/jzheaux/gists{/gist_id}\"`\n"+ " \"starred_url\":\"https://api.github.com/users/jzheaux/starred{/owner}{/repo}\"`\n"+ " \"subscriptions_url\":\"https://api.github.com/users/jzheaux/subscriptions\"`\n"+ " \"organizations_url\":\"https://api.github.com/users/jzheaux/orgs\"`\n"+ " \"repos_url\":\"https://api.github.com/users/jzheaux/repos\"`\n"+ " \"events_url\":\"https://api.github.com/users/jzheaux/events{/privacy}\"`\n"+ " \"received_events_url\":\"https://api.github.com/users/jzheaux/received_events\"`\n"+ " \"type\":\"User\"`\n"+ " \"site_admin\":false\n"+ " }`\n"+ " \"open_issues\":21`\n"+ " \"closed_issues\":23`\n"+ " \"state\":\"open\"`\n"+ " \"created_at\":\"2020-09-16T13:28:03Z\"`\n"+ " \"updated_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"due_on\":\"2021-04-12T07:00:00Z\"`\n"+ " \"closed_at\":null\n"+ " }`\n"+ " \"comments\":0`\n"+ " \"created_at\":\"2021-04-06T23:47:10Z\"`\n"+ " \"updated_at\":\"2021-04-07T17:00:00Z\"`\n"+ " \"closed_at\":null`\n"+ " \"author_association\":\"MEMBER\"`\n"+ " \"active_lock_reason\":null`\n"+ " \"pull_request\":{\n"+ " \"url\":\"https://api.github.com/repos/spring-projects/spring-security/pulls/9562\"`\n"+ " \"html_url\":\"https://github.com/spring-projects/spring-security/pull/9562\"`\n"+ " \"diff_url\":\"https://github.com/spring-projects/spring-security/pull/9562.diff\"`\n"+ " \"patch_url\":\"https://github.com/spring-projects/spring-security/pull/9562.patch\"\n"+ " }`\n"+ " \"body\":\"Closes gh-9528\\r\\n\\r\\n<!--\\r\\nFor Security Vulnerabilities` please use https://pivotal.io/security#reporting\\r\\n-->\\r\\n\\r\\n<!--\\r\\nBefore creating new features` we recommend creating an issue to discuss the feature. This ensures that everyone is on the same page before extensive work is done.\\r\\n\\r\\nThanks for contributing to Spring Security. Please provide a brief description of your pull-request and reference any related issue numbers (prefix references with gh-).\\r\\n-->\\r\\n\"`\n"+ " \"performed_via_github_app\":null\n"+ " }\n"+ "]";" is 7832.,227
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenOpenIssuesThenTrue,Long Statement,The length of the statement "assertThat(recordedRequest.getRequestUrl().toString()).isEqualTo(this.baseUrl + "/repos/spring-projects/spring-security/issues?per_page=1&milestone=" + milestoneNumber);" is 169.,227
spring-projects_spring-session,io.spring.gradle.github.milestones,GitHubMilestoneApiTests,isOpenIssuesForMilestoneNumberWhenOpenIssuesThenTrue,Magic Number,The method contains a magic number: 191,227
spring-projects_spring-session,io.spring.gradle.convention.sagan,SaganApiTests,createWhenValidThenNoException,Long Statement,The length of the statement "assertThat(request.getBody().readString(Charset.defaultCharset())).isEqualToIgnoringWhitespace("{\n" + " \"version\":\"5.6.0-SNAPSHOT\"`\n" + " \"current\":false`\n"+ " \"referenceDocUrl\":\"https://docs.spring.io/spring-security/site/docs/{version}/reference/html5/\"`\n"+ " \"apiDocUrl\":\"https://docs.spring.io/spring-security/site/docs/{version}/api/\"\n"+ "}");" is 367.,55
spring-projects_spring-session,io.spring.gradle.convention.sagan,SaganApiTests,deleteWhenValidThenNoException,Long Statement,The length of the statement "assertThat(request.getRequestUrl().toString()).isEqualTo(this.baseUrl + "/projects/spring-security/releases/5.6.0-SNAPSHOT");" is 125.,75

Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,getMouseLocation,Long Statement,The length of the statement "return waitForAsyncFx(RETRIEVAL_TIMEOUT_IN_MILLIS`() -> new Point2D((int)getRobot().getClass().getMethod("getMouseX").invoke(getRobot()) / JavaVersionAdapter.getScreenScaleX()`(int)getRobot().getClass().getMethod("getMouseY").invoke(getRobot()) / JavaVersionAdapter.getScreenScaleY()));" is 286.,88
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,getMouseLocation,Long Statement,The length of the statement "return waitForAsyncFx(RETRIEVAL_TIMEOUT_IN_MILLIS`() -> new Point2D((int)getRobot().getClass().getMethod("getMouseX").invoke(glassRobot)`(int)getRobot().getClass().getMethod("getMouseY").invoke(glassRobot)));" is 208.,88
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,mouseMove,Long Statement,The length of the statement "asyncFx(() -> getRobot().getClass().getMethod("mouseMove"`int.class`int.class).invoke(getRobot()`(int)scaled.getMinX()`(int)scaled.getMinY()));" is 143.,108
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,getCapturePixelColor,Long Statement,The length of the statement "int glassColor=(int)getRobot().getClass().getMethod("getPixelColor"`int.class`int.class).invoke(getRobot()`(int)scaled.getMinX()`(int)scaled.getMinY());" is 152.,127
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,getScreenCapture,Long Statement,The length of the statement "return waitForAsyncFx(RETRIEVAL_TIMEOUT_IN_MILLIS`() -> convertFromGlassPixels(getRobot().getClass().getMethod("getScreenCapture"`int.class`int.class`int.class`int.class`boolean.class).invoke(glassRobot`(int)region.getMinX()`(int)region.getMinY()`(int)region.getWidth()`(int)region.getHeight()`raw)));" is 301.,137
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertToButtonId,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2594382c,146
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 24,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 0xFF,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 16,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 0xFF,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 8,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 0xFF,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 0xFF,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 255d,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 255d,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 255d,164
TestFX_TestFX,org.testfx.service.adapter.impl,PrivateGlassRobotAdapter,convertFromGlassColor,Magic Number,The method contains a magic number: 255d,164
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,robotCreate,Long Statement,The length of the statement "catch ( InstantiationException|IllegalAccessException|InvocationTargetException|NoSuchMethodException|ClassNotFoundException e) {" is 129.,42
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,getMouseLocation,Long Statement,The length of the statement "return waitForAsyncFx(RETRIEVAL_TIMEOUT_IN_MILLIS`() -> new Point2D(((Double)getRobot().getClass().getMethod("getMouseX").invoke(getRobot())).intValue() / JavaVersionAdapter.getScreenScaleX()`((Double)getRobot().getClass().getMethod("getMouseY").invoke(getRobot())).intValue() / JavaVersionAdapter.getScreenScaleY()));" is 318.,68
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,getMouseLocation,Long Statement,The length of the statement "return waitForAsyncFx(RETRIEVAL_TIMEOUT_IN_MILLIS`() -> new Point2D(((Double)getRobot().getClass().getMethod("getMouseX").invoke(glassRobot)).intValue()`((Double)getRobot().getClass().getMethod("getMouseY").invoke(glassRobot)).intValue()));" is 240.,68
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,mouseMove,Long Statement,The length of the statement "asyncFx(() -> getRobot().getClass().getMethod("mouseMove"`double.class`double.class).invoke(getRobot()`(int)scaled.getMinX()`(int)scaled.getMinY()));" is 149.,88
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,mousePress,Long Statement,The length of the statement "asyncFx(() -> getRobot().getClass().getMethod("mousePress"`MouseButton[].class).invoke(getRobot()`new Object[]{new MouseButton[]{button}}));" is 140.,95
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,mouseRelease,Long Statement,The length of the statement "asyncFx(() -> getRobot().getClass().getMethod("mouseRelease"`MouseButton[].class).invoke(getRobot()`new Object[]{new MouseButton[]{button}}));" is 142.,101
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,getCapturePixelColor,Long Statement,The length of the statement "return waitForAsyncFx(RETRIEVAL_TIMEOUT_IN_MILLIS`() -> (Color)getRobot().getClass().getMethod("getPixelColor"`double.class`double.class).invoke(getRobot()`scaled.getMinX()`scaled.getMinY()));" is 192.,107
TestFX_TestFX,org.testfx.service.adapter.impl,PublicGlassRobotAdapter,getScreenCapture,Long Statement,The length of the statement "return waitForAsyncFx(RETRIEVAL_TIMEOUT_IN_MILLIS`() -> (WritableImage)getRobot().getClass().getMethod("getScreenCapture"`WritableImage.class`double.class`double.class`double.class`double.class`boolean.class).invoke(glassRobot`null`region.getMinX()`region.getMinY()`region.getWidth()`region.getHeight()`!raw));" is 310.,115
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,mouseMove,Long Statement,The length of the statement "asyncFx(() -> Event.fireEvent(getEventTarget(scene)`createMouseEvent(MouseEvent.MOUSE_MOVED`(int)location.getX()`(int)location.getY()`lastButtonPressed`0)));" is 157.,102
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,mousePress,Long Statement,The length of the statement "asyncFx(() -> Event.fireEvent(getEventTarget(scene)`createMouseEvent(MouseEvent.MOUSE_PRESSED`sceneMouseX`sceneMouseY`button`clickCount)));" is 139.,108
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,mouseRelease,Long Statement,The length of the statement "asyncFx(() -> Event.fireEvent(getEventTarget(scene)`createMouseEvent(MouseEvent.MOUSE_RELEASED`sceneMouseX`sceneMouseY`button`clickCount)));" is 140.,114
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,mouseClick,Long Statement,The length of the statement "asyncFx(() -> Event.fireEvent(getEventTarget(scene)`createMouseEvent(MouseEvent.MOUSE_CLICKED`sceneMouseX`sceneMouseY`button`clickCount)));" is 139.,120
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,mouseDrag,Long Statement,The length of the statement "asyncFx(() -> Event.fireEvent(getEventTarget(scene)`createMouseEvent(MouseEvent.MOUSE_DRAGGED`sceneMouseX`sceneMouseY`button`0)));" is 130.,140
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,getCapturePixelColor,Long Statement,The length of the statement "throw new RuntimeException("JavafxRobotAdapter#getCapturePixelColor(..) must be called on JavaFX " + "application thread but was: " + Thread.currentThread());" is 158.,150
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,getCaptureRegion,Long Statement,The length of the statement "throw new RuntimeException("JavafxRobotAdapter#getCaptureRegion(..) must be called on JavaFX " + "application thread but was: " + Thread.currentThread());" is 154.,160
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,createMouseEvent,Complex Conditional,The conditional expression !(isButton1Pressed || isButton2Pressed || isButton3Pressed) is complex.,197
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,createMouseEvent,Complex Method,Cyclomatic complexity of the method is 9,197
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,createMouseEvent,Long Parameter List,The method has 5 parameters. ,197
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,createMouseEvent,Long Statement,The length of the statement "return new MouseEvent(type`(int)sceneMouseX`(int)sceneMouseY`(int)screenMouseX`(int)screenMouseY`button`clickCount`isShiftDown`isControlDown`isAltDown`isMetaDown`isButton1Pressed`isButton2Pressed`isButton3Pressed`false`button == MouseButton.SECONDARY`false`null);" is 263.,197
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,createScrollEvent,Long Statement,The length of the statement "return new ScrollEvent(ScrollEvent.SCROLL`(int)sceneMouseX`(int)sceneMouseY`(int)screenMouseX`(int)screenMouseY`isShiftDown`isControlDown`isAltDown`isMetaDown`false`false`0`wheelAmount * 40`0`0`ScrollEvent.HorizontalTextScrollUnits.NONE`0`ScrollEvent.VerticalTextScrollUnits.NONE`0`0`null);" is 290.,241
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapter,createScrollEvent,Magic Number,The method contains a magic number: 40,241
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapter,getCapturePixelColor,Magic Number,The method contains a magic number: 2,107
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapter,getCapturePixelColor,Magic Number,The method contains a magic number: 2,107
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapter,getCaptureRegion,Long Statement,The length of the statement "Rectangle awtRectangle=new Rectangle((int)scaled.getMinX()`(int)scaled.getMinY()`(int)scaled.getWidth()`(int)scaled.getHeight());" is 129.,115
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapter,getCaptureRegionRaw,Long Statement,The length of the statement "Rectangle awtRectangle=new Rectangle((int)scaled.getMinX()`(int)scaled.getMinY()`(int)scaled.getWidth()`(int)scaled.getHeight());" is 129.,142
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapter,convertToAwtButton,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5f1e47ed,167
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapter,scaleRect,Long Statement,The length of the statement "return new Rectangle2D(rect.getMinX() * factorX`rect.getMinY() * factorY`rect.getWidth() * factorX`rect.getHeight() * factorY);" is 127.,176
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,setup,Magic Number,The method contains a magic number: 10,83
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,setup,Magic Number,The method contains a magic number: 10,83
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,setup,Magic Number,The method contains a magic number: 300,83
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,setup,Magic Number,The method contains a magic number: 100,83
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,mouseMove,Long Statement,The length of the statement "assumeThat("skipping: Robot's mouseMove broken on Windows + HiDPI (JDK-8196031)"`System.getProperty("glass.win.uiScale"`"100%")`is(equalTo("100%")));" is 149.,158
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 100,158
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 200,158
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 100.0,158
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 200.0,158
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,getCaptureRegion,Long Statement,The length of the statement "System.out.println("getCaptureRegion` primary screen width = " + Screen.getPrimary().getBounds().getWidth() + "` height = "+ Screen.getPrimary().getBounds().getHeight());" is 170.,226
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,getCaptureRegion,Long Statement,The length of the statement "Image regionImage=robotAdapter.getCaptureRegion(new Rectangle2D(bounds.getMinX()`bounds.getMinY()`bounds.getWidth()`bounds.getHeight()));" is 137.,226
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,getCaptureRegion,Long Statement,The length of the statement "assertThat(regionImage.getPixelReader().getColor((int)regionImage.getWidth() / 2`(int)regionImage.getHeight() / 2)`is(Color.web("magenta")));" is 141.,226
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 2,226
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 2,226
TestFX_TestFX,org.testfx.service.adapter.impl,GlassRobotAdapterTest,timerWaitForIdle,Magic Number,The method contains a magic number: 100,244
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,setupSpec,Long Statement,The length of the statement "assumeFalse("skipping AwtRobotAdapterTest - in headless environment"`GraphicsEnvironment.getLocalGraphicsEnvironment().isHeadlessInstance());" is 141.,77
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,setup,Magic Number,The method contains a magic number: 10,84
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,setup,Magic Number,The method contains a magic number: 10,84
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,setup,Magic Number,The method contains a magic number: 300,84
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,setup,Magic Number,The method contains a magic number: 100,84
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 100,159
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 200,159
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 100.0,159
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,mouseMove,Magic Number,The method contains a magic number: 200.0,159
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 10,222
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 20,222
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 10.0,222
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 20.0,222
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 5,222
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 10,222
TestFX_TestFX,org.testfx.service.adapter.impl,AwtRobotAdapterTest,timerWaitForIdle,Magic Number,The method contains a magic number: 100,237
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,setup,Magic Number,The method contains a magic number: 6,82
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,setup,Magic Number,The method contains a magic number: 10,82
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,setup,Magic Number,The method contains a magic number: 10,82
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,setup,Magic Number,The method contains a magic number: 300,82
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,setup,Magic Number,The method contains a magic number: 300,82
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,keyPressTypeRelease_english_text,Long Statement,The length of the statement "String text="All in the golden afternoon\n" + "\tFull leisurely we glide;\n" + "For both our oars` with little skill`\n"+ "\tBy little arms are plied;\n"+ "While little hands make vain pretence\n"+ "\tOur wanderings to guide.";" is 227.,189
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,keyPressTypeRelease_korean_text,Long Statement,The length of the statement "String text="화창한 오후마다\n" + "\t우린 느긋이 배를 타지;\n" + "노는 둘 다 젓는 듯 마는 듯`\n"+ "\t노를 젓는다고 해도`\n"+ "작은 손으로 시늉만 내는 동안\n"+ "\t우리는 정처없이 흘러간다네.";" is 133.,211
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,keyType_unicode_sequences,Long Statement,The length of the statement "verifyThat(textField`TextInputControlMatchers.hasText(String.valueOf(LATIN_EXTENDED_A_GLYPHS) + String.valueOf(LATIN_EXTENDED_A_GLYPHS)));" is 138.,232
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCapturePixelColor,Long Statement,The length of the statement "assumeThat("skipping: screen capture on macOS uses configured display's color profile"`System.getenv("TRAVIS_OS_NAME")`is(not(equalTo("osx"))));" is 144.,253
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCapturePixelColor,Magic Number,The method contains a magic number: 3,253
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Long Statement,The length of the statement "assumeThat("skipping: screen capture on macOS uses configured display's color profile"`System.getenv("TRAVIS_OS_NAME")`is(not(equalTo("osx"))));" is 144.,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 10,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 20,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 10.0,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 20.0,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 5,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 10,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,getCaptureRegion,Magic Number,The method contains a magic number: 5,279
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,pointInCenterFor,Magic Number,The method contains a magic number: 0.5,361
TestFX_TestFX,org.testfx.service.adapter.impl,JavafxRobotAdapterTest,pointInCenterFor,Magic Number,The method contains a magic number: 0.5,361
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,lookup,Long Statement,The length of the statement "Function<Node`Set<Node>> queryFunction=isCssSelector(query) ? NodeQueryUtils.bySelector(query) : NodeQueryUtils.byText(query);" is 126.,58
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,match,Long Statement,The length of the statement "parentNodes=parentNodes.stream().filter(NodeQueryUtils.matchesMatcher((Matcher<Node>)matcher)).collect(Collectors.toCollection(LinkedHashSet::new));" is 148.,97
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,match,Long Statement,The length of the statement "parentNodes=parentNodes.stream().filter((Predicate<Node>)predicate).collect(Collectors.toCollection(LinkedHashSet::new));" is 121.,107
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,ordinal,Magic Number,The method contains a magic number: 100,192
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,ordinal,Magic Number,The method contains a magic number: 11,192
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,ordinal,Magic Number,The method contains a magic number: 12,192
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,ordinal,Magic Number,The method contains a magic number: 13,192
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,ordinal,Magic Number,The method contains a magic number: 10,192
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImpl,ordinal,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1c5baa96,192
TestFX_TestFX,org.testfx.service.query.impl,PointQueryBase,queryMotion,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@66fad8be,77
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,setup,Magic Number,The method contains a magic number: 10,70
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,setup,Magic Number,The method contains a magic number: 10,70
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,setup,Magic Number,The method contains a magic number: 100,70
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,setup,Magic Number,The method contains a magic number: 200,70
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,setup,Magic Number,The method contains a magic number: 200,70
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,setup,Magic Number,The method contains a magic number: 400,70
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,empty_query_throws_exception,Long Statement,The length of the statement "assertThatThrownBy(() -> nodeQuery.query()).isExactlyInstanceOf(EmptyNodeQueryException.class).hasMessageContaining("the empty NodeQuery");" is 139.,111
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,lookup_lookup,Long Statement,The length of the statement "Set<Node> result=nodeQuery.from(rootOfScene(scene)).lookup(bySelector("#labels")).lookup(bySelector(".label")).queryAll();" is 122.,238
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,lookup_combine,Long Statement,The length of the statement "Set<Node> result=nodeQuery.from(rootOfScene(scene)).lookup(combine(bySelector(".label")`bySelector(".button"))).queryAll();" is 123.,251
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,lookup_selectAt_lookup_selectAt,Long Statement,The length of the statement "Set<Node> result=nodeQuery.from(rootOfScene(scene)).lookup(bySelector("#labels")).nth(0).lookup(bySelector(".label")).nth(2).queryAll();" is 136.,276
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,lookup_selectAt_lookup_selectAt,Magic Number,The method contains a magic number: 2,276
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,lookup_selectAt_with_index_out_of_bounds,Magic Number,The method contains a magic number: 99,291
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,lookup_selectAt_lookup_selectAt_with_indices_out_of_bounds,Long Statement,The length of the statement "Set<Node> result=nodeQuery.from(rootOfScene(scene)).lookup(bySelector("#labels")).nth(0).lookup(bySelector(".label")).nth(99).queryAll();" is 137.,304
TestFX_TestFX,org.testfx.service.query.impl,NodeQueryImplTest,lookup_selectAt_lookup_selectAt_with_indices_out_of_bounds,Magic Number,The method contains a magic number: 99,304
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,setup,Magic Number,The method contains a magic number: 100,38
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,setup,Magic Number,The method contains a magic number: 200,38
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,setup,Magic Number,The method contains a magic number: 300,38
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,setup,Magic Number,The method contains a magic number: 400,38
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_1,Magic Number,The method contains a magic number: 100,43
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_1,Magic Number,The method contains a magic number: 200,43
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_2,Magic Number,The method contains a magic number: 100,52
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_2,Magic Number,The method contains a magic number: 300,52
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_2,Magic Number,The method contains a magic number: 200,52
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_2,Magic Number,The method contains a magic number: 400,52
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_3,Magic Number,The method contains a magic number: 0.5,61
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_3,Magic Number,The method contains a magic number: 0.5,61
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_3,Magic Number,The method contains a magic number: 100,61
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_3,Magic Number,The method contains a magic number: 150,61
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_3,Magic Number,The method contains a magic number: 200,61
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_double_double_case_3,Magic Number,The method contains a magic number: 200,61
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_1,Magic Number,The method contains a magic number: 100,70
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_1,Magic Number,The method contains a magic number: 200,70
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_2,Magic Number,The method contains a magic number: 100,79
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_2,Magic Number,The method contains a magic number: 300,79
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_2,Magic Number,The method contains a magic number: 200,79
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_2,Magic Number,The method contains a magic number: 400,79
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_3,Magic Number,The method contains a magic number: 100,88
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_3,Magic Number,The method contains a magic number: 150,88
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_3,Magic Number,The method contains a magic number: 200,88
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atPosition_Pos_case_3,Magic Number,The method contains a magic number: 200,88
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_1,Magic Number,The method contains a magic number: 100,97
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_1,Magic Number,The method contains a magic number: 200,97
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_2,Magic Number,The method contains a magic number: 300,106
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_2,Magic Number,The method contains a magic number: 400,106
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_2,Magic Number,The method contains a magic number: 100,106
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_2,Magic Number,The method contains a magic number: 300,106
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_2,Magic Number,The method contains a magic number: 200,106
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_2,Magic Number,The method contains a magic number: 400,106
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_3,Magic Number,The method contains a magic number: 150,115
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_3,Magic Number,The method contains a magic number: 200,115
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_3,Magic Number,The method contains a magic number: 100,115
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_3,Magic Number,The method contains a magic number: 150,115
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_3,Magic Number,The method contains a magic number: 200,115
TestFX_TestFX,org.testfx.service.query.impl,BoundsPointQueryTest,atOffset_double_double_case_3,Magic Number,The method contains a magic number: 200,115
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 100,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 100,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 50,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 50,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 200,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 200,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 50,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 50,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 100,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 100,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 600,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 400,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 200,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 200,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 600,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 400,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 100,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 100,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 600,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 400,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 200,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 200,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 600,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,setup,Magic Number,The method contains a magic number: 400,51
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Bounds_atOffset,Magic Number,The method contains a magic number: 100,64
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Bounds_atOffset,Magic Number,The method contains a magic number: 100,64
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Bounds_atOffset,Magic Number,The method contains a magic number: 50,64
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Bounds_atOffset,Magic Number,The method contains a magic number: 50,64
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Bounds_atOffset,Magic Number,The method contains a magic number: 100,64
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Bounds_atOffset,Magic Number,The method contains a magic number: 100,64
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Point2D_atOffset,Magic Number,The method contains a magic number: 100,76
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Point2D_atOffset,Magic Number,The method contains a magic number: 100,76
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Point2D_atOffset,Magic Number,The method contains a magic number: 100,76
TestFX_TestFX,org.testfx.service.locator.impl,PointLocatorImplTest,pointFor_Point2D_atOffset,Magic Number,The method contains a magic number: 100,76
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setup,Magic Number,The method contains a magic number: 5000,88
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Complex Conditional,The conditional expression System.getProperty("os.name").toLowerCase(Locale.US).startsWith("win") && System.getProperty("testfx.robot"`"awt").toLowerCase(Locale.US).equals("awt") && (JavaVersionAdapter.getScreenScaleX() != 1d || JavaVersionAdapter.getScreenScaleY() != 1d) is complex.,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Long Statement,The length of the statement "nodePartiallyOutsideOfScene=new Rectangle(partialOutsideSceneX`partialOutsideSceneY`PARTIAL_OUTSIDE_SCENE_WIDTH`PARTIAL_OUTSIDE_SCENE_HEIGHT);" is 142.,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Long Statement,The length of the statement "if (System.getProperty("os.name").toLowerCase(Locale.US).startsWith("win") && System.getProperty("testfx.robot"`"awt").toLowerCase(Locale.US).equals("awt") && (JavaVersionAdapter.getScreenScaleX() != 1d || JavaVersionAdapter.getScreenScaleY() != 1d)) {" is 252.,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Long Statement,The length of the statement "nodePartiallyOutsideOfScene=new Rectangle(partialOutsideSceneX`nodePartiallyOutsideOfScene.getBoundsInLocal().getMinY()`PARTIAL_OUTSIDE_SCENE_WIDTH`nodePartiallyOutsideOfScene.getBoundsInLocal().getHeight());" is 208.,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Long Statement,The length of the statement "nodePartiallyOutsideOfScene=new Rectangle(nodePartiallyOutsideOfScene.getBoundsInLocal().getMinX()`partialOutsideSceneY`nodePartiallyOutsideOfScene.getBoundsInLocal().getWidth()`PARTIAL_OUTSIDE_SCENE_HEIGHT);" is 208.,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Magic Number,The method contains a magic number: 300,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Magic Number,The method contains a magic number: 300,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Magic Number,The method contains a magic number: 100,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Magic Number,The method contains a magic number: 100,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,setupStages,Magic Number,The method contains a magic number: 10,100
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsInSceneFor_nodePartiallyOutsideOfScene,Long Statement,The length of the statement "assertThat(bounds`equalTo(new BoundingBox(partialOutsideSceneX`partialOutsideSceneY`(partialOutsideSceneX + PARTIAL_OUTSIDE_SCENE_WIDTH) - sceneWidth`(partialOutsideSceneY + PARTIAL_OUTSIDE_SCENE_HEIGHT) - sceneHeight)));" is 221.,169
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsInSceneFor_nodeOutsideOfScene,Long Statement,The length of the statement "assertThatThrownBy(() -> boundsLocator.boundsInSceneFor(nodeOutsideOfScene)).isExactlyInstanceOf(BoundsLocatorException.class);" is 127.,180
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsInWindowFor_boundsInsideOfScene,Long Statement,The length of the statement "assertThat(actual`equalTo(new BoundingBox(INSIDE_SCENE_X + windowInsets.getLeft()`INSIDE_SCENE_Y + windowInsets.getTop()`INSIDE_SCENE_WIDTH`INSIDE_SCENE_HEIGHT)));" is 163.,196
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsInWindowFor_boundsPartiallyOutsideOfScene,Long Statement,The length of the statement "assertThat(actual`equalTo(new BoundingBox(partialOutsideSceneX + windowInsets.getLeft()`partialOutsideSceneY + windowInsets.getTop()`(partialOutsideSceneX + PARTIAL_OUTSIDE_SCENE_WIDTH) - sceneWidth`(partialOutsideSceneY + PARTIAL_OUTSIDE_SCENE_HEIGHT) - sceneHeight)));" is 270.,207
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsInWindowFor_boundsOutsideOfScene,Long Statement,The length of the statement "assertThatThrownBy(() -> boundsLocator.boundsInWindowFor(nodeOutsideOfScene.getLayoutBounds()`primaryScene)).isExactlyInstanceOf(BoundsLocatorException.class);" is 159.,219
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsOnScreenFor_primaryWindow,Long Statement,The length of the statement "assertThat(actual`equalTo(new BoundingBox(WINDOW_TRANSLATE_X`WINDOW_TRANSLATE_Y`sceneWidth + windowInsets.getLeft() + windowInsets.getRight()`sceneHeight + windowInsets.getTop() + windowInsets.getBottom())));" is 208.,225
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsOnScreenFor_primaryScene,Long Statement,The length of the statement "assertThat(actual`equalTo(new BoundingBox(WINDOW_TRANSLATE_X + windowInsets.getLeft()`WINDOW_TRANSLATE_Y + windowInsets.getTop()`sceneWidth`sceneHeight)));" is 155.,237
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsOnScreenFor_boundsInsideOfScene,Long Statement,The length of the statement "assertThat(actual`equalTo(new BoundingBox(WINDOW_TRANSLATE_X + INSIDE_SCENE_X + windowInsets.getLeft()`WINDOW_TRANSLATE_Y + INSIDE_SCENE_Y + windowInsets.getTop()`INSIDE_SCENE_WIDTH`INSIDE_SCENE_HEIGHT)));" is 205.,248
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsOnScreenFor_boundsPartiallyOutsideOfScene,Long Statement,The length of the statement "assertThat(actual`equalTo(new BoundingBox(WINDOW_TRANSLATE_X + partialOutsideSceneX + windowInsets.getLeft()`WINDOW_TRANSLATE_Y + partialOutsideSceneY + windowInsets.getTop()`(partialOutsideSceneX + PARTIAL_OUTSIDE_SCENE_WIDTH) - sceneWidth`(partialOutsideSceneY + PARTIAL_OUTSIDE_SCENE_HEIGHT) - sceneHeight)));" is 312.,259
TestFX_TestFX,org.testfx.service.locator.impl,BoundsLocatorImplTest,boundsOnScreenFor_boundsOutsideOfScene,Long Statement,The length of the statement "assertThatThrownBy(() -> boundsLocator.boundsOnScreenFor(nodeOutsideOfScene.getLayoutBounds()`primaryScene)).isExactlyInstanceOf(BoundsLocatorException.class);" is 159.,272
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImpl,window,Long Statement,The length of the statement "return fetchWindowsByProximityTo(lastTargetWindow).stream().filter(predicate).findFirst().orElseThrow(NoSuchElementException::new);" is 131.,65
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImpl,calculateWindowProximityTo,Magic Number,The method contains a magic number: 2,140
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setup,Magic Number,The method contains a magic number: 600,84
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setup,Magic Number,The method contains a magic number: 400,84
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setupStages,Magic Number,The method contains a magic number: 600,97
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setupStages,Magic Number,The method contains a magic number: 400,97
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setupStages,Magic Number,The method contains a magic number: 600,97
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setupStages,Magic Number,The method contains a magic number: 400,97
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setupStages,Magic Number,The method contains a magic number: 600,97
TestFX_TestFX,org.testfx.service.finder.impl,NodeFinderImplTest,setupStages,Magic Number,The method contains a magic number: 400,97
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImplTest,setup,Magic Number,The method contains a magic number: 600,53
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImplTest,setup,Magic Number,The method contains a magic number: 400,53
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImplTest,setupStages,Magic Number,The method contains a magic number: 600,62
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImplTest,setupStages,Magic Number,The method contains a magic number: 400,62
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImplTest,window_windowIndex,Magic Number,The method contains a magic number: 2,154
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImplTest,window_windowIndex,Magic Number,The method contains a magic number: 3,154
TestFX_TestFX,org.testfx.service.finder.impl,WindowFinderImplTest,window_windowIndex,Magic Number,The method contains a magic number: 4,154
TestFX_TestFX,org.testfx.service.support.impl,PixelMatcherRgb,PixelMatcherRgb,Magic Number,The method contains a magic number: 0.20,31
TestFX_TestFX,org.testfx.service.support.impl,PixelMatcherRgb,PixelMatcherRgb,Magic Number,The method contains a magic number: 0.75,31
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,capture_region,Magic Number,The method contains a magic number: 100,95
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,capture_region,Magic Number,The method contains a magic number: 200,95
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,capture_region,Magic Number,The method contains a magic number: 100.0,95
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,capture_region,Magic Number,The method contains a magic number: 200.0,95
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,load_image,Magic Number,The method contains a magic number: 300.0,105
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,load_image,Magic Number,The method contains a magic number: 384.0,105
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,match_images,Magic Number,The method contains a magic number: 2191L,126
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,match_images,Magic Number,The method contains a magic number: 0.02,126
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,match_images,Magic Number,The method contains a magic number: 0.01,126
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,match_images_from_scene,Magic Number,The method contains a magic number: 1900,144
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,match_images_from_scene,Magic Number,The method contains a magic number: 0.02,144
TestFX_TestFX,org.testfx.service.support.impl,CaptureSupportImplTest,match_images_from_scene,Magic Number,The method contains a magic number: 0.01,144
TestFX_TestFX,org.testfx.matcher.base,StyleableMatchers,hasTypeSelector,Long Statement,The length of the statement "return typeSafeMatcher(Styleable.class`descriptionText`styleable -> "\"" + styleable.getTypeSelector() + "\""`styleable -> Objects.equals(typeSelector`styleable.getTypeSelector()));" is 181.,33
TestFX_TestFX,org.testfx.matcher.base,StyleableMatchers,hasId,Long Statement,The length of the statement "return typeSafeMatcher(Styleable.class`descriptionText`styleable -> "\"" + styleable.getId() + "\""`styleable -> Objects.equals(id`styleable.getId()));" is 151.,46
TestFX_TestFX,org.testfx.matcher.base,StyleableMatchers,hasStyle,Long Statement,The length of the statement "return typeSafeMatcher(Styleable.class`descriptionText`styleable -> "\"" + styleable.getStyle() + "\""`styleable -> Objects.equals(style`styleable.getStyle()));" is 160.,59
TestFX_TestFX,org.testfx.matcher.base,StyleableMatchers,hasStyleableParent,Long Statement,The length of the statement "return typeSafeMatcher(Styleable.class`descriptionText`styleable -> "\"" + styleable.getStyleableParent() + "\""`styleable -> Objects.equals(styleableParent`styleable.getStyleableParent()));" is 190.,72
TestFX_TestFX,org.testfx.matcher.base,ParentMatchers,hasChild,Long Statement,The length of the statement "return typeSafeMatcher(Parent.class`descriptionText`parent -> toText(parent.getChildrenUnmodifiable())`parent -> !parent.getChildrenUnmodifiable().isEmpty());" is 158.,35
TestFX_TestFX,org.testfx.matcher.base,ParentMatchers,hasChildren,Long Statement,The length of the statement "return typeSafeMatcher(Parent.class`descriptionText`parent -> toText(parent.getChildrenUnmodifiable())`parent -> parent.getChildrenUnmodifiable().size() == amount);" is 164.,45
TestFX_TestFX,org.testfx.matcher.base,ParentMatchers,toText,Long Statement,The length of the statement "return '[' + children.stream().map(node -> node.getClass().getSimpleName()).collect(Collectors.joining("` ")) + ']'+ " (which has "+ children.size()+ ' '+ (children.size() == 1 ? "child" : "children")+ ')';" is 206.,55
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,isColor,Long Statement,The length of the statement "return typeSafeMatcher(Color.class`descriptionText`ColorMatchers::getColorText`col -> colorMatcher.matchColors(col`color));" is 123.,39
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,isColor,Long Statement,The length of the statement "throw new AssertionError("given color name: \"" + namedColor + "\" is not a named color\n"+ "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 187.,56
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,isColor,Long Statement,The length of the statement "return typeSafeMatcher(Color.class`descriptionText`ColorMatchers::getColorText`color -> ColorUtils.getNamedColor(namedColor).map(col -> col.equals(color)).orElse(false));" is 170.,56
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Long Statement,The length of the statement "throw new AssertionError("given color: \"#" + namedColor.toString().substring(2`8) + "\" is not a named color\n"+ "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 209.,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Long Statement,The length of the statement "return typeSafeMatcher(Color.class`descriptionText`color -> getColorText(color) + " which has closest named color: \"" + ColorUtils.getClosestNamedColor(Integer.parseInt(color.toString().substring(2`8)`16))+ "\""`color -> namedColor.equals(ColorUtils.getClosestNamedColor(color)));" is 281.,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 2,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 8,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 16,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 2,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 8,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 2,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 8,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 16,73
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Long Statement,The length of the statement "throw new AssertionError("given color name: \"" + namedColor + "\" is not a named color\n"+ "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 187.,95
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Long Statement,The length of the statement "return typeSafeMatcher(Color.class`descriptionText`color -> getColorText(color) + " which has closest named color: \"" + ColorUtils.getClosestNamedColor(Integer.parseInt(color.toString().substring(2`8)`16))+ "\""`color -> namedColorOptional.get().equals(ColorUtils.getClosestNamedColor(color)));" is 295.,95
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 2,95
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 8,95
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,hasClosestNamedColor,Magic Number,The method contains a magic number: 16,95
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,getColorText,Long Statement,The length of the statement "return ColorUtils.getNamedColor(Integer.parseInt(hex`16)).map(s -> String.format("\"%s\" (#%s)"`s`hex)).orElseGet(() -> "\"#" + hex + "\"");" is 140.,115
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,getColorText,Magic Number,The method contains a magic number: 2,115
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,getColorText,Magic Number,The method contains a magic number: 8,115
TestFX_TestFX,org.testfx.matcher.base,ColorMatchers,getColorText,Magic Number,The method contains a magic number: 16,115
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,isColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(1`0`0)`ColorMatchers.isColor(Color.BLACK))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Color has color \"BLACK\" (#000000)\n " + "but: was \"RED\" (#ff0000)");" is 230.,35
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,isColor_colorMatcher,Magic Number,The method contains a magic number: 0.9,43
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,isColor_colorMatcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.5`0`0)`ColorMatchers.isColor(Color.RED`new PixelMatcherRgb(0.01`0)))).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Color has color \"RED\" (#ff0000)\n ");" is 237.,48
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,isColor_colorMatcher_fails,Magic Number,The method contains a magic number: 0.5,48
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,isColor_colorMatcher_fails,Magic Number,The method contains a magic number: 0.01,48
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,isNamedColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.ANTIQUEWHITE`ColorMatchers.isColor("AQUAMARINE"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Color is \"AQUAMARINE\"\n " + "but: was \"ANTIQUEWHITE\" (#faebd7)");" is 228.,61
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,isNamedColor_non_named_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.web("#f3b2aa")`ColorMatchers.isColor("BAGEL"))).isExactlyInstanceOf(AssertionError.class).hasMessage("given color name: \"BAGEL\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 293.,69
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_color,Magic Number,The method contains a magic number: 0.8,77
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_color,Magic Number,The method contains a magic number: 0.2,77
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_color,Magic Number,The method contains a magic number: 0.1,77
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.web("#fbfbfb")`ColorMatchers.hasClosestNamedColor(Color.GAINSBORO))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Color has closest named color \"GAINSBORO\" (#dcdcdc)\n " + "but: was \"#fbfbfb\" which has closest named color: \"SNOW\"");" is 301.,82
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_non_named_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.web("#dcdcdc")`ColorMatchers.hasClosestNamedColor(Color.web("#acb2f1")))).isExactlyInstanceOf(AssertionError.class).hasMessage("given color: \"#acb2f1\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 316.,90
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_string,Magic Number,The method contains a magic number: 0.8,99
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_string,Magic Number,The method contains a magic number: 0.2,99
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_string,Magic Number,The method contains a magic number: 0.1,99
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_string_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.6`0.1`0.1)`ColorMatchers.hasClosestNamedColor("GAINSBORO"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Color has closest named color \"GAINSBORO\" (#dcdcdc)\n " + "but: was \"#991a1a\" which has closest named color: \"BROWN\"");" is 302.,104
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.6,104
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.1,104
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.1,104
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_non_named_color_string_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.6`0.1`0.1)`ColorMatchers.hasClosestNamedColor("BETELGEUSE"))).isExactlyInstanceOf(AssertionError.class).hasMessage("given color name: \"BETELGEUSE\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 320.,113
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_non_named_color_string_fails,Magic Number,The method contains a magic number: 0.6,113
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_non_named_color_string_fails,Magic Number,The method contains a magic number: 0.1,113
TestFX_TestFX,org.testfx.matcher.base,ColorMatchersTest,hasClosestNamedColor_non_named_color_string_fails,Magic Number,The method contains a magic number: 0.1,113
TestFX_TestFX,org.testfx.matcher.base,GeometryMatchersTest,hasDimension,Magic Number,The method contains a magic number: 10,35
TestFX_TestFX,org.testfx.matcher.base,GeometryMatchersTest,hasDimension,Magic Number,The method contains a magic number: 20,35
TestFX_TestFX,org.testfx.matcher.base,GeometryMatchersTest,hasDimension,Magic Number,The method contains a magic number: 10,35
TestFX_TestFX,org.testfx.matcher.base,GeometryMatchersTest,hasDimension,Magic Number,The method contains a magic number: 20,35
TestFX_TestFX,org.testfx.matcher.base,GeometryMatchersTest,hasDimension_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(new Dimension2D(10`20)`GeometryMatchers.hasDimension(0`0))).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Dimension2D has dimension (0.0` 0.0)\n");" is 215.,40
TestFX_TestFX,org.testfx.matcher.base,GeometryMatchersTest,hasDimension_fails,Magic Number,The method contains a magic number: 10,40
TestFX_TestFX,org.testfx.matcher.base,GeometryMatchersTest,hasDimension_fails,Magic Number,The method contains a magic number: 20,40
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,anything,Magic Number,The method contains a magic number: 3,54
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,isFocused_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textField`NodeMatchers.isFocused())).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Node has focus\n");" is 170.,85
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,isNotFocused_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textField`NodeMatchers.isNotFocused())).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Node does not have focus\n");" is 183.,120
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,hasText_filters_nodes,Magic Number,The method contains a magic number: 3,138
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,hasText_filters_nodes,Magic Number,The method contains a magic number: 2,138
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,hasChild_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent`NodeMatchers.hasChild(".button"))).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Node has child \".button\"\n");" is 187.,167
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,hasChildren,Magic Number,The method contains a magic number: 2,178
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,hasChildren_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent`NodeMatchers.hasChildren(2`".button"))).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Node has 2 children \".button\"\n");" is 197.,188
TestFX_TestFX,org.testfx.matcher.base,NodeMatchersTest,hasChildren_fails,Magic Number,The method contains a magic number: 2,188
TestFX_TestFX,org.testfx.matcher.base,GeneralMatchersTest,baseMatcher_with_nullNode,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(nullNode`notNullNodeMatcher)).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Node is not null\n" + " but: was null");" is 172.,60
TestFX_TestFX,org.testfx.matcher.base,GeneralMatchersTest,typeSafeMatcher_with_notMatchingNode,Long Statement,The length of the statement "Matcher<Node> hasChildrenParentMatcher=GeneralMatchers.typeSafeMatcher(Parent.class`"has children"`hasChildrenParentPredicate);" is 127.,74
TestFX_TestFX,org.testfx.matcher.base,GeneralMatchersTest,typeSafeMatcher_with_notMatchingNode,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(notMatchingNode`hasChildrenParentMatcher)).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Parent has children\n" + " but: was <" + notMatchingNode.toString() + ">");" is 220.,74
TestFX_TestFX,org.testfx.matcher.base,GeneralMatchersTest,typeSafeMatcher_with_nullNode,Long Statement,The length of the statement "Matcher<Node> hasChildrenParentMatcher=GeneralMatchers.typeSafeMatcher(Parent.class`"has children"`hasChildrenParentPredicate);" is 127.,88
TestFX_TestFX,org.testfx.matcher.base,GeneralMatchersTest,typeSafeMatcher_with_nullNode,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(nullNode`hasChildrenParentMatcher)).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Parent has children\n" + " but: was null");" is 181.,88
TestFX_TestFX,org.testfx.matcher.base,GeneralMatchersTest,typeSafeMatcher_with_notParentNode,Long Statement,The length of the statement "Matcher<Node> hasChildrenParentMatcher=GeneralMatchers.typeSafeMatcher(Parent.class`"has children"`hasChildrenParentPredicate);" is 127.,102
TestFX_TestFX,org.testfx.matcher.base,GeneralMatchersTest,typeSafeMatcher_with_notParentNode,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(notParentNode`hasChildrenParentMatcher)).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Parent has children\n" + " but: was <" + notParentNode.toString() + ">");" is 216.,102
TestFX_TestFX,org.testfx.matcher.base,ParentMatchersTest,hasChild_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent`ParentMatchers.hasChild())).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Parent has at least one child\n " + "but: was empty (contained no children)");" is 215.,54
TestFX_TestFX,org.testfx.matcher.base,ParentMatchersTest,hasChildren,Magic Number,The method contains a magic number: 3,66
TestFX_TestFX,org.testfx.matcher.base,ParentMatchersTest,hasChildren_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent`ParentMatchers.hasChildren(3))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Parent has exactly 3 children\n " + "but: was [Label` Button] (which has 2 children)");" is 228.,76
TestFX_TestFX,org.testfx.matcher.base,ParentMatchersTest,hasChildren_fails,Magic Number,The method contains a magic number: 3,76
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchers,hasItems,Long Statement,The length of the statement "return typeSafeMatcher(ComboBox.class`descriptionText`comboBox -> String.valueOf(comboBox.getItems().size())`comboBox -> comboBox.getItems().size() == amount);" is 159.,46
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchers,hasSelectedItem,Long Statement,The length of the statement "return typeSafeMatcher(ComboBox.class`descriptionText`comboBox -> "\"" + comboBox.getSelectionModel().getSelectedItem().toString() + "\""`comboBox -> hasSelectedItem(comboBox`selection));" is 187.,58
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchers,containsItems,Long Statement,The length of the statement "return typeSafeMatcher(ComboBox.class`descriptionText`ComboBoxMatchers::getItemsString`comboBox -> containsItems(comboBox`items));" is 130.,71
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchers,containsExactlyItems,Long Statement,The length of the statement "return typeSafeMatcher(ComboBox.class`descriptionText`ComboBoxMatchers::getItemsString`comboBox -> containsExactlyItems(comboBox`items));" is 137.,83
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchers,containsItemsInOrder,Long Statement,The length of the statement "return typeSafeMatcher(ComboBox.class`descriptionText`ComboBoxMatchers::getItemsString`comboBox -> containsItemsInOrder(comboBox`items));" is 137.,95
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchers,containsExactlyItemsInOrder,Long Statement,The length of the statement "return typeSafeMatcher(ComboBox.class`descriptionText`ComboBoxMatchers::getItemsString`comboBox -> containsExactlyItemsInOrder(comboBox`items));" is 144.,108
TestFX_TestFX,org.testfx.matcher.control,LabeledMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(Labeled.class`descriptionText`labeled -> "\"" + labeled.getText() + "\""`labeled -> Objects.equals(text`labeled.getText()));" is 147.,33
TestFX_TestFX,org.testfx.matcher.control,LabeledMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(Labeled.class`descriptionText`labeled -> "\"" + labeled.getText() + "\""`labeled -> matcher.matches(labeled.getText()));" is 143.,46
TestFX_TestFX,org.testfx.matcher.control,MenuItemMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(MenuItem.class`descriptionText`menuItem -> "\"" + menuItem.getText() + "\""`menuItem -> Objects.equals(text`menuItem.getText()));" is 152.,33
TestFX_TestFX,org.testfx.matcher.control,MenuItemMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(MenuItem.class`descriptionText`menuItem -> "\"" + menuItem.getText() + "\""`menuItem -> matcher.matches(menuItem.getText()));" is 148.,46
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,hasListCell,Long Statement,The length of the statement "return typeSafeMatcher(ListView.class`descriptionText`ListViewMatchers::getItemsString`listView -> hasListCell(listView`value));" is 128.,41
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,hasItems,Long Statement,The length of the statement "return typeSafeMatcher(ListView.class`descriptionText`listView -> String.valueOf(listView.getItems().size())`listView -> listView.getItems().size() == amount);" is 159.,52
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,isEmpty,Long Statement,The length of the statement "return typeSafeMatcher(ListView.class`descriptionText`listView -> listView.getItems().size() == 0 ? "empty" : "contains " + listView.getItems().size() + " items"`listView -> listView.getItems().isEmpty());" is 205.,65
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,hasPlaceholder,Long Statement,The length of the statement "return typeSafeMatcher(ListView.class`descriptionText`listView -> getPlaceHolderDescription(listView.getPlaceholder()`false)`listView -> hasPlaceholder(listView`placeHolder));" is 175.,76
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,hasVisiblePlaceholder,Long Statement,The length of the statement "return typeSafeMatcher(ListView.class`descriptionText`listView -> getPlaceHolderDescription(listView.getPlaceholder()`true)`node -> hasVisiblePlaceholder(node`placeHolder));" is 173.,90
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,hasSelectedRow,Long Statement,The length of the statement "return typeSafeMatcher(ListView.class`descriptionText`listView -> "\"" + listView.getSelectionModel().getSelectedItems().toString() + "\""`listView -> hasSelectedItem(listView`value));" is 184.,106
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,hasPlaceholder,Long Statement,The length of the statement "if (Labeled.class.isAssignableFrom(placeHolder.getClass()) && Labeled.class.isAssignableFrom(listView.getPlaceholder().getClass())) {" is 133.,134
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchers,getPlaceHolderDescription,Long Statement,The length of the statement "return (describeVisibility ? (placeHolder.isVisible() ? "visible " : "invisible ") : "") + "labeled placeholder containing text: \"" + ((Labeled)placeHolder).getText()+ "\"";" is 174.,160
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(TextFlow.class`descriptionText`textFlow -> "TextFlow containing text: \"" + getText(textFlow) + "\""`node -> hasText(node`string));" is 154.,40
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,hasColoredText,Long Statement,The length of the statement "return typeSafeMatcher(TextFlow.class`descriptionText`textFlow -> "TextFlow with colored text: \"" + getColoredTextMarkup(textFlow`false) + "\""`node -> hasColoredText(node`coloredTextMarkup`false));" is 199.,55
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,hasExactlyColoredText,Long Statement,The length of the statement "return "impossible to exactly match TextFlow containing colored text: \"" + ((Text)child).getText() + "\" which has color: \"#"+ textColor+ "\".\n"+ "This is not a named color. The closest named color is: \""+ ColorUtils.getClosestNamedColor(Integer.parseInt(textColor`16))+ "\".\nSee: "+ "https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files"+ "/cssref.html#typecolor";" is 382.,89
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,hasExactlyColoredText,Long Statement,The length of the statement "return "exact color matching for subclasses of javafx.scene.paint.Paint besides " + "javafx.scene.paint.Color is not (yet) supported.";" is 135.,89
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,hasExactlyColoredText,Magic Number,The method contains a magic number: 2,89
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,hasExactlyColoredText,Magic Number,The method contains a magic number: 8,89
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,hasExactlyColoredText,Magic Number,The method contains a magic number: 16,89
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,getColoredTextMarkup,Complex Method,Cyclomatic complexity of the method is 8,162
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,getColoredTextMarkup,Magic Number,The method contains a magic number: 2,162
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,getColoredTextMarkup,Magic Number,The method contains a magic number: 8,162
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,getColoredTextMarkup,Magic Number,The method contains a magic number: 16,162
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,getColoredTextMarkup,Magic Number,The method contains a magic number: 2,162
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,getColoredTextMarkup,Magic Number,The method contains a magic number: 8,162
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchers,getColoredTextMarkup,Magic Number,The method contains a magic number: 16,162
TestFX_TestFX,org.testfx.matcher.control,TextInputControlMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(TextInputControl.class`descriptionText`textInputControl -> textInputControl.getClass().getSimpleName() + " with text: \"" + textInputControl.getText()+ "\""`textInputControl -> Objects.equals(text`textInputControl.getText()));" is 249.,33
TestFX_TestFX,org.testfx.matcher.control,TextInputControlMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(TextInputControl.class`descriptionText`textInputControl -> textInputControl.getClass().getSimpleName() + " with text: \"" + textInputControl.getText()+ "\""`textInputControl -> matcher.matches(textInputControl.getText()));" is 245.,46
TestFX_TestFX,org.testfx.matcher.control,TextMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(Text.class`descriptionText`textNode -> textNode.getClass().getSimpleName() + " with text: \"" + textNode.getText()+ "\""`textNode -> Objects.equals(text`textNode.getText()));" is 197.,35
TestFX_TestFX,org.testfx.matcher.control,TextMatchers,hasText,Long Statement,The length of the statement "return typeSafeMatcher(Text.class`descriptionText`text -> text.getClass().getSimpleName() + " with text: \"" + text.getText()+ "\""`textNode -> matcher.matches(textNode.getText()));" is 181.,47
TestFX_TestFX,org.testfx.matcher.control,TextMatchers,hasFont,Long Statement,The length of the statement "return typeSafeMatcher(Text.class`descriptionText`textNode -> textNode.getClass().getSimpleName() + " with font: " + toText(textNode.getFont())`textNode -> Objects.equals(font`textNode.getFont()));" is 197.,59
TestFX_TestFX,org.testfx.matcher.control,TextMatchers,hasFontSmoothingType,Long Statement,The length of the statement "return typeSafeMatcher(Text.class`descriptionText`textNode -> textNode.getClass().getSimpleName() + " with font smoothing type: \"" + textNode.getFontSmoothingType()+ "\""`textNode -> Objects.equals(smoothingType`textNode.getFontSmoothingType()));" is 247.,71
TestFX_TestFX,org.testfx.matcher.control,TextMatchers,hasStrikethrough,Long Statement,The length of the statement "return typeSafeMatcher(Text.class`descriptionText`textNode -> textNode.getClass().getSimpleName() + (textNode.isStrikethrough() ? " with " : " without ") + "strikethrough"`textNode -> textNode.isStrikethrough() == strikethrough);" is 229.,85
TestFX_TestFX,org.testfx.matcher.control,TextMatchers,isUnderlined,Long Statement,The length of the statement "return typeSafeMatcher(Text.class`descriptionText`textNode -> textNode.getClass().getSimpleName() + (textNode.isUnderline() ? " with " : " without ") + "underline"`textNode -> textNode.isUnderline() == underlined);" is 214.,99
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchers,hasTableCell,Long Statement,The length of the statement "return typeSafeMatcher(TableView.class`descriptionText`TableViewMatchers::toText`tableView -> hasTableCell(tableView`value));" is 125.,49
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchers,hasItems,Long Statement,The length of the statement "return typeSafeMatcher(TableView.class`descriptionText`tableView -> String.valueOf(tableView.getItems().size())`tableView -> tableView.getItems().size() == rows);" is 162.,69
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchers,hasNumRows,Long Statement,The length of the statement "return typeSafeMatcher(TableView.class`descriptionText`tableView -> "contained " + (tableView.getItems().isEmpty() ? "no" : String.valueOf(tableView.getItems().size()) + ' ' + (tableView.getItems().size() == 1 ? "row" : "rows"))`tableView -> tableView.getItems().size() == rows);" is 279.,82
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchers,containsRow,Long Statement,The length of the statement "return typeSafeMatcher(TableView.class`descriptionText`TableViewMatchers::toText`tableView -> containsRow(tableView`cells));" is 124.,135
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchers,toText,Long Statement,The length of the statement "return '[' + getRowValues(tableView`rowIndex).stream().map(observableValue -> observableValue.getValue() == null ? "null" : observableValue.getValue().toString()).collect(Collectors.joining("` ")) + ']';" is 203.,218
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchers,containsRow,Complex Method,Cyclomatic complexity of the method is 11,229
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchers,hasItemValue,Long Statement,The length of the statement "return Objects.equals(item`value) || Objects.equals(item.toString()`value) || (value.toString() != null && Objects.equals(item.toString()`value.toString()));" is 157.,269
TestFX_TestFX,org.testfx.matcher.control,MenuItemMatchersTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(barMenuItem`MenuItemMatchers.hasText("foo"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: MenuItem has text \"foo\"\n " + "but: was \"bar\"");" is 200.,54
TestFX_TestFX,org.testfx.matcher.control,MenuItemMatchersTest,hasText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(barMenuItem`MenuItemMatchers.hasText(endsWith("oo")))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: MenuItem has a string ending with \"oo\"\n " + "but: was \"bar\"");" is 224.,67
TestFX_TestFX,org.testfx.matcher.control,TextInputControlMatchersTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxTextField`TextInputControlMatchers.hasText("foobar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TextInputControl has text \"foobar\"\n " + "but: was TextField with text: \"quux\"");" is 246.,60
TestFX_TestFX,org.testfx.matcher.control,TextInputControlMatchersTest,hasText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxTextField`TextInputControlMatchers.hasText(endsWith("bar")))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TextInputControl has a string ending with \"bar\"\n " + "but: was TextField with text: \"quux\"");" is 266.,73
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,setup,Magic Number,The method contains a magic number: 51,53
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,setup,Magic Number,The method contains a magic number: 205,53
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,setup,Magic Number,The method contains a magic number: 50,53
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow`TextFlowMatchers.hasText("foobar baaz"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TextFlow has text \"foobar baaz\"\n " + "but: was TextFlow containing text: \"foobar quux\"");" is 247.,73
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,hasColoredText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow`TextFlowMatchers.hasColoredText("foobar <BLUE>quux</BLUE>"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TextFlow has colored text \"foobar <BLUE>quux</BLUE>\"\n " + "but: was TextFlow with colored text: \"foobar <RED>quux</RED>\"");" is 301.,86
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,hasColoredText_withBogusColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow`TextFlowMatchers.hasColoredText("foobar <LALALA>quux</LALALA>"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TextFlow has colored text \"foobar <LALALA>quux</LALALA>\"\n " + "but: was TextFlow with colored text: \"foobar <RED>quux</RED>\"");" is 309.,94
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,hasExactlyColoredText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(exactTextFlow`TextFlowMatchers.hasExactlyColoredText("<LIMEGREEN>exact</LIMEGREEN>"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TextFlow has exactly colored text \"<LIMEGREEN>exact</LIMEGREEN>\"\n " + "but: was impossible to exactly match TextFlow containing " + "colored text: \"exact\" which has color: \"#33cd32\".\n"+ "This is not a named color. The closest named color is: \"LIMEGREEN\".\n"+ "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 553.,102
TestFX_TestFX,org.testfx.matcher.control,TextFlowMatchersTest,hasExactlyColoredText_gradient,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow`TextFlowMatchers.hasExactlyColoredText("foobar <BLACK>quux</BLACK>"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TextFlow has exactly colored text \"foobar <BLACK>quux</BLACK>\"\n " + "but: was exact color matching for subclasses of javafx.scene.paint.Paint besides " + "javafx.scene.paint.Color is not (yet) supported.");" is 391.,114
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasListCell_with_null_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.hasListCell(null))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ListView has list cell \"null\"\n " + "but: was [alice` bob` carol` dave]");" is 224.,66
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasListCell_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.hasListCell("foobar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ListView has list cell \"foobar\"\n " + "but: was [alice` bob` carol` dave]");" is 230.,74
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasItems,Magic Number,The method contains a magic number: 4,82
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.hasItems(0))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ListView has exactly 0 items\n " + "but: was 4");" is 191.,87
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,isEmpty_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.isEmpty())).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ListView is empty (contains no items)\n " + "but: was contains 4 items");" is 213.,105
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasPlaceholder_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.hasPlaceholder(new Label("foobar")))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ListView has labeled placeholder containing text: \"foobar\"\n " + "but: was labeled placeholder containing text: \"Empty!\"");" is 293.,118
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasVisiblePlaceholder_fails_whenPlaceHolderHasWrongText,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.hasVisiblePlaceholder(new Label("foobar")))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ListView has visible labeled placeholder containing text: \"foobar\"\n" + " but: was visible labeled placeholder containing text: \"Empty!\"");" is 316.,131
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasVisiblePlaceholder_fails_whenPlaceHolderIsInvisible,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.hasVisiblePlaceholder(new Label("Empty!")))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ListView has visible labeled placeholder containing text: \"Empty!\"\n" + " but: was invisible labeled placeholder containing text: \"Empty!\"");" is 318.,139
TestFX_TestFX,org.testfx.matcher.control,ListViewMatchersTest,hasSelectedRow_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView`ListViewMatchers.hasSelectedRow("peter"))).isExactlyInstanceOf(AssertionError.class);" is 130.,158
TestFX_TestFX,org.testfx.matcher.control,ButtonMatchersTest,isCancelButton_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(button`ButtonMatchers.isCancelButton())).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Button is cancel button\n");" is 183.,68
TestFX_TestFX,org.testfx.matcher.control,ButtonMatchersTest,isDefaultButton_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(button`ButtonMatchers.isDefaultButton())).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: Button is default button\n");" is 185.,84
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,setup,Magic Number,The method contains a magic number: 16,54
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText`TextMatchers.hasText("foobar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Text has text \"foobar\"\n " + "but: was Text with text: \"quux\"");" is 212.,74
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText`TextMatchers.hasText(endsWith("bar")))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Text has a string ending with \"bar\"\n " + "but: was Text with text: \"quux\"");" is 232.,87
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasFont,Magic Number,The method contains a magic number: 16,95
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasFont_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText`TextMatchers.hasFont(Font.font(fontFamily`14)))).isExactlyInstanceOf(AssertionError.class).hasMessage(String.format("\nExpected: Text has font " + "\"%1$s\" with family (\"%1$s\") and size (%2$.1f)\n " + "but: was Text with font: "+ "\"%1$s\" with family (\"%1$s\") and size (%3$.1f)"`fontFamily`14.0`16.0));" is 353.,102
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasFont_fails,Magic Number,The method contains a magic number: 14,102
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasFont_fails,Magic Number,The method contains a magic number: 14.0,102
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasFont_fails,Magic Number,The method contains a magic number: 16.0,102
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasFontSmoothingType_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText`TextMatchers.hasFontSmoothingType(FontSmoothingType.LCD))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Text has font smoothing type: \"LCD\"\n " + "but: was Text with font smoothing type: \"GRAY\"");" is 268.,119
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,hasStrikethrough_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText`TextMatchers.hasStrikethrough(true))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Text has strikethrough\n " + "but: was Text without strikethrough");" is 217.,132
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,isUnderlined_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText`TextMatchers.isUnderlined(true))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Text is underlined\n " + "but: was Text without underline");" is 207.,145
TestFX_TestFX,org.testfx.matcher.control,TextMatchersTest,findFontFamily,Long Statement,The length of the statement "fontFamily=Font.getFamilies().stream().filter(fontFamily -> Font.getFontNames(fontFamily).size() == 1 && Font.getFontNames(fontFamily).get(0).equals(fontFamily)).findFirst().orElse(null);" is 187.,153
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,hasItems,Magic Number,The method contains a magic number: 4,59
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,hasItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox`ComboBoxMatchers.hasItems(3))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ComboBox has exactly 3 items\n " + "but: was 4");" is 191.,64
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,hasItems_fails,Magic Number,The method contains a magic number: 3,64
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,hasSelectedItem_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox`ComboBoxMatchers.hasSelectedItem("bob"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ComboBox has selection \"bob\"\n " + "but: was \"alice\"");" is 212.,86
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,containsItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox`ComboBoxMatchers.containsItems("alice"`"bob"`"eric"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ComboBox contains items [alice` bob` eric]\n" + " but: was [alice` bob` carol` dave]");" is 253.,104
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,containsExactlyItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox`ComboBoxMatchers.containsExactlyItems("alice"`"bob"`"carol"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ComboBox contains exactly items [alice` bob` carol]\n" + " but: was [alice` bob` carol` dave]");" is 270.,120
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,containsItemsInOrder_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox`ComboBoxMatchers.containsItemsInOrder("alice"`"carol"`"bob"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ComboBox contains items in order [alice` carol` bob]\n" + " but: was [alice` bob` carol` dave]");" is 271.,137
TestFX_TestFX,org.testfx.matcher.control,ComboBoxMatchersTest,containsExactlyItemsInOrder_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox`ComboBoxMatchers.containsExactlyItemsInOrder("bob"`"alice"`"dave"`"carol"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: ComboBox contains exactly items in order [bob` alice` dave` carol]\n" + " but: was [alice` bob` carol` dave]");" is 299.,151
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,setup,Magic Number,The method contains a magic number: 2,68
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,setup,Magic Number,The method contains a magic number: 30,68
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,setup,Magic Number,The method contains a magic number: 2,68
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,setup,Magic Number,The method contains a magic number: 31,68
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,hasTableCell_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.hasTableCell("foobar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has table cell \"foobar\"\n " + "but: was [[alice` 30` null]` [bob` 31` null]` [carol` null` null]` [dave` null` null]]");" is 287.,131
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,hasTableCell_fails_customCellValueFactory,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.hasTableCell("ALICE!!!"))).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("\nExpected: TableView has table cell \"ALICE!!!\"\n ");" is 212.,139
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,hasTableCell_with_toString,Magic Number,The method contains a magic number: 31,166
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,hasNumRows,Magic Number,The method contains a magic number: 4,189
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,hasNumRows_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.hasNumRows(0))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has 0 rows\n " + "but: was contained 4 rows");" is 202.,194
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 30,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 31,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 42,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 55,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 30,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 31,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 42,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 3,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 55,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 49,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 30,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 4,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex,Magic Number,The method contains a magic number: 49,202
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 30,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 31,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 30,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 31,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 3,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 3,234
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_no_such_row_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.containsRowAtIndex(0`"jerry"`29`null))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has row: [jerry` 29` null] at index 0\n " + "but: was [alice` 30` null] at index: 0");" is 266.,263
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_no_such_row_fails,Magic Number,The method contains a magic number: 29,263
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_out_of_bounds_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.containsRowAtIndex(4`"tom"`54))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has row: [tom` 54] at index 4\n " + "but: was given out-of-bounds row index: 4 (table only has 4 rows)");" is 278.,271
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_out_of_bounds_fails,Magic Number,The method contains a magic number: 4,271
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_out_of_bounds_fails,Magic Number,The method contains a magic number: 54,271
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtNegativeIndex_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.containsRowAtIndex(-1`"alice"`30))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has row: [alice` 30] at index -1\n " + "but: was given negative row index: -1");" is 256.,279
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtNegativeIndex_fails,Magic Number,The method contains a magic number: 30,279
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_wrong_types_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.containsRowAtIndex(1`63`"deedee"`null))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has row: [63` deedee` null] at index 1\n " + "but: was [bob` 31` null] at index: 1");" is 266.,287
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRowAtIndex_wrong_types_fails,Magic Number,The method contains a magic number: 63,287
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 2,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 30,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 2,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 31,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 2,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 42,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 2,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 55,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 30,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 31,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 42,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 55,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow,Magic Number,The method contains a magic number: 49,295
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 2,325
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 30,325
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 2,325
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 31,325
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 30,325
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 31,325
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_no_such_row_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.containsRow("jerry"`29`null))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has row: [jerry` 29` null]\n " + "but: was [[alice` 30` null]` [bob` 31` null]` [carol` null` null]` [dave` null` null]]");" is 294.,353
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 2,353
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 30,353
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 2,353
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 31,353
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 29,353
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_wrong_types_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView`TableViewMatchers.containsRow(63`"deedee"`null))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: TableView has row: [63` deedee` null]\n " + "but: was [[alice` 30` null]` [bob` 31` null]` [carol` null` null]` [dave` null` null]]");" is 296.,380
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 2,380
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 30,380
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 2,380
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 31,380
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 63,380
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_after_edited_cell,Magic Number,The method contains a magic number: 150,416
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_after_edited_cell,Magic Number,The method contains a magic number: 30,416
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_after_edited_cell,Magic Number,The method contains a magic number: 41,416
TestFX_TestFX,org.testfx.matcher.control,TableViewMatchersTest,containsRow_after_edited_cell,Magic Number,The method contains a magic number: 30,416
TestFX_TestFX,org.testfx.matcher.control,LabeledMatchersTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxButton`LabeledMatchers.hasText("foobar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Labeled has text \"foobar\"\n " + "but: was \"quux\"");" is 204.,54
TestFX_TestFX,org.testfx.matcher.control,LabeledMatchersTest,hasText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxButton`LabeledMatchers.hasText(endsWith("bar")))).isExactlyInstanceOf(AssertionError.class).hasMessage("\nExpected: Labeled has a string ending with \"bar\"\n " + "but: was \"quux\"");" is 224.,67
TestFX_TestFX,org.testfx.internal,JavaVersionAdapter,getScreenScaleX,Long Statement,The length of the statement "Rectangle primaryScreenRect=GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().getBounds();" is 141.,116
TestFX_TestFX,org.testfx.internal,JavaVersionAdapter,getScreenScaleX,Magic Number,The method contains a magic number: 0.001,116
TestFX_TestFX,org.testfx.internal,JavaVersionAdapter,getScreenScaleY,Long Statement,The length of the statement "Rectangle primaryScreenRect=GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().getBounds();" is 141.,141
TestFX_TestFX,org.testfx.internal,JavaVersionAdapter,getScreenScaleY,Magic Number,The method contains a magic number: 0.001,141
TestFX_TestFX,org.testfx.internal,JavaVersionAdapter,toVersion,Complex Conditional,The conditional expression c >= '0' && c <= '9' || c == '.' is complex.,190
TestFX_TestFX,org.testfx.util,PointQueryUtils,computePositionX,Magic Number,The method contains a magic number: 0.5,85
TestFX_TestFX,org.testfx.util,PointQueryUtils,computePositionX,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@559c81e1,85
TestFX_TestFX,org.testfx.util,PointQueryUtils,computePositionY,Magic Number,The method contains a magic number: 0.5,98
TestFX_TestFX,org.testfx.util,PointQueryUtils,computePositionY,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1101d51a,98
TestFX_TestFX,org.testfx.util,WaitForAsyncUtils,sleep,Empty catch clause,The method has an empty catch block.,375
TestFX_TestFX,org.testfx.util,WaitForAsyncUtils,getCheckException,Long Statement,The length of the statement "StackTraceElement stackTraceElement=new StackTraceElement(WaitForAsyncUtils.class.getName()`"---- Delayed Exception: (See Trace Below) ----"`WaitForAsyncUtils.class.getSimpleName() + ".java"`0);" is 194.,501
TestFX_TestFX,org.testfx.util,WaitForAsyncUtils,blockFxThreadWithSemaphore,Empty catch clause,The method has an empty catch block.,549
TestFX_TestFX,org.testfx.util,WaitForAsyncUtils,chronoUnit,Complex Method,Cyclomatic complexity of the method is 8,592
TestFX_TestFX,org.testfx.util,WaitForAsyncUtils,chronoUnit,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@68d7a9ee,592
TestFX_TestFX,org.testfx.util,BoundsQueryUtils,boundsOnScreen,Long Statement,The length of the statement "return translateBounds(boundsInScene`byOffset(sceneBoundsInWindow.getMinX() + windowBoundsOnScreen.getMinX()`sceneBoundsInWindow.getMinY() + windowBoundsOnScreen.getMinY()));" is 174.,117
TestFX_TestFX,org.testfx.util,BoundsQueryUtils,scale,Long Statement,The length of the statement "return new BoundingBox(bounds.getMinX() * scaleX`bounds.getMinY() * scaleY`bounds.getMinZ()`bounds.getWidth() * scaleX`bounds.getHeight() * scaleY`bounds.getDepth());" is 166.,145
TestFX_TestFX,org.testfx.util,BoundsQueryUtils,translateBounds,Long Statement,The length of the statement "return new BoundingBox(bounds.getMinX() + offset.getX()`bounds.getMinY() + offset.getY()`bounds.getWidth()`bounds.getHeight());" is 127.,186
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 255.0,179
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 255.0,179
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 255.0,179
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 0xFF0000,204
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 16,204
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 0xFF00,204
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 8,204
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 0xFF,204
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Long Statement,The length of the statement "return Color.valueOf(getClosestNamedColor((int)(color.getRed() * 255d)`(int)(color.getGreen() * 255d)`(int)(color.getBlue() * 255d)));" is 134.,221
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 255d,221
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 255d,221
TestFX_TestFX,org.testfx.util,ColorUtils,getClosestNamedColor,Magic Number,The method contains a magic number: 255d,221
TestFX_TestFX,org.testfx.util,ColorUtils,getNamedColor,Magic Number,The method contains a magic number: 0xFF0000,294
TestFX_TestFX,org.testfx.util,ColorUtils,getNamedColor,Magic Number,The method contains a magic number: 16,294
TestFX_TestFX,org.testfx.util,ColorUtils,getNamedColor,Magic Number,The method contains a magic number: 0xFF00,294
TestFX_TestFX,org.testfx.util,ColorUtils,getNamedColor,Magic Number,The method contains a magic number: 8,294
TestFX_TestFX,org.testfx.util,ColorUtils,getNamedColor,Magic Number,The method contains a magic number: 0xFF,294
TestFX_TestFX,org.testfx.util,ColorUtils,checkColorTriple,Magic Number,The method contains a magic number: 255,329
TestFX_TestFX,org.testfx.util,ColorUtils,checkColorTriple,Magic Number,The method contains a magic number: 255,329
TestFX_TestFX,org.testfx.util,ColorUtils,checkColorTriple,Magic Number,The method contains a magic number: 255,329
TestFX_TestFX,org.testfx.util,NodeQueryUtils,combine,Long Statement,The length of the statement "return functions.stream().map(f -> f.apply(input)).flatMap(Collection::stream).collect(Collectors.toCollection(LinkedHashSet::new));" is 132.,240
TestFX_TestFX,org.testfx.util,DebugUtils,compose,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@38c669fb,110
TestFX_TestFX,org.testfx.util,DebugUtils,insertContent,Long Statement,The length of the statement "return sb -> sb.append("\n").append(indent).append(indent).append(contentHeading).append("\n").append(indent).append(indent).append(indent).append(content);" is 156.,164
TestFX_TestFX,org.testfx.util,DebugUtils,informedErrorMessage,Long Parameter List,The method has 6 parameters. ,576
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,setupShape,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,setupShape,Magic Number,The method contains a magic number: 10,86
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,setupShape,Magic Number,The method contains a magic number: 10,86
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,setupRegion,Long Statement,The length of the statement "region.setBorder(new Border(new BorderStroke(Color.BLUE`BorderStrokeStyle.SOLID`null`new BorderWidths(0`0`0`BORDER_LEFT))));" is 124.,99
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_doubles,Magic Number,The method contains a magic number: 2,131
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_doubles,Magic Number,The method contains a magic number: 3,131
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_doubles,Magic Number,The method contains a magic number: 4,131
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_doubles,Magic Number,The method contains a magic number: 2,131
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_doubles,Magic Number,The method contains a magic number: 3,131
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_doubles,Magic Number,The method contains a magic number: 4,131
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_point,Magic Number,The method contains a magic number: 2,136
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_point,Magic Number,The method contains a magic number: 2,136
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_dimension,Magic Number,The method contains a magic number: 2,141
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_dimension,Magic Number,The method contains a magic number: 2,141
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_rectangle,Magic Number,The method contains a magic number: 2,146
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_rectangle,Magic Number,The method contains a magic number: 3,146
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_rectangle,Magic Number,The method contains a magic number: 4,146
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_rectangle,Magic Number,The method contains a magic number: 2,146
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_rectangle,Magic Number,The method contains a magic number: 3,146
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,bounds_rectangle,Magic Number,The method contains a magic number: 4,146
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_screen,Magic Number,The method contains a magic number: 2,209
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_screen,Magic Number,The method contains a magic number: 3,209
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_screen,Magic Number,The method contains a magic number: 4,209
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_screen,Magic Number,The method contains a magic number: 2,209
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_screen,Magic Number,The method contains a magic number: 3,209
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_screen,Magic Number,The method contains a magic number: 4,209
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_window,Magic Number,The method contains a magic number: 2,215
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_window,Magic Number,The method contains a magic number: 3,215
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_window,Magic Number,The method contains a magic number: 4,215
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_window,Magic Number,The method contains a magic number: 2,215
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_window,Magic Number,The method contains a magic number: 3,215
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_window,Magic Number,The method contains a magic number: 4,215
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_scene,Magic Number,The method contains a magic number: 2,221
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_scene,Magic Number,The method contains a magic number: 3,221
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_scene,Magic Number,The method contains a magic number: 4,221
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_scene,Magic Number,The method contains a magic number: 2,221
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_scene,Magic Number,The method contains a magic number: 3,221
TestFX_TestFX,org.testfx.util,BoundsQueryUtilsTest,boundsOnScreen_scene,Magic Number,The method contains a magic number: 4,221
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,async_callable,Magic Number,The method contains a magic number: 10,43
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,async_callable_with_sleep,Magic Number,The method contains a magic number: 50,54
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,async_callable_with_sleep,Magic Number,The method contains a magic number: 250,54
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,async_callable_with_exception,Magic Number,The method contains a magic number: 50,69
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,unhandledExceptionTest,Magic Number,The method contains a magic number: 20,138
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,unhandledExceptionTest,Magic Number,The method contains a magic number: 50,138
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future,Magic Number,The method contains a magic number: 50,177
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_with_sleep,Magic Number,The method contains a magic number: 250,187
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_with_sleep,Magic Number,The method contains a magic number: 50,187
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_cancelled,Empty catch clause,The method has an empty catch block.,201
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_cancelled,Empty catch clause,The method has an empty catch block.,201
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_cancelled,Long Statement,The length of the statement "assertThatThrownBy(() -> WaitForAsyncUtils.waitFor(50`MILLISECONDS`future)).isExactlyInstanceOf(CancellationException.class);" is 125.,201
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_cancelled,Magic Number,The method contains a magic number: 250,201
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_cancelled,Magic Number,The method contains a magic number: 50,201
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_future_cancelled,Magic Number,The method contains a magic number: 50,201
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanCallable,Magic Number,The method contains a magic number: 250,231
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanCallable_with_sleep,Magic Number,The method contains a magic number: 250,236
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanCallable_with_sleep,Magic Number,The method contains a magic number: 50,236
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanCallable_with_false,Long Statement,The length of the statement "assertThatThrownBy(() -> WaitForAsyncUtils.waitFor(250`MILLISECONDS`() -> false)).isExactlyInstanceOf(TimeoutException.class);" is 126.,244
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanCallable_with_false,Magic Number,The method contains a magic number: 250,244
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanCallable_with_exception,Magic Number,The method contains a magic number: 250,250
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanValue,Magic Number,The method contains a magic number: 50,257
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanValue,Magic Number,The method contains a magic number: 250,257
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanValue_with_false,Long Statement,The length of the statement "assertThatThrownBy(() -> WaitForAsyncUtils.waitFor(250`MILLISECONDS`property)).isExactlyInstanceOf(TimeoutException.class);" is 123.,273
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanValue_with_false,Magic Number,The method contains a magic number: 50,273
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitFor_with_booleanValue_with_false,Magic Number,The method contains a magic number: 250,273
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitForException,Magic Number,The method contains a magic number: 50,297
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitForThreads,Empty catch clause,The method has an empty catch block.,302
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitForThreads,Empty catch clause,The method has an empty catch block.,302
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsTest,waitForThreads,Magic Number,The method contains a magic number: 50,302
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 100,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 1000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 200,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 2000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 100,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 1000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 200,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 1000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 300,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 1000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 100,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 2000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 200,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 2000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 300,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 2000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 100,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 3000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 200,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 3000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 300,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPosition_with_positions,Magic Number,The method contains a magic number: 3000,33
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 100,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 1000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 200,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 2000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 100,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 1000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 0.5,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 200,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 1000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 300,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 1000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 0.5,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 100,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 2000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 0.5,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 0.5,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 200,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 2000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 0.5,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 300,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 2000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 100,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 3000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 0.5,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 200,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 3000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 300,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,atPositionFactors_with_positionFactors,Magic Number,The method contains a magic number: 3000,50
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,computePositionFactors_with_positions,Magic Number,The method contains a magic number: 0.5,67
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,computePositionFactors_with_positions,Magic Number,The method contains a magic number: 0.5,67
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,computePositionFactors_with_positions,Magic Number,The method contains a magic number: 0.5,67
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,computePositionFactors_with_positions,Magic Number,The method contains a magic number: 0.5,67
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,computePositionFactors_with_positions,Magic Number,The method contains a magic number: 0.5,67
TestFX_TestFX,org.testfx.util,PointQueryUtilsTest,computePositionFactors_with_positions,Magic Number,The method contains a magic number: 0.5,67
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showPressedMouseButtonsInErrorMessage,Magic Number,The method contains a magic number: 10,126
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showPressedMouseButtonsInErrorMessage,Magic Number,The method contains a magic number: 10,126
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showPressedKeysInErrorMessage,Magic Number,The method contains a magic number: 10,139
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showPressedKeysInErrorMessage,Magic Number,The method contains a magic number: 10,139
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showFiredEventsInErrorMessage,Magic Number,The method contains a magic number: 300,152
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showFiredEventsInErrorMessage,Magic Number,The method contains a magic number: 300,152
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showFiredEventsInErrorMessage,Magic Number,The method contains a magic number: 20,152
TestFX_TestFX,org.testfx.util,DebugUtilsTest,showFiredEventsInErrorMessage,Magic Number,The method contains a magic number: 20,152
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsFxTest,asyncFx_nested_callable_with_exception,Magic Number,The method contains a magic number: 50,54
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsFxTest,asyncFx_callable_with_exception,Magic Number,The method contains a magic number: 50,89
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsFxTest,waitForException,Magic Number,The method contains a magic number: 50,118
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsFxTest,waitForThreads,Empty catch clause,The method has an empty catch block.,123
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsFxTest,waitForThreads,Empty catch clause,The method has an empty catch block.,123
TestFX_TestFX,org.testfx.util,WaitForAsyncUtilsFxTest,waitForThreads,Magic Number,The method contains a magic number: 50,123
TestFX_TestFX,org.testfx.api,FxToolkit,registerPrimaryStage,Long Statement,The length of the statement "Stage primaryStage=waitFor(CONTEXT.getLaunchTimeoutInMillis()`MILLISECONDS`SERVICE.setupPrimaryStage(CONTEXT.getPrimaryStageFuture()`CONTEXT.getApplicationClass()`CONTEXT.getApplicationArgs()));" is 194.,100
TestFX_TestFX,org.testfx.api,FxRobot,closeCurrentWindow,Magic Number,The method contains a magic number: 100,480
TestFX_TestFX,org.testfx.api,FxRobot,queryVisibleNode,Long Statement,The length of the statement "throw new FxRobotException(queryDescription + " returned " + resultNodes.size()+ " nodes"+ "` but no nodes were visible.");" is 123.,946
TestFX_TestFX,org.testfx.robot.impl,WriteRobotImpl,write,Long Identifier,The length of the field SLEEP_AFTER_CHARACTER_IN_MILLIS is 31.,68
TestFX_TestFX,org.testfx.robot.impl,TypeRobotImpl,type,Long Identifier,The length of the field SLEEP_AFTER_KEY_CODE_IN_MILLIS is 30.,56
TestFX_TestFX,org.testfx.robot.impl,TypeRobotImpl,type,Long Identifier,The length of the field SLEEP_AFTER_KEY_CODE_IN_MILLIS is 30.,64
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImpl,doubleClickOn,Long Identifier,The length of the field SLEEP_AFTER_DOUBLE_CLICK_IN_MILLIS is 34.,58
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImpl,doubleClickOn,Long Identifier,The length of the field SLEEP_AFTER_DOUBLE_CLICK_IN_MILLIS is 34.,65
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImpl,moveMouseStepwiseBetween,Long Identifier,The length of the field SLEEP_AFTER_MOVEMENT_STEP_IN_MILLIS is 35.,90
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImpl,moveMouseStepwiseBetween,Long Statement,The length of the statement "path=Stream.concat(interpolatePointsBetween(sourcePoint`intermediate`horizontalStepsCount).stream()`interpolatePointsBetween(intermediate`targetPoint`verticalStepsCount).stream()).collect(Collectors.toList());" is 209.,90
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImpl,moveMouseStepwiseBetween,Long Statement,The length of the statement "path=Stream.concat(interpolatePointsBetween(sourcePoint`intermediate`verticalStepsCount).stream()`interpolatePointsBetween(intermediate`targetPoint`horizontalStepsCount).stream()).collect(Collectors.toList());" is 209.,90
TestFX_TestFX,org.testfx.robot.impl,BaseRobotImpl,BaseRobotImpl,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@964748b,37
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImpl,scroll,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@16d2d9b8,48
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImpl,scroll,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@431f9a55,76
TestFX_TestFX,org.testfx.robot.impl,DragRobotImplTest,dropTo_x_and_y_with_dragged_with_primary_button,Magic Number,The method contains a magic number: 10.0,112
TestFX_TestFX,org.testfx.robot.impl,DragRobotImplTest,dropTo_x_and_y_with_dragged_with_primary_button,Magic Number,The method contains a magic number: 20.0,112
TestFX_TestFX,org.testfx.robot.impl,DragRobotImplTest,dropTo_x_and_y_with_dragged_with_primary_button,Magic Number,The method contains a magic number: 10.0,112
TestFX_TestFX,org.testfx.robot.impl,DragRobotImplTest,dropTo_x_and_y_with_dragged_with_primary_button,Magic Number,The method contains a magic number: 20.0,112
TestFX_TestFX,org.testfx.robot.impl,TypeRobotImplTest,type_with_key_for_A_five_times,Magic Number,The method contains a magic number: 5,139
TestFX_TestFX,org.testfx.robot.impl,TypeRobotImplTest,type_with_key_for_A_five_times,Magic Number,The method contains a magic number: 5,139
TestFX_TestFX,org.testfx.robot.impl,TypeRobotImplTest,type_with_key_for_A_five_times,Magic Number,The method contains a magic number: 5,139
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImplTest,doubleClickOn_with_primary_mouse_button,Magic Number,The method contains a magic number: 2,102
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImplTest,doubleClickOn_with_primary_mouse_button,Magic Number,The method contains a magic number: 2,102
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImplTest,doubleClickOn_with_primary_and_secondary_mouse_buttons,Magic Number,The method contains a magic number: 2,115
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImplTest,doubleClickOn_with_primary_and_secondary_mouse_buttons,Magic Number,The method contains a magic number: 2,115
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImplTest,doubleClickOn_with_pointQuery_and_primary_button,Magic Number,The method contains a magic number: 2,132
TestFX_TestFX,org.testfx.robot.impl,ClickRobotImplTest,doubleClickOn_with_pointQuery_and_primary_button,Magic Number,The method contains a magic number: 2,132
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_DIRECT,Long Statement,The length of the statement "verify(mouseRobot`times(199)).moveNoWait(argThat(argument -> sourcePoint.getY() != argument.getY() || targetPoint.getX() != argument.getX()));" is 142.,58
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_DIRECT,Magic Number,The method contains a magic number: 300,58
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_DIRECT,Magic Number,The method contains a magic number: 100,58
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_DIRECT,Magic Number,The method contains a magic number: 199,58
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_DIRECT,Magic Number,The method contains a magic number: 2,58
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_HORIZONTAL_FIRST,Long Statement,The length of the statement "verify(mouseRobot`times(199)).moveNoWait(argThat(argument -> sourcePoint.getY() == argument.getY() || targetPoint.getX() == argument.getX()));" is 142.,78
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_HORIZONTAL_FIRST,Magic Number,The method contains a magic number: 300,78
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_HORIZONTAL_FIRST,Magic Number,The method contains a magic number: 100,78
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_HORIZONTAL_FIRST,Magic Number,The method contains a magic number: 199,78
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_HORIZONTAL_FIRST,Magic Number,The method contains a magic number: 2,78
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_VERTICAL_FIRST,Long Statement,The length of the statement "verify(mouseRobot`times(199)).moveNoWait(argThat(argument -> sourcePoint.getX() == argument.getX() || targetPoint.getY() == argument.getY()));" is 142.,98
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_VERTICAL_FIRST,Magic Number,The method contains a magic number: 300,98
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_VERTICAL_FIRST,Magic Number,The method contains a magic number: 100,98
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_VERTICAL_FIRST,Magic Number,The method contains a magic number: 199,98
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_with_motion_VERTICAL_FIRST,Magic Number,The method contains a magic number: 2,98
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_within_10_pixels,Magic Number,The method contains a magic number: 10,118
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_within_10_pixels,Magic Number,The method contains a magic number: 9.0,118
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_within_10_pixels,Magic Number,The method contains a magic number: 2,118
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_within_10_pixels,Magic Number,The method contains a magic number: 10,118
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_within_1000_pixels,Magic Number,The method contains a magic number: 1000,139
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_within_1000_pixels,Magic Number,The method contains a magic number: 199,139
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_a_point_within_1000_pixels,Magic Number,The method contains a magic number: 2,139
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_should_move_to_moved_target_point,Magic Number,The method contains a magic number: 10,158
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveTo_should_move_to_moved_target_point,Magic Number,The method contains a magic number: 20,158
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveBy_a_distance_of_10_pixels,Magic Number,The method contains a magic number: 10,178
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveBy_a_distance_of_10_pixels,Magic Number,The method contains a magic number: 10,178
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveBy_a_distance_of_10_pixels,Magic Number,The method contains a magic number: 9,178
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveBy_a_distance_of_1000_pixels,Magic Number,The method contains a magic number: 1000,193
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveBy_a_distance_of_1000_pixels,Magic Number,The method contains a magic number: 1000,193
TestFX_TestFX,org.testfx.robot.impl,MoveRobotImplTest,moveBy_a_distance_of_1000_pixels,Magic Number,The method contains a magic number: 199,193
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollPositive,Magic Number,The method contains a magic number: 5,48
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollPositive,Magic Number,The method contains a magic number: 5,48
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollNegative,Magic Number,The method contains a magic number: 5,56
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollNegative,Magic Number,The method contains a magic number: 5,56
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollUp,Magic Number,The method contains a magic number: 5,64
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollUp,Magic Number,The method contains a magic number: 5,64
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollVerticalUp,Magic Number,The method contains a magic number: 3,73
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollVerticalUp,Magic Number,The method contains a magic number: 3,73
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollVerticalDown,Magic Number,The method contains a magic number: 3,82
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollVerticalDown,Magic Number,The method contains a magic number: 3,82
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollHorizontalLeft,Magic Number,The method contains a magic number: 4,91
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollHorizontalLeft,Magic Number,The method contains a magic number: 4,91
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollHorizontalRight,Magic Number,The method contains a magic number: 6,100
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollHorizontalRight,Magic Number,The method contains a magic number: 6,100
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollDown,Magic Number,The method contains a magic number: 5,109
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollDown,Magic Number,The method contains a magic number: 5,109
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollLeft,Magic Number,The method contains a magic number: 5,118
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollLeft,Magic Number,The method contains a magic number: 5,118
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollRight,Magic Number,The method contains a magic number: 5,127
TestFX_TestFX,org.testfx.robot.impl,ScrollRobotImplTest,scrollRight,Magic Number,The method contains a magic number: 5,127
TestFX_TestFX,org.testfx.robot.impl,ShortcutKeyTest,setup,Complex Conditional,The conditional expression ((e.getCode() == KeyCode.CONTROL) || (e.getCode() == KeyCode.META) || (e.getCode() == KeyCode.COMMAND)) && e.isShortcutDown() is complex.,60
TestFX_TestFX,org.testfx.robot.impl,ShortcutKeyTest,setup,Complex Conditional,The conditional expression ((e.getCode() == KeyCode.CONTROL) || (e.getCode() == KeyCode.META) || (e.getCode() == KeyCode.COMMAND)) && !e.isShortcutDown() is complex.,60
TestFX_TestFX,org.testfx.robot.impl,ShortcutKeyTest,setup,Long Statement,The length of the statement "if (((e.getCode() == KeyCode.CONTROL) || (e.getCode() == KeyCode.META) || (e.getCode() == KeyCode.COMMAND)) && e.isShortcutDown()) {" is 132.,60
TestFX_TestFX,org.testfx.robot.impl,ShortcutKeyTest,setup,Long Statement,The length of the statement "if (((e.getCode() == KeyCode.CONTROL) || (e.getCode() == KeyCode.META) || (e.getCode() == KeyCode.COMMAND)) && !e.isShortcutDown()) {" is 133.,60
TestFX_TestFX,org.testfx.toolkit.impl,ApplicationLauncherImpl,initMonocleHeadless,Long Statement,The length of the statement "throw new IllegalStateException("monocle headless platform not found - did you forget to add " + "a dependency on monocle (https://github.com/TestFX/Monocle)?"`exception);" is 171.,33
TestFX_TestFX,org.testfx.toolkit.impl,ApplicationLauncherImpl,assignMonoclePlatform,Long Statement,The length of the statement "Object platformFactoryImpl=Class.forName("com.sun.glass.ui.monocle.MonoclePlatformFactory").getDeclaredConstructor().newInstance();" is 131.,52
TestFX_TestFX,org.testfx.toolkit.impl,ApplicationLauncherImpl,assignHeadlessPlatform,Long Statement,The length of the statement "Constructor<?> nativePlatformCtor=Class.forName("com.sun.glass.ui.monocle.headless.HeadlessPlatform").getDeclaredConstructor();" is 127.,59
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,setupSpec,Magic Number,The method contains a magic number: 10,55
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,setup,Magic Number,The method contains a magic number: 2000,66
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,cleanup,Magic Number,The method contains a magic number: 2000,75
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,should_construct_application,Long Statement,The length of the statement "Application application=waitFor(5`TimeUnit.SECONDS`toolkitService.setupApplication(() -> primaryStage`FixtureApplication.class));" is 129.,83
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,should_construct_application,Magic Number,The method contains a magic number: 5,83
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,should_construct_application,Magic Number,The method contains a magic number: 2,83
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,should_construct_scene,Magic Number,The method contains a magic number: 5,95
TestFX_TestFX,org.testfx.toolkit.impl,ToolkitServiceImplTest,should_construct_scene,Magic Number,The method contains a magic number: 2,95
TestFX_TestFX,org.testfx.assertions.impl,Adapter,getErrorMessage,Long Statement,The length of the statement "errorMessageBuilder.append(reasonDescription.toString()).append(invert ? " to be false" : "").append("\n but: ").append(getActual(matcher`actual));" is 147.,62
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(1`0`0)).isColor(Color.BLACK)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Color has color \"BLACK\" (#000000)\n " + "but: was \"RED\" (#ff0000)");" is 214.,35
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNotColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(1`0`0)).isNotColor(Color.RED)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Color has color \"RED\" (#ff0000) to be false\n " + "but: was \"RED\" (#ff0000)");" is 225.,48
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isColor_colorMatcher,Magic Number,The method contains a magic number: 0.9,56
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isColor_colorMatcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.5`0`0)).isColor(Color.RED`new PixelMatcherRgb(0.01`0))).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Color has color \"RED\" (#ff0000)\n ");" is 221.,61
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isColor_colorMatcher_fails,Magic Number,The method contains a magic number: 0.5,61
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isColor_colorMatcher_fails,Magic Number,The method contains a magic number: 0.01,61
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNotColor_colorMatcher,Magic Number,The method contains a magic number: 0.9,68
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNotColor_colorMatcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.9`0`0)).isNotColor(Color.RED`new PixelMatcherRgb(0.6`0))).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Color has color \"RED\" (#ff0000) to be false\n ");" is 235.,73
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNotColor_colorMatcher_fails,Magic Number,The method contains a magic number: 0.9,73
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNotColor_colorMatcher_fails,Magic Number,The method contains a magic number: 0.6,73
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNamedColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.ANTIQUEWHITE).isColor("AQUAMARINE")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Color is \"AQUAMARINE\"\n " + "but: was \"ANTIQUEWHITE\" (#faebd7)");" is 212.,85
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNotNamedColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.ANTIQUEWHITE).isNotColor("ANTIQUEWHITE")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Color is \"ANTIQUEWHITE\" to be false\n " + "but: was \"ANTIQUEWHITE\" (#faebd7)");" is 231.,98
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNamedColor_non_named_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.web("#f3b2aa")).isColor("BAGEL")).isExactlyInstanceOf(AssertionError.class).hasMessage("given color name: \"BAGEL\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 279.,106
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,isNotNamedColor_non_named_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.web("#f3b2aa")).isNotColor("BAGEL")).isExactlyInstanceOf(AssertionError.class).hasMessage("given color name: \"BAGEL\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 282.,114
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_string,Magic Number,The method contains a magic number: 0.8,122
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_string,Magic Number,The method contains a magic number: 0.2,122
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_string,Magic Number,The method contains a magic number: 0.1,122
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_string_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.6`0.1`0.1)).hasClosestNamedColor("GAINSBORO")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Color has closest named color \"GAINSBORO\" (#dcdcdc)\n " + "but: was \"#991a1a\" which has closest named color: \"BROWN\"");" is 286.,127
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.6,127
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.1,127
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.1,127
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_non_named_color_string_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.6`0.1`0.1)).hasClosestNamedColor("BETELGEUSE")).isExactlyInstanceOf(AssertionError.class).hasMessage("given color name: \"BETELGEUSE\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 306.,135
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_non_named_color_string_fails,Magic Number,The method contains a magic number: 0.6,135
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_non_named_color_string_fails,Magic Number,The method contains a magic number: 0.1,135
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_non_named_color_string_fails,Magic Number,The method contains a magic number: 0.1,135
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,hasClosestNamedColor_non_named_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.web("#dcdcdc")).hasClosestNamedColor(Color.web("#acb2f1"))).isExactlyInstanceOf(AssertionError.class).hasMessage("given color: \"#acb2f1\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 302.,143
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor,Magic Number,The method contains a magic number: 0.8,151
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor,Magic Number,The method contains a magic number: 0.2,151
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor,Magic Number,The method contains a magic number: 0.1,151
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_string_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.6`0.1`0.1)).doesNotHaveClosestNamedColor("BROWN")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Color has closest named color \"BROWN\" (#a52a2a) to be false\n " + "but: was \"#991a1a\" which has closest named color: \"BROWN\"");" is 298.,156
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.6,156
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.1,156
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_string_fails,Magic Number,The method contains a magic number: 0.1,156
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.color(0.6`0.1`0.1)).doesNotHaveClosestNamedColor(Color.BROWN)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Color has closest named color \"BROWN\" (#a52a2a) to be false\n " + "but: was \"#991a1a\" which has closest named color: \"BROWN\"");" is 302.,164
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_color_fails,Magic Number,The method contains a magic number: 0.6,164
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_color_fails,Magic Number,The method contains a magic number: 0.1,164
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_color_fails,Magic Number,The method contains a magic number: 0.1,164
TestFX_TestFX,org.testfx.assertions.api,ColorAssertTest,doesNotHaveClosestNamedColor_non_named_color_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(Color.web("#dcdcdc")).doesNotHaveClosestNamedColor(Color.web("#acb2f1"))).isExactlyInstanceOf(AssertionError.class).hasMessage("given color: \"#acb2f1\" is not a named color\n" + "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 310.,172
TestFX_TestFX,org.testfx.assertions.api,TextInputControlAssertTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxTextField).hasText("foobar")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextInputControl has text \"foobar\"\n " + "but: was TextField with text: \"quux\"");" is 219.,55
TestFX_TestFX,org.testfx.assertions.api,TextInputControlAssertTest,doesNotHaveText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarTextField).doesNotHaveText("foobar")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextInputControl has text \"foobar\" to be false\n " + "but: was TextField with text: \"foobar\"");" is 243.,68
TestFX_TestFX,org.testfx.assertions.api,TextInputControlAssertTest,hasText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxTextField).hasText(endsWith("bar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextInputControl has a string ending with \"bar\"\n " + "but: was TextField with text: \"quux\"");" is 239.,81
TestFX_TestFX,org.testfx.assertions.api,TextInputControlAssertTest,doesNotHaveText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarTextField).doesNotHaveText(endsWith("bar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextInputControl has a string ending with \"bar\" to be false\n " + "but: was TextField with text: \"foobar\"");" is 263.,94
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,hasAnyChild_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent).hasAnyChild()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Parent has at least one child\n " + "but: was empty (contained no children)");" is 201.,48
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,hasNoChildren_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(stackPane).hasNoChildren()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Parent has at least one child to be false\n " + "but: was [Button] (which has 1 child)");" is 217.,69
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,hasNumChildren,Magic Number,The method contains a magic number: 3,81
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,hasNumChildren_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(stackPane).hasExactlyNumChildren(3)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Parent has exactly 3 children\n " + "but: was [Label` Button] (which has 2 children)");" is 224.,91
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,hasNumChildren_fails,Magic Number,The method contains a magic number: 3,91
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,doesNotHaveNumChildren,Magic Number,The method contains a magic number: 3,103
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,doesNotHaveNumChildren_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(stackPane).doesNotHaveExactlyNumChildren(2)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Parent has exactly 2 children to be false\n " + "but: was [Label` Button] (which has 2 children)");" is 244.,113
TestFX_TestFX,org.testfx.assertions.api,ParentAssertTest,doesNotHaveNumChildren_fails,Magic Number,The method contains a magic number: 2,113
TestFX_TestFX,org.testfx.assertions.api,LabeledAssertTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxButton).hasText("foobar")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Labeled has text \"foobar\"\n " + "but: was \"quux\"");" is 186.,55
TestFX_TestFX,org.testfx.assertions.api,LabeledAssertTest,doesNotHaveText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarButton).doesNotHaveText("foobar")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Labeled has text \"foobar\" to be false\n " + "but: was \"foobar\"");" is 210.,68
TestFX_TestFX,org.testfx.assertions.api,LabeledAssertTest,hasText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxButton).hasText(endsWith("bar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Labeled has a string ending with \"bar\"\n " + "but: was \"quux\"");" is 206.,81
TestFX_TestFX,org.testfx.assertions.api,LabeledAssertTest,doesNotHaveText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarButton).doesNotHaveText(startsWith("foo"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Labeled has a string starting with \"foo\" to be false\n " + "but: was \"foobar\"");" is 234.,94
TestFX_TestFX,org.testfx.assertions.api,ButtonAssertTest,isCancelButton_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(button).isCancelButton()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Button is cancel button");" is 164.,60
TestFX_TestFX,org.testfx.assertions.api,ButtonAssertTest,isNotCancelButton_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(button).isNotCancelButton()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Button is cancel button to be false");" is 179.,72
TestFX_TestFX,org.testfx.assertions.api,ButtonAssertTest,isDefaultButton_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(button).isDefaultButton()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Button is default button\n");" is 168.,92
TestFX_TestFX,org.testfx.assertions.api,ButtonAssertTest,isNotDefaultButton_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(button).isNotDefaultButton()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Button is default button to be false\n");" is 183.,104
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,setup,Magic Number,The method contains a magic number: 51,42
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,setup,Magic Number,The method contains a magic number: 205,42
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,setup,Magic Number,The method contains a magic number: 50,42
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow).hasText("foobar baaz")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextFlow has text \"foobar baaz\"\n " + "but: was TextFlow containing text: \"foobar quux\"");" is 228.,62
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,doesNotHaveText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow).doesNotHaveText("foobar quux")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextFlow has text \"foobar quux\" to be false\n " + "but: was TextFlow containing text: \"foobar quux\"");" is 248.,75
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,hasColoredText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow).hasColoredText("foobar <BLUE>quux</BLUE>")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextFlow has colored text \"foobar <BLUE>quux</BLUE>\"\n " + "but: was TextFlow with colored text: \"foobar <RED>quux</RED>\"");" is 282.,88
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,hasColoredText_withBogusColor_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow).hasColoredText("foobar <LALALA>quux</LALALA>")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextFlow has colored text \"foobar <LALALA>quux</LALALA>\"\n " + "but: was TextFlow with colored text: \"foobar <RED>quux</RED>\"");" is 290.,96
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,doesNotHaveColoredText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textFlow).doesNotHaveColoredText("foobar <RED>quux</RED>")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextFlow has colored text \"foobar <RED>quux</RED>\" to be false\n " + "but: was TextFlow with colored text: \"foobar <RED>quux</RED>\"");" is 298.,109
TestFX_TestFX,org.testfx.assertions.api,TextFlowAssertTest,hasExactlyColoredText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(exactTextFlow).hasExactlyColoredText("<LIMEGREEN>exact</LIMEGREEN>")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TextFlow has exactly colored text \"<LIMEGREEN>exact</LIMEGREEN>\"\n " + "but: was impossible to exactly match TextFlow containing " + "colored text: \"exact\" which has color: \"#33cd32\".\n"+ "This is not a named color. The closest named color is: \"LIMEGREEN\".\n"+ "See: https://docs.oracle.com/javase/9/docs/api/javafx/scene/doc-files/cssref.html#typecolor");" is 534.,117
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,hasDimension,Magic Number,The method contains a magic number: 10,29
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,hasDimension,Magic Number,The method contains a magic number: 20,29
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,hasDimension,Magic Number,The method contains a magic number: 10,29
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,hasDimension,Magic Number,The method contains a magic number: 20,29
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,hasDimension_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(new Dimension2D(10`20)).hasDimension(0`0)).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Dimension2D has dimension (0.0` 0.0)\n");" is 196.,34
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,hasDimension_fails,Magic Number,The method contains a magic number: 10,34
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,hasDimension_fails,Magic Number,The method contains a magic number: 20,34
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension,Magic Number,The method contains a magic number: 10,41
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension,Magic Number,The method contains a magic number: 20,41
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension,Magic Number,The method contains a magic number: 5,41
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension,Magic Number,The method contains a magic number: 10,41
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_width,Magic Number,The method contains a magic number: 10,46
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_width,Magic Number,The method contains a magic number: 20,46
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_width,Magic Number,The method contains a magic number: 10,46
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_width,Magic Number,The method contains a magic number: 21,46
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_height,Magic Number,The method contains a magic number: 10,51
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_height,Magic Number,The method contains a magic number: 20,51
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_height,Magic Number,The method contains a magic number: 9,51
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_same_height,Magic Number,The method contains a magic number: 20,51
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(new Dimension2D(10`20)).doesNotHaveDimension(10`20)).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Dimension2D has dimension (10.0` 20.0) to be false\n");" is 220.,56
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_fails,Magic Number,The method contains a magic number: 10,56
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_fails,Magic Number,The method contains a magic number: 20,56
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_fails,Magic Number,The method contains a magic number: 10,56
TestFX_TestFX,org.testfx.assertions.api,Dimension2DAssertTest,doesNotHaveDimension_fails,Magic Number,The method contains a magic number: 20,56
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,hasExactlyNumItems,Magic Number,The method contains a magic number: 4,53
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,hasExactlyNumItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).hasExactlyNumItems(3)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox has exactly 3 items\n " + "but: was 4");" is 182.,58
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,hasExactlyNumItems_fails,Magic Number,The method contains a magic number: 3,58
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,doesNotHaveExactlyNumItems,Magic Number,The method contains a magic number: 5,66
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,doesNotHaveExactlyNumItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).doesNotHaveExactlyNumItems(4)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox has exactly 4 items to be false\n " + "but: was 4");" is 202.,71
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,doesNotHaveExactlyNumItems_fails,Magic Number,The method contains a magic number: 4,71
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,hasSelectedItem_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).hasSelectedItem("bob")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox has selection \"bob\"\n " + "but: was \"alice\"");" is 193.,93
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,doesNotHaveSelectedItem_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).doesNotHaveSelectedItem("alice")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox has selection \"alice\" to be false\n " + "but: was \"alice\"");" is 217.,106
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,containsItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).containsItems("alice"`"bob"`"eric")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox contains items [alice` bob` eric]\n" + " but: was [alice` bob` carol` dave]");" is 234.,124
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,containsExactlyItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).containsExactlyItems("alice"`"bob"`"carol")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox contains exactly items [alice` bob` carol]\n" + " but: was [alice` bob` carol` dave]");" is 251.,140
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,containsItemsInOrder_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).containsItemsInOrder("alice"`"carol"`"bob")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox contains items in order [alice` carol` bob]\n" + " but: was [alice` bob` carol` dave]");" is 252.,157
TestFX_TestFX,org.testfx.assertions.api,ComboBoxAssertTest,containsExactlyItemsInOrder_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(comboBox).containsExactlyItemsInOrder("bob"`"alice"`"dave"`"carol")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ComboBox contains exactly items in order [bob` alice` dave` carol]\n" + " but: was [alice` bob` carol` dave]");" is 280.,171
TestFX_TestFX,org.testfx.assertions.api,WindowAssertTest,isShowing_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(window).isShowing()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Window is showing");" is 153.,57
TestFX_TestFX,org.testfx.assertions.api,WindowAssertTest,isNotShowing_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(window).isNotShowing()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Window is not showing");" is 160.,77
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,hasListCell_with_null_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).hasListCell(null)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has list cell \"null\"\n " + "but: was [alice` bob` carol` dave]");" is 205.,60
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,hasListCell_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).hasListCell("foobar")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has list cell \"foobar\"\n " + "but: was [alice` bob` carol` dave]");" is 211.,68
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,doesNotHaveListCell_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).doesNotHaveListCell("alice")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has list cell \"alice\" to be false\n " + "but: was [alice` bob` carol` dave]");" is 229.,81
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,hasExactlyNumItems,Magic Number,The method contains a magic number: 4,89
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,hasExactlyNumItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).hasExactlyNumItems(1)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has exactly 1 item\n " + "but: was 4");" is 181.,94
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,doesNotHaveExactlyNumItems,Magic Number,The method contains a magic number: 3,102
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,doesNotHaveExactlyNumItems_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).doesNotHaveExactlyNumItems(4)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has exactly 4 items to be false\n " + "but: was 4");" is 202.,107
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,doesNotHaveExactlyNumItems_fails,Magic Number,The method contains a magic number: 4,107
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,isEmpty_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).isEmpty()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView is empty (contains no items)\n " + "but: was contains 4 items");" is 194.,125
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,isNotEmpty_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).isNotEmpty()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView is empty (contains no items) to be false\n " + "but: was empty");" is 198.,142
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,hasPlaceholder_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).hasPlaceholder(new Label("foobar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has labeled placeholder containing text: \"foobar\"\n " + "but: was labeled placeholder containing text: \"Empty!\"");" is 274.,160
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,doesNotHavePlaceholder_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).doesNotHavePlaceholder(new Label("Empty!"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has labeled placeholder containing text: \"Empty!\" to be false\n" + " but: was labeled placeholder containing text: \"Empty!\"");" is 294.,173
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,hasVisiblePlaceholder_fails_whenPlaceHolderHasWrongText,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).hasVisiblePlaceholder(new Label("foobar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has visible labeled placeholder containing text: \"foobar\"\n " + "but: was visible labeled placeholder containing text: \"Empty!\"");" is 297.,186
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,hasVisiblePlaceholder_fails_whenPlaceHolderIsInvisible,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).hasVisiblePlaceholder(new Label("Empty!"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has visible labeled placeholder containing text: \"Empty!\"\n " + "but: was invisible labeled placeholder containing text: \"Empty!\"");" is 299.,194
TestFX_TestFX,org.testfx.assertions.api,ListViewAssertTest,doesNotHaveVisiblePlaceholder_fails_same_text,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(listView).doesNotHaveVisiblePlaceholder(new Label("Empty!"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: ListView has visible labeled placeholder containing text: \"Empty!\" to be" + " false\n but: was visible labeled placeholder containing text: \"Empty!\"");" is 317.,227
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,setup,Magic Number,The method contains a magic number: 2,54
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,setup,Magic Number,The method contains a magic number: 30,54
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,setup,Magic Number,The method contains a magic number: 2,54
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,setup,Magic Number,The method contains a magic number: 31,54
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,hasTableCell_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).hasTableCell("foobar")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has table cell \"foobar\"\n " + "but: was [[alice` 30]` [bob` 31]` [carol` null]` [dave` null]]");" is 243.,111
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,hasTableCell_fails_customCellValueFactory,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).hasTableCell("ALICE!!!")).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: TableView has table cell \"ALICE!!!\"\n ");" is 192.,119
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,hasTableCell_with_toString,Magic Number,The method contains a magic number: 31,152
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,hasTableCell_with_null_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).hasTableCell(null)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has table cell \"null\"\n " + "but: was [[alice` 30]` [bob` 31]` [carol` null]` [dave` null]]");" is 237.,158
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotHaveTableCell_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).doesNotHaveTableCell("alice")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has table cell \"alice\" to be false\n " + "but: was [[alice` 30]` [bob` 31]` [carol` null]` [dave` null]]");" is 261.,189
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotHaveTableCell_with_toString,Magic Number,The method contains a magic number: 44,197
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,hasExactlyNumRows,Magic Number,The method contains a magic number: 4,203
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,hasExactlyNumRows_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).hasExactlyNumRows(0)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has 0 rows\n " + "but: was contained 4 rows");" is 189.,208
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotHaveExactlyNumRows,Magic Number,The method contains a magic number: 5,216
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotHaveExactlyNumRows_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).doesNotHaveExactlyNumRows(4)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has 4 rows to be false\n " + "but: was contained 4 rows");" is 209.,221
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotHaveExactlyNumRows_fails,Magic Number,The method contains a magic number: 4,221
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 30,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 31,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 42,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 55,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 30,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 31,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 2,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 42,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 3,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex,Magic Number,The method contains a magic number: 55,229
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 30,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 31,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 30,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 31,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 3,258
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_no_such_row_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).containsRowAtIndex(0`"jerry"`29)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has row: [jerry` 29] at index 0\n " + "but: was [alice` 30] at index: 0");" is 229.,285
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_no_such_row_fails,Magic Number,The method contains a magic number: 29,285
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_out_of_bounds_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).containsRowAtIndex(4`"tom"`54)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has row: [tom` 54] at index 4\n " + "but: was given out-of-bounds row index: 4 (table only has 4 rows)");" is 258.,293
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_out_of_bounds_fails,Magic Number,The method contains a magic number: 4,293
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_out_of_bounds_fails,Magic Number,The method contains a magic number: 54,293
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtNegativeIndex_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).containsRowAtIndex(-1`"alice"`30)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has row: [alice` 30] at index -1\n " + "but: was given negative row index: -1");" is 236.,301
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtNegativeIndex_fails,Magic Number,The method contains a magic number: 30,301
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_wrong_types_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).containsRowAtIndex(1`63`"deedee")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has row: [63` deedee] at index 1\n " + "but: was [bob` 31] at index: 1");" is 229.,309
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRowAtIndex_wrong_types_fails,Magic Number,The method contains a magic number: 63,309
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 2,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 30,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 2,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 31,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 2,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 42,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 2,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 55,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 49,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 30,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 4,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex,Magic Number,The method contains a magic number: 49,317
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 30,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 31,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 30,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 31,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_with_empty_cells,Magic Number,The method contains a magic number: 2,345
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).doesNotContainRowAtIndex(0`"alice"`30)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has row: [alice` 30] at index 0 to be false\n " + "but: was [alice` 30] at index: 0");" is 247.,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 2,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 30,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 2,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 31,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 2,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 42,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 2,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 55,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRowAtIndex_fails,Magic Number,The method contains a magic number: 30,373
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 2,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 30,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 2,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 31,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 2,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 42,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 2,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 55,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 30,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 31,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 42,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow,Magic Number,The method contains a magic number: 55,402
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 2,431
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 30,431
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 2,431
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 31,431
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 30,431
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_with_empty_cells,Magic Number,The method contains a magic number: 31,431
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_no_such_row_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).containsRow("jerry"`29)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has row: [jerry` 29]\n " + "but: was [[alice` 30]` [bob` 31]` [carol` null]` [dave` null]]");" is 239.,458
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 2,458
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 30,458
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 2,458
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 31,458
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_no_such_row_fails,Magic Number,The method contains a magic number: 29,458
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_wrong_types_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(tableView).containsRow(63`"deedee")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: TableView has row: [63` deedee]\n " + "but: was [[alice` 30]` [bob` 31]` [carol` null]` [dave` null]]");" is 241.,485
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 2,485
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 30,485
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 2,485
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 31,485
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,containsRow_wrong_types_fails,Magic Number,The method contains a magic number: 63,485
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 2,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 30,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 2,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 31,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 2,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 42,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 2,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 55,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 33,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 31,512
TestFX_TestFX,org.testfx.assertions.api,TableViewAssertTest,doesNotContainRow,Magic Number,The method contains a magic number: 42,512
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,setup,Magic Number,The method contains a magic number: 16,49
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText).hasText("foobar")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text has text \"foobar\"\n " + "but: was Text with text: \"quux\"");" is 197.,69
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,doesNotHaveText_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText).doesNotHaveText("quux")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text has text \"quux\" to be false\n " + "but: was Text with text: \"quux\"");" is 213.,82
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText).hasText(endsWith("bar"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text has a string ending with \"bar\"\n " + "but: was Text with text: \"quux\"");" is 217.,95
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,doesNotHaveText_matcher_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText).doesNotHaveText(startsWith("foo"))).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text has a string starting with \"foo\" to be false\n " + "but: was Text with text: \"foobar\"");" is 245.,108
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasFont,Magic Number,The method contains a magic number: 16,116
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasFont_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText).hasFont(Font.font(fontFamily`14))).isExactlyInstanceOf(AssertionError.class).hasMessage(String.format("Expected: Text has font " + "\"%1$s\" with family (\"%1$s\") and size (%2$.1f)\n " + "but: was Text with font: "+ "\"%1$s\" with family (\"%1$s\") and size (%3$.1f)"`fontFamily`14.0`16.0));" is 338.,123
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasFont_fails,Magic Number,The method contains a magic number: 14,123
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasFont_fails,Magic Number,The method contains a magic number: 14.0,123
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasFont_fails,Magic Number,The method contains a magic number: 16.0,123
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,doesNotHaveFont,Magic Number,The method contains a magic number: 14,134
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,doesNotHaveFont_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText).doesNotHaveFont(Font.getDefault())).isExactlyInstanceOf(AssertionError.class).hasMessage(String.format("Expected: Text has font " + "\"%1$s\" with family (\"%2$s\") and size (%3$.1f) to be false\n " + "but: was Text with font: "+ "\"%1$s\" with family (\"%2$s\") and size (%3$.1f)"`Font.getDefault().getName()`Font.getDefault().getFamily()`Font.getDefault().getSize()));" is 418.,139
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasFontSmoothingType_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText).hasFontSmoothingType(FontSmoothingType.LCD)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text has font smoothing type: \"LCD\"\n " + "but: was Text with font smoothing type: \"GRAY\"");" is 253.,156
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,doesNotHaveFontSmoothingType_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText).doesNotHaveFontSmoothingType(FontSmoothingType.GRAY)).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text has font smoothing type: \"GRAY\" to be false\n " + "but: was Text with font smoothing type: \"GRAY\"");" is 275.,170
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,hasStrikethrough_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText).hasStrikethrough()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text has strikethrough\n " + "but: was Text without strikethrough");" is 198.,183
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,doesNotHaveStrikethrough_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText).doesNotHaveStrikethrough()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text does not have strikethrough\n " + "but: was Text with strikethrough");" is 215.,196
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,isUnderlined_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(foobarText).isUnderlined()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text is underlined\n " + "but: was Text without underline");" is 188.,209
TestFX_TestFX,org.testfx.assertions.api,TextAssertTest,isNotUnderlined_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(quuxText).isNotUnderlined()).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Text is not underlined\n " + "but: was Text with underline");" is 190.,222
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,doesNotHaveText_with_button_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(button).doesNotHaveText("foo")).isExactlyInstanceOf(AssertionError.class).hasMessage("Expected: Labeled has text \"foo\" to be false\n " + "but: was \"foo\"");" is 195.,69
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,isFocused_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textField).isFocused()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Node has focus\n");" is 155.,97
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,isNotFocused_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(textField).isNotFocused()).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Node does not have focus\n");" is 168.,132
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,hasText_filters_nodes,Magic Number,The method contains a magic number: 3,150
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,hasText_filters_nodes,Magic Number,The method contains a magic number: 2,150
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,hasChild_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent).hasChild(".button")).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Node has child \".button\"\n");" is 172.,179
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,doesNotHaveChild_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent).doesNotHaveChild(".button")).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Node has child \".button\" to be false\n");" is 192.,200
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,hasChildren,Magic Number,The method contains a magic number: 2,212
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,hasChildren_fails,Long Statement,The length of the statement "assertThatThrownBy(() -> assertThat(parent).hasExactlyChildren(2`".button")).isExactlyInstanceOf(AssertionError.class).hasMessageStartingWith("Expected: Node has 2 children \".button\"\n");" is 189.,222
TestFX_TestFX,org.testfx.assertions.api,NodeAssertTest,hasChildren_fails,Magic Number,The method contains a magic number: 2,222
TestFX_TestFX,org.testfx.cases,TestCaseBase,baseSetupSpec,Magic Number,The method contains a magic number: 10,39
TestFX_TestFX,org.testfx.cases,TestCaseBase,baseSetupSpec,Magic Number,The method contains a magic number: 10,39
TestFX_TestFX,org.testfx.cases,TestCaseBase,baseSetupSpec,Magic Number,The method contains a magic number: 300,39
TestFX_TestFX,org.testfx.cases,TestCaseBase,baseSetupSpec,Magic Number,The method contains a magic number: 100,39
TestFX_TestFX,org.testfx.cases.integration,MenuBarTest,setup,Magic Number,The method contains a magic number: 300,65
TestFX_TestFX,org.testfx.cases.integration,MenuBarTest,setup,Magic Number,The method contains a magic number: 400,65
TestFX_TestFX,org.testfx.cases.integration,MenuBarTest,should_move_vertically_first,Magic Number,The method contains a magic number: 3,98
TestFX_TestFX,org.testfx.cases.integration,MenuBarTest,should_move_vertically_first,Magic Number,The method contains a magic number: 3,98
TestFX_TestFX,org.testfx.cases.integration,MenuBarTest,isHiDpiAwt,Long Statement,The length of the statement "return System.getProperty("glass.win.uiScale"`"100%").equals("200%") && System.getProperty("testfx.robot"`"awt").toLowerCase(Locale.US).equals("awt");" is 150.,127
TestFX_TestFX,org.testfx.cases.integration,SimpleLabelTest,setup,Magic Number,The method contains a magic number: 300,35
TestFX_TestFX,org.testfx.cases.integration,SimpleLabelTest,setup,Magic Number,The method contains a magic number: 100,35
TestFX_TestFX,org.testfx.cases.integration,SimpleLabelTest,should_move_to_label,Magic Number,The method contains a magic number: 1000,44
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 95,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 95,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 95,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 95,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,setupHDPI,Magic Number,The method contains a magic number: 5,86
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,mouseLocationAdapterTest,Magic Number,The method contains a magic number: 100,149
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,mouseLocationAdapterTest,Magic Number,The method contains a magic number: 100,149
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Long Statement,The length of the statement "log("TopLeft Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(topLeftEvent).getInvocations().size());" is 128.,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Long Statement,The length of the statement "log("TopRight Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(topRightEvent).getInvocations().size());" is 130.,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Long Statement,The length of the statement "log("BottomLeft Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(bottomLeftEvent).getInvocations().size());" is 134.,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Long Statement,The length of the statement "log("BottomRight Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(bottomRightEvent).getInvocations().size());" is 136.,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 1000,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 100.0,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 100.0,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,nullOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,184
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Long Statement,The length of the statement "log("TopLeft Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(topLeftEvent).getInvocations().size());" is 128.,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Long Statement,The length of the statement "log("TopRight Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(topRightEvent).getInvocations().size());" is 130.,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Long Statement,The length of the statement "log("BottomLeft Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(bottomLeftEvent).getInvocations().size());" is 134.,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Long Statement,The length of the statement "log("BottomRight Click " + adapter.getClass().getSimpleName() + ": "+ Mockito.mockingDetails(bottomRightEvent).getInvocations().size());" is 136.,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 1000,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 100.0,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 100.0,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,defaultOffsetAdapterTest,Magic Number,The method contains a magic number: 2.5,304
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 1000,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 100.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 100.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 2.5,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 16.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,capturePixelColorAdapterTest,Magic Number,The method contains a magic number: 255.0,409
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Long Statement,The length of the statement "Image image=adapter.getCaptureRegion(new Rectangle2D(bounds.getMinX()`bounds.getMinY()`bounds.getWidth()`bounds.getHeight()));" is 126.,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Long Statement,The length of the statement "assertTrue("Width of image incorrect. Is=" + image.getWidth() + " expected "+ bounds.getWidth()`Math.abs(image.getWidth() - bounds.getWidth()) < 1.0);" is 150.,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Long Statement,The length of the statement "assertTrue("Height of image incorrect. Is=" + image.getHeight() + " expected "+ bounds.getHeight()`Math.abs(image.getHeight() - bounds.getHeight()) < 1.0);" is 155.,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 1000,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 100.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 100.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 2,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 16.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,captureRegionAdapterTest,Magic Number,The method contains a magic number: 255.0,469
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Long Statement,The length of the statement "log(awtAdapter.getClass().getSimpleName() + ": Click offset window bounds for " + adapter.getClass().getSimpleName()+ " is "+ bounds);" is 134.,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Long Statement,The length of the statement "assumeThat("If the bounds have an offset at the top left edge` this test provides no additional information"`bounds.getMinY()`equalTo(0.0));" is 140.,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Long Statement,The length of the statement "log(awtAdapter.getClass().getSimpleName() + ": ClickOffset landed on " + adapter.getClass().getSimpleName()+ ": "+ Mockito.mockingDetails(rootEvent).printInvocations());" is 169.,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Long Statement,The length of the statement "assertTrue(awtAdapter.getClass().getSimpleName() + ": Expected click to be at x 50.0` but was at " + mEv.getX()`Math.abs(mEv.getX() - 50.0) < 1.0);" is 147.,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Long Statement,The length of the statement "assertTrue(awtAdapter.getClass().getSimpleName() + ": Expected click to be at y 50.0` but was at " + mEv.getY()`Math.abs(mEv.getY() - 50.0) < 1.0);" is 147.,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Magic Number,The method contains a magic number: 400,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Magic Number,The method contains a magic number: 400,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Magic Number,The method contains a magic number: 1000,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Magic Number,The method contains a magic number: 50,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Magic Number,The method contains a magic number: 50,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Magic Number,The method contains a magic number: 50.0,545
TestFX_TestFX,org.testfx.cases.integration,HDPIContractTest,clickOffsetAdapterTest,Magic Number,The method contains a magic number: 50.0,545
TestFX_TestFX,org.testfx.cases.integration,DialogTest,setup,Magic Number,The method contains a magic number: 500,39
TestFX_TestFX,org.testfx.cases.integration,DialogTest,setup,Magic Number,The method contains a magic number: 500,39
TestFX_TestFX,org.testfx.cases.integration,DragAndDropTest,should_drag_and_drop_from_right_to_left,Magic Number,The method contains a magic number: 5000,111
TestFX_TestFX,org.testfx.cases.integration,DragAndDropTest,should_drag_and_drop_from_right_to_left,Magic Number,The method contains a magic number: 5000,111
TestFX_TestFX,org.testfx.cases.integration,DragAndDropTest,should_drag_and_drop_from_left_to_left,Magic Number,The method contains a magic number: 5000,124
TestFX_TestFX,org.testfx.cases.integration,DragAndDropTest,should_drag_and_drop_from_left_to_left,Magic Number,The method contains a magic number: 5000,124
TestFX_TestFX,org.testfx.cases.acceptance,PrimaryStageFixtureDemo,test,Magic Number,The method contains a magic number: 500,60
TestFX_TestFX,org.testfx.cases.acceptance,CustomStageFixtureDemo,test,Magic Number,The method contains a magic number: 500,64
TestFX_TestFX,org.testfx.cases.acceptance,NodeAndPointQueryTest,setup,Magic Number,The method contains a magic number: 300,67
TestFX_TestFX,org.testfx.cases.acceptance,NodeAndPointQueryTest,setup,Magic Number,The method contains a magic number: 300,67
TestFX_TestFX,org.testfx.cases.acceptance,NodeAndPointQueryTest,point_query_throws_exception,Long Statement,The length of the statement "assertThatThrownBy(() -> fx.point(".missing")).isExactlyInstanceOf(FxRobotException.class).hasMessage("the query \".missing\" returned no nodes.");" is 147.,130
TestFX_TestFX,org.testfx.cases.acceptance,NodeAndPointQueryTest,moveTo,Magic Number,The method contains a magic number: 5000,137
TestFX_TestFX,org.testfx.cases.acceptance,NodeAndPointQueryTest,moveTo_throws_exception,Long Statement,The length of the statement "assertThatThrownBy(() -> fx.moveTo(".missing").clickOn()).isExactlyInstanceOf(FxRobotException.class).hasMessage("the query \".missing\" returned no nodes.");" is 158.,149
TestFX_TestFX,org.testfx.cases.acceptance,NodeAndPointQueryTest,moveTo_throws_exception_2,Long Statement,The length of the statement "assertThatThrownBy(() -> fx.moveTo(".label").clickOn()).isExactlyInstanceOf(FxRobotException.class).hasMessage("the query \".label\" returned 1 nodes` but no nodes were visible.");" is 180.,156
TestFX_TestFX,org.testfx.cases.acceptance,NonPublicAnnotationsTest,onStart,Magic Number,The method contains a magic number: 100,40
TestFX_TestFX,org.testfx.cases.acceptance,NonPublicAnnotationsTest,onStart,Magic Number,The method contains a magic number: 100,40
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,start,Magic Number,The method contains a magic number: 100,48
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,start,Magic Number,The method contains a magic number: 100,48
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,start,Magic Number,The method contains a magic number: 10,48
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,should_click_on_button,Magic Number,The method contains a magic number: 5,85
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,should_click_on_button,Magic Number,The method contains a magic number: 3000,85
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationLaunchTest,should_contain_button,Magic Number,The method contains a magic number: 3000,68
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationLaunchTest,should_click_on_button,Magic Number,The method contains a magic number: 3000,76
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,start,Magic Number,The method contains a magic number: 100,50
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,start,Magic Number,The method contains a magic number: 100,50
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,start,Magic Number,The method contains a magic number: 10,50
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,should_contain_button,Magic Number,The method contains a magic number: 3000,81
TestFX_TestFX,org.testfx.cases.acceptance,ApplicationStartTest,should_click_on_button,Magic Number,The method contains a magic number: 3000,87
TestFX_TestFX,org.testfx.cases.issue,GlassRobotClipboardBug,should_first_try,Magic Number,The method contains a magic number: 2000,69
TestFX_TestFX,org.testfx.cases.issue,GlassRobotClipboardBug,should_second_try,Magic Number,The method contains a magic number: 2000,76
TestFX_TestFX,org.testfx.cases.issue,GlassRobotClipboardBug,should_third_try,Magic Number,The method contains a magic number: 2000,83
TestFX_TestFX,org.testfx.cases.issue,StageHideDeadlockBug,setup,Magic Number,The method contains a magic number: 500,39
TestFX_TestFX,org.testfx.cases.issue,StageHideDeadlockBug,setup,Magic Number,The method contains a magic number: 500,39
TestFX_TestFX,org.testfx,TestFXRule,apply,Magic Number,The method contains a magic number: 1000,66
TestFX_TestFX,org.testfx,TestFXRule,evaluate,Magic Number,The method contains a magic number: 1000,71
TestFX_TestFX,org.testfx,TestFXRule,starting,Magic Number,The method contains a magic number: 250,94
TestFX_TestFX,org.testfx,TestFXRule,starting,Magic Number,The method contains a magic number: 250,94
TestFX_TestFX,org.testfx.framework.junit5,ApplicationExtension,validateStartMethod,Long Statement,The length of the statement "throw new IllegalStateException("Method annotated with @Start should have one argument of type " + "javafx.stage.Stage");" is 121.,105
TestFX_TestFX,org.testfx.framework.junit5,JavaFxInterceptorTests,start,Magic Number,The method contains a magic number: 100,37
TestFX_TestFX,org.testfx.framework.junit5,JavaFxInterceptorTests,start,Magic Number,The method contains a magic number: 100,37
TestFX_TestFX,org.testfx.framework.junit5,ApplicationRuleTest,onStart,Magic Number,The method contains a magic number: 100,34
TestFX_TestFX,org.testfx.framework.junit5,ApplicationRuleTest,onStart,Magic Number,The method contains a magic number: 100,34
TestFX_TestFX,org.testfx.framework.junit5,SelectiveJavaFxInterceptorTests,start,Magic Number,The method contains a magic number: 100,37
TestFX_TestFX,org.testfx.framework.junit5,SelectiveJavaFxInterceptorTests,start,Magic Number,The method contains a magic number: 100,37
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 42.0,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 42.0,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 100,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 200,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 3,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 200,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 3,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testWithinFxThread,Magic Number,The method contains a magic number: 100,60
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 42.0,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 42.0,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 100,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 200,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 3,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 200,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 3,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 100,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 1000,110
TestFX_TestFX,org.testfx.framework.junit5.utils,FXUtilsTests,testOutsideFxThread,Magic Number,The method contains a magic number: 20,110
TestFX_TestFX,org.testfx.framework.junit,TestFXRule,apply,Magic Number,The method contains a magic number: 1000,63
TestFX_TestFX,org.testfx.framework.junit,TestFXRule,evaluate,Magic Number,The method contains a magic number: 1000,68
TestFX_TestFX,org.testfx.framework.junit,TestFXRule,starting,Magic Number,The method contains a magic number: 250,91
TestFX_TestFX,org.testfx.framework.junit,TestFXRule,starting,Magic Number,The method contains a magic number: 250,91
TestFX_TestFX,org.testfx.framework.junit,JUnitExceptionTest,start,Magic Number,The method contains a magic number: 200,58
TestFX_TestFX,org.testfx.framework.junit,JUnitExceptionTest,start,Magic Number,The method contains a magic number: 150,58
TestFX_TestFX,org.testfx.framework.junit,JUnitExceptionTest,exceptionOnClickTest,Magic Number,The method contains a magic number: 100,72
TestFX_TestFX,org.testfx.framework.junit,JUnitExceptionTest,exceptionOnClickTest,Magic Number,The method contains a magic number: 100,72

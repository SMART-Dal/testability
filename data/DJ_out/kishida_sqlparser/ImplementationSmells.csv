Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
kishida_sqlparser,kis.sqlparser,SqlParser,func,Long Statement,The length of the statement "Parser<ASTFunc> func=identifier().next(id -> value().sepBy(terms.token("`")).between(terms.token("(")`terms.token(")")).map(params -> new ASTFunc(id`params)));" is 159.,102
kishida_sqlparser,kis.sqlparser,SqlParser,expression,Long Statement,The length of the statement "return new OperatorTable<ASTExp>().infixl(terms.token("+").retn((l`r) -> new ASTBinaryOp(l`r`"+"))`10).infixl(terms.token("-").retn((l`r) -> new ASTBinaryOp(l`r`"-"))`10).infixl(terms.token("/").retn((l`r) -> new ASTBinaryOp(l`r`"/"))`20).infixl(terms.token("*").retn((l`r) -> new ASTBinaryOp(l`r`"*"))`20).build(value());" is 322.,114
kishida_sqlparser,kis.sqlparser,SqlParser,expression,Magic Number,The method contains a magic number: 10,114
kishida_sqlparser,kis.sqlparser,SqlParser,expression,Magic Number,The method contains a magic number: 10,114
kishida_sqlparser,kis.sqlparser,SqlParser,expression,Magic Number,The method contains a magic number: 20,114
kishida_sqlparser,kis.sqlparser,SqlParser,expression,Magic Number,The method contains a magic number: 20,114
kishida_sqlparser,kis.sqlparser,SqlParser,bicond,Long Statement,The length of the statement "return expression().next(l -> terms.token("="`"<"`"<="`">"`">=").source().next(op -> expression().map(r -> new ASTBinaryOp(l`r`op))));" is 134.,131
kishida_sqlparser,kis.sqlparser,SqlParser,between,Long Statement,The length of the statement "return expression().next(o -> terms.token("between").next(expression()).next(st -> terms.token("and").next(expression()).map(ed -> new ASTTernaryOp(o`st`ed`"between"))));" is 170.,147
kishida_sqlparser,kis.sqlparser,SqlParser,logic,Long Statement,The length of the statement "return new OperatorTable<ASTExp>().infixl(terms.token("and").retn((l`r) -> new ASTBinaryOp(l`r`"and"))`1).infixl(terms.token("or").retn((l`r) -> new ASTBinaryOp(l`r`"or"))`1).build(cond());" is 189.,158
kishida_sqlparser,kis.sqlparser,SqlParser,select,Long Statement,The length of the statement "return terms.token("select").next(Parsers.or(terms.token("*").map(t -> Arrays.asList(new ASTWildcard()))`expression().sepBy1(terms.token("`"))));" is 145.,174
kishida_sqlparser,kis.sqlparser,SqlParser,join,Long Statement,The length of the statement "return terms.phrase("left"`"join").next(identifier().next(t -> terms.token("on").next(logic()).map(lg -> new ASTJoin(t`lg))));" is 126.,189
kishida_sqlparser,kis.sqlparser,SqlParser,orderValue,Long Statement,The length of the statement "return expression().next(x -> Parsers.or(terms.token("asc").retn(true)`terms.token("desc").retn(false)).optional(true).map(b -> new ASTOrderValue(x`b)));" is 153.,217
kishida_sqlparser,kis.sqlparser,SqlParser,selectStatement,Long Statement,The length of the statement "return Parsers.sequence(select()`from()`where().optional()`groupby().next(g -> having().optional().map(h -> Pair.of(g`h))).optional()`orderby().optional()`(s`f`w`p`o) -> new ASTSelect(s`f`Optional.ofNullable(w)`p == null ? Collections.EMPTY_LIST : p.left`p == null ? Optional.empty() : Optional.ofNullable(p.right)`o == null ? Collections.EMPTY_LIST : o));" is 356.,250
kishida_sqlparser,kis.sqlparser,SqlParser,insert,Long Statement,The length of the statement "return Parsers.sequence(terms.phrase("insert"`"into").next(identifier())`insertField().optional()`terms.token("values").next(insertValues().sepBy1(terms.token("`")))`(tb`f`v) -> new ASTInsert(tb`Optional.ofNullable(f)`v));" is 222.,285
kishida_sqlparser,kis.sqlparser,SqlParser,delete,Long Statement,The length of the statement "return Parsers.sequence(terms.token("delete").next(terms.token("*").optional()).next(terms.token("from")).next(identifier())`where().optional()`(id`w) -> new ASTDelete(id`Optional.ofNullable(w)));" is 196.,299
kishida_sqlparser,kis.sqlparser,SqlParser,update,Long Statement,The length of the statement "return Parsers.sequence(terms.token("update").next(identifier())`terms.token("set").next(updateValue().sepBy1(terms.token("`")))`where().optional()`(tbl`values`where) -> new ASTUpdate(tbl`values`Optional.ofNullable(where)));" is 224.,329
kishida_sqlparser,kis.sqlparser,SqlParser,createIndex,Long Statement,The length of the statement "return Parsers.sequence(terms.phrase("create"`"index").next(identifier().optional())`terms.token("on").next(identifier())`terms.token("using").next(identifier()).optional()`identifier().sepBy(terms.token("`")).between(terms.token("(")`terms.token(")"))`(n`t`m`f) -> new ASTCreateIndex(Optional.ofNullable(n)`Optional.of(t)`Optional.ofNullable(m)`f));" is 350.,345
kishida_sqlparser,kis.sqlparser,SqlParser,createTableIndex,Long Statement,The length of the statement "return Parsers.sequence(terms.token("index").next(identifier().optional())`terms.token("using").next(identifier()).optional()`identifier().sepBy(terms.token("`")).between(terms.token("(")`terms.token(")"))`(n`m`f) -> new ASTCreateIndex(Optional.ofNullable(n)`Optional.empty()`Optional.ofNullable(m)`f));" is 303.,358
kishida_sqlparser,kis.sqlparser,SqlParser,createTable,Long Statement,The length of the statement "return Parsers.sequence(terms.phrase("create"`"table").next(identifier())`identifier().sepBy1(terms.token("`")).between(terms.token("(")`terms.token(")"))`(t`f) -> new ASTCreateTable(t`f));" is 189.,372
kishida_sqlparser,kis.sqlparser,StreamUtils,zip,Long Statement,The length of the statement "return StreamSupport.stream(Spliterators.spliteratorUnknownSize(iterator`Spliterator.NONNULL | Spliterator.ORDERED)`false);" is 123.,28
kishida_sqlparser,kis.sqlparser,SqlAnalizer,wrap,Long Statement,The length of the statement "return matchRet(o.get()`caseOfRet(String.class`s -> new StringValue(s))`caseOfRet(Integer.class`i -> new IntValue(i))`caseOfRet(Boolean.class`b -> new BooleanValue(b))`noMatchThrow(() -> new RuntimeException(o.getClass() + " is not supported")));" is 246.,216
kishida_sqlparser,kis.sqlparser,SqlAnalizer,unwrap,Long Statement,The length of the statement "return matchRet(v`caseOfRet(StringValue.class`s -> Optional.of(s.value))`caseOfRet(IntValue.class`i -> Optional.of(i.value))`caseOfRet(BooleanValue.class`b -> Optional.of(b.value))`caseOfRet(NullValue.class`n -> Optional.empty())`noMatchThrow(() -> new RuntimeException(v.getClass() + " is not supported")));" is 308.,228
kishida_sqlparser,kis.sqlparser,SqlAnalizer,eval,Complex Conditional,The conditional expression cond instanceof NullValue || first instanceof NullValue || sec instanceof NullValue is complex.,239
kishida_sqlparser,kis.sqlparser,SqlAnalizer,eval,Complex Conditional,The conditional expression cond instanceof IntValue && first instanceof IntValue && sec instanceof IntValue is complex.,239
kishida_sqlparser,kis.sqlparser,SqlAnalizer,eval,Complex Method,Cyclomatic complexity of the method is 22,239
kishida_sqlparser,kis.sqlparser,SqlAnalizer,eval,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@64b20d9c,239
kishida_sqlparser,kis.sqlparser,SqlAnalizer,eval,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6fc3f1a7,239
kishida_sqlparser,kis.sqlparser,SqlAnalizer,validate,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7151dd9d,825
kishida_sqlparser,kis.sqlparser,SqlAnalizer,analize,Long Statement,The length of the statement "Table table=ctx.schema.find(from.table.ident).orElseThrow(() -> new RuntimeException("table " + from.table.ident + " not found"));" is 130.,874
kishida_sqlparser,kis.sqlparser,SqlAnalizer,analize,Long Statement,The length of the statement "List<SqlValue> aggregation=Stream.of(sql.select.stream().map(ast -> validate(env`ast))`sql.order.stream().map(ast -> validate(env`ast.exp))`sql.having.map(c -> validate(env`c)).map(sv -> Stream.of(sv)).orElse(Stream.empty())).flatMap(s -> s).collect(toList());" is 260.,874
kishida_sqlparser,kis.sqlparser,SqlAnalizer,analize,Long Statement,The length of the statement "primary=new OrderPlan(primary`zip(sql.order.stream()`Stream.iterate(sql.select.size()`INC)).map(p -> p.reduce((o`i) -> Pair.of(new FieldIndex(i)`o.asc))).collect(toList()));" is 173.,874
kishida_sqlparser,kis.sqlparser,SqlAnalizer,analize,Long Statement,The length of the statement "List<Pair<? extends SqlValue`Boolean>> order=sql.order.stream().map(ov -> Pair.of(validate(env`ov.exp)`ov.asc)).collect(toList());" is 130.,874
kishida_sqlparser,kis.sqlparser,SqlAnalizer,hasOr,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1f596988,953
kishida_sqlparser,kis.sqlparser,SqlAnalizer,andSerialize,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6bf34912,968
kishida_sqlparser,kis.sqlparser,SqlAnalizer,optimize,Complex Conditional,The conditional expression (bin.left instanceof FieldValue && !(bin.right instanceof FieldValue)) || (!(bin.left instanceof FieldValue) && bin.right instanceof FieldValue) is complex.,986
kishida_sqlparser,kis.sqlparser,SqlAnalizer,optimize,Complex Method,Cyclomatic complexity of the method is 13,986
kishida_sqlparser,kis.sqlparser,SqlAnalizer,optimize,Long Statement,The length of the statement "if ((bin.left instanceof FieldValue && !(bin.right instanceof FieldValue)) || (!(bin.left instanceof FieldValue) && bin.right instanceof FieldValue)) {" is 151.,986
kishida_sqlparser,kis.sqlparser,SqlAnalizer,insert,Long Statement,The length of the statement "Table t=ctx.schema.find(insert.table.ident).orElseThrow(() -> new RuntimeException(String.format("table %s not found."`insert.table.ident)));" is 141.,1079
kishida_sqlparser,kis.sqlparser,SqlAnalizer,delete,Long Statement,The length of the statement "Table t=ctx.schema.find(del.table.ident).orElseThrow(() -> new RuntimeException(String.format("table %s not found."`del.table.ident)));" is 135.,1106
kishida_sqlparser,kis.sqlparser,SqlAnalizer,update,Long Statement,The length of the statement "Table t=ctx.schema.find(update.table.ident).orElseThrow(() -> new RuntimeException(String.format("table %s not found."`update.table.ident)));" is 141.,1132
kishida_sqlparser,kis.sqlparser,SqlAnalizer,update,Long Statement,The length of the statement "List<Map.Entry<Integer`SqlValue>> values=update.values.stream().map(v -> new AbstractMap.SimpleEntry<>(cols.get(v.field.ident)`validate(env`v.value))).collect(toList());" is 169.,1132
kishida_sqlparser,kis.sqlparser,SqlAnalizer,createIndex,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1bcdd302,1183
kishida_sqlparser,kis.sqlparser,SqlAnalizer,main,Long Statement,The length of the statement "ctx.exec("insert into bunrui(id` name` seisen) values" + "(1` '野菜'` 1)`" + "(2` 'くだもの'` 1)`"+ "(3` '菓子'` 2)`"+ "(9` '団子'` 0)");" is 127.,1268
kishida_sqlparser,kis.sqlparser,SqlAnalizer,main,Long Statement,The length of the statement "ctx.exec("insert into shohin(id` name` bunrui_id` price) values" + "(1` 'りんご'` 2` 250)`" + "(2` 'キャベツ'` 1` 200)`"+ "(3` 'たけのこの'` 3` 150)`"+ "(4` 'きのこ'` 3` 120)`"+ "(5` 'パソコン'` 0` 34800)`"+ "(6` 'のこぎり')");" is 204.,1268
kishida_sqlparser,kis.sqlparser,SqlAnalizer,main,Long Statement,The length of the statement "printResult(ctx.exec("select bunrui_id` sum(price)` count(price)` 2 + 3 from shohin group by bunrui_id having count(price)>0 order by sum(price)"));" is 148.,1268
kishida_sqlparser,kis.sqlparser,SqlAnalizer,main,Long Statement,The length of the statement "printResult(ctx.exec("select shohin.id` shohin.name`bunrui.name" + " from shohin left join bunrui on shohin.bunrui_id=bunrui.id"));" is 131.,1268
kishida_sqlparser,kis.sqlparser,SqlAnalizer,main,Long Statement,The length of the statement "printResult(ctx.exec("select shohin.id` shohin.name`bunrui.name" + " from shohin left join bunrui on shohin.bunrui_id=bunrui.id" + " where shohin.price <= 300 and bunrui.seisen=1"));" is 182.,1268
kishida_sqlparser,kis.sqlparser,Table,insert,Long Statement,The length of the statement "TableTuple tuple=new TableTuple(this`rid`tx`Arrays.stream(values).map(Optional::ofNullable).collect(Collectors.toList()));" is 122.,79
kishida_sqlparser,kis.sqlparser,Table,getModifiedTuples,Long Statement,The length of the statement "return modifiedTuples.values().stream().map(list -> list.stream().filter(mt -> (mt.isCommited() && mt instanceof ModifiedTuple.Updated) || (!mt.isCommited() && mt instanceof ModifiedTuple.Deleted)).map(mt -> mt instanceof ModifiedTuple.Updated ? ((ModifiedTuple.Updated)mt).newTuple : mt.oldtuple).findFirst()).filter(omt -> omt.isPresent()).map(omt -> omt.get()).collect(Collectors.toList());" is 393.,144
kishida_sqlparser,kis.sqlparser,Table,getModifiedTuples,Long Statement,The length of the statement "return modifiedTuples.values().stream().map(list -> list.stream().filter(mt -> mt.modiryTx != tx.txId).filter(mt -> !mt.isCommited() || (mt.commitTx >= tx.txId)).map(mt -> mt.oldtuple).filter(ot -> tx.tupleAvailable(ot)).findFirst()).filter(omt -> omt.isPresent()).map(omt -> omt.get()).collect(Collectors.toList());" is 316.,144
kishida_sqlparser,kis.sqlparser,SqlParserTest,betweentest,Long Statement,The length of the statement "System.out.println(SqlParser.between().from(SqlParser.tokenizer`SqlParser.ignored).parse("shohin.price between 100 and 200"));" is 126.,61
kishida_sqlparser,kis.sqlparser,SqlParserTest,論理,Long Statement,The length of the statement "System.out.println(SqlParser.logic().from(SqlParser.tokenizer`SqlParser.ignored).parse("bunrui.id=3 and shohin.price between 100 and 200 or bunrui.id=4"));" is 155.,66
kishida_sqlparser,kis.sqlparser,SqlParserTest,selectsql全体,Long Statement,The length of the statement "System.out.println(parser.parse("select * from shohin where bunrui=3 group by bunrui_id having bunrui_id=3 order by price"));" is 125.,79
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Long Statement,The length of the statement "System.out.println(SqlAnalizer.eval(new BinaryOp(new BinaryOp(new IntValue(2)`new IntValue(3)`">")`new BinaryOp(new IntValue(2)`new IntValue(3)`"<")`"or")`cols`collect));" is 170.,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Long Statement,The length of the statement "System.out.println(SqlAnalizer.eval(new BinaryOp(new BinaryOp(new IntValue(2)`new IntValue(3)`">")`new BinaryOp(new IntValue(2)`new IntValue(3)`"<")`"and")`cols`collect));" is 171.,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 123,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 2,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 3,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,testSomeMethod,Magic Number,The method contains a magic number: 123,32
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,streamToListはimmutableか,Magic Number,The method contains a magic number: 10,57
kishida_sqlparser,kis.sqlparser,SqlAnalizerTest,streamToListはimmutableか,Magic Number,The method contains a magic number: 3,57
kishida_sqlparser,kis.sqlparser,StreamUtilsTest,testSomeMethod,Long Statement,The length of the statement "StreamUtils.zip(Stream.of("abc"`"cde"`"def")`IntStream.iterate(1`i -> i + 1).boxed()`(s`i) -> System.out.printf("%d:%s%n"`i`s));" is 128.,23
kishida_sqlparser,kis.sqlparser,StreamUtilsTest,testZipStream,Long Statement,The length of the statement "StreamUtils.zip(Stream.of("abc"`"cde"`"def")`Stream.iterate(1`i -> i + 1)).map(p -> p.reduce((s`i) -> String.format("%d:%s"`i`s))).forEach(s -> System.out.println(s));" is 167.,30
kishida_sqlparser,kis.sqlparser,IndexTest,該当値が全部きえるdelete,Magic Number,The method contains a magic number: 2,53
kishida_sqlparser,kis.sqlparser,IndexTest,該当値が一部きえるdelete,Magic Number,The method contains a magic number: 3,61
kishida_sqlparser,kis.sqlparser,IndexTest,キーが変更されるupdate,Magic Number,The method contains a magic number: 5,69
kishida_sqlparser,kis.sqlparser,IndexTest,範囲,Magic Number,The method contains a magic number: 2,88
kishida_sqlparser,kis.sqlparser,IndexTest,範囲,Magic Number,The method contains a magic number: 4,88
kishida_sqlparser,kis.sqlparser,IndexTest,大なりイコール,Magic Number,The method contains a magic number: 2,94
kishida_sqlparser,kis.sqlparser,IndexTest,大なり,Magic Number,The method contains a magic number: 2,100
kishida_sqlparser,kis.sqlparser,IndexTest,小なり,Magic Number,The method contains a magic number: 4,106
kishida_sqlparser,kis.sqlparser,IndexTest,小なりイコール,Magic Number,The method contains a magic number: 4,112
kishida_sqlparser,kis.sqlparser,IndexTest,print,Long Statement,The length of the statement "System.out.printf("%d %s%n"`r.rid`r.row.stream().map(o -> o.map(s -> s.toString()).orElse("null")).collect(joining("`")));" is 122.,125

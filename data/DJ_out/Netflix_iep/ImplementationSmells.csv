Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
Netflix_iep,com.netflix.iep.jmxport,JmxPort,configure,Long Statement,The length of the statement "JMXServiceURL url=new JMXServiceURL("service:jmx:rmi://" + hostname + ":"+ port+ "/jndi/rmi://"+ hostname+ ":"+ port+ "/jmxrmi");" is 129.,51
Netflix_iep,com.netflix.iep.jmxport,JmxPort,main,Magic Number,The method contains a magic number: 2,80
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilder,toString,Complex Method,Cyclomatic complexity of the method is 9,212
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilder,toString,Long Statement,The length of the statement "builder.append(EmailHeader.mime()).append(EmailHeader.multipart(boundary)).append(fromHeader).append(EmailHeader.to(to)).append(EmailHeader.subject(subject));" is 158.,212
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilder,toString,Long Statement,The length of the statement "builder.append(EncodingUtils.CRLF).append(mimeBoundary).append(EncodingUtils.CRLF).append(EmailHeader.contentType(contentType)).append(EmailHeader.contentTransferEncoding("base64")).append(EncodingUtils.CRLF).append(EncodingUtils.base64(body.getBytes(StandardCharsets.UTF_8))).append(EncodingUtils.CRLF);" is 304.,212
Netflix_iep,com.netflix.iep.ses,Attachment,toString,Long Statement,The length of the statement "return new StringBuilder().append(EmailHeader.contentType(contentType`name).toString()).append(EmailHeader.contentTransferEncoding("base64").toString()).append(EmailHeader.contentDisposition(disposition).toString()).append(EmailHeader.contentID(name).toString()).append(EncodingUtils.CRLF).append(EncodingUtils.base64(data)).append(EncodingUtils.CRLF).toString();" is 363.,85
Netflix_iep,com.netflix.iep.ses,EmailHeader,checkCustomHeader,Long Statement,The length of the statement "throw new IllegalArgumentException("'" + header + "' cannot be used as a custom header` "+ "use the appropriate method on the builder");" is 136.,45
Netflix_iep,com.netflix.iep.ses,EmailHeader,checkCustomHeader,Magic Number,The method contains a magic number: 74,45
Netflix_iep,com.netflix.iep.ses,EmailHeader,isAllowedInFieldName,Magic Number,The method contains a magic number: 33,68
Netflix_iep,com.netflix.iep.ses,EmailHeader,isAllowedInFieldName,Magic Number,The method contains a magic number: 126,68
Netflix_iep,com.netflix.iep.ses,EmailHeader,custom,Magic Number,The method contains a magic number: 2,76
Netflix_iep,com.netflix.iep.ses,EmailHeader,custom,Magic Number,The method contains a magic number: 50,76
Netflix_iep,com.netflix.iep.ses,EmailHeader,replyTo,Magic Number,The method contains a magic number: 78,130
Netflix_iep,com.netflix.iep.ses,EmailHeader,to,Magic Number,The method contains a magic number: 78,145
Netflix_iep,com.netflix.iep.ses,EmailHeader,cc,Magic Number,The method contains a magic number: 78,150
Netflix_iep,com.netflix.iep.ses,EmailHeader,bcc,Magic Number,The method contains a magic number: 78,155
Netflix_iep,com.netflix.iep.ses,EmailHeader,subject,Magic Number,The method contains a magic number: 50,163
Netflix_iep,com.netflix.iep.ses,EncodingUtils,readAll,Magic Number,The method contains a magic number: 4096,38
Netflix_iep,com.netflix.iep.ses,EncodingUtils,wrapBase64,Long Statement,The length of the statement "builder.append(EncodingUtils.CRLF).append(' ').append(prefix).append(base64(part.getBytes(StandardCharsets.UTF_8))).append(suffix);" is 131.,84
Netflix_iep,com.netflix.iep.ses,AwsSdk2Test,builderToSdkBytes,Long Statement,The length of the statement "EmailRequestBuilder builder=new EmailRequestBuilder().withFromAddress("alert-do-not-reply@saasmail.netflix.com").withToAddresses("brharrington@netflix.com").withSubject("Test message").withHtmlBody("<html><body><h1>Alert!</h1><p><img src=\"cid:des-example.png\"></p></body></html>").addAttachment(Attachment.fromResource("image/png"`"des-example.png"));" is 353.,27
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,checkMessage,Long Statement,The length of the statement "AmazonSimpleEmailService client=AmazonSimpleEmailServiceClient.builder().withCredentials(new DefaultAWSCredentialsProviderChain()).withRegion("us-east-1").build();" is 163.,78
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,simpleTextMessage,Long Statement,The length of the statement "checkMessage("simpleTextMessage"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject("Test message").withTextBody("Body of the email message."));" is 173.,97
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,simpleHtmlMessage,Long Statement,The length of the statement "checkMessage("simpleHtmlMessage"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject("Test message").withHtmlBody("<html><body><h1>Test</h1><p>Body of the email message.</p></body></html>"));" is 219.,106
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,sendingAuthorizationFromArn,Long Statement,The length of the statement "checkMessage("sendingAuthorizationFromArn"`new EmailRequestBuilder().withFromArn(FROM_ARN).withFromAddress(FROM).withToAddresses(TO).withSubject("Test message").withTextBody("Body of the email message."));" is 205.,115
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,sendingAuthorizationRequestParams,Long Statement,The length of the statement "checkMessage("sendingAuthorizationRequestParams"`new EmailRequestBuilder().withToAddresses(TO).withSubject("Test message").withTextBody("Body of the email message."));" is 167.,125
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,withCC,Long Statement,The length of the statement "checkMessage("withCC"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withCcAddresses(CC).withSubject("Test message").withTextBody("Body of the email message."));" is 182.,137
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,withBCC,Long Statement,The length of the statement "checkMessage("withBCC"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withBccAddresses(CC).withSubject("Test message").withTextBody("Body of the email message."));" is 184.,147
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,withReplyTo,Long Statement,The length of the statement "checkMessage("withReplyTo"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withReplyToAddresses(CC).withSubject("Test message").withTextBody("Body of the email message."));" is 192.,157
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,longSubject,Long Statement,The length of the statement "checkMessage("longSubject"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject(subject).withTextBody("Body of the email message."));" is 160.,167
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,tooLongSubject,Long Statement,The length of the statement "checkMessage("tooLongSubject"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject(subject).withTextBody("Body of the email message."));" is 163.,179
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,tooLongSubject,Magic Number,The method contains a magic number: 998,179
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,tooLongSubjectNoSpace,Long Statement,The length of the statement "checkMessage("tooLongSubjectNoSpace"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject(subject).withTextBody("Body of the email message."));" is 170.,194
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,tooLongSubjectNoSpace,Magic Number,The method contains a magic number: 256,194
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,subjectWithUtf8,Long Statement,The length of the statement "checkMessage("subjectWithUtf8"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject(subject).withTextBody("Body of the email message."));" is 164.,209
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,bodyWithUtf8,Long Statement,The length of the statement "checkMessage("bodyWithUtf8"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject("Test message").withTextBody("Body of the email message contains UTF-8 chars: 警报."));" is 193.,219
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,htmlWithInlineImage,Long Statement,The length of the statement "checkMessage("htmlWithInlineImage"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withSubject("Test message").withHtmlBody("<html><body><h1>Alert!</h1><p><img src=\"cid:des-example.png\" /></p></body></html>").addAttachment(Attachment.fromResource("image/png"`"des-example.png")));" is 302.,228
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,missingRecipients,Long Statement,The length of the statement "EmailRequestBuilder builder=new EmailRequestBuilder().withFromAddress(FROM).withSubject("Test message").withTextBody("Body of the email message.");" is 147.,238
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,missingSubject,Long Statement,The length of the statement "EmailRequestBuilder builder=new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withTextBody("Body of the email message.");" is 139.,247
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,sesConfigSet,Long Statement,The length of the statement "checkMessage("sesConfigSet"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).withConfigSet("emailTracking").withSubject("Test message").withHtmlBody("Repo <a href=\"https://github.com/Netflix/iep/\">repo</a>."));" is 231.,256
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,customHeader,Long Statement,The length of the statement "checkMessage("customHeader"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).addHeader("X-Custom-Header"`"Custom header value with UTF-8 characters: 警报").withSubject("Test message").withHtmlBody("Repo <a href=\"https://github.com/Netflix/iep/\">repo</a>."));" is 277.,266
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,customHeaderMaxLength,Long Statement,The length of the statement "checkMessage("customHeaderMaxLength"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).addHeader(builder.toString()`"Custom header value with UTF-8 characters: 警报").withSubject("Test message").withHtmlBody("Repo <a href=\"https://github.com/Netflix/iep/\">repo</a>."));" is 287.,276
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,customHeaderMaxLength,Magic Number,The method contains a magic number: 72,276
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,customHeaderTooLong,Long Statement,The length of the statement "new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).addHeader(builder.toString()`"Custom header value with UTF-8 characters: 警报");" is 146.,290
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,customHeaderTooLong,Magic Number,The method contains a magic number: 73,290
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,customHeaderLongValue,Long Statement,The length of the statement "checkMessage("customHeaderLongValue"`new EmailRequestBuilder().withFromAddress(FROM).withToAddresses(TO).addHeader("X-Custom-Header"`builder.toString()).withSubject("Test message").withHtmlBody("Repo <a href=\"https://github.com/Netflix/iep/\">repo</a>."));" is 257.,302
Netflix_iep,com.netflix.iep.ses,EmailRequestBuilderTest,customHeaderLongValue,Magic Number,The method contains a magic number: 50,302
Netflix_iep,com.netflix.iep.dynconfig,DynamicConfigService,DynamicConfigService,Long Statement,The length of the statement "this.lastUpdateTime=PolledMeter.using(registry).withName("iep.archaius.cacheAge").monitorValue(new AtomicLong(System.currentTimeMillis())`Functions.AGE);" is 153.,55
Netflix_iep,com.netflix.iep.dynconfig,DynamicConfigService,update,Magic Number,The method contains a magic number: 200,97
Netflix_iep,com.netflix.iep.leader,LeaderService,LeaderService,Long Statement,The length of the statement "this(leaderElector`registry`new Scheduler(registry`"iep-leader-elector"`1)`configureSchedulerOptions(config)`registry.createId("leader.elections")`registry.timer("leader.electorInitializeDuration")`new AtomicLong());" is 216.,58
Netflix_iep,com.netflix.iep.leader,LeaderService,LeaderService,Long Parameter List,The method has 7 parameters. ,72
Netflix_iep,com.netflix.iep.leader,LeaderService,configureSchedulerOptions,Long Statement,The length of the statement "return new Scheduler.Options().withFrequency(Scheduler.Policy.FIXED_DELAY`config.getDuration("iep.leader.leaderElectorFrequency"));" is 131.,97
Netflix_iep,com.netflix.iep.leader,LeaderService,createLeaderServiceTask,Long Statement,The length of the statement "final String throwableName=t.getCause() != null ? t.getCause().getClass().getSimpleName() : t.getClass().getSimpleName();" is 121.,127
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,createLeaderService,Long Statement,The length of the statement "final Scheduler.Options leaderElectorSchedulerOptions=new Scheduler.Options().withFrequency(Scheduler.Policy.RUN_ONCE`Duration.ZERO);" is 133.,66
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,createLeaderService,Long Statement,The length of the statement "leaderService=new LeaderService(leaderElector`registry`leaderElectorScheduler`leaderElectorSchedulerOptions`leaderElectionsId`electorInitializeTimer`timeSinceLastElection);" is 172.,66
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,createLeaderService,Magic Number,The method contains a magic number: 6,66
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,electionsCounterIsIncrementedOnSuccess,Magic Number,The method contains a magic number: 10,94
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,electionsCounterIsIncrementedOnException,Magic Number,The method contains a magic number: 10,104
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,configureSchedulerOptionsUsesConfigForFrequency,Long Statement,The length of the statement "assertThatThrownBy(() -> LeaderService.configureSchedulerOptions(config)).hasMessageContaining("iep.leader.leaderElectorFrequency");" is 132.,130
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,timeSinceLastElectionIsSet,Magic Number,The method contains a magic number: 300,146
Netflix_iep,com.netflix.iep.leader,LeaderServiceTest,timeSinceLastElectionIsSet,Magic Number,The method contains a magic number: 295,146
Netflix_iep,com.netflix.iep.leader,StandardLeaderElector,StandardLeaderElector,Long Statement,The length of the statement "this(LeaderId.create(config)`leaderDatabase`config`registry`initializeResourceLeaderMap(ResourceId.create(config))`registry.createId("leader.removals")`registry.createId("leader.resourceLeader")`registry.createId("leader.resourceWithNoLeader"));" is 245.,70
Netflix_iep,com.netflix.iep.leader,StandardLeaderElector,StandardLeaderElector,Long Parameter List,The method has 8 parameters. ,84
Netflix_iep,com.netflix.iep.leader,StandardLeaderElector,removeLeaderFor,Long Statement,The length of the statement "registry.counter(leaderRemovalsCounterId.withTag("resource"`resourceId.getId()).withTag("result"`"success")).increment();" is 121.,144
Netflix_iep,com.netflix.iep.leader,StandardLeaderElector,removeLeaderFor,Long Statement,The length of the statement "registry.counter(leaderRemovalsCounterId.withTag("resource"`resourceId.getId()).withTag("result"`"failure").withTag("error"`"not_leader")).increment();" is 151.,144
Netflix_iep,com.netflix.iep.leader,StandardLeaderElector,removeLeaderFor,Long Statement,The length of the statement "final String exceptionName=e.getCause() != null ? e.getCause().getClass().getSimpleName() : e.getClass().getSimpleName();" is 121.,144
Netflix_iep,com.netflix.iep.leader,StandardLeaderElector,removeLeaderFor,Long Statement,The length of the statement "registry.counter(leaderRemovalsCounterId.withTag("resource"`resourceId.getId()).withTag("result"`"failure").withTag("error"`exceptionName)).increment();" is 152.,144
Netflix_iep,com.netflix.iep.leader,StandardLeaderElector,removeResource,Long Statement,The length of the statement "registry.gauge(resourceLeaderGaugeId.withTag("resource"`resourceId.getId()).withTag("leader"`leaderId.getId())).set(0.0);" is 121.,187
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,createLeaderElector,Long Statement,The length of the statement "return new StandardLeaderElector(leaderId`testableLeaderDatabase`config`registry`new HashMap<>()`removalsCounterId`resourceLeaderGaugeId`noLeaderGaugeId);" is 154.,73
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,initializeResourceLeaderMapHandlesEmptyCollection,Long Statement,The length of the statement "final Map<ResourceId`LeaderId> resourceIdLeaderIdMap=StandardLeaderElector.initializeResourceLeaderMap(Collections.emptyList());" is 128.,86
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,initializeResourceLeaderMapHandlesMultipleResources,Long Statement,The length of the statement "final Map<ResourceId`LeaderId> resourceIdLeaderIdMap=StandardLeaderElector.initializeResourceLeaderMap(Lists.list(id1`id2`id3));" is 128.,103
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,initializeResourceLeaderMapHandlesMultipleResources,Long Statement,The length of the statement "assertThat(resourceIdLeaderIdMap).extractingFromEntries(Map.Entry::getKey`Map.Entry::getValue).containsExactlyInAnyOrder(tuple(id1`LeaderId.UNKNOWN)`tuple(id2`LeaderId.UNKNOWN)`tuple(id3`LeaderId.UNKNOWN));" is 206.,103
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,getResourcesReturnsSetThatIsNotModifiable,Long Statement,The length of the statement "assertThatThrownBy(() -> leaderElector.getResources().add(new ResourceId("another-test-resource"))).isExactlyInstanceOf(UnsupportedOperationException.class);" is 157.,162
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,runElectionSetsResourceLeaderGaugeToUnknownWhenRemoveLocalLeaderIsConfigured,Long Statement,The length of the statement "final Gauge leaderGauge=registry.gauge(resourceLeaderGaugeId.withTag("resource"`id1.getId()).withTag("leader"`LeaderId.UNKNOWN.getId()));" is 137.,276
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,removeLeaderIncrementsCounterOnFailure,Long Statement,The length of the statement "final Id idWithTags=removalsCounterId.withTag("resource"`resourceId.getId()).withTag("result"`"failure").withTag("error"`"not_leader");" is 135.,345
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,removeLeaderIncrementsCounterOnError,Long Statement,The length of the statement "final Id idWithTags=removalsCounterId.withTag("resource"`resourceId.getId()).withTag("result"`"failure").withTag("error"`"RuntimeException");" is 141.,362
Netflix_iep,com.netflix.iep.leader,StandardLeaderElectorTest,runElectionUpdatesTheDatabase,Magic Number,The method contains a magic number: 2,379
Netflix_iep,com.netflix.iep.userservice,HttpUserService,HttpUserService,Long Statement,The length of the statement "this.cache=Caffeine.newBuilder().expireAfterWrite(config.getDuration("cache-ttl")).maximumSize(10_000).build(this::isValidEmailImpl);" is 133.,51
Netflix_iep,com.netflix.iep.userservice,HttpUserService,HttpUserService,Magic Number,The method contains a magic number: 10_000,51
Netflix_iep,com.netflix.iep.userservice,HttpUserService,checkRemoteService,Magic Number,The method contains a magic number: 200,96
Netflix_iep,com.netflix.iep.userservice,HttpUserService,checkRemoteService,Magic Number,The method contains a magic number: 500,96
Netflix_iep,com.netflix.iep.userservice,Context,get,Long Statement,The length of the statement "return builder.withConnectTimeout(connectTimeout).withReadTimeout(readTimeout).withRetries(2).acceptJson().acceptGzip().customizeLogging(entry -> entry.withEndpoint(name)).send().decompress();" is 192.,105
Netflix_iep,com.netflix.iep.userservice,Context,get,Magic Number,The method contains a magic number: 2,105
Netflix_iep,com.netflix.iep.userservice,UserUtils,baseAddress,Magic Number,The method contains a magic number: 2,30
Netflix_iep,com.netflix.iep.userservice,CompositeUserServiceTest,multiSet,Magic Number,The method contains a magic number: 3,48
Netflix_iep,com.netflix.iep.userservice,WhitelistUserServiceTest,start,Magic Number,The method contains a magic number: 2,37
Netflix_iep,com.netflix.iep.admin.guice,GuiceEndpoint,isMultibind,Long Statement,The length of the statement "return Collection.class.isAssignableFrom(t) || Map.class.isAssignableFrom(t) || (a != null && a.getName().startsWith("com.google.inject.multibindings"));" is 153.,55
Netflix_iep,com.netflix.iep.admin.guice,GuiceEndpoint,getBindingKeys,Long Statement,The length of the statement "Map<String`Key<?>> keys=bindings.keySet().stream().filter(k -> !isMultibind(k) && p.test(keyString(k))).collect(Collectors.toMap(this::keyString`k -> k));" is 154.,69
Netflix_iep,com.netflix.iep.launcher,JarBuilder,addEntry,Magic Number,The method contains a magic number: 4096,87
Netflix_iep,com.netflix.iep.launcher,JarBuilder,main,Magic Number,The method contains a magic number: 3,164
Netflix_iep,com.netflix.iep.launcher,JarBuilder,main,Magic Number,The method contains a magic number: 2,164
Netflix_iep,com.netflix.iep.launcher,JarBuilder,main,Magic Number,The method contains a magic number: 2,164
Netflix_iep,com.netflix.iep.launcher,Main,extractJar,Complex Conditional,The conditional expression !ze.isDirectory() && ze.getName().endsWith(".jar") && !f.exists() is complex.,63
Netflix_iep,com.netflix.iep.launcher,Main,extractJar,Magic Number,The method contains a magic number: 4096,63
Netflix_iep,com.netflix.iep.servergroups,Instance,merge,Long Statement,The length of the statement "return builder().node(node).privateIpAddress(orElse(privateIpAddress`other.privateIpAddress)).vpcId(orElse(vpcId`other.vpcId)).subnetId(orElse(subnetId`other.subnetId)).ami(orElse(ami`other.ami)).vmtype(orElse(vmtype`other.vmtype)).zone(orElse(zone`other.zone)).status(status.ordinal() > other.status.ordinal() ? status : other.status).build();" is 344.,94
Netflix_iep,com.netflix.iep.servergroups,Instance,equals,Long Statement,The length of the statement "return Objects.equals(node`instance.node) && Objects.equals(privateIpAddress`instance.privateIpAddress) && Objects.equals(vpcId`instance.vpcId)&& Objects.equals(subnetId`instance.subnetId)&& Objects.equals(ami`instance.ami)&& Objects.equals(vmtype`instance.vmtype)&& Objects.equals(zone`instance.zone)&& status == instance.status;" is 330.,114
Netflix_iep,com.netflix.iep.servergroups,Instance,toString,Long Statement,The length of the statement "return "Instance(" + "node=" + node + "` "+ "privateIpAddress="+ privateIpAddress+ "` "+ "vpcId="+ vpcId+ "` "+ "subnetId="+ subnetId+ "` "+ "ami="+ ami+ "` "+ "vmtype="+ vmtype+ "` "+ "zone="+ zone+ "` "+ "status="+ status.name()+ ")";" is 236.,136
Netflix_iep,com.netflix.iep.servergroups,EddaLoader,decodeInstance,Complex Method,Cyclomatic complexity of the method is 8,56
Netflix_iep,com.netflix.iep.servergroups,EddaLoader,decodeInstance,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@56e364ac,56
Netflix_iep,com.netflix.iep.servergroups,EddaLoader,decodeServerGroup,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@72d93766,106
Netflix_iep,com.netflix.iep.servergroups,EddaLoader,call,Long Statement,The length of the statement "HttpResponse response=client.get(uri).customizeLogging(entry -> entry.withEndpoint("/api/v2/netflix/serverGroups")).acceptGzip().acceptJson().send();" is 149.,142
Netflix_iep,com.netflix.iep.servergroups,EddaLoader,call,Magic Number,The method contains a magic number: 200,142
Netflix_iep,com.netflix.iep.servergroups,JsonUtils,expect,Long Statement,The length of the statement "throw new IllegalArgumentException("invalid input: expected " + expected + "` received "+ actual+ " (line "+ loc.getLineNr()+ "` column "+ loc.getColumnNr()+ ")");" is 163.,53
Netflix_iep,com.netflix.iep.servergroups,JsonUtils,skipValue,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2b3bc103,124
Netflix_iep,com.netflix.iep.servergroups,JsonUtils,parseResponse,Long Statement,The length of the statement "try (GZIPInputStream gzin=new GZIPInputStream(new ByteArrayInputStream(response.entity()));JsonParser jp=FACTORY.createParser(gzin)){" is 133.,159
Netflix_iep,com.netflix.iep.servergroups,GroupService,startImpl,Long Statement,The length of the statement "AtomicLong lastUpdateTime=PolledMeter.using(registry).withName("iep.groups.dataAge").withTag("id"`loaderName).monitorValue(new AtomicLong(clock.wallTime())`Functions.age(clock));" is 178.,99
Netflix_iep,com.netflix.iep.servergroups,GroupService,startImpl,Long Statement,The length of the statement "Scheduler.Options options=new Scheduler.Options().withInitialDelay(frequency).withFrequency(Scheduler.Policy.FIXED_DELAY`frequency);" is 132.,99
Netflix_iep,com.netflix.iep.servergroups,GroupService,startImpl,Magic Number,The method contains a magic number: 1000,99
Netflix_iep,com.netflix.iep.servergroups,EurekaLoader,decodeMetadata,Complex Method,Cyclomatic complexity of the method is 10,70
Netflix_iep,com.netflix.iep.servergroups,EurekaLoader,decodeMetadata,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@376be33b,70
Netflix_iep,com.netflix.iep.servergroups,EurekaLoader,decodeInstance,Complex Method,Cyclomatic complexity of the method is 8,118
Netflix_iep,com.netflix.iep.servergroups,EurekaLoader,decodeInstance,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7a60377e,118
Netflix_iep,com.netflix.iep.servergroups,EurekaLoader,call,Long Statement,The length of the statement "HttpResponse response=client.get(uri).customizeLogging(entry -> entry.withEndpoint("/eureka/v2/apps")).acceptGzip().acceptJson().send();" is 136.,213
Netflix_iep,com.netflix.iep.servergroups,EurekaLoader,call,Magic Number,The method contains a magic number: 200,213
Netflix_iep,com.netflix.iep.servergroups,ServerGroup,merge,Long Statement,The length of the statement "List<Instance> onlyInOtherGroup=otherInstances.values().stream().filter(i -> UNION_STATUSES.contains(i.getStatus())).collect(Collectors.toList());" is 146.,168
Netflix_iep,com.netflix.iep.servergroups,ServerGroup,merge,Long Statement,The length of the statement "return builder().platform(platform).group(group).minSize(Math.max(minSize`other.minSize)).maxSize(Math.max(maxSize`other.maxSize)).desiredSize(Math.max(desiredSize`other.desiredSize)).addInstances(merged).build();" is 213.,168
Netflix_iep,com.netflix.iep.servergroups,ServerGroup,equals,Long Statement,The length of the statement "return minSize == that.minSize && maxSize == that.maxSize && desiredSize == that.desiredSize && Objects.equals(id`that.id) && Objects.equals(platform`that.platform) && Objects.equals(app`that.app) && Objects.equals(cluster`that.cluster) && Objects.equals(group`that.group) && Objects.equals(stack`that.stack) && Objects.equals(detail`that.detail) && Objects.equals(shard1`that.shard1) && Objects.equals(shard2`that.shard2) && Objects.equals(instances`that.instances);" is 467.,214
Netflix_iep,com.netflix.iep.servergroups,ServerGroup,toString,Long Statement,The length of the statement "return "ServerGroup(" + "id=" + id + "` "+ "minSize="+ minSize+ "` "+ "maxSize="+ maxSize+ "` "+ "desiredSize="+ desiredSize+ "` "+ "currentSize="+ instances.size()+ "` "+ "instancesHash="+ instances.hashCode()+ ")";" is 216.,245
Netflix_iep,com.netflix.iep.servergroups,ServerGroup,toNimbleGroup,Long Statement,The length of the statement "return builder().platform(platform).group(NIMBLE_PREFIX + group).minSize(minSize).maxSize(maxSize).desiredSize(desiredSize).addInstances(nimbleInstances).build();" is 162.,260
Netflix_iep,com.netflix.iep.servergroups,ServerGroup,merge,Complex Method,Cyclomatic complexity of the method is 10,291
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eddaInstance,Long Statement,The length of the statement "return Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").vpcId("vpc-123").subnetId("subnet-123").ami("ami-123").vmtype("m5.large").zone("us-east-1e").status(Instance.Status.NOT_REGISTERED).build();" is 210.,34
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eddaGroup,Long Statement,The length of the statement "return ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").minSize(10).maxSize(100).desiredSize(42).addInstance(eddaInstance()).build();" is 153.,47
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eddaGroup,Magic Number,The method contains a magic number: 10,47
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eddaGroup,Magic Number,The method contains a magic number: 100,47
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eddaGroup,Magic Number,The method contains a magic number: 42,47
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eurekaInstance,Long Statement,The length of the statement "return Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").vpcId("vpc-123").subnetId("subnet-123").ami("ami-123").vmtype("m5.large").zone("us-east-1e").status(Instance.Status.NOT_REGISTERED).build();" is 210.,58
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eurekaGroup,Long Statement,The length of the statement "return ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").minSize(10).maxSize(100).desiredSize(42).addInstance(eurekaInstance()).build();" is 155.,71
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eurekaGroup,Magic Number,The method contains a magic number: 10,71
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eurekaGroup,Magic Number,The method contains a magic number: 100,71
Netflix_iep,com.netflix.iep.servergroups,GroupServiceTest,eurekaGroup,Magic Number,The method contains a magic number: 42,71
Netflix_iep,com.netflix.iep.servergroups,InstanceTest,defaultInstance,Long Statement,The length of the statement "return Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").vpcId("vpc-123").subnetId("subnet-123").ami("ami-123").vmtype("m5.large").zone("us-east-1e").status(Instance.Status.STARTING).build();" is 204.,57
Netflix_iep,com.netflix.iep.servergroups,InstanceTest,mergePreferThis,Long Statement,The length of the statement "Instance i1=Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").vpcId("vpc-123").subnetId("subnet-123").ami("ami-123").vmtype("m5.large").zone("us-east-1e").status(Instance.Status.NOT_REGISTERED).build();" is 215.,118
Netflix_iep,com.netflix.iep.servergroups,InstanceTest,mergePreferThis,Long Statement,The length of the statement "Instance i2=Instance.builder().node("i-12345").privateIpAddress("4.3.2.1").vpcId("vpc-321").subnetId("subnet-321").ami("ami-321").vmtype("m5.xlarge").zone("us-east-1c").status(Instance.Status.NOT_REGISTERED).build();" is 216.,118
Netflix_iep,com.netflix.iep.servergroups,InstanceTest,mergeFillInWithOther,Long Statement,The length of the statement "Instance i1=Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").status(Instance.Status.NOT_REGISTERED).build();" is 122.,144
Netflix_iep,com.netflix.iep.servergroups,InstanceTest,mergeFillInWithOther,Long Statement,The length of the statement "Instance i2=Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").vpcId("vpc-321").subnetId("subnet-321").ami("ami-321").vmtype("m5.xlarge").zone("us-east-1c").status(Instance.Status.NOT_REGISTERED).build();" is 216.,144
Netflix_iep,com.netflix.iep.servergroups,LoaderUtils,createEddaLoader,Magic Number,The method contains a magic number: 200,30
Netflix_iep,com.netflix.iep.servergroups,LoaderUtils,createEurekaLoader,Magic Number,The method contains a magic number: 200,37
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,defaultInstance,Long Statement,The length of the statement "return Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").vpcId("vpc-123").subnetId("subnet-123").ami("ami-123").vmtype("m5.large").zone("us-east-1e").status(Instance.Status.STARTING).build();" is 204.,51
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,defaultGroup,Long Statement,The length of the statement "return ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").minSize(10).maxSize(100).desiredSize(42).addInstance(defaultInstance()).build();" is 156.,64
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,defaultGroup,Magic Number,The method contains a magic number: 10,64
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,defaultGroup,Magic Number,The method contains a magic number: 100,64
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,defaultGroup,Magic Number,The method contains a magic number: 42,64
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,shardedGroup,Long Statement,The length of the statement "return ServerGroup.builder().platform("ec2").group("app-stack-x1shard1-x2shard2-other-detail-v001").minSize(10).maxSize(100).desiredSize(42).addInstance(defaultInstance()).build();" is 180.,75
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,shardedGroup,Magic Number,The method contains a magic number: 10,75
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,shardedGroup,Magic Number,The method contains a magic number: 100,75
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,shardedGroup,Magic Number,The method contains a magic number: 42,75
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,minSize,Magic Number,The method contains a magic number: 10,146
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,maxSize,Magic Number,The method contains a magic number: 100,151
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,desiredSize,Magic Number,The method contains a magic number: 42,156
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Long Statement,The length of the statement "ServerGroup g1=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").minSize(10).maxSize(100).desiredSize(42).build();" is 133.,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Long Statement,The length of the statement "ServerGroup g2=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").minSize(5).maxSize(200).desiredSize(21).build();" is 132.,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Long Statement,The length of the statement "ServerGroup expected=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").minSize(10).maxSize(200).desiredSize(42).build();" is 139.,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 10,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 100,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 42,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 5,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 200,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 21,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 10,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 200,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergePreferMaxSize,Magic Number,The method contains a magic number: 42,179
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeSameInstances,Long Statement,The length of the statement "ServerGroup g1=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").addInstance(Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").status(Instance.Status.NOT_REGISTERED).build()).build();" is 215.,205
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeSameInstances,Long Statement,The length of the statement "ServerGroup g2=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").addInstance(Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").status(Instance.Status.UP).build()).build();" is 203.,205
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeOtherInstancesUp,Long Statement,The length of the statement "ServerGroup g2=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").addInstance(Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").status(Instance.Status.UP).build()).build();" is 203.,228
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeOtherInstancesStarting,Long Statement,The length of the statement "ServerGroup g2=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").addInstance(Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").status(Instance.Status.STARTING).build()).build();" is 209.,246
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeList,Long Statement,The length of the statement "ServerGroup g2=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").addInstance(Instance.builder().node("i-12345").privateIpAddress("1.2.3.4").status(Instance.Status.UP).build()).build();" is 203.,265
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeList,Long Statement,The length of the statement "Assert.assertEquals(Collections.singletonList(g2)`ServerGroup.merge(Collections.singletonList(g2)`Collections.singletonList(g1)));" is 130.,265
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeNimbleStarting,Long Statement,The length of the statement "ServerGroup g1=ServerGroup.builder().platform("ec2").group("nimble_app-stack-detail-v001").addInstance(Instance.builder().node("i-0001").privateIpAddress("1.2.3.4").status(Instance.Status.NOT_REGISTERED).build()).build();" is 221.,285
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeNimbleStarting,Long Statement,The length of the statement "ServerGroup g2=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").addInstance(Instance.builder().node("i-0001").privateIpAddress("1.2.3.4").status(Instance.Status.STARTING).build()).build().toNimbleGroup(set);" is 227.,285
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeNimbleUp,Long Statement,The length of the statement "ServerGroup g1=ServerGroup.builder().platform("ec2").group("nimble_app-stack-detail-v001").addInstance(Instance.builder().node("i-0001").privateIpAddress("1.2.3.4").status(Instance.Status.NOT_REGISTERED).build()).build();" is 221.,311
Netflix_iep,com.netflix.iep.servergroups,ServerGroupTest,mergeNimbleUp,Long Statement,The length of the statement "ServerGroup g2=ServerGroup.builder().platform("ec2").group("app-stack-detail-v001").addInstance(Instance.builder().node("i-0001").privateIpAddress("1.2.3.4").status(Instance.Status.UP).build()).build().toNimbleGroup(set);" is 221.,311
Netflix_iep,com.netflix.iep.servergroups,TestHttpClient,newRequest,Long Statement,The length of the statement "Map<String`List<String>> headers=gzip ? Collections.singletonMap("Content-Encoding"`Collections.singletonList("gzip")) : Collections.emptyMap();" is 144.,47
Netflix_iep,com.netflix.iep.servergroups,TestHttpClient,sendImpl,Long Statement,The length of the statement "Map<String`List<String>> headers=gzip ? Collections.singletonMap("Content-Encoding"`Collections.singletonList("gzip")) : Collections.emptyMap();" is 144.,49
Netflix_iep,com.netflix.iep.servergroups,TestHttpClient,readAll,Magic Number,The method contains a magic number: 4096,69
Netflix_iep,com.netflix.iep.servergroups,EddaLoaderTest,defaultEc2Group,Long Statement,The length of the statement "return ServerGroup.builder().platform("ec2").group("app-main-dev-v001").minSize(1).maxSize(3).desiredSize(2).addInstance(Instance.builder().node("i-1234567890").privateIpAddress("10.20.30.40").vpcId("vpc-54321").subnetId("subnet-54321").ami("ami-0987654321").vmtype("m5.large").zone("us-east-1d").status(Instance.Status.NOT_REGISTERED).build()).build();" is 353.,36
Netflix_iep,com.netflix.iep.servergroups,EddaLoaderTest,defaultEc2Group,Magic Number,The method contains a magic number: 3,36
Netflix_iep,com.netflix.iep.servergroups,EddaLoaderTest,defaultEc2Group,Magic Number,The method contains a magic number: 2,36
Netflix_iep,com.netflix.iep.servergroups,EddaLoaderTest,overflow,Long Statement,The length of the statement "expected.add(ServerGroup.builder().platform("ec2").group("app-main-dev-v001").minSize(-1).maxSize(-1).desiredSize(-1).addInstance(Instance.builder().node("i-1234567890").privateIpAddress("10.20.30.40").vpcId("vpc-54321").subnetId("subnet-54321").ami("ami-0987654321").vmtype("m5.large").zone("us-east-1d").status(Instance.Status.NOT_REGISTERED).build()).build());" is 363.,75
Netflix_iep,com.netflix.iep.servergroups,EddaLoaderTest,noInstances,Long Statement,The length of the statement "expected.add(ServerGroup.builder().platform("ec2").group("app-main-dev-v001").minSize(1).maxSize(3).desiredSize(2).build());" is 124.,99
Netflix_iep,com.netflix.iep.servergroups,EddaLoaderTest,noInstances,Magic Number,The method contains a magic number: 3,99
Netflix_iep,com.netflix.iep.servergroups,EddaLoaderTest,noInstances,Magic Number,The method contains a magic number: 2,99
Netflix_iep,com.netflix.iep.servergroups,EurekaLoaderTest,defaultEc2Group,Long Statement,The length of the statement "return ServerGroup.builder().platform("ec2").group("app-main-v001").addInstance(Instance.builder().node("i-1234567890").privateIpAddress("10.20.30.40").vpcId("vpc-54321").ami("ami-0987654321").vmtype("m5.large").zone("us-east-1d").status(Instance.Status.UP).build()).build();" is 275.,44
Netflix_iep,com.netflix.iep.servergroups,EurekaLoaderTest,titusGroup,Long Statement,The length of the statement "expected.add(ServerGroup.builder().platform("titus").group("app-main-v001").addInstance(Instance.builder().node("8d78c384-aa57-48cc-ad4d-a1a887f46221").privateIpAddress("10.20.30.40").vpcId("vpc-54321").zone("us-east-1d").status(Instance.Status.UP).build()).build());" is 267.,115
Netflix_iep,com.netflix.iep.servergroups,EurekaLoaderTest,titusGroupVmtype,Long Statement,The length of the statement "expected.add(ServerGroup.builder().platform("titus").group("app-main-v001").addInstance(Instance.builder().node("8d78c384-aa57-48cc-ad4d-a1a887f46221").privateIpAddress("10.20.30.40").vpcId("vpc-54321").zone("us-east-1d").status(Instance.Status.UP).build()).build());" is 267.,133
Netflix_iep,com.netflix.iep.servergroups,EurekaLoaderTest,failedRequest,Magic Number,The method contains a magic number: 400,158
Netflix_iep,com.netflix.iep.config,ConfigManager,pickClassLoader,Long Statement,The length of the statement "LOGGER.warn("Thread.currentThread().getContextClassLoader() is null` using loader for {}"`ConfigManager.class.getName());" is 121.,68
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,listener,Magic Number,The method contains a magic number: 2,88
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,listenerFailureIgnored,Magic Number,The method contains a magic number: 3,112
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,listenerRemove,Magic Number,The method contains a magic number: 2,122
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,listenerRemove,Magic Number,The method contains a magic number: 2,122
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,configListener,Magic Number,The method contains a magic number: 2,137
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,configListListener,Magic Number,The method contains a magic number: 2,156
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,intListener,Magic Number,The method contains a magic number: 2,218
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,intListListener,Magic Number,The method contains a magic number: 2,234
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,longListener,Magic Number,The method contains a magic number: 2L,244
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,longListListener,Magic Number,The method contains a magic number: 2L,254
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,bytesListener,Magic Number,The method contains a magic number: 1024L,264
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,bytesListener,Magic Number,The method contains a magic number: 2048L,264
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,bytesListListener,Magic Number,The method contains a magic number: 1024L,274
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,bytesListListener,Magic Number,The method contains a magic number: 2048L,274
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,memorySizeListener,Magic Number,The method contains a magic number: 1024L,284
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,memorySizeListener,Magic Number,The method contains a magic number: 2048L,284
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,memorySizeListListener,Magic Number,The method contains a magic number: 1024L,294
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,memorySizeListListener,Magic Number,The method contains a magic number: 2048L,294
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,doubleListener,Magic Number,The method contains a magic number: 2.0,304
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,doubleListListener,Magic Number,The method contains a magic number: 2.0,314
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,numberListener,Magic Number,The method contains a magic number: 2,324
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,numberListListener,Magic Number,The method contains a magic number: 2,334
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,durationListener,Magic Number,The method contains a magic number: 2,344
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,durationListListener,Magic Number,The method contains a magic number: 2,354
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,periodListener,Magic Number,The method contains a magic number: 2,364
Netflix_iep,com.netflix.iep.config,DynamicConfigManagerTest,temporalListener,Magic Number,The method contains a magic number: 2,374
Netflix_iep,com.netflix.iep.service,DefaultClassFactory,newInstance,Long Statement,The length of the statement "throw new CreationException("class " + cls.getCanonicalName() + " has more than one constructor and does not have a no-argument constructor");" is 142.,38
Netflix_iep,com.netflix.iep.guice,BaseModule,getConstructor,Long Statement,The length of the statement "final String msg="a single constructor is required` class " + cls.getName() + " has "+ constructors.length+ " constructors";" is 124.,27
Netflix_iep,com.netflix.iep.guice,Main,runImpl,Long Statement,The length of the statement "Thread.setDefaultUncaughtExceptionHandler((thread`e) -> LOGGER.error("Uncaught exception from thread {} ({})"`thread.getName()`thread.getId()`e));" is 146.,73
Netflix_iep,com.netflix.iep.guice,TestService,TestService,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@41395d53,26
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,setRetriesIfPresent,Long Statement,The length of the statement "RetryPolicy retryPolicy=RetryPolicy.builder().backoffStrategy(BackoffStrategy.defaultStrategy()).throttlingBackoffStrategy(BackoffStrategy.defaultThrottlingStrategy()).numRetries(cfg.getInt("retry-policy.num-retries")).retryCondition(RetryCondition.defaultRetryCondition()).build();" is 282.,98
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,createClientConfig,Magic Number,The method contains a magic number: 2,110
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,createClientConfig,Magic Number,The method contains a magic number: 2,110
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getConfig,Long Statement,The length of the statement "return (name != null && config.hasPath(cfgPrefix + "." + name+ "."+ suffix)) ? config.getConfig(cfgPrefix + "." + name+ "."+ suffix) : config.getConfig(cfgPrefix + ".default." + suffix);" is 186.,136
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,createAssumeRoleProvider,Long Statement,The length of the statement "final StsClient stsClient=StsClient.builder().credentialsProvider(p).region(Region.of(region)).httpClientBuilder(service.createHttpClientBuilder()).build();" is 156.,158
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Complex Method,Cyclomatic complexity of the method is 13,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("read-timeout")) configuration.put(SdkHttpConfigurationOption.READ_TIMEOUT`httpConfig.getDuration("read-timeout"));" is 138.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("write-timeout")) configuration.put(SdkHttpConfigurationOption.WRITE_TIMEOUT`httpConfig.getDuration("write-timeout"));" is 141.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("connection-timeout")) configuration.put(SdkHttpConfigurationOption.CONNECTION_TIMEOUT`httpConfig.getDuration("connection-timeout"));" is 156.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("connection-acquire-timeout")) configuration.put(SdkHttpConfigurationOption.CONNECTION_ACQUIRE_TIMEOUT`httpConfig.getDuration("connection-acquire-timeout"));" is 180.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("connection-max-idle-timeout")) configuration.put(SdkHttpConfigurationOption.CONNECTION_MAX_IDLE_TIMEOUT`httpConfig.getDuration("connection-max-idle-timeout"));" is 183.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("connection-time-to-live")) configuration.put(SdkHttpConfigurationOption.CONNECTION_TIME_TO_LIVE`httpConfig.getDuration("connection-time-to-live"));" is 171.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("max-connections")) configuration.put(SdkHttpConfigurationOption.MAX_CONNECTIONS`httpConfig.getInt("max-connections"));" is 142.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("max-pending-connection-acquires")) configuration.put(SdkHttpConfigurationOption.MAX_PENDING_CONNECTION_ACQUIRES`httpConfig.getInt("max-pending-connection-acquires"));" is 190.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("reap-idle-connections")) configuration.put(SdkHttpConfigurationOption.REAP_IDLE_CONNECTIONS`httpConfig.getBoolean("reap-idle-connections"));" is 164.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("tcp-keepalive")) configuration.put(SdkHttpConfigurationOption.TCP_KEEPALIVE`httpConfig.getBoolean("tcp-keepalive"));" is 140.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,getSdkHttpConfigurationOptions,Long Statement,The length of the statement "if (httpConfig.hasPath("trust-all-certificates")) configuration.put(SdkHttpConfigurationOption.TRUST_ALL_CERTIFICATES`httpConfig.getBoolean("trust-all-certificates"));" is 167.,193
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,createSyncHttpService,Long Statement,The length of the statement "throw new IllegalStateException("could not find SdkHttpService on classpath` " + "set `sync-http-impl` to specify the implementation to use");" is 142.,239
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,createAsyncHttpService,Long Statement,The length of the statement "throw new IllegalStateException("could not find SdkAsyncHttpService on classpath` " + "set `async-http-impl` to specify the implementation to use");" is 148.,262
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,newInstance,Long Statement,The length of the statement "AwsClientBuilder<?`?> builder=((AwsClientBuilder<?`?>)builderMethod.invoke(null)).credentialsProvider(createCredentialsProvider(name`accountId`service)).region(chooseRegion(name`cls)).overrideConfiguration(createClientConfig(name));" is 232.,333
Netflix_iep,com.netflix.iep.aws2,AwsClientFactory,newInstance,Long Statement,The length of the statement "((AwsAsyncClientBuilder<?`?>)builder).httpClient(asyncService.createAsyncHttpClientFactory().buildWithDefaults(attributeMap));" is 126.,333
Netflix_iep,com.netflix.iep.aws2,AwsClientFactoryTest,settingsTimeout,Magic Number,The method contains a magic number: 42000,252
Netflix_iep,com.netflix.iep.aws2,AwsClientFactoryTest,settingsTimeout,Magic Number,The method contains a magic number: 13000,252
Netflix_iep,com.netflix.iep.aws2,AwsClientFactoryTest,settingsTimeout,Magic Number,The method contains a magic number: 5,252
Netflix_iep,com.netflix.iep.aws2,AwsClientFactoryTest,settingsSdkHttpClient,Magic Number,The method contains a magic number: 60000,261
Netflix_iep,com.netflix.iep.aws2,AwsClientFactoryTest,settingsSdkHttpClient,Magic Number,The method contains a magic number: 120000,261
Netflix_iep,com.netflix.iep.aws2,AwsClientFactoryTest,settingsSdkHttpClient,Magic Number,The method contains a magic number: 500,261
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,DynamoDbLeaderDatabase,Long Statement,The length of the statement "this(db`config`LeaderId.create(config)`config.getString(DB_CONFIG_PATH_NAME + ".tableName")`config.getString(DB_CONFIG_PATH_NAME + ".tableHashKeyName")`config.getLong(DB_CONFIG_PATH_NAME + ".tableReadCapacityUnits")`config.getLong(DB_CONFIG_PATH_NAME + ".tableWriteCapacityUnits")`config.getDuration(DB_CONFIG_PATH_NAME + ".tableActiveTimeout")`config.getString(DB_CONFIG_PATH_NAME + ".leaderIdAttributeName")`config.getString(DB_CONFIG_PATH_NAME + ".lastUpdateAttributeName"));" is 478.,97
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,DynamoDbLeaderDatabase,Long Identifier,The length of the field leaderUpdateConditionExpression is 31.,113
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,DynamoDbLeaderDatabase,Long Identifier,The length of the field removeLeadershipConditionExpression is 35.,113
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,DynamoDbLeaderDatabase,Long Identifier,The length of the field LEADER_UPDATE_CONDITION_FORMAT is 30.,113
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,DynamoDbLeaderDatabase,Long Parameter List,The method has 10 parameters. ,113
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,formatUpdateLeader,Long Statement,The length of the statement "return String.format(formatString`leaderIdAttributeName`LEADER_ID_PLACEHOLDER`lastUpdateAttributeName`epochMillisPlaceholder);" is 126.,157
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,initialize,Long Statement,The length of the statement "final Collection<AttributeDefinition> attributeDefinitions=Lists.newArrayList(AttributeDefinition.builder().attributeName(hashKeyName).attributeType(ScalarAttributeType.S).build());" is 181.,170
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,initialize,Long Statement,The length of the statement "final Collection<KeySchemaElement> keySchemaElements=Lists.newArrayList(KeySchemaElement.builder().attributeName(hashKeyName).keyType(KeyType.HASH).build());" is 157.,170
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,initialize,Long Statement,The length of the statement "final ProvisionedThroughput provisionedThroughput=ProvisionedThroughput.builder().readCapacityUnits(readCapacityUnits).writeCapacityUnits(writeCapacityUnits).build();" is 166.,170
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,initialize,Long Statement,The length of the statement "final CreateTableRequest createTableRequest=CreateTableRequest.builder().tableName(tableName).keySchema(keySchemaElements).attributeDefinitions(attributeDefinitions).provisionedThroughput(provisionedThroughput).build();" is 219.,170
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,initialize,Long Statement,The length of the statement "logger.info("Created table '{}': Table Status = {}` SDK HTTP Response = {}"`tableName`tableResult.tableDescription().tableStatusAsString()`tableResult.sdkHttpResponse().statusCode());" is 183.,170
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,getLeaderFor,Long Statement,The length of the statement "final Map<String`AttributeValue> resourceRecordKey=Collections.singletonMap(hashKeyName`AttributeValue.builder().s(resourceIdStr).build());" is 139.,218
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,getLeaderFor,Long Statement,The length of the statement "final GetItemRequest request=GetItemRequest.builder().tableName(tableName).key(resourceRecordKey).projectionExpression(leaderIdAttributeName).consistentRead(true).build();" is 171.,218
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,updateLeadershipFor,Long Identifier,The length of the field leaderUpdateConditionExpression is 31.,250
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,updateLeadershipFor,Long Statement,The length of the statement "final Map<String`AttributeValue> resourceRecordKey=Collections.singletonMap(hashKeyName`AttributeValue.builder().s(resourceId).build());" is 136.,250
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,updateLeadershipFor,Long Statement,The length of the statement "expressionAttributeValues.put(NOW_MILLIS_PLACEHOLDER`AttributeValue.builder().n(String.valueOf(now.toEpochMilli())).build());" is 125.,250
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,updateLeadershipFor,Long Statement,The length of the statement "expressionAttributeValues.put(LEADER_TIMEOUT_PLACEHOLDER`AttributeValue.builder().n(String.valueOf(leaderTimeoutInstant.toEpochMilli())).build());" is 146.,250
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,updateLeadershipFor,Long Statement,The length of the statement "final UpdateItemRequest updateRequest=UpdateItemRequest.builder().tableName(tableName).key(resourceRecordKey).updateExpression(leaderUpdateExpression).conditionExpression(leaderUpdateConditionExpression).expressionAttributeValues(expressionAttributeValues).build();" is 265.,250
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,updateLeadershipFor,Magic Number,The method contains a magic number: 3,250
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,removeLeadershipFor,Long Identifier,The length of the field removeLeadershipConditionExpression is 35.,295
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,removeLeadershipFor,Long Statement,The length of the statement "final Map<String`AttributeValue> resourceRecordKey=Collections.singletonMap(hashKeyName`AttributeValue.builder().s(resourceId.getId()).build());" is 144.,295
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,removeLeadershipFor,Long Statement,The length of the statement "final UpdateItemRequest updateRequest=UpdateItemRequest.builder().tableName(tableName).key(resourceRecordKey).updateExpression(removeLeadershipExpression).conditionExpression(removeLeadershipConditionExpression).expressionAttributeValues(expressionAttributeValues).build();" is 273.,295
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,removeLeadershipFor,Magic Number,The method contains a magic number: 2,295
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,waitUntilTableIsActive,Long Statement,The length of the statement "final String message=String.format("Table '%s' did not transition to active within: %s"`tableName`tableActiveTimeout.toString());" is 129.,331
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,waitUntilTableIsActive,Magic Number,The method contains a magic number: 20L,331
Netflix_iep,com.netflix.iep.leader.dynamodb,DynamoDbLeaderDatabase,tableIsActive,Long Statement,The length of the statement "final DescribeTableResponse tableStatusResult=db.describeTable(DescribeTableRequest.builder().tableName(tableName).build());" is 124.,360
Netflix_iep,com.netflix.iep.leader.api,LeaderId,create,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@347fbfae,53
Netflix_iep,com.netflix.iep.admin,StaticResourceHandler,handle,Magic Number,The method contains a magic number: 404,65
Netflix_iep,com.netflix.iep.admin,StaticResourceHandler,handle,Magic Number,The method contains a magic number: 200,65
Netflix_iep,com.netflix.iep.admin,StaticResourceHandler,handle,Magic Number,The method contains a magic number: 4096,65
Netflix_iep,com.netflix.iep.admin,HttpResponse,json,Magic Number,The method contains a magic number: 200,35
Netflix_iep,com.netflix.iep.admin,HttpResponse,json,Magic Number,The method contains a magic number: 500,35
Netflix_iep,com.netflix.iep.admin,AdminServer,AdminServer,Long Statement,The length of the statement "StaticResourceHandler staticHandler=new StaticResourceHandler(Thread.currentThread().getContextClassLoader()`Collections.singletonMap("/ui"`"static/index.html"));" is 162.,45
Netflix_iep,com.netflix.iep.admin,ErrorMessage,ErrorMessage,Magic Number,The method contains a magic number: 500,39
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 400,55
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 500,55
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 500,55
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 500,55
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 400,69
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 500,69
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 500,69
Netflix_iep,com.netflix.iep.admin,BasicHttpEndpoint,get,Magic Number,The method contains a magic number: 500,69
Netflix_iep,com.netflix.iep.admin,DefaultHandler,handle,Complex Conditional,The conditional expression path == null || path.equals("/") || path.startsWith("/baseserver") || path.startsWith("/admin") || path.startsWith("/ui") is complex.,38
Netflix_iep,com.netflix.iep.admin,DefaultHandler,handle,Long Statement,The length of the statement "if (path == null || path.equals("/") || path.startsWith("/baseserver") || path.startsWith("/admin") || path.startsWith("/ui")) {" is 128.,38
Netflix_iep,com.netflix.iep.admin,DefaultHandler,handle,Magic Number,The method contains a magic number: 302,38
Netflix_iep,com.netflix.iep.admin,DefaultHandler,handle,Magic Number,The method contains a magic number: 404,38
Netflix_iep,com.netflix.iep.admin,RequestHandler,handle,Magic Number,The method contains a magic number: 404,44
Netflix_iep,com.netflix.iep.admin,RequestHandler,handle,Magic Number,The method contains a magic number: 404,44
Netflix_iep,com.netflix.iep.admin,RequestHandler,handle,Magic Number,The method contains a magic number: 400,44
Netflix_iep,com.netflix.iep.admin,RequestHandler,handle,Magic Number,The method contains a magic number: 500,44
Netflix_iep,com.netflix.iep.admin,RequestHandler,handleImpl,Magic Number,The method contains a magic number: 200,75
Netflix_iep,com.netflix.iep.admin,RequestHandler,handleImpl,Magic Number,The method contains a magic number: 405,75
Netflix_iep,com.netflix.iep.admin,RequestHandler,handleImpl,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5ce5f021,75
Netflix_iep,com.netflix.iep.admin,AdminConfigTest,defaultPort,Magic Number,The method contains a magic number: 8077,25
Netflix_iep,com.netflix.iep.admin,AdminConfigTest,defaultBacklog,Magic Number,The method contains a magic number: 10,30
Netflix_iep,com.netflix.iep.admin,AdminServerTest,before,Magic Number,The method contains a magic number: 10,51
Netflix_iep,com.netflix.iep.admin,AdminServerTest,backlog,Magic Number,The method contains a magic number: 10,59
Netflix_iep,com.netflix.iep.admin,AdminServerTest,http,Magic Number,The method contains a magic number: 5000,89
Netflix_iep,com.netflix.iep.admin,AdminServerTest,http,Magic Number,The method contains a magic number: 1000,89
Netflix_iep,com.netflix.iep.admin,AdminServerTest,http,Magic Number,The method contains a magic number: 400,89
Netflix_iep,com.netflix.iep.admin,AdminServerTest,http,Magic Number,The method contains a magic number: 4096,89
Netflix_iep,com.netflix.iep.admin,AdminServerTest,get,Magic Number,The method contains a magic number: 200,139
Netflix_iep,com.netflix.iep.admin,AdminServerTest,getGzip,Magic Number,The method contains a magic number: 200,146
Netflix_iep,com.netflix.iep.admin,AdminServerTest,getWithPath,Magic Number,The method contains a magic number: 200,153
Netflix_iep,com.netflix.iep.admin,AdminServerTest,bad,Magic Number,The method contains a magic number: 404,160
Netflix_iep,com.netflix.iep.admin,AdminServerTest,badNotFound,Magic Number,The method contains a magic number: 404,167
Netflix_iep,com.netflix.iep.admin,AdminServerTest,badIllegalArg,Magic Number,The method contains a magic number: 400,174
Netflix_iep,com.netflix.iep.admin,AdminServerTest,badIllegalState,Magic Number,The method contains a magic number: 400,181
Netflix_iep,com.netflix.iep.admin,AdminServerTest,badInternalServer,Magic Number,The method contains a magic number: 500,188
Netflix_iep,com.netflix.iep.admin,AdminServerTest,notFoundEndpoint,Magic Number,The method contains a magic number: 404,195
Netflix_iep,com.netflix.iep.admin,AdminServerTest,unsupportedMethod,Magic Number,The method contains a magic number: 405,201
Netflix_iep,com.netflix.iep.admin,AdminServerTest,uiRedirect,Magic Number,The method contains a magic number: 302,207
Netflix_iep,com.netflix.iep.admin,AdminServerTest,uiRedirect,Magic Number,The method contains a magic number: 302,207
Netflix_iep,com.netflix.iep.admin,AdminServerTest,uiRedirect,Magic Number,The method contains a magic number: 302,207
Netflix_iep,com.netflix.iep.admin,AdminServerTest,uiPage,Magic Number,The method contains a magic number: 200,217
Netflix_iep,com.netflix.iep.admin,AdminServerTest,staticContent,Magic Number,The method contains a magic number: 200,225
Netflix_iep,com.netflix.iep.admin,AdminServerTest,cors,Magic Number,The method contains a magic number: 200,233
Netflix_iep,com.netflix.iep.admin,AdminServerTest,resources,Magic Number,The method contains a magic number: 200,260
Netflix_iep,com.netflix.iep.admin,AdminServerTest,resources,Magic Number,The method contains a magic number: 404,260
Netflix_iep,com.netflix.iep.admin.endpoints,EnvEndpoint,get,Long Statement,The length of the statement "System.getenv().entrySet().stream().filter(e -> e.getKey().startsWith(path)).forEach(e -> props.put(e.getKey()`e.getValue()));" is 126.,31
Netflix_iep,com.netflix.iep.admin.endpoints,ThreadsEndpoint,getAllStackTraces,Long Statement,The length of the statement "return threads.entrySet().stream().filter(e -> e.getKey() != null && e.getValue() != null).collect(Collectors.toMap(Map.Entry::getKey`Map.Entry::getValue));" is 156.,31
Netflix_iep,com.netflix.iep.admin.endpoints,ThreadsEndpoint,threads,Long Statement,The length of the statement "return getAllStackTraces().entrySet().stream().map(e -> new ThreadInfo(e.getKey()`e.getValue())).collect(Collectors.toList());" is 126.,56
Netflix_iep,com.netflix.iep.admin.endpoints,SystemPropsEndpoint,get,Long Statement,The length of the statement "System.getProperties().entrySet().stream().filter(e -> e.getKey().toString().startsWith(path)).forEach(e -> props.put(e.getKey().toString()`e.getValue().toString()));" is 166.,31
Netflix_iep,com.netflix.iep.admin.endpoints,BaseServerEndpoint,get,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2745f704,49
Netflix_iep,com.netflix.iep.admin.endpoints,JmxEndpoint,get,Magic Number,The method contains a magic number: 400,74
Netflix_iep,com.netflix.iep.admin.endpoints,BaseServerEndpointTest,getMetrics,Magic Number,The method contains a magic number: 42.0,62
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,SpectatorEndpointTest,Magic Number,The method contains a magic number: 42,38
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,SpectatorEndpointTest,Magic Number,The method contains a magic number: 42,38
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,SpectatorEndpointTest,Magic Number,The method contains a magic number: 47,38
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,SpectatorEndpointTest,Magic Number,The method contains a magic number: 100.0,38
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getEqualA,Magic Number,The method contains a magic number: 3,95
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getLessThan,Magic Number,The method contains a magic number: 2,101
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getLessThanEqual,Magic Number,The method contains a magic number: 3,107
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getGreaterThanEqual,Magic Number,The method contains a magic number: 2,119
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getIn2,Magic Number,The method contains a magic number: 2,131
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getCounters,Magic Number,The method contains a magic number: 2,149
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getCounter1,Magic Number,The method contains a magic number: 3,156
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getCounter2,Magic Number,The method contains a magic number: 3,164
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getCounter2,Magic Number,The method contains a magic number: 42,164
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getCounter1Or2,Magic Number,The method contains a magic number: 2,172
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getCounter1Or2,Magic Number,The method contains a magic number: 3,172
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getCounter1Or2,Magic Number,The method contains a magic number: 42L,172
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getTimer1,Magic Number,The method contains a magic number: 2,193
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getTimer1,Magic Number,The method contains a magic number: 42000000000L,193
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getDist1,Magic Number,The method contains a magic number: 2,222
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getDist1,Magic Number,The method contains a magic number: 47L,222
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getGauge1,Magic Number,The method contains a magic number: 100.0,231
Netflix_iep,com.netflix.iep.admin.endpoints,SpectatorEndpointTest,getGauge1,Magic Number,The method contains a magic number: 1e-12,231
Netflix_iep,com.netflix.iep.admin.endpoints,ServicesEndpointTest,get,Magic Number,The method contains a magic number: 2,71
Netflix_iep,com.netflix.iep.admin.endpoints,ServicesEndpointTest,get,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2c1df57a,71

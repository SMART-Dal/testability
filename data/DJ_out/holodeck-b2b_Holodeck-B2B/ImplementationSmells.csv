Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,handleToken,Complex Conditional,The conditional expression !trusted && (publicKey != null || certs != null) && validator != null is complex.,126
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,handleToken,Complex Conditional,The conditional expression (certs == null || certs.length == 0 || certs[0] == null) && secretKey == null && publicKey == null is complex.,126
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,handleToken,Complex Method,Cyclomatic complexity of the method is 21,126
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,handleToken,Long Method,The method has 120 lines of code.,126
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,handleToken,Long Statement,The length of the statement "if (!(SecurityTokenReference.SECURITY_TOKEN_REFERENCE.equals(child.getLocalName()) && WSConstants.WSSE_NS.equals(child.getNamespaceURI()))) {" is 141.,126
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,handleToken,Long Statement,The length of the statement "List<WSDataRef> dataRefs=buildProtectedRefs(elem.getOwnerDocument()`xmlSignature.getSignedInfo()`data`data.getWsDocInfo());" is 123.,126
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,verifyXMLSignature,Complex Method,Cyclomatic complexity of the method is 8,285
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,verifyXMLSignature,Long Parameter List,The method has 7 parameters. ,285
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,setElementsOnContext,Complex Conditional,The conditional expression "BinarySecurityToken".equals(element.getLocalName()) && WSConstants.WSSE_NS.equals(element.getNamespaceURI()) && isXopInclude(element) is complex.,384
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,setElementsOnContext,Long Statement,The length of the statement "else if ("BinarySecurityToken".equals(element.getLocalName()) && WSConstants.WSSE_NS.equals(element.getNamespaceURI()) && isXopInclude(element)) {" is 146.,384
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,buildProtectedRefs,Complex Method,Cyclomatic complexity of the method is 10,473
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,dereferenceSTR,Complex Method,Cyclomatic complexity of the method is 8,541
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,dereferenceSTR,Long Statement,The length of the statement "SecurityTokenReference secTokenRef=new SecurityTokenReference((Element)securityTokenReference`requestData.getBSPEnforcer());" is 124.,541
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,testMessageReplay,Complex Conditional,The conditional expression sibling instanceof Element && WSConstants.TIMESTAMP_TOKEN_LN.equals(sibling.getLocalName()) && WSConstants.WSU_NS.equals(sibling.getNamespaceURI()) is complex.,580
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,testMessageReplay,Complex Method,Cyclomatic complexity of the method is 8,580
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,testMessageReplay,Long Parameter List,The method has 5 parameters. ,580
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,testMessageReplay,Long Statement,The length of the statement "if (sibling instanceof Element && WSConstants.TIMESTAMP_TOKEN_LN.equals(sibling.getLocalName()) && WSConstants.WSU_NS.equals(sibling.getNamespaceURI())) {" is 154.,580
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,testMessageReplay,Long Statement,The length of the statement "String identifier=timeStamp.getCreatedString() + "" + Arrays.hashCode(signatureValue)+ ""+ Arrays.hashCode(key.getEncoded());" is 125.,580
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,testMessageReplay,Long Statement,The length of the statement "throw new WSSecurityException(WSSecurityException.ErrorCode.INVALID_SECURITY`"invalidTimestamp"`new Object[]{"A replay attack has been detected"});" is 147.,580
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,checkBSPCompliance,Complex Conditional,The conditional expression !(WSConstants.C14N_EXCL_OMIT_COMMENTS.equals(algorithm) || STRTransform.TRANSFORM_URI.equals(algorithm) || WSConstants.NS_XMLDSIG_FILTER2.equals(algorithm)|| WSConstants.NS_XMLDSIG_ENVELOPED_SIGNATURE.equals(algorithm)|| WSConstants.SWA_ATTACHMENT_COMPLETE_SIG_TRANS.equals(algorithm)|| WSConstants.SWA_ATTACHMENT_CONTENT_SIG_TRANS.equals(algorithm)) is complex.,637
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,checkBSPCompliance,Complex Conditional,The conditional expression i == (reference.getTransforms().size() - 1) && !(WSConstants.C14N_EXCL_OMIT_COMMENTS.equals(algorithm) || STRTransform.TRANSFORM_URI.equals(algorithm) || WSConstants.SWA_ATTACHMENT_COMPLETE_SIG_TRANS.equals(algorithm)|| WSConstants.SWA_ATTACHMENT_CONTENT_SIG_TRANS.equals(algorithm)) is complex.,637
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,checkBSPCompliance,Complex Method,Cyclomatic complexity of the method is 15,637
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,checkBSPCompliance,Long Statement,The length of the statement "if (!(WSConstants.C14N_EXCL_OMIT_COMMENTS.equals(algorithm) || STRTransform.TRANSFORM_URI.equals(algorithm) || WSConstants.NS_XMLDSIG_FILTER2.equals(algorithm)|| WSConstants.NS_XMLDSIG_ENVELOPED_SIGNATURE.equals(algorithm)|| WSConstants.SWA_ATTACHMENT_COMPLETE_SIG_TRANS.equals(algorithm)|| WSConstants.SWA_ATTACHMENT_CONTENT_SIG_TRANS.equals(algorithm))) {" is 357.,637
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SignatureProcessor,checkBSPCompliance,Long Statement,The length of the statement "if (i == (reference.getTransforms().size() - 1) && !(WSConstants.C14N_EXCL_OMIT_COMMENTS.equals(algorithm) || STRTransform.TRANSFORM_URI.equals(algorithm) || WSConstants.SWA_ATTACHMENT_COMPLETE_SIG_TRANS.equals(algorithm)|| WSConstants.SWA_ATTACHMENT_CONTENT_SIG_TRANS.equals(algorithm))) {" is 290.,637
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processHeaders,Complex Method,Cyclomatic complexity of the method is 8,150
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processHeaders,Long Statement,The length of the statement "if (encConfig != null) ((PasswordCallbackHandler)reqData.getCallbackHandler()).addUser(encConfig.getKeystoreAlias().toLowerCase()`encConfig.getCertificatePassword());" is 166.,150
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processHeaders,Long Statement,The length of the statement "log.error("The signature could not be verified because the signature's certificate was not trusted!" + "\n\tDetails: {}"`untrusted.getMessage());" is 145.,150
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processHeaders,Long Statement,The length of the statement "log.error("A problem occurred in the {} action when processing the default WS-Security header!" + "\n\tDetails: {}"`hpf.getFailedAction().name()`hpf.getMessage());" is 163.,150
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processHeaders,Long Statement,The length of the statement "log.error("A problem occurred in processing of the ebms targeted WS-Security header!" + "\n\tDetails: {}"`hpf.getFailedAction().name()`hpf.getMessage());" is 153.,150
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processHeaders,Long Statement,The length of the statement "wsseHdrs.stream().map(h -> (SOAPHeaderBlock)h).filter(soapHdr -> Utils.isNullOrEmpty(soapHdr.getRole()) || soapHdr.getRole().equals(SecurityHeaderTarget.EBMS.id())).forEach(secHdr -> secHdr.setProcessed());" is 206.,150
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,prepare,Magic Number,The method contains a magic number: 300,244
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,prepare,Magic Number,The method contains a magic number: 60,244
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processSecurityHeader,Complex Conditional,The conditional expression node.getNextSibling() == null && nextSibling != null && nextSibling.getParentNode() != null is complex.,295
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processSecurityHeader,Complex Method,Cyclomatic complexity of the method is 10,295
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processSecurityHeader,Long Statement,The length of the statement "throw new SecurityProcessingException("No processor available to execute the " + action + " action in the "+ target+ " WS-Security header!");" is 141.,295
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,processSecurityHeader,Long Statement,The length of the statement "log.error("Execution of the {} action in the {} WS-Security header failed!" + "\n\tDetails: {};{}"`getAction(el)`target`ex.getMsgID()`ex.getMessage());" is 151.,295
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Complex Method,Cyclomatic complexity of the method is 9,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Identifier,The length of the field DEFAULT_KEYTRANSPORT_DIGEST_ALGO is 32.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Statement,The length of the statement "results.add(new UsernameTokenProcessingResult(target`(UsernameToken)utResult.get(WSSecurityEngineResult.TAG_USERNAME_TOKEN)));" is 126.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Statement,The length of the statement "final X509ReferenceType refType=SecurityUtils.getKeyReferenceType((STRParser.REFERENCE_TYPE)signResult.get(WSSecurityEngineResult.TAG_X509_REFERENCE_TYPE));" is 156.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Statement,The length of the statement "results.add(new SignatureProcessingResult(signCert`trustCheck`refType`signAlgorithm`signedPartsInfo.getEbmsHeaderInfo()`signedPartsInfo.getPayloadInfo()));" is 155.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Statement,The length of the statement "final X509ReferenceType refMethod=SecurityUtils.getKeyReferenceType((STRParser.REFERENCE_TYPE)decResult.get(WSSecurityEngineResult.TAG_X509_REFERENCE_TYPE));" is 157.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Statement,The length of the statement "msgUnits.stream().filter(m -> m instanceof IUserMessage).map(userMsg -> ((IUserMessage)userMsg).getPayloads()).filter(umPayloads -> !Utils.isNullOrEmpty(umPayloads)).forEachOrdered(umPayloads -> umPayloads.forEach((p) -> refs.stream().filter(ref -> SecurityUtils.isPayloadEncrypted(p`ref)).forEach(match -> payloads.add(p))));" is 326.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Statement,The length of the statement "final Element encryptedKey=(Element)domEnvelope.getElementsByTagNameNS(SecurityConstants.ENCRYPTED_KEY_ELEM.getNamespaceURI()`SecurityConstants.ENCRYPTED_KEY_ELEM.getLocalPart()).item(0);" is 187.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,convertResults,Long Statement,The length of the statement "final Element encryptionMethod=(Element)encryptedKey.getElementsByTagNameNS(SecurityConstants.ENCRYPTION_METHOD_ELEM.getNamespaceURI()`SecurityConstants.ENCRYPTION_METHOD_ELEM.getLocalPart()).item(0);" is 200.,385
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderProcessor,fetchActionResult,Long Statement,The length of the statement "for (int i=0; i < resultList.size() && result == null; i++) if (action == (Integer)resultList.get(i).get(WSSecurityEngineResult.TAG_ACTION)) result=resultList.get(i);" is 166.,482
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createHeaders,Complex Method,Cyclomatic complexity of the method is 15,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createHeaders,Long Method,The method has 103 lines of code.,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createHeaders,Long Statement,The length of the statement "IUsernameTokenConfiguration utConfig=senderConfig != null ? senderConfig.getUsernameTokenConfiguration(SecurityHeaderTarget.EBMS) : null;" is 137.,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createHeaders,Long Statement,The length of the statement "final IEncryptionConfiguration encryptionCfg=receiverConfig != null ? receiverConfig.getEncryptionConfiguration() : null;" is 121.,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createHeaders,Long Statement,The length of the statement "log.error("A problem occurred when executing the {} action in the default header!" + "\n\tDetails: {}"`hpf.getFailedAction().name()`hpf.getMessage());" is 150.,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupEncryption,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(msgUnits) && msgUnits.stream().filter(msgUnit -> msgUnit instanceof IUserMessage).map(userMsg -> ((IUserMessage)userMsg).getPayloads()).filter(umPayloads -> !Utils.isNullOrEmpty(umPayloads)).anyMatch(umPayloads -> umPayloads.stream().anyMatch(p -> p.getContainment() == IPayload.Containment.BODY))) processingParams.put(ConfigurationConstants.ENCRYPTION_PARTS`(msgContext.isSOAP11() ? SecurityConstants.WSS4J_PART_S11_BODY : SecurityConstants.WSS4J_PART_S12_BODY));" is 490.,298
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupEncryption,Long Statement,The length of the statement "if (WSS4JConstants.KEYTRANSPORT_RSAOAEP_XENC11.equalsIgnoreCase(ktAlgorithm)) processingParams.put(ConfigurationConstants.ENC_MGF_ALGO`ktConfig.getMGFAlgorithm());" is 163.,298
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupEncryption,Long Statement,The length of the statement "processingParams.put(ConfigurationConstants.ENC_KEY_ID`SecurityUtils.getWSS4JX509KeyId(ktConfig.getKeyReferenceMethod()));" is 122.,298
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupSigning,Long Statement,The length of the statement "processingParams.put(ConfigurationConstants.SIGNATURE_PARTS`SecurityConstants.WSS4J_PART_EBMS_HEADER + (msgContext.isSOAP11() ? SecurityConstants.WSS4J_PART_S11_BODY : SecurityConstants.WSS4J_PART_S12_BODY));" is 208.,335
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupSigning,Long Statement,The length of the statement "processingParams.put(ConfigurationConstants.OPTIONAL_SIGNATURE_PARTS`SecurityConstants.WSS4J_PART_UT + SecurityConstants.WSS4J_PART_ATTACHMENTS);" is 145.,335
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupSigning,Long Statement,The length of the statement "((PasswordCallbackHandler)processingParams.get(ConfigurationConstants.PW_CALLBACK_REF)).addUser(signingConfig.getKeystoreAlias().toLowerCase()`signingConfig.getCertificatePassword());" is 183.,335
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupSigning,Long Statement,The length of the statement "processingParams.put(ConfigurationConstants.SIG_KEY_ID`SecurityUtils.getWSS4JX509KeyId(signingConfig.getKeyReferenceMethod()));" is 127.,335
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupSigning,Long Statement,The length of the statement "if (signingConfig.getKeyReferenceMethod() == X509ReferenceType.BSTReference && (signingConfig.includeCertificatePath() != null ? signingConfig.includeCertificatePath() : false)) processingParams.put(ConfigurationConstants.USE_SINGLE_CERTIFICATE`"false");" is 254.,335
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupUsernameToken,Long Statement,The length of the statement "((PasswordCallbackHandler)processingParams.get(ConfigurationConstants.PW_CALLBACK_REF)).addUser(utConfig.getUsername()`utConfig.getPassword());" is 143.,370
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,setupUsernameToken,Long Statement,The length of the statement "processingParams.put(ConfigurationConstants.PASSWORD_TYPE`utConfig.getPasswordType() == UTPasswordType.DIGEST ? WSConstants.PW_DIGEST : WSConstants.PW_TEXT);" is 157.,370
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createSecurityHeader,Long Statement,The length of the statement "throw new SecurityProcessingException("Could not setup processing environment for creating the " + target.name() + " security header"`wse);" is 139.,389
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createSecurityHeader,Long Statement,The length of the statement "if (doit == null) throw new WSSecurityException(WSSecurityException.ErrorCode.FAILURE`"No executor available for performing the " + convertAction(actionToDo) + " action");" is 171.,389
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,createSecurityHeader,Long Statement,The length of the statement "throw new SecurityProcessingException("Could not setup processing environment for performing the " + convertAction(actionToDo) + "action in the "+ target.id()+ " security header"`wse);" is 184.,389
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,prepare,Long Statement,The length of the statement "private static final String HB2B_ID_PREFIX="4b28" + VersionInfo.majorVersion + VersionInfo.minorVersion+ VersionInfo.patchVersion;" is 130.,434
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,prepare,Long Statement,The length of the statement "if (getStringOption(ConfigurationConstants.ENC_KEY_TRANSPORT).equals(WSConstants.KEYTRANSPORT_RSA15)) throw new WSSecurityException(WSSecurityException.ErrorCode.UNSUPPORTED_ALGORITHM`"RSA-1_5 is not supported");" is 212.,434
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,getSignatureResults,Long Statement,The length of the statement "return new SignatureProcessingResult(new SecurityProcessingException("Signing operation did not sign any part of the message"));" is 128.,517
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,getSignatureResults,Long Statement,The length of the statement "final X509Certificate cert=(X509Certificate)certManager.getKeyPair(signingConfig.getKeystoreAlias()`signingConfig.getCertificatePassword()).getCertificate();" is 157.,517
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,getSignatureResults,Long Statement,The length of the statement "return new SignatureProcessingResult(cert`signingConfig.getKeyReferenceMethod()`signingConfig.getSignatureAlgorithm()`signedPartsData.getEbmsHeaderInfo()`signedPartsData.getPayloadInfo());" is 188.,517
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,getEncryptionResults,Long Statement,The length of the statement "msgUnits.stream().filter(msgUnit -> msgUnit instanceof IUserMessage).map(userMsg -> ((IUserMessage)userMsg).getPayloads()).filter(umPayloads -> !Utils.isNullOrEmpty(umPayloads)).forEachOrdered((umPayloads) -> umPayloads.stream().filter(p -> p.getContainment() != IPayload.Containment.EXTERNAL).forEach(p -> encryptedPayloads.add(p)));" is 334.,547
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,getEncryptionResults,Long Statement,The length of the statement "return new EncryptionProcessingResult(cert`ktInfo.getKeyReferenceMethod()`ktInfo.getAlgorithm()`ktInfo.getDigestAlgorithm()`ktInfo.getMGFAlgorithm()`encryptionConfig.getAlgorithm()`encryptedPayloads);" is 200.,547
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,getUsernameTokenResults,Long Statement,The length of the statement "return new UsernameTokenProcessingResult(target`new SecurityProcessingException("Username token operation did not add a username token to the message!"));" is 154.,573
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,SecurityHeaderCreator,getUsernameTokenResults,Long Statement,The length of the statement "return new UsernameTokenProcessingResult(target`utConfig.getUsername()`password`utConfig.getPasswordType()`nonce`created);" is 122.,573
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,DefaultProvider,init,Magic Number,The method contains a magic number: 2,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security,DefaultProvider,getCertManager,Long Statement,The length of the statement "throw new SecurityProcessingException("An incompatible Certificate Manager [" + hb2bCertManager.getName() + "] is installed!");" is 127.,86
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.results,UsernameTokenProcessingResult,UsernameTokenProcessingResult,Long Parameter List,The method has 6 parameters. ,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.results,UsernameTokenProcessingResult,UsernameTokenProcessingResult,Long Statement,The length of the statement "this.passwordType=WSConstants.PASSWORD_DIGEST.equals(wss4jToken.getPasswordType()) ? UTPasswordType.DIGEST : UTPasswordType.TEXT;" is 129.,80
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.results,SignedPartMetadata,SignedPartMetadata,Long Statement,The length of the statement "if (!SecurityConstants.REFERENCE_ELEM.getLocalPart().equals(reference.getLocalName()) || !SecurityConstants.REFERENCE_ELEM.getNamespaceURI().equals(reference.getNamespaceURI())) throw new IllegalArgumentException("Argument must be a ds:Reference element!");" is 257.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.results,SignedPartMetadata,SignedPartMetadata,Long Statement,The length of the statement "for (int j=0; j < transformElems.getLength(); j++) digestTransforms.add(new TransformMetadata((Element)transformElems.item(j)));" is 128.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SecurityUtils,getWSS4JX509KeyId,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5241547,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SecurityUtils,getSignedPartsInfo,Long Statement,The length of the statement "messageUnits.stream().filter(msgUnit -> msgUnit instanceof IUserMessage).map(userMsg -> ((IUserMessage)userMsg).getPayloads()).filter(umPayloads -> !Utils.isNullOrEmpty(umPayloads)).forEachOrdered(umPayloads -> umPayloads.forEach((p) -> sigRefs.stream().filter(ref -> isPayloadSigned(p`ref.getAttribute("URI")`domEnvelope)).forEach(match -> payloadDigests.put(p`new SignedPartMetadata(match)))));" is 396.,96
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SecurityUtils,isPayloadEncrypted,Long Statement,The length of the statement "return protectedElement != null && protectedElement.getLocalName().equals("Body") && (protectedElement.getNamespaceURI().equals("http://schemas.xmlsoap.org/soap/envelope/") || protectedElement.getNamespaceURI().equals("http://www.w3.org/2003/05/soap-envelope"));" is 262.,164
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SecurityUtils,getSignatureReferences,Long Statement,The length of the statement "final NodeList signatureElems=wsSecHeader.getElementsByTagNameNS(SecurityConstants.SIGNATURE_ELEM.getNamespaceURI()`SecurityConstants.SIGNATURE_ELEM.getLocalPart());" is 165.,262
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SecurityUtils,getSignatureReferences,Long Statement,The length of the statement "NodeList referenceElems=((Element)signatureElems.item(0)).getElementsByTagNameNS(SecurityConstants.REFERENCE_ELEM.getNamespaceURI()`SecurityConstants.REFERENCE_ELEM.getLocalPart());" is 181.,262
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SigningConfigWithDefaults,getKeyReferenceMethod,Long Statement,The length of the statement "return original.getKeyReferenceMethod() != null ? original.getKeyReferenceMethod() : DefaultSecurityAlgorithms.KEY_REFERENCE;" is 125.,55
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SigningConfigWithDefaults,getSignatureAlgorithm,Long Statement,The length of the statement "return !Utils.isNullOrEmpty(original.getSignatureAlgorithm()) ? original.getSignatureAlgorithm() : DefaultSecurityAlgorithms.SIGNATURE;" is 135.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.util,SigningConfigWithDefaults,getHashFunction,Long Statement,The length of the statement "return !Utils.isNullOrEmpty(original.getHashFunction()) ? original.getHashFunction() : DefaultSecurityAlgorithms.MESSAGE_DIGEST;" is 128.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.callbackhandlers,AttachmentCallbackHandler,handle,Long Statement,The length of the statement "final DataHandler dh=new DataHandler(new AttachmentDataSource(resultAttachment.getMimeType()`resultAttachment.getSourceStream()));" is 130.,50
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.security.callbackhandlers,PasswordCallbackHandler,handle,Long Statement,The length of the statement "if (!(callbacks[0] instanceof WSPasswordCallback)) throw new UnsupportedCallbackException(callbacks[0]`"Can not handle this type of callback!");" is 144.,50
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.callbackhandlers,AttachmentCallbackHandlerTest,setUpClass,Long Statement,The length of the statement "baseDir=AttachmentCallbackHandlerTest.class.getClassLoader().getResource(AttachmentCallbackHandlerTest.class.getName().replace('.'`'/')).getPath();" is 147.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.callbackhandlers,AttachmentCallbackHandlerTest,testHandleAllAttachmentRequestCallback,Magic Number,The method contains a magic number: 2,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,init,Complex Conditional,The conditional expression !KeystoreUtils.check(privateKeystorePath`privateKeystorePwd) || !KeystoreUtils.check(partnerKeystorePath`partnerKeystorePwd) || !KeystoreUtils.check(trustKeystorePath`trustKeystorePwd) is complex.,147
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,init,Long Statement,The length of the statement "JAXBElement<CertManagerConfigurationType> rootConfigElement=(JAXBElement<CertManagerConfigurationType>)jaxbUnmarshaller.unmarshal(cfgFilePath.toFile());" is 152.,147
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,init,Long Statement,The length of the statement "performRevocationCheck=certMgrConfig.isPerformRevocationCheck() == null ? false : certMgrConfig.isPerformRevocationCheck();" is 123.,147
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,init,Long Statement,The length of the statement "enableDirectTrust=certMgrConfig.isDirectTrustPartnerCertificates() == null ? false : certMgrConfig.isDirectTrustPartnerCertificates();" is 134.,147
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,init,Long Statement,The length of the statement "if (!KeystoreUtils.check(privateKeystorePath`privateKeystorePwd) || !KeystoreUtils.check(partnerKeystorePath`partnerKeystorePwd) || !KeystoreUtils.check(trustKeystorePath`trustKeystorePwd)) {" is 191.,147
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,init,Long Statement,The length of the statement "logMsg.append("\tRevocation check : ").append(performRevocationCheck).append('\n').append("\tDirect trust : ").append(enableDirectTrust).append('\n').append("\tKey stores: ").append('\n').append("\t\tPrivate keys :").append(privateKeystorePath).append('\n').append("\t\tPartner certs :").append(partnerKeystorePath).append('\n').append("\t\tTrust anchors :").append(trustKeystorePath).append('\n');" is 398.,147
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,getKeyPair,Long Statement,The length of the statement "return !ks.containsAlias(alias) ? null : (KeyStore.PrivateKeyEntry)ks.getEntry(alias`new KeyStore.PasswordProtection(password.toCharArray()));" is 142.,221
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,getKeyPair,Long Statement,The length of the statement "log.error("Problem retrieving key pair with alias {} from keystore!" + "\n\tError details: {}-{}"`alias`ex.getClass().getSimpleName()`ex.getMessage());" is 151.,221
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,getCertificate,Long Statement,The length of the statement "log.error("Problem retrieving certificate with alias {} from partner keystore!" + "\n\tError details: {}"`alias`ex.getMessage());" is 129.,264
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,findCertificate,Long Statement,The length of the statement "log.error("Problem finding the trading partner certificate [Issuer/SerialNo={}/{}] in keystore!" + "\n\tError details: {}"`cert.getIssuerX500Principal().getName()`cert.getSerialNumber().toString()`ex.getMessage());" is 214.,286
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,findCertificate,Long Statement,The length of the statement "log.error("Problem finding the trading partner certificate [Issuer/SerialNo={}/{}] in keystore!" + "\n\tError details: {}"`issuer.getName()`serial.toString()`ex.getMessage());" is 175.,299
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,findCertificate,Long Statement,The length of the statement "log.error("Problem finding the trading partner certificate [SKI={}] in keystore!" + "\n\tError details: {}"`Hex.encodeHexString(skiBytes)`ex.getMessage());" is 155.,319
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,findCertificate,Magic Number,The method contains a magic number: 4,319
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,validateTrust,Complex Conditional,The conditional expression performRevocationCheck && (reason == BasicReason.UNSPECIFIED || reason == BasicReason.UNDETERMINED_REVOCATION_STATUS) is complex.,342
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,validateTrust,Complex Method,Cyclomatic complexity of the method is 13,342
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,validateTrust,Empty catch clause,The method has an empty catch block.,342
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,validateTrust,Long Statement,The length of the statement "if (certs.size() == 1) log.debug("Validate trust of single certificate for Subject: {}"`certs.get(0).getSubjectDN().getName());" is 127.,342
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,validateTrust,Long Statement,The length of the statement "if (performRevocationCheck && (reason == BasicReason.UNSPECIFIED || reason == BasicReason.UNDETERMINED_REVOCATION_STATUS)) {" is 124.,342
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,validateTrust,Long Statement,The length of the statement "return new ValidationResult(Trust.WITH_WARNINGS`cpToCheck`"Revocation could not be checked"`new SecurityProcessingException("Revocaction check failed"`validationException));" is 173.,342
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,getTrustAnchorsFromKeyStore,Long Statement,The length of the statement "while (aliases.hasMoreElements()) trustanchors.add(new TrustAnchor((X509Certificate)ks.getCertificate(aliases.nextElement())`null));" is 132.,446
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,DefaultCertManager,getWSS4JCrypto,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@14f88659,486
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.trust,ValidationResult,ValidationResult,Long Statement,The length of the statement "if (details != null && trust == Trust.OK) throw new IllegalArgumentException("Cannot specify exception for successful validation");" is 131.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.interfaces.pmode.validation,InvalidPModeException,getMessage,Long Statement,The length of the statement "for ( PModeValidationError e : errors) msg.append(e.getParameterInError()).append(":").append(e.getErrorDescription()).append('`');" is 131.,57
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.interfaces.security,SignatureTrustException,SignatureTrustException,Long Statement,The length of the statement "if (result.getTrust() == Trust.OK) throw new IllegalArgumentException("Exception not allowed for successfull trust validation");" is 128.,46
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,JPAEntityHelper,wrapInEntity,Long Statement,The length of the statement "else if (jpaObject instanceof SelectivePullRequest) msgUnitEntity=(V)new SelectivePullRequestEntity((SelectivePullRequest)jpaObject);" is 133.,36
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getPersistenceUnitInfo,Complex Conditional,The conditional expression Utils.isNullOrEmpty(dbPath) || !Files.isDirectory(Paths.get(dbPath)) || !Files.isWritable(Paths.get(dbPath)) is complex.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getPersistenceUnitInfo,Long Statement,The length of the statement "return Arrays.asList("org.holodeckb2b.persistency.jpa.AgreementReference"`"org.holodeckb2b.persistency.jpa.CollaborationInfo"`"org.holodeckb2b.persistency.jpa.Description"`"org.holodeckb2b.persistency.jpa.EbmsError"`"org.holodeckb2b.persistency.jpa.ErrorMessage"`"org.holodeckb2b.persistency.jpa.MessageUnit"`"org.holodeckb2b.persistency.jpa.MessageUnitProcessingState"`"org.holodeckb2b.persistency.jpa.PartyId"`"org.holodeckb2b.persistency.jpa.Payload"`"org.holodeckb2b.persistency.jpa.Property"`"org.holodeckb2b.persistency.jpa.PullRequest"`"org.holodeckb2b.persistency.jpa.Receipt"`"org.holodeckb2b.persistency.jpa.SchemaReference"`"org.holodeckb2b.persistency.jpa.SelectivePullRequest"`"org.holodeckb2b.persistency.jpa.Service"`"org.holodeckb2b.persistency.jpa.TradingPartner"`"org.holodeckb2b.persistency.jpa.UserMessage");" is 828.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getPersistenceUnitInfo,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(dbPath) || !Files.isDirectory(Paths.get(dbPath)) || !Files.isWritable(Paths.get(dbPath))) dbPath="db";" is 126.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getPersistenceUnitInfo,Magic Number,The method contains a magic number: 20,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getManagedClassNames,Long Statement,The length of the statement "return Arrays.asList("org.holodeckb2b.persistency.jpa.AgreementReference"`"org.holodeckb2b.persistency.jpa.CollaborationInfo"`"org.holodeckb2b.persistency.jpa.Description"`"org.holodeckb2b.persistency.jpa.EbmsError"`"org.holodeckb2b.persistency.jpa.ErrorMessage"`"org.holodeckb2b.persistency.jpa.MessageUnit"`"org.holodeckb2b.persistency.jpa.MessageUnitProcessingState"`"org.holodeckb2b.persistency.jpa.PartyId"`"org.holodeckb2b.persistency.jpa.Payload"`"org.holodeckb2b.persistency.jpa.Property"`"org.holodeckb2b.persistency.jpa.PullRequest"`"org.holodeckb2b.persistency.jpa.Receipt"`"org.holodeckb2b.persistency.jpa.SchemaReference"`"org.holodeckb2b.persistency.jpa.SelectivePullRequest"`"org.holodeckb2b.persistency.jpa.Service"`"org.holodeckb2b.persistency.jpa.TradingPartner"`"org.holodeckb2b.persistency.jpa.UserMessage");" is 828.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getProperties,Complex Conditional,The conditional expression Utils.isNullOrEmpty(dbPath) || !Files.isDirectory(Paths.get(dbPath)) || !Files.isWritable(Paths.get(dbPath)) is complex.,134
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getProperties,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(dbPath) || !Files.isDirectory(Paths.get(dbPath)) || !Files.isWritable(Paths.get(dbPath))) dbPath="db";" is 126.,134
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.util,EntityManagerUtil,getProperties,Magic Number,The method contains a magic number: 20,134
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitsInState,Long Statement,The length of the statement "final String queryString="SELECT mu " + "FROM " + jpaEntityClass.getSimpleName() + " mu JOIN FETCH mu.states s1 "+ "WHERE mu.DIRECTION = :direction "+ "AND s1.PROC_STATE_NUM = (SELECT MAX(s2.PROC_STATE_NUM) FROM mu.states s2) "+ "AND s1.STATE IN :states "+ "ORDER BY mu.MU_TIMESTAMP";" is 284.,55
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitsInState,Long Statement,The length of the statement "jpaResult=em.createQuery(queryString`jpaEntityClass).setParameter("direction"`direction).setParameter("states"`Arrays.asList(states)).getResultList();" is 150.,55
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitsWithId,Long Statement,The length of the statement "final TypedQuery<MessageUnit> query=em.createQuery(queryString.toString()`MessageUnit.class).setParameter("msgId"`messageId);" is 125.,85
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitsWithLastStateChangedBefore,Long Statement,The length of the statement "final String queryString="SELECT mu " + "FROM MessageUnit mu JOIN FETCH mu.states s1 " + "WHERE s1.PROC_STATE_NUM = (SELECT MAX(s2.PROC_STATE_NUM) FROM mu.states s2) "+ "AND s1.START <= :beforeDate";" is 199.,119
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitsWithLastStateChangedBefore,Long Statement,The length of the statement "jpaResult=em.createQuery(queryString`MessageUnit.class).setParameter("beforeDate"`maxLastChangeDate`TemporalType.TIMESTAMP).getResultList();" is 140.,119
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitsForPModesInState,Long Statement,The length of the statement "final String queryString="SELECT mu " + "FROM " + jpaEntityClass.getSimpleName() + " mu JOIN FETCH mu.states s1 "+ "WHERE mu.PMODE_ID IN :pmodeIds "+ "AND s1.PROC_STATE_NUM = (SELECT MAX(s2.PROC_STATE_NUM) FROM mu.states s2) "+ "AND s1.STATE = :state "+ "ORDER BY mu.MU_TIMESTAMP";" is 281.,145
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitsForPModesInState,Long Statement,The length of the statement "jpaResult=em.createQuery(queryString`jpaEntityClass).setParameter("pmodeIds"`pmodeIds).setParameter("state"`state).getResultList();" is 131.,145
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,loadCompletely,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(userMsg.getMessageProperties())) for ( final IProperty p : userMsg.getMessageProperties()) p.getName();" is 128.,200
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getNumberOfTransmissions,Long Statement,The length of the statement "final String query="SELECT COUNT(s1.STATE) " + "FROM UserMessage um JOIN um.states s1 " + "WHERE um.MESSAGE_ID = :msgId "+ "AND s1.STATE = :state";" is 147.,218
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getNumberOfTransmissions,Long Statement,The length of the statement "result=em.createQuery(query`Long.class).setParameter("msgId"`userMessage.getMessageId()).setParameter("state"`ProcessingState.SENDING).getSingleResult().intValue();" is 164.,218
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,isAlreadyProcessed,Long Statement,The length of the statement "final String query="SELECT COUNT(um) " + "FROM UserMessage um JOIN um.states s1 " + "WHERE um.DIRECTION = org.holodeckb2b.interfaces.messagemodel.Direction.IN "+ "AND um.MESSAGE_ID = :msgId "+ "AND s1.PROC_STATE_NUM = (SELECT MAX(s2.PROC_STATE_NUM) FROM um.states s2) "+ "AND s1.STATE IN ( org.holodeckb2b.interfaces.processingmodel.ProcessingState.DELIVERED` "+ "org.holodeckb2b.interfaces.processingmodel.ProcessingState.FAILURE)";" is 433.,245
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManager,getMessageUnitHistory,Long Statement,The length of the statement "final String queryString="SELECT mu " + "FROM MessageUnit mu JOIN mu.states s " + "WHERE s.PROC_STATE_NUM = 0 "+ "AND s.START <= :start "+ "ORDER BY s.START DESC";" is 163.,274
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManager,storeMessageUnit,Long Statement,The length of the statement "if (messageUnit.getDirection() == Direction.OUT && !Utils.isNullOrEmpty(HolodeckB2BCoreInterface.getQueryManager().getMessageUnitsWithId(messageUnit.getMessageId()`Direction.OUT))) throw new PersistenceException("The messageId of the message unit (" + messageUnit.getMessageId() + ") already exists!");" is 302.,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManager,storeMessageUnit,Long Statement,The length of the statement "catch ( NoSuchMethodException|SecurityException|InstantiationException|IllegalAccessException|IllegalArgumentException|InvocationTargetException ex) {" is 150.,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManager,setProcessingState,Long Statement,The length of the statement "MessageUnit jpaMsgUnit=em.find(MessageUnit.class`((MessageUnitEntity)msgUnit).getOID()`LockModeType.OPTIMISTIC_FORCE_INCREMENT);" is 128.,104
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsInState,Long Statement,The length of the statement "List<IUserMessageEntity> usrMsgOnlyResult=queryManager.getMessageUnitsInState(IUserMessage.class`Direction.OUT`new ProcessingState[]{ProcessingState.SUBMITTED});" is 161.,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsInState,Long Statement,The length of the statement "List<IMessageUnitEntity> result=queryManager.getMessageUnitsInState(IMessageUnit.class`Direction.OUT`new ProcessingState[]{ProcessingState.DELIVERED});" is 151.,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsInState,Long Statement,The length of the statement "result=queryManager.getMessageUnitsInState(IMessageUnit.class`Direction.IN`new ProcessingState[]{ProcessingState.FAILURE});" is 123.,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsInState,Long Statement,The length of the statement "result=queryManager.getMessageUnitsInState(IMessageUnit.class`Direction.IN`new ProcessingState[]{ProcessingState.FAILURE`ProcessingState.RECEIVED`ProcessingState.DONE});" is 169.,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsInState,Magic Number,The method contains a magic number: 3,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsInState,Magic Number,The method contains a magic number: 4,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getNumberOfTransmissions,Magic Number,The method contains a magic number: 2,123
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsWithId,Magic Number,The method contains a magic number: 3,137
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsWithId,Magic Number,The method contains a magic number: 2,137
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsForPModesInState,Long Statement,The length of the statement "List<IMessageUnitEntity> result=queryManager.getMessageUnitsForPModesInState(IUserMessage.class`pmodeIds`ProcessingState.DELIVERED);" is 132.,165
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsForPModesInState,Magic Number,The method contains a magic number: 3,165
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsForPModesInState,Magic Number,The method contains a magic number: 2,165
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsWithLastStateChangedBefore,Magic Number,The method contains a magic number: 15,205
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsWithLastStateChangedBefore,Magic Number,The method contains a magic number: 10,205
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsWithLastStateChangedBefore,Magic Number,The method contains a magic number: 6,205
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,getMessageUnitsWithLastStateChangedBefore,Magic Number,The method contains a magic number: 5,205
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,ensureCompletelyLoaded,Long Statement,The length of the statement "assertTrue(CompareUtils.areEqual(retrievedPayload.getProperties().iterator().next()`originalPayload.getProperties().iterator().next()));" is 136.,242
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,QueryManagerTest,ensureCompletelyLoaded,Long Statement,The length of the statement "assertTrue(CompareUtils.areEqual(TestData.userMsg1.getMessageProperties().iterator().next()`userMessage.getMessageProperties().iterator().next()));" is 147.,242
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,shutDown,Complex Conditional,The conditional expression em != null && em.isOpen() && em.getTransaction().isActive() is complex.,123
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storeUserMessage,Long Statement,The length of the statement "UserMessageEntity userMsg=updManager.storeMessageUnit(new org.holodeckb2b.common.messagemodel.UserMessage(TestData.userMsg1));" is 126.,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storeUserMessage,Long Statement,The length of the statement "assertEquals(TestData.userMsg1.getCurrentProcessingState().getStartTime()`userMsg.getCurrentProcessingState().getStartTime());" is 126.,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storeUserMessage,Long Statement,The length of the statement "assertTrue(CompareUtils.areEqual(orgPayload.getProperties().iterator().next()`savedPayload.getProperties().iterator().next()));" is 127.,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storeUserMessage,Long Statement,The length of the statement "assertTrue(CompareUtils.areEqual(TestData.userMsg1.getCollaborationInfo().getService()`userMsg.getCollaborationInfo().getService()));" is 133.,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storeUserMessage,Long Statement,The length of the statement "assertTrue(CompareUtils.areEqual(TestData.userMsg1.getMessageProperties().iterator().next()`userMsg.getMessageProperties().iterator().next()));" is 143.,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storeReceipt,Long Statement,The length of the statement "ReceiptEntity receiptEntity=updManager.storeMessageUnit(new org.holodeckb2b.common.messagemodel.Receipt(TestData.receipt6));" is 124.,175
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storePullRequest,Long Statement,The length of the statement "assertEquals(TestData.pull7.getAgreementRef().getName()`((ISelectivePullRequest)pullEntity).getAgreementRef().getName());" is 121.,191
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,storePullRequest,Long Statement,The length of the statement "assertEquals(TestData.pull7.getAgreementRef().getType()`((ISelectivePullRequest)pullEntity).getAgreementRef().getType());" is 121.,191
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setProcessingState,Magic Number,The method contains a magic number: 2,239
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setProcessingState,Magic Number,The method contains a magic number: 2,239
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setProcessingState,Magic Number,The method contains a magic number: 2,239
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setProcessingState,Magic Number,The method contains a magic number: 2,239
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setProcessingState,Magic Number,The method contains a magic number: 3,239
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setProcessingState,Magic Number,The method contains a magic number: 3,239
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,deleteMessageUnit,Empty catch clause,The method has an empty catch block.,323
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,deleteMessageUnit,Long Statement,The length of the statement "final List<MessageUnitEntity> allMsgUnits=JPAEntityHelper.wrapInEntity(em.createQuery("from MessageUnit"`MessageUnit.class).getResultList());" is 141.,323
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setPayloadInformation,Magic Number,The method contains a magic number: 2,388
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setPayloadInformation,Magic Number,The method contains a magic number: 2,388
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setPayloadInformation,Magic Number,The method contains a magic number: 2,388
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setPayloadInformation,Magic Number,The method contains a magic number: 2,388
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,setPayloadInformation,Magic Number,The method contains a magic number: 2,388
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,sameLoadedState,Empty catch clause,The method has an empty catch block.,477
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.managers,UpdateManagerTest,sameLoadedState,Long Statement,The length of the statement "UserMessageEntity userMsg=updManager.storeMessageUnit(new org.holodeckb2b.common.messagemodel.UserMessage(TestData.userMsg1));" is 126.,477
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 11,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 9,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 8,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 8,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 8,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 5,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 5,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 4,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 4,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 3,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.test,TestData,createTestSet,Magic Number,The method contains a magic number: 3,315
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModeXMLView,PModeXMLView,Magic Number,The method contains a magic number: 4,59
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModeXMLView,drawUnselectedText,Long Parameter List,The method has 5 parameters. ,82
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,CertificatesPanel,CertificatesPanel,Magic Number,The method contains a magic number: 5,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,CertificatesPanel,CertificatesPanel,Magic Number,The method contains a magic number: 5,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,CertificatesPanel,CertificatesPanel,Magic Number,The method contains a magic number: 5,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,CertificatesPanel,CertificatesPanel,Magic Number,The method contains a magic number: 12,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,CertificatesPanel,CertificatesPanel,Magic Number,The method contains a magic number: 21,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,ViewUtils,setColumnAndTableSize,Long Statement,The length of the statement "comp=table.getDefaultRenderer(String.class).getTableCellRendererComponent(table`table.getModel().getValueAt(j`i)`false`false`0`i);" is 130.,34
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,ViewUtils,setColumnAndTableSize,Long Statement,The length of the statement "if (table.getParent() != null && tableWidth < table.getParent().getSize().width) column.setPreferredWidth(table.getParent().getSize().width - (tableWidth - column.getPreferredWidth()));" is 185.,34
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,ViewUtils,setColumnAndTableSize,Magic Number,The method contains a magic number: 15,34
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,ViewUtils,setColumnAndTableSize,Magic Number,The method contains a magic number: 15,34
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Long Statement,The length of the statement "msgUnitsTable.getTableHeader().setFont(msgUnitsTable.getFont().deriveFont(Font.BOLD`msgUnitsTable.getFont().getSize() + 1));" is 124.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Long Statement,The length of the statement "msgUnitsTable.getColumnModel().getColumn(MessageHistoryData.STATE_COLUMN).setCellRenderer(new DefaultTableCellRenderer(){" is 121.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Long Statement,The length of the statement "controller.retrieveMessageUnitHistory(Date.from(dateTimePicker.getDateTimePermissive().toInstant(ZoneOffset.UTC))`Integer.parseInt((String)comboBox.getSelectedItem()));" is 168.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 12,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 21,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 255,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 153,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,MessageHistoryPanel,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,setValue,Magic Number,The method contains a magic number: 255,87
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,setValue,Magic Number,The method contains a magic number: 153,87
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageHistoryPanel,actionPerformed,Long Statement,The length of the statement "controller.retrieveMessageUnitHistory(Date.from(dateTimePicker.getDateTimePermissive().toInstant(ZoneOffset.UTC))`Integer.parseInt((String)comboBox.getSelectedItem()));" is 168.,170
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Empty catch clause,The method has an empty catch block.,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 605,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 196,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 600,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 120,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 30,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 125,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 600,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 40,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 175,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 604,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 20,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,SplashScreen,Magic Number,The method contains a magic number: 2000,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,run,Empty catch clause,The method has an empty catch block.,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,run,Magic Number,The method contains a magic number: 2000,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,close,Empty catch clause,The method has an empty catch block.,97
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,SplashScreen,close,Magic Number,The method contains a magic number: 2000,97
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 100,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 100,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 879,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 593,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 19,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 9,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 16,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 16,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 16,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 16,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 5,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 11,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,MainWindow,Magic Number,The method contains a magic number: 11,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,createSomeExampleMsgData,Magic Number,The method contains a magic number: 4,163
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,createSomeExampleMsgData,Magic Number,The method contains a magic number: 24,163
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,createSomeExampleMsgData,Magic Number,The method contains a magic number: 14,163
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,createSomeExampleMsgData,Magic Number,The method contains a magic number: 32,163
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,createSomeExampleMsgData,Magic Number,The method contains a magic number: 4,163
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MainWindow,createSomeExampleMsgData,Magic Number,The method contains a magic number: 12,163
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 5,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 5,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 5,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 12,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 21,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 1.5,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 5,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 0.1,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 2,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 5,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,PModesPanel,PModesPanel,Magic Number,The method contains a magic number: 2,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 5,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 5,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 5,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 12,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 21,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 20,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 0.1,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 2,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 2,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 10,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 15,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 5.0,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 2,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 4.0,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.views,MessageStatusPanel,MessageStatusPanel,Magic Number,The method contains a magic number: 2,73
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui,HB2BMonitoringApp,main,Long Statement,The length of the statement "JOptionPane.showMessageDialog(mainWindow != null ? mainWindow : splash`"An error occurred during processing:\n" + t.getMessage()`"Error"`JOptionPane.ERROR_MESSAGE);" is 164.,91
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui,HB2BMonitoringApp,main,Magic Number,The method contains a magic number: 10,91
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui,HB2BMonitoringApp,retrieveMessageUnitHistory,Long Statement,The length of the statement "JOptionPane.showMessageDialog(mainWindow`"An error occurred while retrieving the message history:\n" + e.getMessage()`"Error"`JOptionPane.ERROR_MESSAGE);" is 153.,208
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui,HB2BMonitoringApp,retrieveProcessingStates,Long Statement,The length of the statement "JOptionPane.showMessageDialog(mainWindow`"An error occurred while retrieving the message status:\n" + e.getMessage()`"Error"`JOptionPane.ERROR_MESSAGE);" is 152.,226
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui,HB2BMonitoringApp,retrievePModes,Long Statement,The length of the statement "JOptionPane.showMessageDialog(mainWindow`"An error occurred while retrieving the P-Modes:\n" + e.getMessage()`"Error"`JOptionPane.ERROR_MESSAGE);" is 145.,245
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui,HB2BMonitoringApp,retrieveCertificates,Long Statement,The length of the statement "JOptionPane.showMessageDialog(mainWindow`"An error occurred while retrieving the certificates:\n" + e.getMessage()`"Error"`JOptionPane.ERROR_MESSAGE);" is 150.,260
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageHistoryData,getValueAt,Complex Method,Cyclomatic complexity of the method is 8,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageHistoryData,getValueAt,Magic Number,The method contains a magic number: 2,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageHistoryData,getValueAt,Magic Number,The method contains a magic number: 3,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageHistoryData,getValueAt,Magic Number,The method contains a magic number: 4,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageHistoryData,getValueAt,Magic Number,The method contains a magic number: 5,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageHistoryData,getValueAt,Magic Number,The method contains a magic number: 6,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,PModesData,getValueAt,Complex Method,Cyclomatic complexity of the method is 9,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,PModesData,getValueAt,Magic Number,The method contains a magic number: 2,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,PModesData,getValueAt,Magic Number,The method contains a magic number: 3,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,PModesData,getValueAt,Magic Number,The method contains a magic number: 4,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Complex Method,Cyclomatic complexity of the method is 10,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 2,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 3,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 16,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 4,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 5,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 6,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 4,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,CertificatesData,getValueAt,Magic Number,The method contains a magic number: 7,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageUnitStatesData,getValueAt,Magic Number,The method contains a magic number: 2,80
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageUnitStatesData,getStatesModel,Complex Conditional,The conditional expression 0 <= i && msgUnits != null && i < msgUnits.length is complex.,94
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.gui.models,MessageUnitStatesData,getStatesModel,Long Statement,The length of the statement "if (0 <= i && msgUnits != null && i < msgUnits.length) return new DefaultTableModel(msgUnits[i].getProcessingStates().parallelStream().map(s -> new String[]{s.getState().name()`Utils.toXMLDateTime(s.getStartTime())}).collect(Collectors.toList()).toArray(new Object[][]{})`STATES_LIST_COLUMNS);" is 293.,94
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,CommandLineArguments,CommandLineArguments,Complex Method,Cyclomatic complexity of the method is 11,92
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,CommandLineArguments,CommandLineArguments,Long Statement,The length of the statement "for (int j=0; j < curAction.options.length && o == null; j++) if (curAction.options[j].flag.equals(clArgs[i])) o=curAction.options[j];" is 134.,92
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,CommandLineArguments,CommandLineArguments,Long Statement,The length of the statement "for (int i=0; i < curAction.options.length && arp; i++) arp&=!curAction.options[i].isRequired || parameters.containsKey(curAction.options[i].flag);" is 147.,92
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,main,Complex Method,Cyclomatic complexity of the method is 8,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,main,Magic Number,The method contains a magic number: 2,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,listPModes,Magic Number,The method contains a magic number: 3,115
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printPMode,Long Statement,The length of the statement "System.out.printf("<!--%nThis P-Mode was extracted from Holodeck B2B instance %s on %tc%n-->%n"`hb2bHostName`new Date());" is 121.,174
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printPMode,Long Statement,The length of the statement "System.err.println("An error occurred while creating the P-Mode XML document! Error details:\n" + Utils.getExceptionTrace(e));" is 126.,174
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printPMode,Magic Number,The method contains a magic number: 3,174
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,listCerts,Magic Number,The method contains a magic number: 3,217
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,listCerts,Magic Number,The method contains a magic number: 16,217
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,listCerts,Magic Number,The method contains a magic number: 4,217
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printCert,Long Statement,The length of the statement "System.err.println("An error occurred while getting the certificate from the Holodeck B2B instance. See error details below:");" is 127.,273
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printCert,Long Statement,The length of the statement "System.out.println("There is no " + type.toString() + " certificate configured on this Holodeck B2B instance with alias= "+ alias);" is 131.,273
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printCert,Magic Number,The method contains a magic number: 3,273
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printCert,Magic Number,The method contains a magic number: 16,273
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,printCert,Magic Number,The method contains a magic number: 4,273
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getMsgStatus,Long Statement,The length of the statement "System.err.println("An error occurred while getting the status from the Holodeck B2B instance. See error details below:");" is 122.,320
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getMsgStatus,Magic Number,The method contains a magic number: 3,320
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getMsgStatusList,Long Statement,The length of the statement "System.err.println("An error occurred while getting the status from the Holodeck B2B instance. See error details below:");" is 122.,358
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getMsgStatusList,Magic Number,The method contains a magic number: 3,358
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Long Statement,The length of the statement "System.err.println("An error occurred while getting the message meta-data from the Holodeck B2B instance. See error details below:");" is 133.,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Long Statement,The length of the statement "final String template="| %-24s | %-" + mxStatus + "s | %1s | %1s | %-"+ mxMsgId+ "s | %-"+ mxRefTo+ "s | %-"+ mxPMode+ "s |";" is 125.,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Long Statement,The length of the statement "for ( MessageUnit m : msgUnits) System.out.println(String.format(template`Utils.toXMLDateTime(m.getTimestamp())`m.getCurrentProcessingState().getState().name()`MessageUnitUtils.getMessageUnitName(m).charAt(0)`m.getDirection() == Direction.IN ? "R" : "S"`m.getMessageId()`!Utils.isNullOrEmpty(m.getRefToMessageId()) ? m.getRefToMessageId() : ""`!Utils.isNullOrEmpty(m.getPModeId()) ? m.getPModeId() : ""));" is 405.,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Magic Number,The method contains a magic number: 10,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Magic Number,The method contains a magic number: 3,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Magic Number,The method contains a magic number: 9,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Magic Number,The method contains a magic number: 12,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Magic Number,The method contains a magic number: 8,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.app.cli,HB2BInfoTool,getHistory,Magic Number,The method contains a magic number: 13,400
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.api,RMIServer,setParameters,Empty catch clause,The method has an empty catch block.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ui.api,RMIServer,setParameters,Long Statement,The length of the statement "log.warn("Invalid or no value provided for the \"port\" parameter ({}). Using default port {}"`parameters.get(P_PORT)`CoreInfo.DEFAULT_PORT);" is 141.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,ReceptionAwarenessConfig,validate,Long Statement,The length of the statement "if (maxRetries != null) if (fixedInterval == null) throw new ValueRequiredException("ReceptionAwareness/RetryInterval must have positive non zero value if MaxRetries is set");" is 175.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,ReceptionAwarenessConfig,validate,Long Statement,The length of the statement "else if (!Utils.isNullOrEmpty(flexibleIntervalsText)) throw new ElementException("Invalid combination of MaxRetries and WaitIntervals settings");" is 145.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,ReceptionAwarenessConfig,calculateIntervals,Long Statement,The length of the statement "if (flexibleIntervalsText.endsWith("`")) throw new TextException("WaitIntervals does not contain valid list of intervals!");" is 124.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,UserMessageFlow,UserMessageFlow,Long Statement,The length of the statement "this.errorHandling=source.getErrorHandlingConfiguration() != null ? new ErrorHandlingConfig(source.getErrorHandlingConfiguration()) : null;" is 139.,54
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,UserMessageFlow,UserMessageFlow,Long Statement,The length of the statement "this.customValidations=source.getCustomValidationConfiguration() != null ? new CustomValidationConfiguration(source.getCustomValidationConfiguration()) : null;" is 159.,54
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,EventHandlerConfig,convertToClasses,Complex Method,Cyclomatic complexity of the method is 8,85
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,EventHandlerConfig,convertToClasses,Long Statement,The length of the statement "if (!IMessageProcessingEventHandlerFactory.class.isAssignableFrom(Class.forName(handlerFactoryClass))) throw new PersistenceException("%s is not a IMessageProcessingEventHandlerFactory!"`handlerFactoryClass);" is 208.,85
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PullRequestSecurityConfig,PullRequestSecurityConfig,Long Statement,The length of the statement "this.signingConfiguration=source.getSignatureConfiguration() != null ? new SigningConfig(source.getSignatureConfiguration()) : null;" is 132.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PayloadProfile,PayloadProfile,Long Statement,The length of the statement "this.useAS4Compression=(((IAS4PayloadProfile)source).getCompressionType()).equalsIgnoreCase(IAS4PayloadProfile.GZIP_CONTENT_TYPE);" is 130.,43
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,ReceiptConfiguration,ReceiptConfiguration,Long Statement,The length of the statement "this.receiptDelivery=source.getReceiptDelivery() != null ? new DeliveryConfiguration(source.getReceiptDelivery()) : null;" is 121.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,KeyReferenceMethodConverter,read,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@17bbad08,37
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,KeyReferenceMethodConverter,write,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2468f13,49
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PartnerConfig,PartnerConfig,Long Statement,The length of the statement "this.securityConfig=source.getSecurityConfiguration() != null ? new SecurityConfig(source.getSecurityConfiguration()) : null;" is 125.,62
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,Leg,Leg,Long Statement,The length of the statement "this.receiptConfig=source.getReceiptConfiguration() != null ? new ReceiptConfiguration(source.getReceiptConfiguration()) : null;" is 128.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,Leg,Leg,Long Statement,The length of the statement "if (source.getReceptionAwareness() != null) this.rcptAwareness=new ReceptionAwarenessConfig(source.getReceptionAwareness());" is 124.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,Leg,Leg,Long Statement,The length of the statement "this.defaultDelivery=source.getDefaultDelivery() != null ? new DeliveryConfiguration(source.getDefaultDelivery()) : null;" is 121.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PModeWatcher,doPostProcessing,Long Statement,The length of the statement "log.error("The P-Mode originally contained in '" + f.getName() + "' with ID ["+ oldPModeId+ "] is removed` but the new P-Mode could not be loaded!");" is 149.,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PModeWatcher,doPostProcessing,Long Statement,The length of the statement "else if (newPModeId.equals(oldPModeId)) log.info("Loaded changed P-Mode [" + newPModeId + "] from file '"+ f.getName()+ "'");" is 125.,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PModeWatcher,doPostProcessing,Long Statement,The length of the statement "else log.info("P-Mode [" + oldPModeId + "] originally contained in '"+ f.getName()+ "' is replaced by"+ " new P-Mode with ID ["+ newPModeId+ "]");" is 146.,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PModeWatcher,addPMode,Long Statement,The length of the statement "log.error("PMode from '" + f.getAbsolutePath() + " could not be read."+ " Error details: "+ Utils.getExceptionTrace(ex));" is 121.,151
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PModeWatcher,addPMode,Long Statement,The length of the statement "log.error("DUPLICATE P-Mode.ID detected! The P-Mode.ID [" + pmodeId + "] of P-Mode in '"+ f.getAbsolutePath()+ "' is also registered in '"+ Utils.getKeyByValue(fileToPModeMap`pmodeId)+ "'!");" is 191.,151
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PModeWatcher,addPMode,Long Statement,The length of the statement "log.error("There was a problem adding P-Mode from file " + f.getAbsolutePath() + " to the P-Mode set!"+ "\n\tError message: "+ pmse.getMessage());" is 146.,151
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PModeWatcher,removePMode,Long Statement,The length of the statement "log.error("Problem removing P-Mode with id [" + pmodeID + "] from P-Mode set!"+ "\n\tError message: "+ pmse.getMessage());" is 122.,196
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PMode,solveDepencies,Complex Conditional,The conditional expression k instanceof String && dep != null && dep instanceof DeliveryConfiguration is complex.,178
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PMode,solveDepencies,Long Statement,The length of the statement "if (k instanceof String && dep != null && dep instanceof DeliveryConfiguration) ((DeliveryConfiguration)dep).setId(this.pmodeId.id + "-" + new SimpleDateFormat("HHmmss").format(new Date())+ "-"+ k);" is 198.,178
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PMode,getLeg,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5e889a88,273
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,ValidationLevelConverter,read,Empty catch clause,The method has an empty catch block.,18
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,ValidationLevelConverter,read,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@57242f74,18
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,ValidationLevelConverter,write,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1dbd1b75,43
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PullRequestFlow,PullRequestFlow,Long Statement,The length of the statement "this.securityCfg=source.getSecurityConfiguration() != null ? new PullRequestSecurityConfig(source.getSecurityConfiguration()) : null;" is 133.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,PullRequestFlow,PullRequestFlow,Long Statement,The length of the statement "this.errorHandling=source.getErrorHandlingConfiguration() != null ? new ErrorHandlingConfig(source.getErrorHandlingConfiguration()) : null;" is 139.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,SecurityConfig,SecurityConfig,Long Statement,The length of the statement "this.signingConfiguration=source.getSignatureConfiguration() != null ? new SigningConfig(source.getSignatureConfiguration()) : null;" is 132.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,SecurityConfig,SecurityConfig,Long Statement,The length of the statement "this.encryptionConfiguration=source.getEncryptionConfiguration() != null ? new EncryptionConfig(source.getEncryptionConfiguration()) : null;" is 140.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,SecurityConfig,findUTConfig,Long Statement,The length of the statement "for (int i=0; i < usernameTokens.size() && idx == -1; i++) if (Utils.nullSafeEqual(target.id()`usernameTokens.get(i).target)) idx=i;" is 132.,89
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,AgreementTest,testReadComplete,Long Statement,The length of the statement "final Agreement agreement=createObject("<tns:Agreement xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <tns:type>type4</tns:type>"+ " <tns:name>name2</tns:name>"+ "</tns:Agreement>");" is 262.,35
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,AgreementTest,testReadNameOnly,Long Statement,The length of the statement "final Agreement agreement=createObject("<Agreement xmlns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <name>name2</name>"+ "</Agreement>");" is 211.,49
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,AgreementTest,testReadNameOnly,Long Statement,The length of the statement "final Agreement agreement2=createObject("<tns:Agreement xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + "<tns:type/>"+ "<tns:name>anotherName</tns:name>"+ "</tns:Agreement>");" is 252.,49
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,AgreementTest,testReadNoName,Long Statement,The length of the statement "final Agreement agreement=createObject("<tns:Agreement xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <tns:type>type4</tns:type>"+ "</tns:Agreement>");" is 231.,71
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,AbstractBaseTest,findElements,Long Statement,The length of the statement "NodeList elements=factory.newDocumentBuilder().parse(new InputSource(new StringReader(xml))).getElementsByTagName(localName);" is 125.,110
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,CustomValidationConfigurationTest,readComplete,Long Statement,The length of the statement "final CustomValidationConfiguration cvc=createObject("<CustomValidation xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <ExecuteInOrder>true</ExecuteInOrder>"+ " <StopValidationOn>FAILURE</StopValidationOn>"+ " <RejectMessageOn>WARN</RejectMessageOn>"+ " <Validator>"+ " <id>validator-1</id>"+ " <ValidatorFactoryClass>org.holodeckb2b.test.FakeValidator</ValidatorFactoryClass>"+ " </Validator>"+ " <Validator>"+ " <id>validator-2</id>"+ " <ValidatorFactoryClass>org.holodeckb2b.test.NOPValidator</ValidatorFactoryClass>"+ " </Validator>"+ "</CustomValidation>");" is 642.,37
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,CustomValidationConfigurationTest,readComplete,Magic Number,The method contains a magic number: 2,37
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,CustomValidationConfigurationTest,readDefaults,Long Statement,The length of the statement "final CustomValidationConfiguration cvc=createObject("<CustomValidation xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <Validator>"+ " <id>validator-1</id>"+ " <ValidatorFactoryClass>org.holodeckb2b.test.FakeValidator</ValidatorFactoryClass>"+ " </Validator>"+ "</CustomValidation>");" is 364.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,CustomValidationConfigurationTest,readNoValidator,Long Statement,The length of the statement "final CustomValidationConfiguration cvc=createObject("<CustomValidation xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <ExecuteInOrder>true</ExecuteInOrder>"+ " <StopValidationOn>FAILURE</StopValidationOn>"+ " <RejectMessageOn>WARN</RejectMessageOn>"+ "</CustomValidation>");" is 355.,80
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,CustomValidationConfigurationTest,writeMultipleValidators,Magic Number,The method contains a magic number: 2,146
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,readComplete,Long Statement,The length of the statement "final BusinessInfo bi=createObject("<BusinessInfo xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <Action>StoreMessage</Action>\n"+ " <Mpc>http://test.holodeck-b2b.org/mpc/other</Mpc>\n"+ " <Service>\n"+ " <name>Examples</name>\n"+ " <type>org:holodeckb2b:services</type>\n"+ " </Service>\n"+ " <Property>\n"+ " <name>msgP1</name>\n"+ " <value>some_Extra/Info</value>\n"+ " </Property>\n"+ " <Property>\n"+ " <name>msgP2</name>\n"+ " <value>some_more/Info</value>\n"+ " </Property>\n"+ "</BusinessInfo>");" is 584.,35
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,readComplete,Magic Number,The method contains a magic number: 2,35
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,readEmpty,Long Statement,The length of the statement "final BusinessInfo bi=createObject("<BusinessInfo xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>");" is 175.,64
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,readCActionOnly,Long Statement,The length of the statement "final BusinessInfo bi=createObject("<BusinessInfo xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <Action>StoreMessage</Action>\n"+ "</BusinessInfo>");" is 230.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,readMPCOnly,Long Statement,The length of the statement "final BusinessInfo bi=createObject("<BusinessInfo xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <Mpc>http://test.holodeck-b2b.org/mpc/other</Mpc>\n"+ "</BusinessInfo>");" is 250.,92
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,readServiceOnly,Long Statement,The length of the statement "final BusinessInfo bi=createObject("<BusinessInfo xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <Service>\n"+ " <name>Examples</name>\n"+ " <type>org:holodeckb2b:services</type>\n"+ " </Service>\n"+ "</BusinessInfo>");" is 299.,107
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,readPropertyOnly,Long Statement,The length of the statement "final BusinessInfo bi=createObject("<BusinessInfo xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <Property>\n"+ " <name>msgP1</name>\n"+ " <value>some_Extra/Info</value>\n"+ " </Property>\n"+ "</BusinessInfo>");" is 291.,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,writeComplete,Magic Number,The method contains a magic number: 3,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,writeNoAction,Magic Number,The method contains a magic number: 3,164
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,writeNoMpc,Magic Number,The method contains a magic number: 3,182
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,BusinessInfoTest,writeNoService,Magic Number,The method contains a magic number: 2,200
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,DeliveryConfigurationTest,readComplete,Long Statement,The length of the statement "final DeliveryConfiguration dc=createObject("<DefaultDelivery xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <DeliveryMethod>org.holodeckb2b.test.FakeVDelivery</DeliveryMethod>"+ " <Parameter>"+ " <name>param-1</name>"+ " <value>setting1</value>"+ " </Parameter>"+ " <Parameter>"+ " <name>param2-2</name>"+ " <value>http://someurl.holodeck-b2b.org</value>"+ " </Parameter>"+ "</DefaultDelivery>");" is 477.,35
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,DeliveryConfigurationTest,readComplete,Magic Number,The method contains a magic number: 2,35
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,DeliveryConfigurationTest,readFactoryOnly,Long Statement,The length of the statement "final DeliveryConfiguration dc=createObject("<DefaultDelivery xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <DeliveryMethod>org.holodeckb2b.test.FakeVDelivery</DeliveryMethod>"+ "</DefaultDelivery>");" is 281.,57
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,DeliveryConfigurationTest,readNoFactory,Long Statement,The length of the statement "final DeliveryConfiguration dc=createObject("<DefaultDelivery xmlns:tns=\"http://holodeck-b2b.org/schemas/2014/10/pmode\"" + " xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" + " <Parameter>"+ " <name>param-1</name>"+ " <value>setting1</value>"+ " </Parameter>"+ "</DefaultDelivery>");" is 295.,70
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,DeliveryConfigurationTest,writeComplete,Magic Number,The method contains a magic number: 2,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.pmode,DeliveryConfigurationTest,testCopy,Magic Number,The method contains a magic number: 2,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.handlers,AbstractBaseHandler,flowComplete,Long Statement,The length of the statement "if (!runOnlyAsResponder || mc.isServerSide()) doFlowComplete(MessageProcessingContext.getFromMessageContext(mc)`prepareLog(mc));" is 128.,106
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.handlers,AbstractBaseHandler,prepareLog,Long Statement,The length of the statement "return LogManager.getLogger("org.holodeckb2b.msgproc." + (!Utils.isNullOrEmpty(handledMsgProtocol) ? handledMsgProtocol + "." : "") + currentFlowName+ "."+ getHandlerDesc().getName());" is 184.,118
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.handlers,AbstractUserMessageHandler,doProcessing,Long Statement,The length of the statement "IUserMessageEntity userMessage=currentFlow == MessageContext.IN_FLOW || currentFlow == MessageContext.IN_FAULT_FLOW ? procCtx.getReceivedUserMessage() : procCtx.getSendingUserMessage();" is 185.,36
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolConfiguration,hasConfigChanged,Long Statement,The length of the statement "log.error("An error occurred while checking status of config file {}. Error was: {}"`path.toString()`e.getClass().getSimpleName());" is 131.,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerConfig,getDelay,Magic Number,The method contains a magic number: 1000,96
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolConfigurationTest,testNAonInit,Empty catch clause,The method has an empty catch block.,43
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolConfigurationTest,testNAonReload,Empty catch clause,The method has an empty catch block.,54
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolConfigurationTest,testModified,Magic Number,The method contains a magic number: 10,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolConfigurationTest,testGetConfig,Magic Number,The method contains a magic number: 5,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolCfgDocumentTest,testCompleteConfig,Long Statement,The length of the statement "params.entrySet().parallelStream().allMatch(e -> expected.containsKey(e.getKey()) && expected.get(e.getKey()).equals(e.getValue()));" is 132.,46
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolCfgDocumentTest,testCompleteConfig,Magic Number,The method contains a magic number: 5,46
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolCfgDocumentTest,testCompleteConfig,Magic Number,The method contains a magic number: 2,46
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolCfgDocumentTest,testCompleteConfig,Magic Number,The method contains a magic number: 4,46
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workerpool,XMLWorkerPoolCfgDocumentTest,testInvalidFile,Empty catch clause,The method has an empty catch block.,94
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,AbstractDirWatcher,getFileList,Long Statement,The length of the statement "final File[] fileList=dir.listFiles(( final File file) -> file.isFile() && (ext != null ? file.getName().toLowerCase().endsWith("." + ext) : true));" is 148.,76
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,AbstractPathWatcher,setParameters,Long Statement,The length of the statement "else if (!Paths.get(dir).isAbsolute()) watchPath=HolodeckB2BCoreInterface.getConfiguration().getHolodeckB2BHome().resolve(dir).toString();" is 138.,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,AbstractPathWatcher,doProcessing,Complex Conditional,The conditional expression j == N.length || (i < O.length && O[i].path.compareTo(N[j].getAbsolutePath()) < 0) is complex.,130
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,AbstractPathWatcher,doProcessing,Complex Method,Cyclomatic complexity of the method is 8,130
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,AbstractPathWatcher,doProcessing,Long Statement,The length of the statement "log.debug("Processed " + watchPath + "` "+ (r + c + n)+ " changes: "+ r+ " files removed` "+ n+ " files added and "+ c+ " files modified.");" is 140.,130
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,FileWatcherTest,setUp,Empty catch clause,The method has an empty catch block.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,FileWatcherTest,testFileChanged,Magic Number,The method contains a magic number: 1000,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,DirWatcherTest,testFirstRun,Magic Number,The method contains a magic number: 4,93
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,DirWatcherTest,testAddToEnd,Magic Number,The method contains a magic number: 4,105
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,DirWatcherTest,testDeleteFirst,Magic Number,The method contains a magic number: 4,129
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,DirWatcherTest,testDeleteAndAdd,Magic Number,The method contains a magic number: 4,148
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.workers,DirWatcherTest,testDeleteAndAdd,Magic Number,The method contains a magic number: 2,148
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.security.results,EncryptionProcessingResult,EncryptionProcessingResult,Long Parameter List,The method has 7 parameters. ,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.security.results,SignatureProcessingResult,SignatureProcessingResult,Long Parameter List,The method has 5 parameters. ,64
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.security.results,SignatureProcessingResult,SignatureProcessingResult,Long Parameter List,The method has 6 parameters. ,80
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.util,CompareUtils,areEqual,Long Statement,The length of the statement "for (final Iterator<? extends IPartyId> it2=pids2.iterator(); !exists && it2.hasNext(); i++) if (exists=areEqual(pi1`it2.next())) checked[i]=true;" is 146.,50
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.util,CompareUtils,areEqual,Long Statement,The length of the statement "return Utils.nullSafeEqual(p1.getName()`p2.getName()) && Utils.nullSafeEqual(p1.getValue()`p2.getValue()) && Utils.nullSafeEqual(p1.getType()`p2.getType());" is 156.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.util,CompareUtils,areEqual,Long Statement,The length of the statement "return Utils.nullSafeEqual(pl1.getContainment()`pl2.getContainment()) && Utils.nullSafeEqual(pl1.getPayloadURI()`pl2.getPayloadURI()) && Utils.nullSafeEqual(pl1.getContentLocation()`pl2.getContentLocation());" is 208.,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.util,MessageUnitUtils,errorSignalToString,Long Statement,The length of the statement "errorMsg.append(errorSignal.getMessageId()).append("` referenced message id=").append(getRefToMessageId(errorSignal)).append("\n").append("List of errors:");" is 157.,102
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.util,MessageUnitUtils,errorSignalToString,Long Statement,The length of the statement "errorMsg.append("ebMS error:\n").append("\tCode=").append(error.getErrorCode()).append("\tMessage=").append(error.getMessage()).append("\tSeverity= ").append(error.getSeverity());" is 179.,102
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.util,MessageUnitUtils,errorSignalToString,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(error.getDescription().getLanguage())) errorMsg.append("[").append(error.getDescription().getLanguage()).append("]");" is 142.,102
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.util,MessageUnitUtils,getMessageProperty,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(property) || userMessage == null) throw new IllegalArgumentException("Both User Message and property name must be specified");" is 150.,138
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.events.impl,AbstractSignatureEvent,AbstractSignatureEvent,Long Statement,The length of the statement "this.payloadDigests=payloadDigests == null ? null : (Map<IPayload`ISignedPartMetadata>)Collections.unmodifiableMap(payloadDigests);" is 131.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.events.impl,MessageSubmission,MessageSubmission,Long Statement,The length of the statement "if (failureReason == null) throw new IllegalArgumentException("Failure reason must be specified in case of a failed submission");" is 129.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.events,SyncEventProcessor,raiseEvent,Long Statement,The length of the statement "final List<IMessageProcessingEventConfiguration> eventHandlers=leg == null ? null : leg.getMessageProcessingEventConfiguration();" is 129.,64
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.events,SyncEventProcessor,handleEvent,Long Statement,The length of the statement "log.error("Could not create factory instance (specified class name={}) due to a {}"`c.getFactoryClass()`ex.getClass().getSimpleName());" is 135.,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.events,SyncEventProcessor,handleEvent,Long Statement,The length of the statement "log.warn("An exception occurred when {} [id={}] was processed by {}.\n\tException details:"`eventType`event.getId()`handlerClassname`Utils.getExceptionTrace(t));" is 161.,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.events,NullEventHandler,createHandler,Long Statement,The length of the statement "if (exceptionToThrow != null) if (exceptionToThrow instanceof MessageProccesingEventHandlingException) throw (MessageProccesingEventHandlingException)exceptionToThrow;" is 167.,33
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.events,NullEventHandler,handleEvent,Long Statement,The length of the statement "if (exceptionToThrow != null) if (exceptionToThrow instanceof MessageProccesingEventHandlingException) throw (MessageProccesingEventHandlingException)exceptionToThrow;" is 167.,38
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getLeg,Complex Method,Cyclomatic complexity of the method is 10,71
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getLeg,Long Statement,The length of the statement "final Collection<IMessageUnitEntity> rfdMsgs=HolodeckB2BCore.getQueryManager().getMessageUnitsWithId(refToMsgInError`m.getDirection() == Direction.IN ? Direction.OUT : Direction.IN);" is 182.,71
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getSendLeg,Complex Method,Cyclomatic complexity of the method is 8,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getSendLeg,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@183fa616,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getReceiveLeg,Complex Method,Cyclomatic complexity of the method is 8,165
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getReceiveLeg,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1fd8aa75,165
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getOutPullRequestFlow,Complex Conditional,The conditional expression leg != null && doesHolodeckB2BTrigger(leg) && !Utils.isNullOrEmpty(leg.getPullRequestFlows()) is complex.,213
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getOutPullRequestFlow,Long Statement,The length of the statement "if (leg != null && doesHolodeckB2BTrigger(leg) && !Utils.isNullOrEmpty(leg.getPullRequestFlows())) return leg.getPullRequestFlows().iterator().next();" is 150.,213
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getInPullRequestLeg,Magic Number,The method contains a magic number: 2,242
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeUtils,getOutPullLeg,Magic Number,The method contains a magic number: 2,273
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,PModeManager,Complex Method,Cyclomatic complexity of the method is 8,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,PModeManager,Long Statement,The length of the statement "if (storageProv.hasNext()) log.warn("Multiple P-Mode storage implementations are installed` only using first one found");" is 121.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,PModeManager,Long Statement,The length of the statement "log.error("Could not initialise the P-Mode storage implementation: {}. Error details: {}"`deployedPModes.getName()`initFailure.getMessage());" is 141.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,PModeManager,Long Statement,The length of the statement "else if (acceptNonValidable) log.warn("To reduce risk of issues during exchanges it's NOT RECOMMENDED to accept non validable P-Modes!");" is 137.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,PModeManager,Long Statement,The length of the statement "StringBuilder logMsg=new StringBuilder("Initialized P-Mode manager:\n").append("\tP-Mode storage implentation : ").append(deployedPModes.getClass().getName()).append('\n').append("\tAccept/reject non validable : ").append(acceptNonValidable ? "Accept" : "Reject").append('\n').append("\tRegistered validators:\n");" is 314.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,add,Long Statement,The length of the statement "log.error("Could not deploy new P-Mode due to exception in storage implementation! Error message: {}"`deploymentException.getMessage());" is 136.,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,replace,Long Statement,The length of the statement "log.error("Could not replace P-Mode due to exception in storage implementation! Error message: {}"`deploymentException.getMessage());" is 133.,165
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManager,validatePMode,Long Statement,The length of the statement "List<IPModeValidator> applicableV=validators.parallelStream().filter(v -> v.doesValidate(mepBinding)).collect(Collectors.toList());" is 131.,180
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManagerTest,testStorageLoading,Empty catch clause,The method has an empty catch block.,82
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManagerTest,testValidatorLoading,Long Statement,The length of the statement "assertTrue(validators.parallelStream().anyMatch(v -> v.getName().equals(new TestValidatorAllWrong().getName())) && validators.parallelStream().anyMatch(v -> v.getName().equals(new TestValidatorAllGood().getName())));" is 216.,119
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManagerTest,testValidatorLoading,Magic Number,The method contains a magic number: 2,119
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManagerTest,testInvalidConfig,Empty catch clause,The method has an empty catch block.,150
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManagerTest,testPModeValidation,Empty catch clause,The method has an empty catch block.,190
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.pmode,PModeManagerTest,testPModeRejectInvalid,Empty catch clause,The method has an empty catch block.,215
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,MessageProcessingContext,getReceivedMessageUnit,Long Statement,The length of the statement "Optional<IMessageUnitEntity> refdMsgUnit=getReceivedMessageUnits().parallelStream().filter(mu -> messageId.equals(mu.getMessageId())).findFirst();" is 146.,325
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,MessageProcessingContext,getSendingMessageUnit,Long Statement,The length of the statement "Optional<IMessageUnitEntity> refdMsgUnit=getSendingMessageUnits().parallelStream().filter(mu -> messageId.equals(mu.getMessageId())).findFirst();" is 145.,356
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,MessageProcessingContext,getPrimaryMessageUnit,Complex Method,Cyclomatic complexity of the method is 9,410
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,MessageProcessingContext,getSecurityProcessingResults,Long Statement,The length of the statement "return (Collection<T>)securityResults.parallelStream().filter(r -> type.isAssignableFrom(r.getClass())).collect(Collectors.toList());" is 133.,446
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreModule,init,Long Statement,The length of the statement "log.fatal("Invalid Holodeck B2B Core module configuration! Name in configuration is: {}` expected was: {}"`am.getName()`HOLODECKB2B_CORE_MODULE);" is 145.,46
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BServer,start,Empty catch clause,The method has an empty catch block.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BServer,start,Long Statement,The length of the statement "for ( Entry<String`String> fm : faultyModules.entrySet()) logMsg.append("\t\t").append(fm.getKey()).append(" - ").append(fm.getValue()).append('\n');" is 149.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BServer,start,Long Statement,The length of the statement "for ( Entry<String`String> fs : faultyServices.entrySet()) logMsg.append("\t\t").append(fs.getKey()).append(" - ").append(fs.getValue()).append('\n');" is 150.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,HolodeckB2BCoreImpl,Complex Method,Cyclomatic complexity of the method is 8,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,HolodeckB2BCoreImpl,Long Statement,The length of the statement "log.fatal("Cannot start Holodeck B2B because P-Mode manager couldn't be initialised!\n\tError details: {}"`e.getMessage());" is 123.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,HolodeckB2BCoreImpl,Long Statement,The length of the statement "log.error("Could not initialize the event processor - {} : {}"`eventProcessor.getName()`initializationFailure.getMessage());" is 124.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,HolodeckB2BCoreImpl,Long Statement,The length of the statement "log.error("Could not initialize the persistency provider - {} : {}"`persistencyProvider.getName()`initializationFailure.getMessage());" is 134.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,HolodeckB2BCoreImpl,Long Statement,The length of the statement "log.error("Could not initialize the certificate manager - {} : {}"`certManager.getName()`initializationFailure.getMessage());" is 125.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,HolodeckB2BCoreImpl,Long Statement,The length of the statement "log.fatal("Could not load workers from file {}. Error details: {}"`instanceConfiguration.getWorkerPoolCfgFile()`Utils.getExceptionTrace(corePoolCfgError));" is 155.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,HolodeckB2BCoreImpl,Long Statement,The length of the statement "throw new AxisFault("Unable to start Holodeck B2B. Could not load workers from file " + instanceConfiguration.getWorkerPoolCfgFile());" is 134.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,shutdown,Magic Number,The method contains a magic number: 10,237
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,getMessageDeliverer,Long Statement,The length of the statement "catch ( ClassNotFoundException|InstantiationException|IllegalAccessException|ClassCastException|MessageDeliveryException ex) {" is 126.,267
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,getMessageDeliverer,Long Statement,The length of the statement "log.error("The factory for delivery specification [{}] could not be created! Error details: {}"`deliverySpec.getId()`ex.getMessage());" is 134.,267
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,createWorkerPool,Long Statement,The length of the statement "log.error("An error occurred creating the new worker pool ({}). Error details: {} - {}"`name`poolFailure.getClass().getSimpleName()`poolFailure.getMessage());" is 158.,460
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,createWorkerPool,Long Statement,The length of the statement "throw (poolFailure instanceof WorkerPoolException) ? (WorkerPoolException)poolFailure : new WorkerPoolException("Creating worker pool failed"`poolFailure);" is 155.,460
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,resumeProcessing,Long Statement,The length of the statement "ProcessingState newState=PModeUtils.doesHolodeckB2BTrigger(PModeUtils.getLeg(userMessage)) ? ProcessingState.READY_TO_PUSH : ProcessingState.AWAITING_PULL;" is 155.,511
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,resumeProcessing,Long Statement,The length of the statement "log.trace("Resume processing of User Message [msgId={}]` set proc state to {}"`userMessage.getMessageId()`newState.name());" is 123.,511
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,HolodeckB2BCoreImpl,resumeProcessing,Long Statement,The length of the statement "if (userMessage.getCurrentProcessingState().getState() == newState) log.info("Processing of User Message [msgId={}] resumed"`userMessage.getMessageId());" is 153.,511
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,StorageManager,storeOutGoingMessageUnit,Long Statement,The length of the statement "if (messageUnit instanceof IUserMessage || messageUnit instanceof IPullRequest) mutableObject.setProcessingState(ProcessingState.SUBMITTED);" is 140.,86
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core,StorageManager,createMutableObject,Long Statement,The length of the statement "else if (messageUnit instanceof ISelectivePullRequest) return new SelectivePullRequest((ISelectivePullRequest)messageUnit);" is 123.,245
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,CheckSignatureRequirement,doProcessing,Long Statement,The length of the statement "final ITradingPartnerConfiguration senderCfg=PModeUtils.isHolodeckB2BInitiator(pmode) ? pmode.getResponder() : pmode.getInitiator();" is 132.,45
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,PerformCustomValidations,doProcessing,Long Statement,The length of the statement "IMessageValidationSpecification validationSpec=userMessageFlow == null ? null : userMessageFlow.getCustomValidationConfiguration();" is 131.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,PerformCustomValidations,doProcessing,Long Statement,The length of the statement "OtherContentError otherError=new OtherContentError(buildErrorDetailText(validationResult.getValidationErrors())`userMessage.getMessageId());" is 140.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,PerformCustomValidations,doProcessing,Long Statement,The length of the statement "log.error("An error occurred when performing the validation of User Message [" + userMessage.getMessageId() + "]!\n\tDetails: "+ ve.getMessage());" is 146.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,PerformCustomValidations,doProcessing,Long Statement,The length of the statement "procCtx.addGeneratedError(new OtherContentError("An error occurred when performing the validation of User Message"`userMessage.getMessageId()));" is 144.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,PerformCustomValidations,buildErrorDetailText,Long Statement,The length of the statement "for ( String validator : validationErrors.keySet()) for ( MessageValidationError error : validationErrors.get(validator)) {" is 123.,113
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverReceipts,doProcessing,Long Statement,The length of the statement "log.warn("Could not deliver Receipt Signal (msgId=" + receipt.getMessageId() + "]) to application! Error details: "+ ex.getMessage());" is 134.,55
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverReceipts,deliverReceipt,Long Statement,The length of the statement "log.warn(deliverer.getClass().getSimpleName() + " threw " + t.getClass().getSimpleName()+ " instead of MessageDeliveryException!");" is 131.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrors,doProcessing,Long Statement,The length of the statement "for ( final IErrorMessageEntity e : errorSignals) if (e.getCurrentProcessingState().getState() != ProcessingState.FAILURE) processErrorSignal(e`procCtx`log);" is 157.,49
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrors,processErrorSignal,Complex Method,Cyclomatic complexity of the method is 10,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrors,processErrorSignal,Long Statement,The length of the statement "final Logger errorLog=LogManager.getLogger("org.holodeckb2b.msgproc.errors.received." + procCtx.getParentContext().getAxisService().getName().toUpperCase());" is 157.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrors,processErrorSignal,Long Statement,The length of the statement "log.debug("Error Signal [" + errSignal.getMessageId() + "] does not contain reference."+ "Assuming it refers to all sent messages");" is 132.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrors,processErrorSignal,Long Statement,The length of the statement "procCtx.addGeneratedError(new ValueInconsistent("Error does not reference a sent message unit"`errSignal.getMessageId()));" is 122.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrors,processErrorSignal,Long Statement,The length of the statement "if (mu instanceof IUserMessage) log.info("Received an Error Signal for User Message [msgId=" + mu.getMessageId() + "] with severity warning` message may not have been processed by receiver!");" is 192.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrors,processErrorSignal,Long Statement,The length of the statement "if (mu instanceof IUserMessage) log.info("Received an Error Signal for User Message [msgId=" + mu.getMessageId() + "] with severity failure` message has not been processed by receiver!");" is 187.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverErrors,doProcessing,Long Statement,The length of the statement "for ( final IMessageUnitEntity msgInError : procCtx.getRefdMsgUnitByError(errorSignal)) deliveredForAll&=deliverError(errorSignal`msgInError`log);" is 146.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverErrors,doProcessing,Long Statement,The length of the statement "else updateManager.setProcessingState(errorSignal`ProcessingState.WARNING`"Error could not be delivered for [all] referenced message units");" is 141.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverErrors,deliverError,Long Statement,The length of the statement "log.info("Error Signal [msgId= " + errorSignal.getMessageId() + "] successfully delivered for referenced message unit [msgId="+ msgInError.getMessageId()+ "]!");" is 161.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverErrors,deliverError,Long Statement,The length of the statement "log.warn("Could not deliver Error Signal (msgId=" + errorSignal.getMessageId() + "]) for referenced message [msgId="+ msgInError.getMessageId()+ "] to application! Error details: "+ t.getMessage());" is 198.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverErrors,deliverError,Long Statement,The length of the statement "HolodeckB2BCoreInterface.getEventProcessor().raiseEvent(new MessageDeliveryFailure(deliverySignal`(t instanceof MessageDeliveryException) ? (MessageDeliveryException)t : new MessageDeliveryException("Unexpected error in delivery"`t)));" is 235.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverErrors,getErrorDelivery,Long Statement,The length of the statement "errHandling=prFlow != null && prFlow.getErrorHandlingConfiguration() != null ? prFlow.getErrorHandlingConfiguration() : errHandling;" is 132.,152
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,doProcessing,Long Statement,The length of the statement "for ( final IReceiptEntity r : receipts) if (r.getCurrentProcessingState().getState() != ProcessingState.FAILURE) processReceipt(r`procCtx`log);" is 144.,57
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,processReceipt,Long Statement,The length of the statement "log.trace("Start processing Receipt [msgId=" + receipt.getMessageId() + "] for referenced message with msgId="+ refToMsgId);" is 124.,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,processReceipt,Long Statement,The length of the statement "procCtx.addGeneratedError(new ValueInconsistent("Receipt contains unknown reference [" + refToMsgId + "]"`receipt.getMessageId()));" is 131.,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,processReceipt,Long Statement,The length of the statement "procCtx.addGeneratedError(new ValueInconsistent("P-Mode of referenced message [" + refToMsgId + "] is not configured for receipts"`receipt.getMessageId()));" is 156.,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,processReceipt,Long Statement,The length of the statement "log.warn("Receipt [" + receipt.getMessageId() + "] must refer to User Message` but refers to "+ MessageUnitUtils.getMessageUnitName(ackedMessage)+ "["+ refToMsgId+ "]!");" is 170.,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,processReceipt,Long Statement,The length of the statement "procCtx.addGeneratedError(new ValueInconsistent("Receipt does not reference a User Message message unit"`receipt.getMessageId()));" is 130.,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,isWaitingForReceipt,Complex Conditional,The conditional expression currentState == ProcessingState.AWAITING_PULL || currentState == ProcessingState.READY_TO_PUSH || currentState == ProcessingState.WARNING is complex.,154
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,isWaitingForReceipt,Long Statement,The length of the statement "else if (currentState == ProcessingState.AWAITING_PULL || currentState == ProcessingState.READY_TO_PUSH || currentState == ProcessingState.WARNING) {" is 149.,154
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceipts,isWaitingForReceipt,Magic Number,The method contains a magic number: 2,154
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverUserMessage,doProcessing,Long Statement,The length of the statement "log.warn(deliverer.getClass().getSimpleName() + " threw " + t.getClass().getSimpleName()+ " instead of MessageDeliveryException!");" is 131.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverUserMessage,doProcessing,Long Statement,The length of the statement "log.error("Could not deliver the user message [msgId=" + um.getMessageId() + "] using specified delivery method!"+ "\n\tError details: "+ ex.getMessage());" is 155.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverUserMessage,doProcessing,Long Statement,The length of the statement "HolodeckB2BCore.getEventProcessor().raiseEvent(failure == null ? new MessageDelivered(um) : new MessageDeliveryFailure(um`failure));" is 132.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,PerformCustomValidationsTest,setUpClass,Long Statement,The length of the statement "@Override public ValidationResult validate( IMessageUnit messageUnit` IMessageValidationSpecification validationSpec) throws MessageValidationException {" is 153.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrorsTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(ProcessingState.FAILURE`HolodeckB2BCoreInterface.getQueryManager().getMessageUnitsWithId(userMessage.getMessageId()).iterator().next().getCurrentProcessingState().getState());" is 188.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessErrorsTest,testNoRefToMsgIdButResponse,Long Statement,The length of the statement "assertEquals(ProcessingState.WARNING`HolodeckB2BCoreInterface.getQueryManager().getMessageUnitsWithId(userMessage.getMessageId()).iterator().next().getCurrentProcessingState().getState());" is 188.,116
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,CheckSignatureRequirementTest,testNotSigned,Long Statement,The length of the statement "Map<String`Collection<IEbmsError>> generatedErrors=MessageProcessingContext.getFromMessageContext(mc).getGeneratedErrors();" is 123.,117
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,CheckSignatureRequirementTest,testNotSigned,Long Statement,The length of the statement "assertEquals(PolicyNoncompliance.ERROR_CODE`generatedErrors.values().iterator().next().iterator().next().getErrorCode());" is 121.,117
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceiptsTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(ProcessingState.DELIVERED`HolodeckB2BCoreInterface.getQueryManager().getMessageUnitsWithId(userMessage.getMessageId()).iterator().next().getCurrentProcessingState().getState());" is 190.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,ProcessReceiptsTest,testDoProcessingIfNoRefToMsgId,Long Statement,The length of the statement "assertEquals("EBMS:0003"`procCtx.getGeneratedErrors().get(receiptEntity.getMessageId()).iterator().next().getErrorCode());" is 122.,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverReceiptsTest,testDoProcessing,Long Statement,The length of the statement "assertTrue(((NullDeliverer)HolodeckB2BCore.getMessageDeliverer(deliverySpecification)).wasDelivered(receipt.getMessageId()));" is 125.,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers.inflow,DeliverUserMessageTest,testDoProcessing,Long Statement,The length of the statement "assertTrue(((NullDeliverer)HolodeckB2BCore.getMessageDeliverer(deliverySpecification)).wasDelivered(userMessage.getMessageId()));" is 129.,68
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Complex Conditional,The conditional expression ProcessingState.DELIVERED != curState && ProcessingState.AWAITING_RECEIPT != curState && ProcessingState.DONE != curState && ProcessingState.TRANSPORT_FAILURE != curState is complex.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Long Statement,The length of the statement "log.error("An error occurred while processing messages! Error stack=\n {}"`Utils.getExceptionTrace(msgContext.getFailureReason()`true));" is 136.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Long Statement,The length of the statement "final boolean receiving=msgContext.getFLOW() == MessageContext.IN_FLOW || msgContext.getFLOW() == MessageContext.IN_FAULT_FLOW;" is 127.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Long Statement,The length of the statement "if (ProcessingState.DELIVERED != curState && ProcessingState.AWAITING_RECEIPT != curState && ProcessingState.DONE != curState && ProcessingState.TRANSPORT_FAILURE != curState) {" is 177.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Long Statement,The length of the statement "log.error(MessageUnitUtils.getMessageUnitName(mu) + " with msg-id [" + mu.getMessageId()+ "] could not be processed due to an unexpected error.");" is 146.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Long Statement,The length of the statement "HolodeckB2BCore.getStorageManager().setProcessingState(mu`mu instanceof IUserMessage ? ProcessingState.SUSPENDED : ProcessingState.FAILURE);" is 140.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Long Statement,The length of the statement "HolodeckB2BCore.getEventProcessor().raiseEvent(receiving ? new GenericReceiveMessageFailure(mu`failureDescription) : new GenericSendMessageFailure(mu`failureDescription));" is 171.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFault,doFlowComplete,Long Statement,The length of the statement "log.error(MessageUnitUtils.getMessageUnitName(mu) + " with msg-id [" + mu.getMessageId()+ "] could not be processed due to an internal error.");" is 144.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFaultTest,testAllGood,Long Statement,The length of the statement "assertNotEquals(ProcessingState.FAILURE`procCtx.getReceivedReceipts().iterator().next().getCurrentProcessingState().getState());" is 128.,92
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFaultTest,testAllGood,Magic Number,The method contains a magic number: 2,92
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.handlers,CatchAxisFaultTest,testAxisFaultThrown,Long Statement,The length of the statement "Collection<IMessageUnitEntity> storedMsg=HolodeckB2BCore.getQueryManager().getMessageUnitsWithId(userMessage.getMessageId());" is 125.,112
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerConfiguration,WorkerConfiguration,Long Parameter List,The method has 6 parameters. ,40
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,finalize,Magic Number,The method contains a magic number: 20,234
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Complex Method,Cyclomatic complexity of the method is 13,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "List<IWorkerConfiguration> newWorkers=newWorkerCfgs.stream().filter(w -> workers.stream().noneMatch(rw -> rw.config.getName().equals(w.getName()))).collect(Collectors.toList());" is 177.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "List<RunningWorker> delWorkers=workers.stream().filter(rw -> newWorkerCfgs.stream().noneMatch(w -> rw.config.getName().equals(w.getName()))).collect(Collectors.toList());" is 170.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "List<RunningWorker> chgWorkers=workers.stream().filter(rw -> newWorkerCfgs.stream().anyMatch(w -> rw.config.getName().equals(w.getName()) && (needsRescheduling(rw.config`w) || haveParametersChanged(rw.config`w)))).collect(Collectors.toList());" is 243.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "log.error("Exception thrown when stopping current worker instance: {} - {}"`t.getClass().getSimpleName()`t.getMessage());" is 121.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "log.error("Exception thrown when adding new worker {} to the pool: {} - {}"`w.getName()`t.getClass().getSimpleName()`t.getMessage());" is 133.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "IWorkerConfiguration newCfg=newWorkerCfgs.stream().filter(nwc -> w.config.getName().equals(nwc.getName())).findFirst().get();" is 125.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "log.error("Exception thrown when reconfiguring worker: {} - {}"`reconfigFailure.getClass().getSimpleName()`reconfigFailure.getMessage());" is 137.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Long Statement,The length of the statement "log.fatal("Removing {} worker from pool because configuration could not be rolled back! Error: {} - {}"`rollbackError.getClass().getSimpleName()`rollbackError.getMessage());" is 173.,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,reconfigure,Magic Number,The method contains a magic number: 2,249
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,addWorker,Long Statement,The length of the statement "if (interval != null && interval.getLength() > 0) f=pool.scheduleWithFixedDelay(t`interval.getUnit().convert(delay`TimeUnit.MILLISECONDS)`interval.getLength()`interval.getUnit());" is 179.,364
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPool,needsRescheduling,Long Statement,The length of the statement "equal=(oldCfg.getWorkerTask() != null && oldCfg.getWorkerTask().equals(newCfg.getWorkerTask())) || (oldCfg.getWorkerTask() == null && newCfg.getWorkerTask() == null);" is 166.,451
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testEmpty,Magic Number,The method contains a magic number: 1100,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testEmpty,Magic Number,The method contains a magic number: 1100,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testSingleRun,Magic Number,The method contains a magic number: 1000,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testSingleRun,Magic Number,The method contains a magic number: 1100,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testDelayedRun,Magic Number,The method contains a magic number: 750,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testDelayedRun,Magic Number,The method contains a magic number: 400,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testDelayedRun,Magic Number,The method contains a magic number: 400,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testDelayedRun,Magic Number,The method contains a magic number: 1100,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRepeatedRun,Magic Number,The method contains a magic number: 500,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRepeatedRun,Magic Number,The method contains a magic number: 1100,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRepeatedRun,Magic Number,The method contains a magic number: 2,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRepeatedRun,Magic Number,The method contains a magic number: 1100,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRepeatedRun,Magic Number,The method contains a magic number: 3,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testAddWorker,Magic Number,The method contains a magic number: 500,152
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testAddWorker,Magic Number,The method contains a magic number: 600,152
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testAddWorker,Magic Number,The method contains a magic number: 200,152
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testAddWorker,Magic Number,The method contains a magic number: 600,152
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testAddWorker,Magic Number,The method contains a magic number: 1100,152
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRemoveWorker,Magic Number,The method contains a magic number: 500,182
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRemoveWorker,Magic Number,The method contains a magic number: 5,182
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRemoveWorker,Magic Number,The method contains a magic number: 600,182
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRemoveWorker,Magic Number,The method contains a magic number: 600,182
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRemoveWorker,Magic Number,The method contains a magic number: 1100,182
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRescheduleWorker,Magic Number,The method contains a magic number: 500,214
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRescheduleWorker,Magic Number,The method contains a magic number: 2,214
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRescheduleWorker,Magic Number,The method contains a magic number: 600,214
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRescheduleWorker,Magic Number,The method contains a magic number: 600,214
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRescheduleWorker,Magic Number,The method contains a magic number: 600,214
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testRescheduleWorker,Magic Number,The method contains a magic number: 1100,214
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testReconfigWorker,Magic Number,The method contains a magic number: 500,246
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testReconfigWorker,Magic Number,The method contains a magic number: 600,246
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testReconfigWorker,Magic Number,The method contains a magic number: 600,246
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testReconfigWorker,Magic Number,The method contains a magic number: 1100,246
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testReconfigWorker,Magic Number,The method contains a magic number: 2,246
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testReconfigWorker,Magic Number,The method contains a magic number: 1100,246
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testConfigError,Magic Number,The method contains a magic number: 1100,283
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testStopRefresh,Magic Number,The method contains a magic number: 1100,311
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testStopRefresh,Magic Number,The method contains a magic number: 1100,311
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testStopRefresh,Magic Number,The method contains a magic number: 1100,311
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testChangeRefresh,Magic Number,The method contains a magic number: 2,331
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testChangeRefresh,Magic Number,The method contains a magic number: 1100,331
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testChangeRefresh,Magic Number,The method contains a magic number: 1100,331
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testChangeRefresh,Magic Number,The method contains a magic number: 1000,331
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testChangeRefresh,Magic Number,The method contains a magic number: 2,331
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTest,testChangeRefresh,Magic Number,The method contains a magic number: 1100,331
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workerpool,WorkerPoolTestConfiguration,hasConfigChanged,Long Statement,The length of the statement "if (lastCall != null && since.isBefore(lastCall)) throw new IllegalArgumentException("Called with older since value than last call");" is 133.,53
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,doProcessing,Complex Method,Cyclomatic complexity of the method is 10,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,doProcessing,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(pl.getContentLocation())) log.trace("No payload location provided for payload [" + pl.getPayloadURI() + "]");" is 133.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,doProcessing,Long Statement,The length of the statement "else if (plFile.exists()) log.error("Could not remove payload data file " + pl.getContentLocation() + ". Remove manually");" is 123.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,doProcessing,Long Statement,The length of the statement "if (msgUnit instanceof IUserMessage) HolodeckB2BCore.getEventProcessor().raiseEvent(new MessageUnitPurged(tmpUserMessage));" is 123.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,doProcessing,Long Statement,The length of the statement "log.error("Could not remove the meta-data of " + MessageUnitUtils.getMessageUnitName(msgUnit) + " [msgId="+ msgUnit.getMessageId()+ "]. Error details: "+ dbe.getMessage());" is 172.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,setParameters,Long Statement,The length of the statement "log.warn("Illegal value [" + pPurgeDays.toString() + "] used for \""+ P_PURGE_AFTER_DAYS+ "\" parameter! Using default.");" is 122.,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,setParameters,Magic Number,The method contains a magic number: 30,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,setParameters,Magic Number,The method contains a magic number: 30,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorker,setParameters,Magic Number,The method contains a magic number: 30,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,SenderWorker,doProcessing,Long Statement,The length of the statement "List<IMessageUnitEntity> msgUnitsToSend=HolodeckB2BCore.getQueryManager().getMessageUnitsInState(IMessageUnit.class`Direction.OUT`new ProcessingState[]{ProcessingState.READY_TO_PUSH});" is 184.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,SenderWorker,doProcessing,Long Statement,The length of the statement "if (HolodeckB2BCore.getStorageManager().setProcessingState(msgUnit`ProcessingState.READY_TO_PUSH`ProcessingState.PROCESSING)) {" is 127.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,SenderWorker,doProcessing,Long Statement,The length of the statement "else log.trace("Could not start processing message [" + msgUnit.getMessageId() + "] because switching to processing state was unsuccesful");" is 140.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,setUpClass,Magic Number,The method contains a magic number: 20,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,setUpClass,Magic Number,The method contains a magic number: 13,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,setUpClass,Magic Number,The method contains a magic number: 8,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,setUpClass,Magic Number,The method contains a magic number: 4,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,setUpClass,Magic Number,The method contains a magic number: 8,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,setUpClass,Magic Number,The method contains a magic number: 4,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,setUpClass,Magic Number,The method contains a magic number: 6,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,test0_NothingToPurge,Magic Number,The method contains a magic number: 6,225
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,test1_OneToPurge,Magic Number,The method contains a magic number: 15,240
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,test1_OneToPurge,Magic Number,The method contains a magic number: 5,240
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,test2_PayloadAlreadyRemoved,Magic Number,The method contains a magic number: 10,265
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,test2_PayloadAlreadyRemoved,Magic Number,The method contains a magic number: 4,265
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,test3_EventsOnlyForUserMsg,Magic Number,The method contains a magic number: 5,288
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.workers,PurgeOldMessagesWorkerTest,test3_EventsOnlyForUserMsg,Magic Number,The method contains a magic number: 2,288
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,complete,Long Statement,The length of the statement "final String pmMPC=leg.getUserMessageFlow() != null && leg.getUserMessageFlow().getBusinessInfo() != null ? leg.getUserMessageFlow().getBusinessInfo().getMpc() : null;" is 167.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,complete,Long Statement,The length of the statement "throw new MessageSubmitException("Different MPC values (submitted: " + submission.getMPC() + "`P-Mode: "+ pmMPC+ ") specified!");" is 129.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,complete,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(submission.getPayloads())) submission.getPayloads().parallelStream().filter(p -> p.getContainment() == null).forEach(p -> ((Payload)p).setContainment(Containment.ATTACHMENT));" is 200.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,complete,Magic Number,The method contains a magic number: 2,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,complete,Magic Number,The method contains a magic number: 2,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeSender,Complex Method,Cyclomatic complexity of the method is 11,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeSender,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(sPartyIds) && Utils.isNullOrEmpty(pmPartyIds)) throw new MessageSubmitException("Missing PartyId information for Sender of the message!");" is 162.,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeSender,Long Statement,The length of the statement "else if (!Utils.isNullOrEmpty(pmPartyIds)) if (!CompareUtils.areEqual(sPartyIds`pmPartyIds)) throw new MessageSubmitException("PartyId(s) for Sender in submission differ from ones in selected P-Mode!");" is 202.,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeSender,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(sRole) && Utils.isNullOrEmpty(pmRole)) throw new MessageSubmitException("Missing Role information for Sender of the message!");" is 151.,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeSender,Long Statement,The length of the statement "if (!pmRole.equals(sRole)) throw new MessageSubmitException("Role of Sender in submission differs from one in selected P-Mode!");" is 129.,131
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeReceiver,Complex Method,Cyclomatic complexity of the method is 11,187
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeReceiver,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(sPartyIds) && Utils.isNullOrEmpty(pmPartyIds)) throw new MessageSubmitException("Missing PartyId information for Receiver of the message!");" is 164.,187
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeReceiver,Long Statement,The length of the statement "else if (!Utils.isNullOrEmpty(pmPartyIds)) if (!CompareUtils.areEqual(sPartyIds`pmPartyIds)) throw new MessageSubmitException("PartyId(s) for Receiver in submission differ from ones in selected P-Mode!");" is 204.,187
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeReceiver,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(sRole) && Utils.isNullOrEmpty(pmRole)) throw new MessageSubmitException("Missing Role information for Receiver of the message!");" is 153.,187
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeReceiver,Long Statement,The length of the statement "if (!pmRole.equals(sRole)) throw new MessageSubmitException("Role for Receiver in submission differs from one in selected P-Mode!");" is 132.,187
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeCollaborationInfo,Long Statement,The length of the statement "throw new MessageSubmitException("Different Action values (submitted: " + sci.getAction() + "`P-Mode: "+ pa+ ") specified!");" is 125.,243
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeCollaborationInfo,Long Statement,The length of the statement "if (submission.getCollaborationInfo().getAction().equals(EbMSConstants.TEST_ACTION_URI) && !submission.getCollaborationInfo().getService().getName().equals(EbMSConstants.TEST_SERVICE_URI)) throw new MessageSubmitException("Service must be " + EbMSConstants.TEST_SERVICE_URI + "if Action is set to "+ EbMSConstants.TEST_ACTION_URI);" is 331.,243
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeCollaborationInfo,Magic Number,The method contains a magic number: 2,243
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeCollaborationInfo,Magic Number,The method contains a magic number: 2,243
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeService,Long Statement,The length of the statement "if (ssi == null && psi == null) throw new MessageSubmitException("Missing required information on the receiver of the message");" is 128.,279
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeService,Long Statement,The length of the statement "if (!CompareUtils.areEqual(ssi`psi)) throw new MessageSubmitException("Different values given for Service information!");" is 121.,279
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeAgreement,Complex Method,Cyclomatic complexity of the method is 11,307
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeAgreement,Long Statement,The length of the statement "throw new MessageSubmitException("Different Agreement name values (submitted: " + sar.getName() + "`P-Mode: "+ pa.getName()+ ") specified!");" is 141.,307
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeAgreement,Long Statement,The length of the statement "throw new MessageSubmitException("Different Agreement type values (submitted: " + sar.getType() + "`P-Mode: "+ pa.getType()+ ") specified!");" is 141.,307
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeAgreement,Magic Number,The method contains a magic number: 2,307
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeAgreement,Magic Number,The method contains a magic number: 2,307
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeAgreement,Magic Number,The method contains a magic number: 2,307
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeAgreement,Magic Number,The method contains a magic number: 2,307
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MMDCompleter,completeProperties,Long Statement,The length of the statement "found=xi.getName().equals(p.getName()) && (xi.getType() != null ? xi.getType().equals(p.getType()) : p.getType() == null);" is 122.,364
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,doSubmission,Long Statement,The length of the statement "log.error("Could not move/copy payload(s) to the internal storage! Unable to process message!" + "\n\tError details: {}"`ex.getMessage());" is 138.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,doSubmission,Long Statement,The length of the statement "log.error("Could not delete payload file [{}] from internal storage! Error details: {}"`p.getContentLocation()`e.getMessage());" is 127.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,doSubmission,Long Statement,The length of the statement "if (!PModeUtils.doesHolodeckB2BPull(pmode)) throw new MessageSubmitException("PMode with id=" + pmodeId + " does not support pulling");" is 135.,169
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,doSubmission,Long Statement,The length of the statement "if (!pullMPC.startsWith(pmodeMPC)) throw new MessageSubmitException("MPC in submission [" + pullMPC + "] conflicts with P-Mode defined MPC ]"+ pmodeMPC+ "]");" is 158.,169
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,checkPayloads,Complex Conditional,The conditional expression p.getContainment() == Containment.ATTACHMENT && !Utils.isNullOrEmpty(p.getPayloadURI()) && !MessageIdUtils.isAllowed(p.getPayloadURI()) is complex.,217
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,checkPayloads,Long Statement,The length of the statement "if (!checkContent(p)) throw new MessageSubmitException("Specified location of payload [uri=" + p.getPayloadURI() + "] content ["+ p.getContentLocation()+ "] is invalid (non existing or not a regular file!");" is 207.,217
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,checkPayloads,Long Statement,The length of the statement "if (p.getContainment() == Containment.ATTACHMENT && !Utils.isNullOrEmpty(p.getPayloadURI()) && !MessageIdUtils.isAllowed(p.getPayloadURI())) throw new MessageSubmitException("Specified payload reference [uri=" + p.getPayloadURI() + "] contains invalid characters!");" is 266.,217
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,checkPayloads,Long Statement,The length of the statement "if (!checkPayloadRefIsUnique(p`payloads)) throw new MessageSubmitException("Specified payload reference [uri=" + p.getPayloadURI() + "] is not unique!");" is 153.,217
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,checkPayloadRefIsUnique,Long Statement,The length of the statement "c=(p == p1) || p.getContainment() != p1.getContainment() || (p.getContainment() == IPayload.Containment.ATTACHMENT && ((r0 == null && r1 == null) || !Utils.nullSafeEqualIgnoreCase(r0`r1))) || (r0 != null && r1 != null && !r0.equalsIgnoreCase(r1));" is 247.,272
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.submission,MessageSubmitter,moveOrCopyPayloads,Long Statement,The length of the statement "log.error("Could not copy/move the payload [{}] to internal directory [{}].\n\tError details: {}"`p.getContentLocation()`pathPlDir.toString()`io.getMessage());" is 159.,301
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.config,HB2BAxis2Configurator,HB2BAxis2Configurator,Long Statement,The length of the statement "if (!Files.isDirectory(hb2bHomeDirectory) || !Files.isReadable(hb2bHomeDirectory)) throw new AxisFault("HB2B home directory (" + hb2bHome + ") does not exist or is not accessible");" is 181.,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.config,HB2BAxis2Configurator,HB2BAxis2Configurator,Long Statement,The length of the statement "if (!Files.isDirectory(repositoryPath) || !Files.isReadable(repositoryPath)) throw new AxisFault("Specified repository path (" + repositoryPath.toString() + ") does not exist or is not accessible");" is 198.,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.config,HB2BConfigBuilder,populateConfig,Empty catch clause,The method has an empty catch block.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.config,HB2BConfigBuilder,populateConfig,Long Statement,The length of the statement "hb2bConfig.setWorkerPoolCfgFile(!Utils.isNullOrEmpty(workerCfgFile) ? Paths.get(workerCfgFile) : hb2bHome.resolve("conf/workers.xml"));" is 135.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.config,HB2BConfigBuilder,populateConfig,Long Statement,The length of the statement "hb2bConfig.setEventProcessorFallback(!Utils.isTrue((String)axisConfig.getParameterValue("DisableEventProcessorFallback")));" is 123.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation,CustomValidationFailureEvent,CustomValidationFailureEvent,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(validationResult.getValidationErrors())) throw new IllegalArgumentException("This event can only be raised if validation errors were found!");" is 166.,50
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation,DefaultValidationExecutor,validate,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(result.getValidationErrors())) log.debug("Successfully validated message unit [{}]"`userMessage.getMessageId());" is 136.,44
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation,DefaultValidationExecutor,validate,Long Statement,The length of the statement "log.info("Found {} validation errors in message unit [{}]"`result.getValidationErrors().size()`userMessage.getMessageId());" is 123.,44
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation,DefaultValidationExecutor,createValidator,Long Statement,The length of the statement "throw new MessageValidationException("Could not create validator factory class [" + validatorCfg.getFactory() + "]!"`ex);" is 121.,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,init,Long Statement,The length of the statement "final Log log=LogFactory.getLog("org.holodeckb2b.msgproc." + (!Utils.isNullOrEmpty(handledMsgProtocol) ? handledMsgProtocol + "." : "") + getHandlerDesc().getName());" is 166.,89
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,doProcessing,Long Statement,The length of the statement "log.debug("Validate " + MessageUnitUtils.getMessageUnitName(m) + " header meta-data using "+ (useStrictValidation ? "strict" : "basic")+ " validation");" is 152.,139
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,doProcessing,Long Statement,The length of the statement "final IMessageValidationSpecification validationSpec=useStrictValidation ? strictValidatorSpecs.get(MessageUnitUtils.getMessageUnitType(m)) : laxValidatorSpecs.get(MessageUnitUtils.getMessageUnitType(m));" is 204.,139
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,doProcessing,Long Statement,The length of the statement "if (validationResult == null || Utils.isNullOrEmpty(validationResult.getValidationErrors())) log.debug("Header of " + MessageUnitUtils.getMessageUnitName(m) + " ["+ m.getMessageId()+ "] successfully validated");" is 211.,139
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,doProcessing,Long Statement,The length of the statement "log.warn("Header of " + MessageUnitUtils.getMessageUnitName(m) + " ["+ m.getMessageId()+ "] is invalid!\n\tDetails: "+ printErrors(validationResult.getValidationErrors()));" is 172.,139
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,doProcessing,Long Statement,The length of the statement "for ( IEbmsError e : createEbMSErrors(m.getMessageId()`validationResult.getValidationErrors())) procCtx.addGeneratedError(e);" is 125.,139
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,doProcessing,Long Statement,The length of the statement "HolodeckB2BCore.getEventProcessor().raiseEvent(new HeaderValidationFailureEvent(m`validationResult.getValidationErrors().values().iterator().next()));" is 150.,139
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,printErrors,Long Statement,The length of the statement "for ( MessageValidationError validationError : validationErrors.values().iterator().next()) errList.append("\n\t\t").append(validationError.getDescription());" is 158.,182
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,createEbMSErrors,Long Statement,The length of the statement "if (VALUE_INCONSISTENT_REQ.equals(validationError.getDetails())) ebmsErrors.add(new ValueInconsistent(validationError.getDescription()`messageId));" is 147.,195
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,createEbMSErrors,Long Statement,The length of the statement "invalidHeaderErrorDetails.insert(0`" validation error(s) found in the message:\n").insert(0`String.valueOf(totalErrors)).insert(0`"The message was found to be invalid!\n");" is 172.,195
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,createEbMSErrors,Long Statement,The length of the statement "invalidHdr.setSeverity(maxSeverity == MessageValidationError.Severity.Failure ? IEbmsError.Severity.failure : IEbmsError.Severity.warning);" is 139.,195
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationHandler,shouldUseStrictMode,Long Statement,The length of the statement "if (!useStrictValidation && !Utils.isNullOrEmpty(m.getPModeId())) useStrictValidation=HolodeckB2BCore.getPModeSet().get(m.getPModeId()).useStrictHeaderValidation();" is 164.,240
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,HeaderValidationFailureEvent,HeaderValidationFailureEvent,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(validationErrors)) throw new IllegalArgumentException("This event can only be raised if validation errors were found!");" is 144.,41
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.validation.header,AbstractHeaderValidatorFactory,init,Long Statement,The length of the statement "if (Boolean.TRUE.equals(parameters.get(P_VALIDATION_MODE))) validator=strictValidators.get(parameters.get(P_MSGUNIT_TYPE));" is 123.,54
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Complex Method,Cyclomatic complexity of the method is 12,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.trace("Starting send operation for {} (msgId={})"`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId());" is 131.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.error("Cannot send {} [msgId={}] because associated P-Mode {} is not available!"`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId()`messageUnit.getPModeId());" is 187.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.error("Cannot send {} [msgId={}] because required {} Service is not installed!"`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId()`svcName);" is 169.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.debug("Using {} Service to send {} [msgId={}]"`svcName`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId());" is 136.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.error("An exception occurred setting up the send operation for {} (msgId={}).Exception stack below:\n"`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId()`Utils.getExceptionTrace(cfgError`true));" is 223.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.debug("Start send process for {} [msgId={}]"`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId());" is 126.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.debug("Finished send process for {} [msgId={}]"`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId());" is 129.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Long Statement,The length of the statement "log.error("An unexpected error occurred while sending {} (msgId={}). Exception trace:\n{}"`MessageUnitUtils.getMessageUnitName(messageUnit)`messageUnit.getMessageId()`Utils.getExceptionTrace(t`true));" is 200.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Magic Number,The method contains a magic number: 41,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Magic Number,The method contains a magic number: 41,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Magic Number,The method contains a magic number: 41,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,sendMessage,Magic Number,The method contains a magic number: 5000,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,Axis2Sender,registerSendFailure,Long Statement,The length of the statement "HolodeckB2BCore.getStorageManager().setProcessingState(messageUnit`messageUnit instanceof IUserMessage ? ProcessingState.SUSPENDED : ProcessingState.FAILURE`failureDescription);" is 177.,189
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Complex Conditional,The conditional expression pi.equals(InvocationResponse.SUSPEND) || (holdResponse != null && Boolean.TRUE.equals(holdResponse)) is complex.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Complex Conditional,The conditional expression TransportUtils.isResponseWritten(msgContext) || ((requestResponseTransportControl != null) && requestResponseTransportControl.getStatus().equals(RequestResponseTransport.RequestResponseTransportStatus.SIGNALLED)) is complex.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Complex Method,Cyclomatic complexity of the method is 15,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Empty catch clause,The method has an empty catch block.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Long Identifier,The length of the identifier requestResponseTransportControl is 31.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Long Method,The method has 126 lines of code.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Long Statement,The length of the statement "log.error("An error occured while processing the GZIP encoded HTTP entity body: " + httpDecompressionError.getMessage());" is 121.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Long Statement,The length of the statement "pi=HTTPTransportUtils.processHTTPPostRequest(msgContext`request.getInputStream()`response.getOutputStream()`contentType`soapAction`requestURL);" is 143.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Long Statement,The length of the statement "RequestResponseTransport requestResponseTransportControl=(RequestResponseTransport)msgContext.getProperty(RequestResponseTransport.TRANSPORT_CONTROL);" is 150.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Long Statement,The length of the statement "if (TransportUtils.isResponseWritten(msgContext) || ((requestResponseTransportControl != null) && requestResponseTransportControl.getStatus().equals(RequestResponseTransport.RequestResponseTransportStatus.SIGNALLED))) {" is 219.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,service,Long Statement,The length of the statement "if (responseHdrs != null && (responseHdrs instanceof Map)) ((Map<String`String>)responseHdrs).forEach((n`v) -> response.addHeader(n`v));" is 136.,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPWorker,prepareMessageContext,Long Parameter List,The method has 5 parameters. ,272
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPFactory,HTTPFactory,Magic Number,The method contains a magic number: 8080,38
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPFactory,HTTPFactory,Magic Number,The method contains a magic number: 20000,38
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPFactory,HTTPFactory,Magic Number,The method contains a magic number: 100,38
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPFactory,HTTPFactory,Magic Number,The method contains a magic number: 150,38
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPFactory,HTTPFactory,Magic Number,The method contains a magic number: 180L,38
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.axis2,HTTPListener,stop,Empty catch clause,The method has an empty catch block.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,DetectDuplicateUserMessages,doProcessing,Long Statement,The length of the statement "log.error("P-Mode " + um.getPModeId() + " not found in current P-Mode set!"+ "Unable to determine if receipt is needed for message [msgId="+ um.getMessageId()+ "]");" is 165.,70
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,doProcessing,Complex Method,Cyclomatic complexity of the method is 9,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,doProcessing,Long Statement,The length of the statement "waitingForRcpt=HolodeckB2BCore.getQueryManager().getMessageUnitsInState(IUserMessage.class`Direction.OUT`new ProcessingState[]{ProcessingState.AWAITING_RECEIPT`ProcessingState.TRANSPORT_FAILURE`ProcessingState.WARNING});" is 220.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,doProcessing,Long Statement,The length of the statement "log.trace("Check if User Message [msgId=" + um.getMessageId() + "] should be resend using retry configuration from P-Mode ["+ um.getPModeId()+ "]");" is 148.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,doProcessing,Long Statement,The length of the statement "if (attempts <= maxAttempts) intervalInMillis=TimeUnit.MILLISECONDS.convert(intervals[attempts - 1].getLength()`intervals[attempts - 1].getUnit());" is 147.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,doProcessing,Long Statement,The length of the statement "else log.warn("Message [" + um.getMessageId() + "] cannot be resent due to missing Reception"+ " Awareness retry configuration in P-Mode ["+ um.getPModeId()+ "]");" is 163.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,doProcessing,Long Statement,The length of the statement "log.error("An error occurred when checking or updating the message unit meta-data [msgID=" + um.getMessageId() + "]. Details: "+ dbe.getMessage());" is 147.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,generateMissingReceiptError,Long Statement,The length of the statement "HolodeckB2BCoreInterface.getEventProcessor().raiseEvent(new MessageDeliveryFailure(errorMessage`new MessageDeliveryException("Missing delivery specification")));" is 161.,181
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,generateMissingReceiptError,Long Statement,The length of the statement "HolodeckB2BCoreInterface.getEventProcessor().raiseEvent(new MessageDeliveryFailure(errorMessage`(t instanceof MessageDeliveryException) ? (MessageDeliveryException)t : new MessageDeliveryException("Unexpected error in delivery"`t)));" is 233.,181
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,RetransmissionWorker,generateMissingReceiptError,Long Statement,The length of the statement "log.error("An error occurred while updating the processing state of the MissingReceipt error!" + " Details: " + dbe.getMessage());" is 130.,181
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.core.receptionawareness,DetectDuplicateUserMessagesTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(ProcessingState.DUPLICATE`HolodeckB2BCoreInterface.getQueryManager().getMessageUnitsWithId(userMessage.getMessageId()).iterator().next().getCurrentProcessingState().getState());" is 190.,78
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.inmemory,QueryManager,getMessageUnitsInState,Long Statement,The length of the statement "return (List<V>)msgUnits.stream().filter(m -> type.isAssignableFrom(m.getClass()) && m.getDirection() == direction && statesCollection.contains(m.getCurrentProcessingState().getState())).sorted((m1`m2) -> m1.getTimestamp().compareTo(m2.getTimestamp())).collect(Collectors.toList());" is 282.,32
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.inmemory,QueryManager,getMessageUnitsWithId,Long Statement,The length of the statement "return msgUnits.stream().filter(m -> dirCollections.contains(m.getDirection()) && messageId.equals(m.getMessageId())).collect(Collectors.toList());" is 147.,45
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.inmemory,QueryManager,getMessageUnitsWithId,Magic Number,The method contains a magic number: 2,45
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.inmemory,QueryManager,getMessageUnitsWithLastStateChangedBefore,Long Statement,The length of the statement "return msgUnits.stream().filter(m -> m.getCurrentProcessingState().getStartTime().before(maxLastChangeDate)).collect(Collectors.toList());" is 138.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.inmemory,QueryManager,getMessageUnitsForPModesInState,Long Statement,The length of the statement "return (List<V>)msgUnits.stream().filter(m -> type.isAssignableFrom(m.getClass()) && pmodeIds.contains(m.getPModeId()) && m.getCurrentProcessingState().getState() == state).sorted((m1`m2) -> m1.getTimestamp().compareTo(m2.getTimestamp())).collect(Collectors.toList());" is 268.,68
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.persistency.inmemory,QueryManager,isAlreadyProcessed,Long Statement,The length of the statement "return userMessage.getCurrentProcessingState().getState() == ProcessingState.FAILURE || userMessage.getCurrentProcessingState().getState() == ProcessingState.DELIVERED;" is 168.,88
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.testhelpers,InMemoryCertificateManager,registerKeyPair,Long Statement,The length of the statement "final char[] entryPwd=Utils.isNullOrEmpty(password) ? Long.toHexString(Double.doubleToLongBits(Math.random())).toCharArray() : password.toCharArray();" is 150.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.testhelpers,InMemoryCertificateManager,getKeyPair,Long Statement,The length of the statement "else return (KeyStore.PrivateKeyEntry)privateKeys.getEntry(alias`new KeyStore.PasswordProtection(password.toCharArray()));" is 122.,102
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.testhelpers,InMemoryCertificateManager,findCertificate,Magic Number,The method contains a magic number: 4,153
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.testhelpers,InMemoryCertificateManager,validateTrust,Long Statement,The length of the statement "if (trustedCerts.getCertificateAlias(certs.get(certs.size() - 1)) != null) return new ValidationResult(certs`Trust.OK`"Found the root cert of path in trust store"`null);" is 169.,210
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.testhelpers,HolodeckB2BTestCore,getCertificateManager,Empty catch clause,The method has an empty catch block.,206
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.common.testhelpers,TestUtils,cleanOldMessageUnitEntities,Long Statement,The length of the statement "System.err.println("Could not get the list of expired message units " + "from database! Error details: " + dbe.getMessage());" is 125.,155
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,ITHelper,copyKeystores,Long Statement,The length of the statement "for ( File s : msgsDir.listFiles()) Files.copy(s.toPath()`msgOutDir.resolve(s.getName())`StandardCopyOption.REPLACE_EXISTING);" is 126.,244
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,ITHelper,clearMsgOutAndMsgInDirs,Empty catch clause,The method has an empty catch block.,260
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,ITHelper,setPullingInterval,Long Statement,The length of the statement "File axisXml=new File(workingDirPath + File.separator + distrDirName+ File.separator+ "conf"+ File.separator+ "pulling_configuration.xml");" is 139.,378
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,OneWayMEPWorkflows,setUpClass,Magic Number,The method contains a magic number: 10,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,OneWayMEPWorkflows,testOneWayPush,Magic Number,The method contains a magic number: 5000,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,OneWayMEPWorkflows,testOneWayPush,Magic Number,The method contains a magic number: 40000,103
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,OneWayMEPWorkflows,testOneWayPull,Magic Number,The method contains a magic number: 5000,146
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.test.integration,OneWayMEPWorkflows,testOneWayPull,Magic Number,The method contains a magic number: 60000,146
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.security.util,VerificationUtils,verifySigningCertificate,Long Statement,The length of the statement "final String actAlias=actual != null ? HolodeckB2BCore.getCertificateManager().findCertificate(actual.getSigningCertificate()) : null;" is 134.,120
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CreateReceipt,doProcessing,Long Statement,The length of the statement "log.error("P-Mode " + um.getPModeId() + " not found in current P-Mode set!"+ "Unable to determine if receipt is needed for message [msgId="+ um.getMessageId()+ "]");" is 165.,91
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CreateReceipt,doProcessing,Long Statement,The length of the statement "HolodeckB2BCore.getEventProcessor().raiseEvent(new ReceiptCreatedEvent(um`receipt`um.getCurrentProcessingState().getState() == ProcessingState.DUPLICATE));" is 155.,91
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CreateReceipt,doProcessing,Long Statement,The length of the statement "log.error("Saving the Receipt signal in repsonse to user message [msgId=" + um.getMessageId() + "] failed! Details: "+ ex.getMessage());" is 136.,91
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CreateReceipt,getSignatureReferences,Complex Method,Cyclomatic complexity of the method is 8,211
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CreateReceipt,getSignatureReferences,Long Statement,The length of the statement "for (final Iterator<OMElement> it=signedInfoElement.getChildrenWithName(new QName(DSIG_NAMESPACE_URI`"Reference")); it.hasNext(); ) references.add(it.next());" is 158.,211
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CheckSignatureCompleteness,doProcessing,Long Statement,The length of the statement "log.error("P-Mode " + um.getPModeId() + " not found in current P-Mode set!"+ "Unable to determine if receipt is needed for message [msgId="+ um.getMessageId()+ "]");" is 165.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CheckSignatureCompleteness,doProcessing,Long Statement,The length of the statement "final Optional<ISignatureProcessingResult> sigResult=procCtx.getSecurityProcessingResults(ISignatureProcessingResult.class).parallelStream().filter(r -> r.getTargetedRole() == SecurityHeaderTarget.DEFAULT).findFirst();" is 218.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CheckSignatureCompleteness,doProcessing,Long Statement,The length of the statement "allEbMSPartsSigned&=um.getPayloads().parallelStream().allMatch((mp) -> signedPayloads.parallelStream().anyMatch((sp) -> areSamePayloadRef(mp`sp)));" is 147.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CheckSignatureCompleteness,areSamePayloadRef,Long Statement,The length of the statement "return Utils.nullSafeEqual(plRef1.getContainment()`plRef2.getContainment()) && Utils.nullSafeEqual(plRef1.getPayloadURI()`plRef2.getPayloadURI());" is 146.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.handlers.inflow,CreateReceiptTest,testSignedMessage,Long Statement,The length of the statement "SOAPModelBuilder soapModelBuilder=OMXMLBuilderFactory.createSOAPModelBuilder(new StringReader(XML_START + XML_WSS_HEADER + XML_END));" is 133.,234
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.multihop,ConfigureMultihop,getReferencedUserMsg,Long Statement,The length of the statement "for ( IMessageUnitEntity mu : procCtx.getReceivedMessageUnits()) if (mu instanceof IUserMessage && refToMsgId.equals(mu.getMessageId())) return (IUserMessageEntity)mu;" is 167.,109
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.multihop,ConfigureMultihop,getReferencedUserMsg,Long Statement,The length of the statement "final Collection<IMessageUnitEntity> refdMessages=HolodeckB2BCore.getQueryManager().getMessageUnitsWithId(refToMsgId`Direction.IN);" is 131.,109
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.multihop,ConfigureMultihop,addRoutingInfo,Long Statement,The length of the statement "routingInputUsrMsg.getCollaborationInfo().setAction(usrMessage.getCollaborationInfo().getAction() + MultiHopConstants.GENERAL_RESP_SUFFIX);" is 139.,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.multihop,ConfigureMultihop,addRoutingInfo,Long Statement,The length of the statement "if (signal instanceof IReceipt) mc.getOptions().setAction(MultiHopConstants.ONE_WAY_ACTION + MultiHopConstants.RECEIPT_SUFFIX);" is 127.,149
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,CompressionHandler,doProcessing,Long Statement,The length of the statement "if ((plProfile instanceof IAS4PayloadProfile) && CompressionFeature.COMPRESSED_CONTENT_TYPE.equalsIgnoreCase(((IAS4PayloadProfile)plProfile).getCompressionType())) {" is 165.,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,CompressionHandler,doProcessing,Long Statement,The length of the statement "for ( final IPayload p : um.getPayloads()) if (p.getContainment() == IPayload.Containment.ATTACHMENT) enableCompression(p`procCtx.getParentContext());" is 150.,58
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,CompressionHandler,enableCompression,Long Statement,The length of the statement "for ( final IProperty pp : partProperties) if (CompressionFeature.FEATURE_PROPERTY_NAME.equals(pp.getName()) || CompressionFeature.MIME_TYPE_PROPERTY_NAME.equals(pp.getName())) remove.add(pp);" is 192.,86
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,DecompressionHandler,doProcessing,Empty catch clause,The method has an empty catch block.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,DecompressionHandler,doProcessing,Long Statement,The length of the statement "decompressFailure.setErrorDetail("Missing required MimeType part property for compressed payload [" + p.getPayloadURI() + "]!");" is 128.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,DecompressionHandler,usesCompression,Long Statement,The length of the statement "compression=CompressionFeature.FEATURE_PROPERTY_NAME.equals(pp.getName()) && CompressionFeature.COMPRESSED_CONTENT_TYPE.equals(pp.getValue());" is 142.,104
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,DecompressionHandler,removeProperty,Long Statement,The length of the statement "for ( final IProperty pp : partProperties) if (CompressionFeature.FEATURE_PROPERTY_NAME.equals(pp.getName())) remove.add(pp);" is 125.,124
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,CompressionDataHandler,decompress,Long Statement,The length of the statement "if (!(ex instanceof ZipException)) ex=new ZipException(ex.getClass().getName() + " {" + ex.getMessage()+ " } occurred during decompression.");" is 142.,166
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,CompressionDataHandler,decompress,Magic Number,The method contains a magic number: 2048,166
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,read,Complex Method,Cyclomatic complexity of the method is 8,75
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,createTrailer,Magic Number,The method contains a magic number: 4,133
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,writeInt,Magic Number,The method contains a magic number: 0xffff,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,writeInt,Magic Number,The method contains a magic number: 16,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,writeInt,Magic Number,The method contains a magic number: 0xffff,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,writeInt,Magic Number,The method contains a magic number: 2,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,writeShort,Magic Number,The method contains a magic number: 0xff,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,writeShort,Magic Number,The method contains a magic number: 8,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStream,writeShort,Magic Number,The method contains a magic number: 0xff,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,setUp,Empty catch clause,The method has an empty catch block.,55
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Long Statement,The length of the statement "try (GZIPCompressingInputStream cfis=new GZIPCompressingInputStream(new FileInputStream(uncF));FileOutputStream fos=new FileOutputStream(comF)){" is 144.,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Long Statement,The length of the statement "try (GZIPInputStream decfis=new GZIPInputStream(new FileInputStream(comF));FileOutputStream fos=new FileOutputStream(decF)){" is 124.,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Magic Number,The method contains a magic number: 512,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Magic Number,The method contains a magic number: 512,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Magic Number,The method contains a magic number: 512,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Magic Number,The method contains a magic number: 512,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Magic Number,The method contains a magic number: 512,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.as4.compression,GZIPCompressingInputStreamTest,testCompression,Magic Number,The method contains a magic number: 512,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,CollaborationInfoElement,readElement,Long Statement,The length of the statement "final org.holodeckb2b.common.messagemodel.CollaborationInfo ciData=new org.holodeckb2b.common.messagemodel.CollaborationInfo();" is 127.,91
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PartInfoElement,readElement,Complex Method,Cyclomatic complexity of the method is 8,110
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PartInfoElement,readElement,Magic Number,The method contains a magic number: 4,110
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,DescriptionElement,createElement,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(lang)) description.addAttribute(LN_ATTR_LANG`lang`f.createOMNamespace(NS_URI_ATTR_LANG`NS_PREFIX_ATTR_LANG));" is 134.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,ErrorSignalElement,createErrorElement,Long Statement,The length of the statement "if (errDescription != null && errDescription.getText() != null) DescriptionElement.createElement(errorElement`errDescription);" is 126.,138
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,ErrorSignalElement,readErrorElement,Empty catch clause,The method has an empty catch block.,191
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElement,readElement,Complex Method,Cyclomatic complexity of the method is 8,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElement,readElement,Long Statement,The length of the statement "else if (criterion.hasName(AgreementRefElement.Q_ELEMENT_NAME)) selectivePR.setAgreementRef(AgreementRefElement.readElement(criterion));" is 136.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElement,readElement,Long Statement,The length of the statement "else if (criterion.hasName(ServiceElement.Q_ELEMENT_NAME)) selectivePR.setService(ServiceElement.readElement(criterion));" is 121.,61
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElement,getElement,Long Statement,The length of the statement "while ((pullReq == null) && signals.hasNext()) pullReq=((OMElement)signals.next()).getFirstChildWithName(Q_ELEMENT_NAME);" is 121.,112
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElement,createElement,Complex Method,Cyclomatic complexity of the method is 8,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElement,createElement,Long Statement,The length of the statement "if (agreementRef != null && !Utils.isNullOrEmpty(agreementRef.getName())) AgreementRefElement.createElement(prElement`agreementRef);" is 132.,135
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,DescriptionElementTest,testGetElement,Long Statement,The length of the statement "OMElement dElement=DescriptionElement.getElement(createXML("<parent>" + " <eb3:Description xml:lang=\"en-US\"" + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ "This is just a test"+ "</eb3:Description> "+ "</parent>"));" is 255.,71
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,DescriptionElementTest,testReadElementWithLang,Long Statement,The length of the statement "Description descr=DescriptionElement.readElement(createXML(" <eb3:Description xml:lang=\"" + lang + "\""+ " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ text+ "</eb3:Description>"));" is 217.,85
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,DescriptionElementTest,testReadElementNoLang,Long Statement,The length of the statement "Description descr=DescriptionElement.readElement(createXML(" <eb3:Description" + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + text + "</eb3:Description>"));" is 194.,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElementTest,testReadSelectivePullElement,Long Statement,The length of the statement "PullRequest readRequest=PullRequestElement.readElement((OMElement)prSignalElement.getChildrenWithName(PULLREQUEST_ELEMENT_NAME).next());" is 136.,132
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PullRequestElementTest,testReadElement,Long Statement,The length of the statement "pullRequest=PullRequestElement.readElement((OMElement)prSignalElement.getChildrenWithName(PULLREQUEST_ELEMENT_NAME).next());" is 124.,158
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,CollaborationInfoElementTest,testCreateElement,Long Identifier,The length of the field COLLABORATION_INFO_ELEMENT_NAME is 31.,54
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,CollaborationInfoElementTest,testCreateElement,Long Identifier,The length of the field AGREEMENT_REF_INFO_ELEMENT_NAME is 31.,54
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,CollaborationInfoElementTest,testGetElement,Long Identifier,The length of the field COLLABORATION_INFO_ELEMENT_NAME is 31.,82
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,CollaborationInfoElementTest,testGetElement,Long Statement,The length of the statement "OMElement ciElement=CollaborationInfoElement.getElement(createXML("<parent>" + " <eb3:CollaborationInfo" + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">\n"+ " <eb3:AgreementRef>http://agreements.holodeckb2b.org/examples/agreement0</eb3:AgreementRef>\n"+ " <eb3:Service type=\"org:holodeckb2b:services\">PackagingTest</eb3:Service>\n"+ " <eb3:Action>GetElement</eb3:Action>\n"+ " <eb3:ConversationId>org:holodeckb2b:test:conversation</eb3:ConversationId>\n"+ " </eb3:CollaborationInfo>"+ "</parent>"));" is 535.,82
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,CollaborationInfoElementTest,testReadElement,Long Statement,The length of the statement "CollaborationInfo collaborationInfo=CollaborationInfoElement.readElement(createXML(" <eb3:CollaborationInfo" + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">\n" + " <eb3:AgreementRef>http://agreements.holodeckb2b.org/examples/agreement0</eb3:AgreementRef>\n"+ " <eb3:Service type=\"org:holodeckb2b:services\">PackagingTest</eb3:Service>\n"+ " <eb3:Action>" + action + "</eb3:Action>\n"+ " <eb3:ConversationId>"+ convID+ "</eb3:ConversationId>\n"+ " </eb3:CollaborationInfo>"));" is 510.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PackagingTest,assertValidXML,Long Statement,The length of the statement "parser.setProperty("http://java.sun.com/xml/jaxp/properties/schemaSource"`new File[]{xmlSchemaFile`SOAP11schemaFile`SOAP12schemaFile`ebMSschemaFile});" is 150.,138
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PropertyElementTest,testGetElements,Long Statement,The length of the statement "Iterator<OMElement> propElements=PropertyElement.getElements(createXML("<parent>" + " <eb3:Property name=\"original-file-name\"" + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ "simple_document.xml</eb3:Property>"+ "</parent>"));" is 265.,71
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PropertyElementTest,testGetElements,Long Statement,The length of the statement "propElements=PropertyElement.getElements(createXML("<parent" + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + " <eb3:Property name=\"original-file-name\">simple_document.xml</eb3:Property>"+ " <eb3:Property name=\"reference_number\">XREF_4828</eb3:Property>"+ "</parent>"));" is 310.,71
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PropertyElementTest,testReadElementWithType,Long Statement,The length of the statement "Property prop=PropertyElement.readElement(createXML("<eb3:Property name=\"" + pName + "\" type=\""+ pType+ "\""+ " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ pValue+ "</eb3:Property>"));" is 223.,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PropertyElementTest,testReadElementNoType,Long Statement,The length of the statement "Property prop=PropertyElement.readElement(createXML("<eb3:Property name=\"" + pName + "\""+ " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ pValue+ "</eb3:Property>"));" is 202.,119
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,MessagePropertiesElementTest,testGetElement,Long Statement,The length of the statement "OMElement propElement=MessagePropertiesElement.getElement(createXML("<parent>" + " <eb3:MessageProperties " + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ " <eb3:Property name=\"original-file-name\">simple_document.xml</eb3:Property>"+ " </eb3:MessageProperties> "+ "</parent>"));" is 317.,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,MessagePropertiesElementTest,testReadElement,Long Statement,The length of the statement "Collection<IProperty> readProperties=MessagePropertiesElement.readElement(createXML(" <eb3:MessageProperties " + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + " <eb3:Property name=\"original-file-name\">simple_document.xml</eb3:Property>"+ " <eb3:Property name=\"reference_number\">XREF_4828</eb3:Property>"+ " </eb3:MessageProperties>"));" is 376.,79
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,MessagePropertiesElementTest,testReadElement,Magic Number,The method contains a magic number: 2,79
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,AgreementRefElementTest,testCreateElement,Long Identifier,The length of the field AGREEMENT_REF_INFO_ELEMENT_NAME is 31.,41
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,AgreementRefElementTest,testGetElement,Long Identifier,The length of the field AGREEMENT_REF_INFO_ELEMENT_NAME is 31.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,AgreementRefElementTest,testGetElement,Long Statement,The length of the statement "OMElement agreementRefElement=AgreementRefElement.getElement(createXML("<parent>" + "<eb3:AgreementRef xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + "http://agreements.holodeckb2b.org/examples/agreement0</eb3:AgreementRef>"+ "</parent>"));" is 274.,56
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,AgreementRefElementTest,testReadElement,Long Statement,The length of the statement "AgreementReference agreementReference=AgreementRefElement.readElement(createXML("<eb3:AgreementRef xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\"" + " type=\"" + type + "\" pmode=\""+ pmodeId+ "\">"+ name+ "</eb3:AgreementRef>"));" is 260.,67
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PayloadInfoElementTest,testGetElement,Long Statement,The length of the statement "OMElement piElement=PayloadInfoElement.getElement(createXML("<parent>" + "<eb3:PayloadInfo " + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ " <eb3:PartInfo href=\"cid:8fba80a5-2a4b-42c4-9c8f-f53207d21673-142514300@gecko.fritz.box\"/>"+ "</eb3:PayloadInfo>"+ "</parent>"));" is 309.,70
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PayloadInfoElementTest,testReadElement,Long Statement,The length of the statement "Collection<IPayload> payloads=PayloadInfoElement.readElement(createXML("<eb3:PayloadInfo " + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + " <eb3:PartInfo href=\"" + p1.getPayloadURI() + "\"/>"+ " <eb3:PartInfo href=\""+ p2.getPayloadURI()+ "\"/>"+ "</eb3:PayloadInfo>"));" is 309.,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,UserMessageElementTest,testGetElements,Long Statement,The length of the statement "Iterator<OMElement> umElements=UserMessageElement.getElements(createXML("<eb3:Messaging xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">\n" + " <eb3:UserMessage>\n" + " Normal contents of User Message would go here"+ " </eb3:UserMessage>\n"+ " <eb3:UserMessage>\n"+ " Bundled User Message (NOTE: By default this is not allowed!"+ " </eb3:UserMessage>\n"+ "</eb3:Messaging>"));" is 405.,98
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,UserMessageElementTest,testReadElement,Long Statement,The length of the statement "UserMessage userMessage=UserMessageElement.readElement(createXML("<eb3:UserMessage xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">\n" + " <eb3:MessageInfo>\n" + " <eb3:Timestamp>2019-08-05T10:50:09.192Z</eb3:Timestamp>\n"+ " <eb3:MessageId>8fba80a5-2a4b-42c4-9c8f-f53207d21673@gecko.fritz.box</eb3:MessageId>\n"+ " </eb3:MessageInfo>\n"+ " <eb3:PartyInfo>\n"+ " <eb3:From>\n"+ " <eb3:PartyId>org:holodeckb2b:example:company:A</eb3:PartyId>\n"+ " <eb3:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/initiator</eb3:Role>\n"+ " </eb3:From>\n"+ " <eb3:To>\n"+ " <eb3:PartyId type=\"org:holodeckb2b:example:company\">partyb</eb3:PartyId>\n"+ " <eb3:Role>http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/responder</eb3:Role>\n"+ " </eb3:To>\n"+ " </eb3:PartyInfo>\n"+ " <eb3:CollaborationInfo>\n"+ " <eb3:AgreementRef>UnitTesting</eb3:AgreementRef>\n"+ " <eb3:Service>PackagingTest</eb3:Service>\n"+ " <eb3:Action>GetElements</eb3:Action>\n"+ " <eb3:ConversationId>org:holodeckb2b:test:conversation</eb3:ConversationId>\n"+ " </eb3:CollaborationInfo>\n"+ " <eb3:MessageProperties>"+ " <eb3:Property name=\"additional-meta-data\">message description</eb3:Property>\n"+ " </eb3:MessageProperties>"+ " <eb3:PayloadInfo>\n"+ " <eb3:PartInfo>\n"+ " <eb3:PartProperties>\n"+ " <eb3:Property name=\"original-file-name\"\n"+ " >simple_document.xml</eb3:Property>\n"+ " </eb3:PartProperties>\n"+ " </eb3:PartInfo>\n"+ " <eb3:PartInfo\n"+ " href=\"cid:8fba80a5-2a4b-42c4-9c8f-f53207d21673-142514300@gecko.fritz.box\"/>\n"+ " </eb3:PayloadInfo>\n"+ "</eb3:UserMessage>"));" is 1618.,117
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PartPropertiesElementTest,testGetElement,Long Statement,The length of the statement "OMElement propElement=PartPropertiesElement.getElement(createXML("<parent>" + " <eb3:PartProperties " + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ " <eb3:Property name=\"original-file-name\">simple_document.xml</eb3:Property>"+ " </eb3:PartProperties> "+ "</parent>"));" is 308.,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PartPropertiesElementTest,testReadElement,Long Statement,The length of the statement "Collection<IProperty> readProperties=PartPropertiesElement.readElement(createXML(" <eb3:PartProperties " + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + " <eb3:Property name=\"original-file-name\">simple_document.xml</eb3:Property>"+ " <eb3:Property name=\"reference_number\">XREF_4828</eb3:Property>"+ " </eb3:PartProperties>"));" is 367.,79
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,PartPropertiesElementTest,testReadElement,Magic Number,The method contains a magic number: 2,79
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,SchemaElementTest,testGetElement,Long Statement,The length of the statement "OMElement schemaElement=SchemaElement.getElement(createXML("<parent>" + "<eb3:Schema xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\"" + " location=\"http://dev.holodeck-b2b.com/notreal/schema\""+ " namespace=\"http://dev.holodeck-b2b.com/notreal/schema\""+ " version=\"2.0\""+ "/>"+ "</parent>"));" is 326.,59
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,SchemaElementTest,testReadElement,Long Statement,The length of the statement "SchemaReference schema=SchemaElement.readElement(createXML("<eb3:Schema xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\"" + " location=\"" + location + "\""+ " namespace=\""+ ns+ "\""+ " version=\""+ version+ "\""+ "/>"));" is 250.,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,MessageInfoElementTest,testCreateElementNoRefTo,Long Identifier,The length of the field REF_TO_MESSAGE_ID_ELEMENT_NAME is 30.,55
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,MessageInfoElementTest,testCreateElementWithRefTo,Long Identifier,The length of the field REF_TO_MESSAGE_ID_ELEMENT_NAME is 30.,76
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,MessageInfoElementTest,testGetElement,Long Statement,The length of the statement "OMElement msgInfoElement=MessageInfoElement.getElement(createXML("<parent>" + " <eb3:MessageInfo xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + " <eb3:Timestamp>2019-08-05T10:50:09.192Z</eb3:Timestamp>\n"+ " <eb3:MessageId>8fba80a5-2a4b-42c4-9c8f-f53207d21673@gecko.fritz.box</eb3:MessageId>\n"+ " </eb3:MessageInfo>"+ "</parent>"));" is 367.,99
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,MessageInfoElementTest,testReadElement,Long Statement,The length of the statement "MessageInfoElement.readElement(createXML("<eb3:MessageInfo xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + " <eb3:Timestamp>" + Utils.toXMLDateTime(timestamp) + "</eb3:Timestamp>\n"+ " <eb3:MessageId>"+ msgId+ "</eb3:MessageId>\n"+ " <eb3:RefToMessageId>"+ refToMsgId+ "</eb3:RefToMessageId>\n"+ "</eb3:MessageInfo>")`msgUnit);" is 360.,112
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,ServiceElementTest,testGetElement,Long Statement,The length of the statement "OMElement sElement=ServiceElement.getElement(createXML("<parent>" + " <eb3:Service type=\"org:holodeckb2b:services\"" + " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ "PackagingTest</eb3:Service>\n"+ "</parent>"));" is 249.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,ServiceElementTest,testReadElementWithTypeAttr,Long Statement,The length of the statement "Service svc=ServiceElement.readElement(createXML(" <eb3:Service type=\"" + svcType + "\""+ " xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">"+ svcName+ "</eb3:Service>"));" is 201.,76
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.packaging,ServiceElementTest,testReadElementNoTypeAttr,Long Statement,The length of the statement "Service svc=ServiceElement.readElement(createXML(" <eb3:Service xmlns:eb3=\"http://docs.oasis-open.org/ebxml-msg/ebms/v3.0/ns/core/200704/\">" + svcName + "</eb3:Service>"));" is 174.,91
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Complex Conditional,The conditional expression (initiator && mepBinding.equals(EbMSConstants.ONE_WAY_PUSH)) || (!initiator && mepBinding.equals(EbMSConstants.ONE_WAY_PULL)) is complex.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Complex Method,Cyclomatic complexity of the method is 45,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Long Method,The method has 112 lines of code.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Long Statement,The length of the statement "if ((initiator && mepBinding.equals(EbMSConstants.ONE_WAY_PUSH)) || (!initiator && mepBinding.equals(EbMSConstants.ONE_WAY_PULL))) continue;" is 140.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(pmodeToIds)) if (CompareUtils.areEqual(to.getPartyIds()`pmodeToIds)) cValue+=MATCH_WEIGHTS.get(PARAMETERS.TO);" is 135.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(pmodeFromIds)) if (CompareUtils.areEqual(from.getPartyIds()`pmodeFromIds)) cValue+=MATCH_WEIGHTS.get(PARAMETERS.FROM);" is 143.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Long Statement,The length of the statement "if (messageProperties.stream().anyMatch(mp -> CompareUtils.areEqual(mp`pp))) cValue+=MATCH_WEIGHTS.get(PARAMETERS.MSG_PROPERTY);" is 128.,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Magic Number,The method contains a magic number: 2,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Magic Number,The method contains a magic number: 2,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,forReceivedUserMessage,Magic Number,The method contains a magic number: 2,95
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,findForPulling,Complex Method,Cyclomatic complexity of the method is 8,336
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,findForPulling,Long Statement,The length of the statement "if (PModeUtils.isHolodeckB2BInitiator(p) && p.getResponder() != null) tpSecCfg=p.getResponder().getSecurityConfiguration();" is 123.,336
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,findForPulling,Long Statement,The length of the statement "else if (!PModeUtils.isHolodeckB2BInitiator(p) && p.getInitiator() != null) tpSecCfg=p.getInitiator().getSecurityConfiguration();" is 129.,336
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,checkMainMPC,Long Statement,The length of the statement "return ((Utils.isNullOrEmpty(pModeMPC) || EbMSConstants.DEFAULT_MPC.equalsIgnoreCase(pModeMPC)) && ((Utils.isNullOrEmpty(mpc)) || EbMSConstants.DEFAULT_MPC.equalsIgnoreCase(mpc))) || (!Utils.isNullOrEmpty(pModeMPC) && !Utils.isNullOrEmpty(mpc) && mpc.toLowerCase().startsWith(pModeMPC.toLowerCase()));" is 301.,389
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,checkSubMPC,Long Statement,The length of the statement "return ((Utils.isNullOrEmpty(pModeMPC) || EbMSConstants.DEFAULT_MPC.equalsIgnoreCase(pModeMPC)) && ((Utils.isNullOrEmpty(mpc)) || EbMSConstants.DEFAULT_MPC.equalsIgnoreCase(mpc))) || (!Utils.isNullOrEmpty(mpc) && mpc.equalsIgnoreCase(pModeMPC));" is 245.,415
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "IUsernameTokenConfiguration expectedUT=pullSecCfg == null ? null : pullSecCfg.getUsernameTokenConfiguration(SecurityHeaderTarget.EBMS);" is 135.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "if (expectedUT == null) expectedUT=tpSecCfg == null ? null : tpSecCfg.getUsernameTokenConfiguration(SecurityHeaderTarget.EBMS);" is 127.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "Optional<ISecurityProcessingResult> secToken=authInfo.parallelStream().filter(ai -> ai instanceof IUsernameTokenProcessingResult && ai.getTargetedRole() == SecurityHeaderTarget.EBMS).findFirst();" is 195.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "verified=VerificationUtils.verifyUsernameToken(expectedUT`secToken.isPresent() ? (IUsernameTokenProcessingResult)secToken.get() : null);" is 136.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "secToken=authInfo.parallelStream().filter(ai -> ai instanceof IUsernameTokenProcessingResult && ai.getTargetedRole() == SecurityHeaderTarget.DEFAULT).findFirst();" is 162.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "verified&=VerificationUtils.verifyUsernameToken(expectedUT`secToken.isPresent() ? (IUsernameTokenProcessingResult)secToken.get() : null);" is 137.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "secToken=authInfo.parallelStream().filter(ai -> ai instanceof ISignatureProcessingResult && ai.getTargetedRole() == SecurityHeaderTarget.DEFAULT).findFirst();" is 158.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,PModeFinder,verifyPullRequestAuthorization,Long Statement,The length of the statement "verified&=VerificationUtils.verifySigningCertificate(expectedSig`secToken.isPresent() ? (ISignatureProcessingResult)secToken.get() : null);" is 139.,439
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkGeneralParameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(mep) || !VALID_MEPS.contains(mep)) errors.add(new PModeValidationError("PMode.MEP"`"PMode.MEP must contain a valid MEP url"));" is 150.,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkGeneralParameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(mepBinding) || !VALID_MEP_BINDINGS.contains(mepBinding)) errors.add(new PModeValidationError("PMode.MEPbinding"`"PMode.MEPbinding must contain an url that identifies the MEP binding to be used"));" is 220.,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkGeneralParameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(legs)) errors.add(new PModeValidationError("PMode.Legs"`"The PMode must contain at least one Leg"));" is 124.,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkGeneralParameters,Long Statement,The length of the statement "else if (EbMSConstants.ONE_WAY_MEP.equals(mep) && legs.size() != 1) errors.add(new PModeValidationError("PMode.Legs"`"A One-Way PMode must contain only one Leg"));" is 163.,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkGeneralParameters,Long Statement,The length of the statement "else if (EbMSConstants.TWO_WAY_MEP.equals(mep) && legs.size() != 2) errors.add(new PModeValidationError("PMode.Legs"`"A Two-Way PMode must contain two Legs"));" is 159.,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkGeneralParameters,Magic Number,The method contains a magic number: 2,90
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkUsernameTokenParameters,Complex Method,Cyclomatic complexity of the method is 8,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkUsernameTokenParameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(utConfig.getUsername())) errors.add(new PModeValidationError(parentParameterName + ".UsernameToken[default].username"`"The configuration of a Username token must contain a username"));" is 208.,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkUsernameTokenParameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(utConfig.getPassword())) errors.add(new PModeValidationError(parentParameterName + ".UsernameToken[default].password"`"The configuration of a Username token must contain a password"));" is 208.,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkUsernameTokenParameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(utConfig.getUsername())) errors.add(new PModeValidationError(parentParameterName + ".UsernameToken[ebms].username"`"The configuration of a Username token must contain a username"));" is 205.,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkUsernameTokenParameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(utConfig.getPassword())) errors.add(new PModeValidationError(parentParameterName + ".UsernameToken[ebms].password"`"The configuration of a Username token must contain a password"));" is 205.,156
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Complex Method,Cyclomatic complexity of the method is 11,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(sigConfig.getKeystoreAlias())) errors.add(new PModeValidationError(parentParameterName + ".Signature.KeyAlias"`"A reference to the private key must be specified"));" is 188.,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Long Statement,The length of the statement "else if (Utils.isNullOrEmpty(sigConfig.getCertificatePassword())) errors.add(new PModeValidationError(parentParameterName + ".Signature.KeyPassword"`"A password for the private key must be specified"));" is 202.,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Long Statement,The length of the statement "else if (!isPrivateKeyAvailable(sigConfig.getKeystoreAlias()`sigConfig.getCertificatePassword())) errors.add(new PModeValidationError(parentParameterName + ".Signature"`"The private key specified for signing is not available"));" is 228.,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(encConfig.getKeystoreAlias())) errors.add(new PModeValidationError(parentParameterName + ".Encryption.KeyAlias"`"A reference to the " + (privateKey ? "private key" : "certificate") + " must be specified"));" is 230.,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Long Statement,The length of the statement "else if (privateKey && Utils.isNullOrEmpty(encConfig.getCertificatePassword())) errors.add(new PModeValidationError(parentParameterName + ".Encryption.KeyPassword"`"A password for the private key must be specified"));" is 217.,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Long Statement,The length of the statement "else if (privateKey && !isPrivateKeyAvailable(encConfig.getKeystoreAlias()`encConfig.getCertificatePassword())) errors.add(new PModeValidationError(parentParameterName + ".Encryption"`"The private key specified for decryption is not available"));" is 246.,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkX509Parameters,Long Statement,The length of the statement "else if (!privateKey && !isCertificateAvailable(encConfig.getKeystoreAlias())) errors.add(new PModeValidationError(parentParameterName + ".Encryption"`"The specified certificate for encryption is not available"));" is 213.,183
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkPullingMPCs,Complex Method,Cyclomatic complexity of the method is 8,224
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkPullingMPCs,Long Statement,The length of the statement "String userMsgMpc=userMsgFlow != null && userMsgFlow.getBusinessInfo() != null ? userMsgFlow.getBusinessInfo().getMpc() : EbMSConstants.DEFAULT_MPC;" is 148.,224
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkPullingMPCs,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(pullMPC)) errors.add(new PModeValidationError(parentParameterName + ".SubChannel.MPC"`"Each PullRequestFlow must define a (sub-)MPC value"));" is 165.,224
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkPullingMPCs,Long Statement,The length of the statement "if (!pullMPC.startsWith(userMsgMpc)) errors.add(new PModeValidationError(parentParameterName`"The MPC in the PullRequestFlow must be sub-channel of the user message MPC"));" is 172.,224
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pmode,BasicPModeValidator,checkPullingMPCs,Long Statement,The length of the statement "if (!pullMPCs.add(pullMPC)) errors.add(new PModeValidationError(parentParameterName`"The MPCs in the PullRequestFlows must be unique"));" is 136.,224
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModesForPullRequest,doProcessing,Long Statement,The length of the statement "procCtx.addGeneratedError(new ProcessingModeMismatch("Can not process pull request because no P-Mode was found!"`pullRequest.getMessageId()));" is 142.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModesForPullRequest,doProcessing,Long Statement,The length of the statement "log.debug("Store the list of " + pmodes.size() + " authorized PModes so next handler can retrieve message unit to return");" is 123.,48
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,AuthorizeMessage,doProcessing,Long Statement,The length of the statement "final ITradingPartnerConfiguration tradingPartner=PModeUtils.isHolodeckB2BInitiator(pmode) ? pmode.getResponder() : pmode.getInitiator();" is 137.,60
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,AuthorizeMessage,doProcessing,Long Statement,The length of the statement "final IUsernameTokenConfiguration utConfig=tpSecConfig == null ? null : tpSecConfig.getUsernameTokenConfiguration(SecurityHeaderTarget.EBMS);" is 141.,60
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,AuthorizeMessage,doProcessing,Long Statement,The length of the statement "final Optional<ISecurityProcessingResult> utToken=procCtx.getSecurityProcessingResults().parallelStream().filter(t -> t instanceof IUsernameTokenProcessingResult && t.getTargetedRole() == SecurityHeaderTarget.EBMS).findFirst();" is 227.,60
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,AuthorizeMessage,doProcessing,Long Statement,The length of the statement "if (!VerificationUtils.verifyUsernameToken(utConfig`utToken.isPresent() ? (IUsernameTokenProcessingResult)utToken.get() : null)) {" is 130.,60
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModes,doProcessing,Complex Method,Cyclomatic complexity of the method is 11,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModes,doProcessing,Long Statement,The length of the statement "procCtx.addGeneratedError(new ProcessingModeMismatch("Can not process message because no P-Mode was found for the message!"`userMsg.getMessageId()));" is 149.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModes,doProcessing,Long Statement,The length of the statement "procCtx.addGeneratedError(new ProcessingModeMismatch("Can not process message because no P-Mode was found for the message!"`e.getMessageId()));" is 143.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModes,doProcessing,Long Statement,The length of the statement "procCtx.addGeneratedError(new ProcessingModeMismatch("Can not process message because no P-Mode was found for the message!"`r.getMessageId()));" is 143.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModes,getPModeFromRefdMessage,Long Statement,The length of the statement "Collection<IMessageUnitEntity> refdMsgUnits=HolodeckB2BCore.getQueryManager().getMessageUnitsWithId(refToMsgId`Direction.OUT);" is 126.,169
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModes,getPModeFromRefdMessage,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(refdMsgUnits) && refdMsgUnits.size() == 1) pmode=HolodeckB2BCoreInterface.getPModeSet().get(refdMsgUnits.iterator().next().getPModeId());" is 162.,169
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessSecurityHeaders,doProcessing,Long Statement,The length of the statement "log.debug("Prepared security configuration based on P-Mode [" + pmode.getId() + "] of the primary message unit ["+ primaryMU.getMessageId()+ "]");" is 146.,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessSecurityHeaders,doProcessing,Long Statement,The length of the statement "secProvider=((EbMS3Module)HolodeckB2BCoreInterface.getModule(EbMS3Module.HOLODECKB2B_EBMS3_MODULE)).getSecurityProvider();" is 122.,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessSecurityHeaders,handleProcessingResult,Complex Method,Cyclomatic complexity of the method is 10,142
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessSecurityHeaders,handleProcessingResult,Long Statement,The length of the statement "if (mu instanceof IUserMessage) event=trustWarnings ? new SignatureVerifiedWithWarning((IUserMessage)mu`sigResult.getHeaderDigest()`sigResult.getPayloadDigests()`sigResult.getTrustValidation()) : new SignatureVerified((IUserMessage)mu`sigResult.getHeaderDigest()`sigResult.getPayloadDigests()`sigResult.getTrustValidation());" is 325.,142
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessSecurityHeaders,handleProcessingResult,Long Statement,The length of the statement "else event=trustWarnings ? new SignatureVerifiedWithWarning((ISignalMessage)mu`sigResult.getHeaderDigest()`sigResult.getTrustValidation()) : new SignatureVerified((ISignalMessage)mu`sigResult.getHeaderDigest()`sigResult.getTrustValidation());" is 242.,142
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessSecurityHeaders,handleProcessingResult,Long Statement,The length of the statement "log.warn("The processing of the " + (result instanceof ISignatureProcessingResult ? "signature" : (result instanceof IEncryptionProcessingResult ? "encryption" : "username token in the " + (result.getTargetedRole() == SecurityHeaderTarget.DEFAULT ? "default" : "ebms"))) + " security header failed! Details: "+ reason.getMessage());" is 332.,142
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessGeneratedErrors,doProcessing,Long Statement,The length of the statement "log.debug("Creating new Error Signal for errors " + (noRef ? "without reference" : "referencing messsage unit with msgId=" + refToMsgId));" is 138.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessGeneratedErrors,doProcessing,Long Statement,The length of the statement "final IMessageUnitEntity muInError=procCtx.getReceivedMessageUnits().parallelStream().filter(mu -> refToMsgId.equals(mu.getMessageId())).findFirst().get();" is 155.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,SaveUserMsgAttachments,doProcessing,Complex Method,Cyclomatic complexity of the method is 10,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,SaveUserMsgAttachments,doProcessing,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@687ab2a1,74
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,SaveUserMsgAttachments,getTempDir,Long Statement,The length of the statement "else if (!Files.isDirectory(tmpPayloadDir) || !Files.isWritable(tmpPayloadDir)) throw new IOException("Temp directory for payloads (" + tmpPayloadDir.toString() + ") is not available!");" is 186.,204
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,SaveUserMsgAttachments,createInconsistentError,Long Statement,The length of the statement "log.info("UserMessage with id " + um.getMessageId() + " can not be processed because payload"+ (invalidRef != null ? " with href=" + invalidRef : "")+ " is not included in message");" is 182.,243
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,SaveUserMsgAttachments,createInconsistentError,Long Statement,The length of the statement "error.setErrorDetail("The payload" + (invalidRef != null ? " with href=" + invalidRef : "") + " could not be found in the message!");" is 133.,243
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,GetMessageUnitForPulling,doProcessing,Long Statement,The length of the statement "if (pullRequest == null || pullRequest.getCurrentProcessingState().getState() == ProcessingState.FAILURE) return InvocationResponse.CONTINUE;" is 141.,47
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,GetMessageUnitForPulling,doProcessing,Long Statement,The length of the statement "@SuppressWarnings("unchecked") final List<IPMode> authPModes=(List<IPMode>)procCtx.getProperty(FindPModesForPullRequest.FOUND_PULL_PMODES);" is 139.,47
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,GetMessageUnitForPulling,doProcessing,Long Statement,The length of the statement "procCtx.addGeneratedError(new EmptyMessagePartitionChannel("The MPC " + pullRequest.getMPC() + " is empty!"`pullRequest.getMessageId()));" is 137.,47
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,GetMessageUnitForPulling,getForPulling,Long Statement,The length of the statement "List<IUserMessageEntity> waitingUserMessages=HolodeckB2BCore.getQueryManager().getMessageUnitsForPModesInState(IUserMessage.class`pmodeIds`ProcessingState.AWAITING_PULL);" is 170.,81
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,GetMessageUnitForPulling,getForPulling,Long Statement,The length of the statement "r=HolodeckB2BCore.getStorageManager().setProcessingState(userMsgToPull`ProcessingState.AWAITING_PULL`ProcessingState.PROCESSING);" is 129.,81
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Complex Conditional,The conditional expression isResponseFlow && (!Utils.isNullOrEmpty(error.getRefToMessageId()) || procCtx.getReceivedMessageUnits().parallelStream().allMatch(m -> m.getCurrentProcessingState().getState() == ProcessingState.FAILURE)) is complex.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Complex Conditional,The conditional expression errorHandling != null && errorHandling.shouldAddSOAPFault() != null && errorHandling.shouldAddSOAPFault().booleanValue() is complex.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Complex Method,Cyclomatic complexity of the method is 11,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "if (isResponseFlow && (!Utils.isNullOrEmpty(error.getRefToMessageId()) || procCtx.getReceivedMessageUnits().parallelStream().allMatch(m -> m.getCurrentProcessingState().getState() == ProcessingState.FAILURE))) {" is 211.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "log.warn("Error Signal [msgId=" + error.getMessageId() + "] can not be sent because it conflicts with successful message units "+ " or because message in error was received as response");" is 187.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "storageManager.setProcessingState(error`ProcessingState.WARNING`isResponseFlow ? "Ambigious error" : "No P-Mode available for sending");" is 136.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "final IMessageUnitEntity msgInError=procCtx.getReceivedMessageUnits().parallelStream().filter(m -> m.getMessageId().equals(error.getRefToMessageId())).findFirst().get();" is 169.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "if (msgInError instanceof IErrorMessage) sendError=errorHandling != null && errorHandling.shouldReportErrorOnError() != null ? errorHandling.shouldReportErrorOnError() : HolodeckB2BCore.getConfiguration().shouldReportErrorOnError();" is 232.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "if (msgInError instanceof IReceipt) sendError=errorHandling != null && errorHandling.shouldReportErrorOnReceipt() != null ? errorHandling.shouldReportErrorOnReceipt() : HolodeckB2BCore.getConfiguration().shouldReportErrorOnReceipt();" is 233.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "if (errorHandling != null && errorHandling.shouldAddSOAPFault() != null && errorHandling.shouldAddSOAPFault().booleanValue()) {" is 127.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReporting,doProcessing,Long Statement,The length of the statement "log.debug("Error Signal [msgId=" + error.getMessageId() + "] should be sent"+ (asResponse ? " as a response" : " a using callback"));" is 133.,52
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReportingTest,testNoRefConflict,Long Statement,The length of the statement "assertEquals(ProcessingState.WARNING`errorSig.getProcessingStates().get(errorSig.getProcessingStates().size() - 2).getState());" is 127.,324
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReportingTest,testNoRefConflict,Magic Number,The method contains a magic number: 2,324
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReportingTest,testNoPModeOnResponse,Long Statement,The length of the statement "assertEquals(ProcessingState.WARNING`errorSig.getProcessingStates().get(errorSig.getProcessingStates().size() - 2).getState());" is 127.,370
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,DetermineErrorReportingTest,testNoPModeOnResponse,Magic Number,The method contains a magic number: 2,370
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessGeneratedErrorsTest,testErrorsWithoutRef,Magic Number,The method contains a magic number: 2,77
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessGeneratedErrorsTest,testErrorsSameMsg,Magic Number,The method contains a magic number: 2,112
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessGeneratedErrorsTest,testErrorsDifferentMsg,Long Statement,The length of the statement "assertTrue(errorSigs.parallelStream().allMatch(e -> !Utils.isNullOrEmpty(e.getRefToMessageId()) && !Utils.isNullOrEmpty(e.getErrors()) && ((usrMsg.getMessageId().equals(e.getRefToMessageId()) && e.getErrors().iterator().next().getErrorDetail().equals(error1.getErrorDetail())) || (pullReq.getMessageId().equals(e.getRefToMessageId()) && e.getErrors().iterator().next().getErrorDetail().equals(error2.getErrorDetail())))));" is 422.,157
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ProcessGeneratedErrorsTest,testErrorsDifferentMsg,Magic Number,The method contains a magic number: 2,157
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,FindPModesTest,testNoPModeFound,Long Statement,The length of the statement "assertEquals("EBMS:0010"`procCtx.getGeneratedErrors().get(userMessageEntity.getMessageId()).iterator().next().getErrorCode());" is 126.,214
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,GetMessageUnitForPullingTest,testEmptyMPC,Long Statement,The length of the statement "assertEquals("EBMS:0006"`procCtx.getGeneratedErrors().get(pullRequestEntity.getMessageId()).iterator().next().getErrorCode());" is 126.,111
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadPullRequestTest,testIgnoreMultipeReq,Long Statement,The length of the statement "String envXML=XML_START + String.format(XMLT_SIGNAL`"pull-req-id1"`"") + String.format(XMLT_SIGNAL`"pull-req-id2"`"mpc=\"http://some.specific.mpc/\"")+ XML_END;" is 160.,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadReceiptTest,testMultiReceipt,Long Statement,The length of the statement "String envXML=XML_START + String.format(XMLT_SIGNAL`"rcpt-msg-id"`"ack-msg-id") + String.format(XMLT_SIGNAL`"rcpt-msg-id2"`"ack-msg-id2")+ String.format(XMLT_SIGNAL`"rcpt-msg-id4"`"ack-msg-id5")+ XML_END;" is 204.,111
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadReceiptTest,testMultiReceipt,Magic Number,The method contains a magic number: 3,111
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadErrorTest,testSingleError,Long Statement,The length of the statement "String envXML=XML_START + String.format(XMLT_SIGNAL`"err-msg-id"`"msg-in-err-id") + String.format(XMLT_ERROR`"EB:0101")+ SIGNAL_END+ XML_END;" is 141.,96
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadErrorTest,testOneSignalMultipleError,Long Statement,The length of the statement "String envXML=XML_START + String.format(XMLT_SIGNAL`"err-msg-id-2"`"msg-in-err-id") + String.format(XMLT_ERROR`"EB:0301")+ String.format(XMLT_ERROR`"EB:0101")+ SIGNAL_END+ XML_END;" is 180.,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadErrorTest,testOneSignalMultipleError,Magic Number,The method contains a magic number: 2,125
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadErrorTest,testMultiSignalsMultipleError,Long Statement,The length of the statement "String envXML=XML_START + String.format(XMLT_SIGNAL`"err-msg-id-1"`"msg-in-err-id") + String.format(XMLT_ERROR`"EB:0501")+ SIGNAL_END+ String.format(XMLT_SIGNAL`"err-msg-id-2"`"msg-in-err-id")+ String.format(XMLT_ERROR`"EB:0301")+ String.format(XMLT_ERROR`"EB:0101")+ SIGNAL_END+ XML_END;" is 288.,155
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadErrorTest,testMultiSignalsMultipleError,Magic Number,The method contains a magic number: 2,155
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.inflow,ReadErrorTest,testMultiSignalsMultipleError,Magic Number,The method contains a magic number: 2,155
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSOAPEnvelopeHandler,doProcessing,Long Statement,The length of the statement "version=leg != null && leg.getProtocol() != null && "1.1".equals(leg.getProtocol().getSOAPVersion()) ? SOAPEnv.SOAPVersion.SOAP_11 : SOAPEnv.SOAPVersion.SOAP_12;" is 161.,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,ConfigureHTTPTransportHandler,doProcessing,Complex Method,Cyclomatic complexity of the method is 12,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,ConfigureHTTPTransportHandler,doProcessing,Empty catch clause,The method has an empty catch block.,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,ConfigureHTTPTransportHandler,doProcessing,Long Statement,The length of the statement "log.error("No P-Mode available for primary message unit [msgId=" + primaryMU.getMessageId() + "] to get the destination!");" is 123.,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,ConfigureHTTPTransportHandler,doProcessing,Long Statement,The length of the statement "else if (primaryMU instanceof IErrorMessage) destURL=leg.getUserMessageFlow().getErrorHandlingConfiguration().getReceiverErrorsTo();" is 132.,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,AddPayloads,addContent,Complex Conditional,The conditional expression href != null && xmlId != null && !href.equals(xmlId) is complex.,118
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,AddPayloads,addContent,Long Statement,The length of the statement "log.warn("Payload reference [" + href + "] and id of payload element ["+ xmlId+ "] are not equal! Can not create consistent message.");" is 135.,118
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,AddPayloads,addContent,Long Statement,The length of the statement "throw new Exception("Payload reference [" + href + "] and id of payload element ["+ xmlId+ "] are not equal! Can not create consistent message.");" is 146.,118
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CheckSentResult,doFlowComplete,Long Statement,The length of the statement "log.info("Processing state for message unit [" + mu.getMessageId() + "] changed to "+ mu.getCurrentProcessingState().getState());" is 129.,76
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CheckSentResult,doFlowComplete,Long Statement,The length of the statement "log.error("A database error occurred while update the processing state of message unit [" + mu.getMessageId() + "]. Details: "+ databaseException.getMessage());" is 160.,76
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSecurityHeaders,doProcessing,Complex Method,Cyclomatic complexity of the method is 9,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSecurityHeaders,doProcessing,Long Statement,The length of the statement "if (pmode != null) log.debug("Using P-Mode [" + pmode.getId() + "] of primary message unit ["+ primaryMU.getMessageId()+ "] to create security headers");" is 153.,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSecurityHeaders,doProcessing,Long Statement,The length of the statement "log.trace("Prepared security configuration based on P-Mode [" + pmode.getId() + "] of the primary message unit ["+ primaryMU.getMessageId()+ "]");" is 146.,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSecurityHeaders,doProcessing,Long Statement,The length of the statement "secProvider=((EbMS3Module)HolodeckB2BCoreInterface.getModule(EbMS3Module.HOLODECKB2B_EBMS3_MODULE)).getSecurityProvider();" is 122.,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSecurityHeaders,doProcessing,Long Statement,The length of the statement "log.error("An error occurred in the security provider when creating the WSS header(s). Details:" + "\n\tSecurity provider: " + secProvider.getName() + "\n\tError details: "+ spe.getMessage());" is 192.,84
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSecurityHeaders,handleResult,Long Statement,The length of the statement "((IUserMessage)mu).getPayloads().forEach((pl) -> digests.entrySet().stream().filter((d) -> CompareUtils.areEqual(d.getKey()`pl)).forEachOrdered((d) -> msgDigests.put(d.getKey()`d.getValue())));" is 193.,164
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,CreateSecurityHeaders,handleResult,Long Statement,The length of the statement "log.warn("Creating the " + (result instanceof ISignatureProcessingResult ? "signature" : (result instanceof IEncryptionProcessingResult ? "encryption" : "username token in the " + (result.getTargetedRole() == SecurityHeaderTarget.DEFAULT ? "default" : "ebms"))) + " security header failed! Details: "+ reason.getMessage());" is 323.,164
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,PrepareResponseMessage,doProcessing,Long Statement,The length of the statement "log.debug("Include the selected error [msgID/refTo" + include.getMessageId() + "/"+ include.getRefToMessageId()+ "] for processing");" is 133.,46
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,PrepareResponseMessage,selectError,Magic Number,The method contains a magic number: 2,80
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,PackageErrorSignalsTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(errorMessage.getMessageId()`msgInfoElem.getFirstChildWithName(new QName(EbMSConstants.EBMS3_NS_URI`"MessageId")).getText());" is 137.,63
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,PackageReceiptSignalTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(rcpt1.getMessageId()`msgInfoElem.getFirstChildWithName(new QName(EbMSConstants.EBMS3_NS_URI`"MessageId")).getText());" is 130.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,PackageReceiptSignalTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(rcpt2.getMessageId()`msgInfoElem.getFirstChildWithName(new QName(EbMSConstants.EBMS3_NS_URI`"MessageId")).getText());" is 130.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,PackagePullRequestSignalTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(pullRequest.getMessageId()`msgInfoElem.getFirstChildWithName(new QName(EbMSConstants.EBMS3_NS_URI`"MessageId")).getText());" is 136.,60
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.handlers.outflow,PackageUsermessageInfoTest,testDoProcessing,Long Statement,The length of the statement "assertEquals(userMessage.getMessageId()`msgInfoElem.getFirstChildWithName(new QName(EbMSConstants.EBMS3_NS_URI`"MessageId")).getText());" is 136.,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.module,EbMS3Module,init,Long Statement,The length of the statement "log.fatal("Invalid Holodeck B2B Core module configuration found! Name in configuration is: " + am.getName() + "` expected was: "+ HOLODECKB2B_EBMS3_MODULE);" is 156.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.module,EbMS3Module,init,Long Statement,The length of the statement "log.fatal("Initialisation of required ebMS3 security provider ({}) failed!\n\tError details: {}"`secProvider.getName()`initializationFailure.getMessage());" is 155.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.module,EbMS3Module,init,Long Statement,The length of the statement "if (cfgFileParam == null) cfgFilePath=HolodeckB2BCore.getConfiguration().getHolodeckB2BHome().resolve("conf/pulling_configuration.xml");" is 136.,66
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doBasicValidation,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(payloadInfo)) for ( IPayload p : payloadInfo) checkPropertiesNames(p.getProperties()`"Part"`validationErrors);" is 135.,51
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doBasicCollabInfoValidation,Long Statement,The length of the statement "if (collabInfo.getService() == null || Utils.isNullOrEmpty(collabInfo.getService().getName())) validationErrors.add(new MessageValidationError("Service information is missing"));" is 178.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictValidation,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(payloadInfo)) for ( IPayload p : payloadInfo) checkPropertiesValues(p.getProperties()`"Part"`validationErrors);" is 136.,101
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictCollabInfoValidation,Complex Conditional,The conditional expression agreementRef != null && Utils.isNullOrEmpty(agreementRef.getType()) && !Utils.isValidURI(agreementRef.getName()) is complex.,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictCollabInfoValidation,Complex Conditional,The conditional expression service != null && Utils.isNullOrEmpty(service.getType()) && !Utils.isValidURI(service.getName()) is complex.,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictCollabInfoValidation,Long Statement,The length of the statement "if (agreementRef != null && Utils.isNullOrEmpty(agreementRef.getType()) && !Utils.isValidURI(agreementRef.getName())) validationErrors.add(new MessageValidationError("Untyped AgreementRef value [" + agreementRef.getName() + "] is not URI"`MessageValidationError.Severity.Failure`HeaderValidationHandler.VALUE_INCONSISTENT_REQ));" is 328.,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictCollabInfoValidation,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(collabInfo.getConversationId())) validationErrors.add(new MessageValidationError("ConversationId must have a non-empty value"));" is 152.,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictCollabInfoValidation,Long Statement,The length of the statement "if (service != null && Utils.isNullOrEmpty(service.getType()) && !Utils.isValidURI(service.getName())) validationErrors.add(new MessageValidationError("Untyped Service value [" + service.getName() + "] is not URI"`MessageValidationError.Severity.Failure`HeaderValidationHandler.VALUE_INCONSISTENT_REQ));" is 303.,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictCollabInfoValidation,Long Statement,The length of the statement "if (EbMSConstants.TEST_ACTION_URI.equals(collabInfo.getAction()) && !EbMSConstants.TEST_SERVICE_URI.equals(service.getName())) validationErrors.add(new MessageValidationError("Service must be " + EbMSConstants.TEST_SERVICE_URI + "if Action is set to "+ EbMSConstants.TEST_ACTION_URI));" is 285.,143
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doBasicPartyInfoValidation,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(partnerInfo.getRole())) validationErrors.add(new MessageValidationError("Role of " + partnerName + " is missing"));" is 139.,174
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doBasicPartyInfoValidation,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(partnerInfo.getPartyIds())) validationErrors.add(new MessageValidationError("Identification of " + partnerName + " is missing"));" is 153.,174
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doBasicPartyInfoValidation,Long Statement,The length of the statement "else if (partnerInfo.getPartyIds().stream().anyMatch(pid -> Utils.isNullOrEmpty(pid.getId()))) validationErrors.add(new MessageValidationError("Empty PartyId for " + partnerName + " is not allowed"));" is 200.,174
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictPartyIdValidation,Long Statement,The length of the statement "else if (!Utils.isValidURI(pid.getId())) validationErrors.add(new MessageValidationError(partnerName + " partyId [" + pid.getId()+ " does not have a type and is not an URI"`MessageValidationError.Severity.Failure`HeaderValidationHandler.VALUE_INCONSISTENT_REQ));" is 262.,195
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,doStrictPartyIdValidation,Long Statement,The length of the statement "if (multipleSameType) validationErrors.add(new MessageValidationError(partnerName + " has multiple partyIds of the same type"));" is 128.,195
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,checkPropertiesNames,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(properties) && properties.stream().anyMatch(p -> Utils.isNullOrEmpty(p.getName()))) validationErrors.add(new MessageValidationError("Unnamed " + propSetName + " property is not allowed"));" is 213.,225
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,UserMessageValidator,checkPropertiesValues,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(properties)) properties.stream().filter(p -> Utils.isNullOrEmpty(p.getValue())).forEachOrdered(p -> validationErrors.add(new MessageValidationError(propSetName + " property " + p.getName()+ " must have a non-empty value!")));" is 250.,238
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,ReceiptValidator,doBasicValidation,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(messageUnit.getRefToMessageId())) validationErrors.add(new MessageValidationError("RefToMessageId is missing"));" is 136.,45
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,ReceiptValidator,doStrictValidation,Long Statement,The length of the statement "if (contentElements.size() > 1) validationErrors.add(new MessageValidationError("Receipt content contains more than 1 element"));" is 129.,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,ReceiptValidator,doStrictValidation,Long Statement,The length of the statement "if (!CreateReceipt.QNAME_NRI_ELEM.equals(rootElementName) && !UserMessageElement.Q_ELEMENT_NAME.equals(rootElementName)) validationErrors.add(new MessageValidationError("Receipt must contain either a ebbp:NonRepudiationInformation or eb:UserMessage element"));" is 260.,65
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,GeneralMessageUnitValidator,doBasicValidation,Long Statement,The length of the statement "if (Utils.isNullOrEmpty(messageUnit.getMessageId())) validationErrors.add(new MessageValidationError("MessageId is missing"));" is 126.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,GeneralMessageUnitValidator,doBasicValidation,Long Statement,The length of the statement "if (messageUnit.getTimestamp() == null) validationErrors.add(new MessageValidationError("Timestamp is missing or invalid"));" is 124.,72
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,GeneralMessageUnitValidator,doStrictValidation,Long Statement,The length of the statement "if (!MessageIdUtils.isCorrectFormat(messageUnit.getMessageId())) validationErrors.add(new MessageValidationError("MessageId value [" + messageUnit.getMessageId() + "] does not conform to RCFC2822"));" is 199.,89
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,GeneralMessageUnitValidator,doStrictValidation,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(messageUnit.getRefToMessageId()) && !MessageIdUtils.isCorrectFormat(messageUnit.getRefToMessageId())) validationErrors.add(new MessageValidationError("RefToMessageId value [" + messageUnit.getRefToMessageId() + "] does not conform to RCFC2822"));" is 271.,89
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,PullRequestValidator,doStrictValidation,Long Statement,The length of the statement "if (!Utils.isNullOrEmpty(messageUnit.getRefToMessageId())) validationErrors.add(new MessageValidationError("There must be no RefToMessageId"));" is 143.,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,PullRequestValidator,doStrictValidation,Long Statement,The length of the statement "if (!Utils.isValidURI(messageUnit.getMPC())) validationErrors.add(new MessageValidationError("Specified MPC [" + messageUnit.getMPC() + "] is not a valid URI"));" is 161.,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,ErrorSignalValidator,validate,Complex Conditional,The conditional expression useStrictValidation && !messageUnit.getErrors().stream().allMatch(e -> !Utils.isNullOrEmpty(e.getErrorCode()) && e.getSeverity() != null) is complex.,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,ErrorSignalValidator,validate,Long Statement,The length of the statement "if (useStrictValidation && !messageUnit.getErrors().stream().allMatch(e -> !Utils.isNullOrEmpty(e.getErrorCode()) && e.getSeverity() != null)) validationErrors.add(new MessageValidationError("Error code or severity not set for all Errors!"));" is 242.,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,ErrorSignalValidator,validate,Long Statement,The length of the statement "if (!checkReferences(messageUnit`useStrictValidation)) validationErrors.add(new MessageValidationError("Error Signal contains inconsistent references"));" is 153.,42
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.validation.header,HeaderValidationTest,setUp,Long Statement,The length of the statement "handlerDesc.addParameter(new Parameter(HeaderValidationHandler.P_VALIDATOR_FACTORY`Ebms3HeaderValidatorFactory.class.getName()));" is 129.,83
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullWorker,setParameters,Complex Conditional,The conditional expression inclusive && (pmodes == null || pmodes.isEmpty()) is complex.,114
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullWorker,run,Long Statement,The length of the statement "log.error("Could not submit PullRequest for P-Mode [" + p.getId() + "] and MPC= ["+ mpc+ "]. Details: "+ ex.getMessage());" is 122.,153
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullWorker,getPModesToPull,Long Statement,The length of the statement "if (isPulling && pmodes.contains(p.getId())) log.trace("P-Mode [id=" + p.getId() + "] is excluded from pulling by this pull worker");" is 133.,198
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocument,validate,Long Statement,The length of the statement "if (defaultPuller.pmodes != null && !defaultPuller.pmodes.isEmpty()) throw new PersistenceException("The default puller should not specify specific PModes!");" is 158.,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocument,validate,Long Statement,The length of the statement "for ( final PullerConfigElement p : pullers) if (p.pmodes == null || p.pmodes.isEmpty()) throw new PersistenceException("Specific puller must reference at least one PMode!");" is 174.,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocument,validate,Long Statement,The length of the statement "if (refreshInterval != null && refreshInterval.intValue() < 0) throw new PersistenceException("Refresh interval must be a non negative integer");" is 145.,69
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocument,getRefreshInterval,Magic Number,The method contains a magic number: 60,127
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocument,loadFromFile,Long Statement,The length of the statement "log.error("Error reading configuration from {}! Details: {} - {}"`path.toString()`ex.getClass().getSimpleName()`ex.getMessage());" is 129.,134
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfiguration,hasConfigChanged,Long Statement,The length of the statement "log.error("An error occurred while checking status of config file {}. Error was: {}"`path.toString()`e.getClass().getSimpleName());" is 131.,102
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullerConfigElement,getDelay,Magic Number,The method contains a magic number: 1000,116
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_DefaultOnly,Magic Number,The method contains a magic number: 60,43
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_DefaultOnly,Magic Number,The method contains a magic number: 1826646350,43
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_CompleteConfig,Magic Number,The method contains a magic number: 600,67
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_CompleteConfig,Magic Number,The method contains a magic number: 3,67
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_CompleteConfig,Magic Number,The method contains a magic number: 1985496162,67
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_CompleteConfig,Magic Number,The method contains a magic number: 1622097273,67
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_CompleteConfig,Magic Number,The method contains a magic number: 2,67
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_CompleteConfig,Magic Number,The method contains a magic number: 2,67
holodeck-b2b_Holodeck-B2B,org.holodeckb2b.ebms3.pulling,PullConfigDocumentTest,testLoad_CompleteConfig,Magic Number,The method contains a magic number: 3,67

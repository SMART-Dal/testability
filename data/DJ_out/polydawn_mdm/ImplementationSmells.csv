Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
polydawn_mdm,net.polydawn.mdm.test,SourceOrderMethodComparator,compare,Long Statement,The length of the statement "if (methodPosition1 instanceof NullMethodPosition || methodPosition2 instanceof NullMethodPosition) throw new RuntimeException();" is 129.,21
polydawn_mdm,net.polydawn.mdm.test,SourceOrderMethodComparator,getIndexOfMethodPosition,Long Statement,The length of the statement "cached=(method.getAnnotation(Ignore.class) == null) ? getIndexOfMethodPosition(aClass`method.getName()) : new NullMethodPosition("getIndexOfMethodPosition(): Method " + method.getName() + " annotated as Ignored in class "+ aClass.getCanonicalName());" is 250.,33
polydawn_mdm,net.polydawn.mdm.test,SourceOrderMethodComparator,getIndexOfMethodPosition,Long Statement,The length of the statement "while ((line=lineNumberReader.readLine()) != null) if (line.contains(methodNameWithSeparator)) return new MethodPosition(lineNumberReader.getLineNumber()`line.indexOf(methodNameWithSeparator));" is 193.,57
polydawn_mdm,net.polydawn.mdm.test,SourceOrderMethodComparator,getIndexOfMethodPosition,Long Statement,The length of the statement "return new NullMethodPosition("Error while reading byte code of class " + aClass.getCanonicalName() + "; "+ e.getMessage());" is 124.,57
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,endTestSuite,Long Statement,The length of the statement "sb.append("------------- Standard Output ---------------").append(StringUtils.LINE_SEP).append(systemOutput).append("------------- ---------------- ---------------").append(StringUtils.LINE_SEP);" is 195.,124
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,endTestSuite,Long Statement,The length of the statement "sb.append("------------- Standard Error -----------------").append(StringUtils.LINE_SEP).append(systemError).append("------------- ---------------- ---------------").append(StringUtils.LINE_SEP);" is 195.,124
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,endTestSuite,Magic Number,The method contains a magic number: 1000.0,124
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,endTest,Magic Number,The method contains a magic number: 1000.0,187
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,formatError,Long Statement,The length of the statement "resultWriter.println(TAB_STR + "(" + error.getClass().getSimpleName()+ "): "+ ((error.getMessage() != null) ? error.getMessage() : error));" is 139.,285
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,filterErrorTrace,Magic Number,The method contains a magic number: 3,317
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,filterErrorTrace,Magic Number,The method contains a magic number: 2,317
polydawn_mdm,net.polydawn.mdm.test,JunitConsoleFormatter,filterErrorTrace,Magic Number,The method contains a magic number: 4,317
polydawn_mdm,net.polydawn.mdm.test,TestCaseUsingRepository,assertJoy,Long Statement,The length of the statement "fail("command exited with " + result.getClass().getSimpleName() + ": '"+ result.happy+ "' -- \""+ result.getMessage()+ "\".");" is 126.,30
polydawn_mdm,net.polydawn.mdm.fixture,ProjectGamma,ProjectGamma,Magic Number,The method contains a magic number: 3,18
polydawn_mdm,net.polydawn.mdm.fixture,ProjectGamma,ProjectGamma,Magic Number,The method contains a magic number: 3,18
polydawn_mdm,net.polydawn.mdm.fixture,ProjectDelta,ProjectDelta,Magic Number,The method contains a magic number: 4,20
polydawn_mdm,net.polydawn.mdm.jgit,DircacheLockSanityTest,acquiring_dircache_lock_twice_fails,Empty catch clause,The method has an empty catch block.,13
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testEmptyWhitelistOnDepthThreeValues,Magic Number,The method contains a magic number: 14,28
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testEmptyWhitelistOnDepthMixedValues,Magic Number,The method contains a magic number: 14,40
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testEmptyWhitelistOnDepthMixedValues,Magic Number,The method contains a magic number: 14,40
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testPartialWhitelistOnDepthMixedValues,Magic Number,The method contains a magic number: 14,53
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testPartialWhitelistOnDepthMixedValues,Magic Number,The method contains a magic number: 14,53
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testPartialWhitelistOnDepthMixedValues,Magic Number,The method contains a magic number: 14,53
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testPartialWhitelistOnDepthMixedValues,Magic Number,The method contains a magic number: 14,53
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testPartialWhitelistOnDepthMixedValues,Magic Number,The method contains a magic number: 14,53
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfigTest,testPartialWhitelistOnValuesIncludingLists,Magic Number,The method contains a magic number: 14,71
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfig,refilter,Complex Conditional,The conditional expression whitelist.getBoolean(section`subsection`key`false) || whitelist.getBoolean(section`subsection`"*"`false) || whitelist.getBoolean(section`null`"*"`false) is complex.,40
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfig,refilter,Long Statement,The length of the statement "for ( String subsection : original.getSubsections(section)) for ( String key : original.getNames(section`subsection)) if (whitelist.getBoolean(section`subsection`key`false) || whitelist.getBoolean(section`subsection`"*"`false) || whitelist.getBoolean(section`null`"*"`false)) this.setStringList(section`subsection`key`Arrays.asList(original.getStringList(section`subsection`key)));" is 381.,40
polydawn_mdm,net.polydawn.mdm.jgit,FilteredConfig,refilter,Long Statement,The length of the statement "for ( String key : original.getNames(section)) if (whitelist.getBoolean(section`null`key`false) || whitelist.getBoolean(section`null`"*"`false)) this.setStringList(section`null`key`Arrays.asList(original.getStringList(section`null`key)));" is 238.,40
polydawn_mdm,net.polydawn.mdm.scenarios,SwitchingToBranchWithoutDepsTest,should_leave_any_submodules_alone_if_dirty_working_tree,Long Statement,The length of the statement "assertTrue("dependency module path should remain present on fs"`new File(project.getRepo().getWorkTree() + "/lib/alpha").getCanonicalFile().exists());" is 150.,50
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingSkippingDataAccumulationTest,releasing_in_a_fresh_init_linked_without_accumulation,Long Statement,The length of the statement "Repository releaseRepo=new RepositoryBuilder().setWorkTree(new File("projectAlpha/releases/").getCanonicalFile()).build();" is 122.,18
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingSkippingDataAccumulationTest,releasing_in_a_fresh_init_linked_without_accumulation,Magic Number,The method contains a magic number: 6,18
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingSkippingDataAccumulationTest,releasing_in_a_fresh_init_linked_without_accumulation,Magic Number,The method contains a magic number: 2,18
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingSkippingDataAccumulationTest,releasing_in_a_fresh_init_linked_without_accumulation,Magic Number,The method contains a magic number: 2,18
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_in_a_fresh_init_linked,Long Statement,The length of the statement "Repository releaseRepo=new RepositoryBuilder().setWorkTree(new File("projectAlpha/releases/").getCanonicalFile()).build();" is 122.,20
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_in_a_fresh_init_linked,Long Statement,The length of the statement "assertTrue("release file present in version dir in master commit"`Arrays.asList(new File("projectAlpha/releases/v1/").getCanonicalFile().list()).contains("whatever"));" is 167.,20
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_in_a_fresh_init_linked,Magic Number,The method contains a magic number: 6,20
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_in_a_fresh_init_linked,Magic Number,The method contains a magic number: 3,20
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_in_a_fresh_init_linked,Magic Number,The method contains a magic number: 2,20
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_in_a_random_repo_should_fail,Empty catch clause,The method has an empty catch block.,75
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_in_a_random_repo_should_fail,Long Statement,The length of the statement "fail("expected release in non-release repo to fail` but command exited with '" + result.happy + "' -- \""+ result.getMessage()+ "\".");" is 135.,75
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_to_an_empty_path_in_a_repo_should_fail,Long Statement,The length of the statement "fail("expected release in non-repo path to fail` but command exited with '" + result.happy + "' -- \""+ result.getMessage()+ "\".");" is 132.,92
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingTest,releasing_to_an_empty_path_in_a_repo_should_fail,Magic Number,The method contains a magic number: 4,92
polydawn_mdm,net.polydawn.mdm.scenarios,RevivingEmptyWorkdirsTest,revivingEmptyWorkdirsTest,Long Statement,The length of the statement "assertEquals("content of artifact is correct"`"alpha release"`IOForge.readFileAsString(new File(depWorkTreePath`"alpha")));" is 123.,19
polydawn_mdm,net.polydawn.mdm.scenarios,RevivingEmptyWorkdirsTest,revivingEmptyWorkdirsTest,Magic Number,The method contains a magic number: 3,19
polydawn_mdm,net.polydawn.mdm.scenarios,RevivingEmptyWorkdirsTest,revivingEmptyWorkdirsTest,Magic Number,The method contains a magic number: 2,19
polydawn_mdm,net.polydawn.mdm.scenarios,ReleasingScatteredTest,setup,Long Statement,The length of the statement "releaseHubRepo=new RepositoryBuilder().setGitDir(new File("projectAlpha-releases.git").getCanonicalFile()).setBare().build();" is 125.,16
polydawn_mdm,net.polydawn.mdm.scenarios,GitignoreInteractionsTest,add_into_gitignored_dir,Long Statement,The length of the statement "assertEquals("content of artifact is correct"`"alpha release"`IOForge.readFileAsString(new File(depWorkTreePath`"alpha")));" is 123.,14
polydawn_mdm,net.polydawn.mdm.scenarios,GitignoreInteractionsTest,add_into_gitignored_dir,Magic Number,The method contains a magic number: 2,14
polydawn_mdm,net.polydawn.mdm.scenarios,NestedSubmodulesTest,nestedSubmodulesTest,Long Statement,The length of the statement "Repository projectBetaNested=new RepositoryBuilder().setWorkTree(new File(projectAlpha.getRepo().getDirectory()`"projectBeta").getCanonicalFile()).build();" is 155.,19
polydawn_mdm,net.polydawn.mdm.scenarios,NestedSubmodulesTest,nestedSubmodulesTest,Long Statement,The length of the statement "File depGitDataPath=new File(projectAlpha.getRepo().getDirectory() + "/modules/projectBeta/modules/lib/depname").getCanonicalFile();" is 132.,19
polydawn_mdm,net.polydawn.mdm.scenarios,NestedSubmodulesTest,nestedSubmodulesTest,Long Statement,The length of the statement "assertEquals("content of artifact is correct"`"alpha release"`IOForge.readFileAsString(new File(depWorkTreePath`"alpha")));" is 123.,19
polydawn_mdm,net.polydawn.mdm.scenarios,NestedSubmodulesTest,nestedSubmodulesTest,Magic Number,The method contains a magic number: 3,19
polydawn_mdm,net.polydawn.mdm.scenarios,NestedSubmodulesTest,nestedSubmodulesTest,Magic Number,The method contains a magic number: 2,19
polydawn_mdm,net.polydawn.mdm.scenarios,PlainSubmoduleMergeExample,should_not_conflict_when_merging_branch_where_submodule_moved_forward,Magic Number,The method contains a magic number: 2,14
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddFromLocalRelrepWithSingleVersion,Long Statement,The length of the statement "assertEquals("content of artifact is correct"`"alpha release"`IOForge.readFileAsString(new File(depWorkTreePath`"alpha")));" is 123.,21
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddFromLocalRelrepWithSingleVersion,Magic Number,The method contains a magic number: 3,21
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddFromLocalRelrepWithSingleVersion,Magic Number,The method contains a magic number: 2,21
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddNonexistingVersionFails,Empty catch clause,The method has an empty catch block.,59
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddFromNonexistingRepoFails,Empty catch clause,The method has an empty catch block.,78
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddFromLocalRelrepWithMultipleVersions,Long Statement,The length of the statement "assertEquals("content of artifact is correct"`"beta release 1.1"`IOForge.readFileAsString(new File(depWorkTreePath`"beta")));" is 125.,96
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddFromLocalRelrepWithMultipleVersions,Magic Number,The method contains a magic number: 3,96
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommandTest,testAddFromLocalRelrepWithMultipleVersions,Magic Number,The method contains a magic number: 2,96
polydawn_mdm,net.polydawn.mdm.commands,HttpAcceptanceTest,testAddFromHttpRepoWithMultipleVersions,Long Statement,The length of the statement "assertEquals("expected list of artifacts obtained"`Arrays.asList(new String[]{".git"`"netty-all-javadoc.jar"`"netty-all-javadoc.jar.asc"`"netty-all-sources.jar"`"netty-all-sources.jar.asc"`"netty-all.jar"`"netty-all.jar.asc"`"netty-all.pom"`"netty-all.pom.asc"})`Arrays.asList(artifacts));" is 289.,21
polydawn_mdm,net.polydawn.mdm.commands,HttpAcceptanceTest,testAddFromHttpRepoWithMultipleVersions,Long Statement,The length of the statement "assertEquals("content of artifact is correct"`"-----BEGIN PGP SIGNATURE-----\n" + "Version: GnuPG/MacGPG2 v2.0.18 (Darwin)\n" + "Comment: GPGTools - http://gpgtools.org\n"+ "\n"+ "iEYEABECAAYFAlHuQ0kACgkQBWrKdNRgAL/BzwCZAf8WbPts4Gw32JwfBS+NnNOM\n"+ "NKoAn2CyvOmShPT8vsg9wIsAQQ044EPC\n"+ "=h1u4\n"+ "-----END PGP SIGNATURE-----\n"`IOForge.readFileAsString(new File(depWorkTreePath`"netty-all.jar.asc")));" is 403.,21
polydawn_mdm,net.polydawn.mdm.commands,HttpAcceptanceTest,testAddFromHttpRepoWithMultipleVersions,Magic Number,The method contains a magic number: 3,21
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommandTest,selectDirectoryContainingFiles,Magic Number,The method contains a magic number: 2,105
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommandTest,selectDirectoryContainingDirectories,Magic Number,The method contains a magic number: 3,127
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommandTest,selectDirectoryContainingDirectories,Magic Number,The method contains a magic number: 2,127
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommandTest,testUpdateFromLocalRelrepWithMutipleVersions,Long Statement,The length of the statement "assertEquals("content of artifact is correct"`"beta release 1.1"`IOForge.readFileAsString(new File(depWorkTreePath`"beta")));" is 125.,16
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommandTest,testUpdateFromLocalRelrepWithMutipleVersions,Magic Number,The method contains a magic number: 3,16
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommandTest,testUpdateFromLocalRelrepWithMutipleVersions,Magic Number,The method contains a magic number: 2,16
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommandTest,testDescribeNormalRepo,Long Statement,The length of the statement "assertEquals(Strings.join(Arrays.asList("dependency: version:"`"----------- --------"`" lib/alpha v1"`" lib/beta v1.0")`"\n") + "\n"`pg.toString());" is 148.,35
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommandTest,testDescribeFreshClonedRepo,Long Statement,The length of the statement "Repository clone=Git.cloneRepository().setURI(upstream.getRepo().getWorkTree().getPath()).setDirectory(new File("cloneRepo").getCanonicalFile()).call().getRepository();" is 168.,56
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommandTest,testDescribeFreshClonedRepo,Long Statement,The length of the statement "assertEquals(Strings.join(Arrays.asList("dependency: version:"`"----------- --------"`" lib/alpha -- uninitialized --"`" lib/beta -- uninitialized --")`"\n") + "\n"`pg.toString());" is 180.,56
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommandTest,testDescribeDesyncedDependency,Long Statement,The length of the statement "assertEquals(Strings.join(Arrays.asList("dependency: version:"`"----------- --------"`" lib/alpha v1"`" lib/beta v1.1"`" !! intended version is v1.0` run `mdm update` to get it"`" !! commit currently checked out does not match hash in parent project")`"\n") + "\n"`pg.toString());" is 280.,83
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommandTest,testDescribeNamedDep,Long Statement,The length of the statement "assertEquals(Strings.join(Arrays.asList("dependency: version:"`"----------- --------"`" lib/alpha v1")`"\n") + "\n"`pg.toString());" is 131.,125
polydawn_mdm,net.polydawn.mdm.commands,MdmRemoveCommand,call,Long Statement,The length of the statement "new Git(repo).commit().setOnly(name).setOnly(Constants.DOT_GIT_MODULES).setMessage("removing dependency on " + name + ".").call();" is 130.,43
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,parse,Complex Method,Cyclomatic complexity of the method is 14,43
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,parse,Empty catch clause,The method has an empty catch block.,43
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,parse,Long Statement,The length of the statement "String parentRemote=repo.getConfig().getString(ConfigConstants.CONFIG_REMOTE_SECTION`"origin"`ConfigConstants.CONFIG_KEY_URL);" is 126.,43
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,parse,Long Statement,The length of the statement "else remotePublicUrl=inputPrompt(os`"Configure a remote url where this repo will be accessible?\n" + "This will be committed to the project's .gitmodules file` and so should be a publicly accessible url.\n" + "remote url: ");" is 225.,43
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,parse,Long Statement,The length of the statement "else remotePublishUrl=inputPrompt(os`"Configure a remote url you'll use to push this repo when making releases?\n" + "This will not be committed to the project; just set in your local config.\n" + "remote url [leave blank to use the same public url]: ");" is 254.,43
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,validate,Magic Number,The method contains a magic number: 2,105
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,assertReleaseRepoAreaClean,Complex Conditional,The conditional expression pathFile.exists() && !pathFile.isDirectory() || new File(pathFile`".git").exists() is complex.,153
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,assertReleaseRepoAreaClean,Complex Conditional,The conditional expression asSubmodule && (repo.getRef("refs/heads/mdm/init") != null || repo.getRef("refs/remotes/origin/mdm/init") != null) is complex.,153
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,assertReleaseRepoAreaClean,Long Statement,The length of the statement "if (asSubmodule && SubmoduleWalk.forIndex(repo).setFilter(PathFilter.create(path)).next()) throw new MdmExitMessage(":I"`"there's already a releases module! No changes made.");" is 176.,153
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,assertReleaseRepoAreaClean,Long Statement,The length of the statement "if (pathFile.exists() && !pathFile.isDirectory() || new File(pathFile`".git").exists()) throw new MdmExitMessage(":("`"something already exists at the location we want to initialize the releases repo. clear it out and try again.");" is 231.,153
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,assertReleaseRepoAreaClean,Long Statement,The length of the statement "if (asSubmodule && (repo.getRef("refs/heads/mdm/init") != null || repo.getRef("refs/remotes/origin/mdm/init") != null)) throw new MdmExitMessage(":("`"you are already in a releases repo! it doesn't make any sense to put a releases repo in a releases repo.");" is 258.,153
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,writeParentGitmoduleConfig,Long Statement,The length of the statement "StoredConfig gitmodulesCfg=new FileBasedConfig(new File(parentRepo.getWorkTree()`Constants.DOT_GIT_MODULES)`parentRepo.getFS());" is 128.,263
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,writeParentGitmoduleConfig,Long Statement,The length of the statement "gitmodulesCfg.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION`path`MdmConfigConstants.Module.MODULE_TYPE.toString()`MdmModuleType.RELEASES.toString());" is 154.,263
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,writeReleaseRepoConfig,Long Statement,The length of the statement "releaserepo.getConfig().setString(ConfigConstants.CONFIG_REMOTE_SECTION`"origin"`ConfigConstants.CONFIG_KEY_URL`remotePublishUrl);" is 130.,287
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,writeReleaseRepoConfig,Long Statement,The length of the statement "releaserepo.getConfig().setString(ConfigConstants.CONFIG_REMOTE_SECTION`"origin"`"fetch"`"+refs/heads/*:refs/remotes/origin/*");" is 128.,287
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseInitCommand,makeParentRepoLinkCommit,Long Statement,The length of the statement "new Git(repo).commit().setOnly(path).setOnly(Constants.DOT_GIT_MODULES).setMessage("initialize releases repo for " + name + ".").call();" is 136.,301
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Complex Method,Cyclomatic complexity of the method is 25,53
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Empty catch clause,The method has an empty catch block.,53
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Long Method,The method has 114 lines of code.,53
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Long Statement,The length of the statement "os.print((fancy ? "\033[2K\r" : "") + "updating module " + i+ " of "+ modules.size()+ ": "+ module.getHandle()+ " ..."+ (fancy ? "" : "\n"));" is 141.,53
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Long Statement,The length of the statement "os.println((fancy ? "\033[2K\r" : "") + "notice: in updating " + module.getHandle()+ " to version "+ module.getVersionName()+ "` mdm left the submodule with a different hash checked out than the parent repo expected.");" is 219.,53
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Long Statement,The length of the statement "os.println((fancy ? "\033[2K\r" : "") + "notice: in updating " + module.getHandle()+ " to version "+ module.getVersionName()+ "` mdm left the submodule with a different hash checked out than *any* of the merging branches. This is only expected if you changed the version name to a value also not present on any of the merging branches.");" is 338.,53
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Long Statement,The length of the statement "os.println((fancy ? "\033[2K\r" : "") + "error: in updating " + module.getHandle()+ " to version "+ module.getVersionName()+ "` "+ e);" is 134.,53
polydawn_mdm,net.polydawn.mdm.commands,MdmUpdateCommand,call,Long Statement,The length of the statement "os.println((fancy ? "\033[2K\r" : "") + "notice: not removing unlinked dependency at " + subrepoPath+ " because it contains uncommitted changes.");" is 147.,53
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommand,status,Complex Method,Cyclomatic complexity of the method is 10,109
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommand,status,Long Statement,The length of the statement "if (!module.getHandle().equals(module.getPath())) s.errors.add("Handle and path are not the same. This is very strange and may cause issues with other git tools.");" is 164.,109
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommand,status,Long Statement,The length of the statement "if (module.getUrlHistoric() == null) s.errors.add("Incomplete configuration: No url for remote repo is set in gitmodules.");" is 124.,109
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommand,status,Long Statement,The length of the statement "if (module.getIndexId() == null) s.errors.add("Incomplete configuration: No committed gitlink in history matches this gitmodules entry.");" is 138.,109
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommand,status,Long Statement,The length of the statement "if (dependency.getVersionName() != null && !dependency.getVersionName().equals(dependency.getVersionActual())) s.warnings.add("intended version is " + dependency.getVersionName() + "` run `mdm update` to get it");" is 213.,109
polydawn_mdm,net.polydawn.mdm.commands,MdmStatusCommand,status,Long Statement,The length of the statement "if (!dependency.getIndexId().equals(dependency.getHeadId())) s.warnings.add("commit currently checked out does not match hash in parent project");" is 146.,109
polydawn_mdm,net.polydawn.mdm.commands,MdmAlterCommand,call,Long Statement,The length of the statement "return new MdmExitMessage(":("`"the submodule remote origin url isn't initialized. maybe run `mdm update` first so there's something in place before we alter?");" is 161.,44
polydawn_mdm,net.polydawn.mdm.commands,MdmAlterCommand,call,Long Statement,The length of the statement "return new MdmExitMessage(":'("`"transport failed! check that the submodule remote origin url is correct and reachable and try again?\n (error message: " + e.getMessage() + ")");" is 178.,44
polydawn_mdm,net.polydawn.mdm.commands,MdmAlterCommand,call,Long Statement,The length of the statement "if (versions.size() == 0) return new MdmExitMessage(":("`"no releases could be found at the submodule remote origin url -- it doesn't look like releases that mdm understands are there.\ncheck the origin url in the submodule's config. if this url worked in the past` maybe the project maintainers moved their releases repo?");" is 325.,44
polydawn_mdm,net.polydawn.mdm.commands,MdmAlterCommand,call,Long Statement,The length of the statement "if (!versions.contains(version)) return new MdmExitMessage(":("`"no version labelled " + version + " available from the provided remote url.");" is 143.,44
polydawn_mdm,net.polydawn.mdm.commands,MdmAlterCommand,call,Long Statement,The length of the statement "if (module.getVersionName().equals(version)) return new MdmExitMessage(":I"`"that version is already specified! no changes made.");" is 131.,44
polydawn_mdm,net.polydawn.mdm.commands,MdmAlterCommand,call,Long Statement,The length of the statement "gitmodulesCfg.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION`module.getHandle()`MdmConfigConstants.Module.DEPENDENCY_VERSION.toString()`version);" is 149.,44
polydawn_mdm,net.polydawn.mdm.commands,MdmAlterCommand,call,Long Statement,The length of the statement "new Git(repo).commit().setOnly(module.getPath()).setOnly(Constants.DOT_GIT_MODULES).setMessage("shifting dependency on " + name + " to version "+ version+ ".").call();" is 167.,44
polydawn_mdm,net.polydawn.mdm.commands,MdmCommand,assertInRepoRoot,Long Statement,The length of the statement "if (!isInRepoRoot()) throw new MdmExitMessage(":("`"this command should be run from the top level folder of your git repo.");" is 125.,120
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,validate,Long Statement,The length of the statement "if (version.contains("/")) throw new MdmExitMessage(":("`"you can't use version names that have slashes in them` sorry. it gets messy.");" is 137.,51
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,validate,Long Statement,The length of the statement "if (!Repository.isValidRefName(Constants.R_HEADS + version)) throw new MdmExitMessage(":("`"this version name contains unusual characters that would be hard to represent. please choose a different version name.");" is 213.,51
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,call,Complex Conditional,The conditional expression isInRepoRoot() && relRepoPath.equals("releases") && Plumbing.isCommitedGitlink(repo`"releases") is complex.,67
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,call,Complex Method,Cyclomatic complexity of the method is 12,67
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,call,Long Method,The method has 206 lines of code.,67
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,call,Long Statement,The length of the statement "new Git(relRepo).merge().include(relRepo.getRef("mdm/release/" + version)).setFastForward(FastForwardMode.NO_FF).setCommit(false).call();" is 137.,67
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,call,Long Statement,The length of the statement "if (!artifactDestFile.mkdir()) return new MdmExitMessage(":'("`"couldn't make the directory named \"" + version + "\" to put the releases into because there was already something there.");" is 188.,67
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,assertReleaseRepoClean,Long Statement,The length of the statement "if (relModule.hasDirtyFiles()) throw new MdmExitMessage(":("`"there are uncommitted changes in the release repo. cannot release.");" is 131.,295
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,assertReleaseRepoDoesntAlreadyContain,Long Statement,The length of the statement "if (this.getRepository() != null && this.getRepository().getRef("refs/tags/release/" + version) != null) throw new MdmExitMessage(":'("`"the parent repo already has a release point branch labeled version " + version + " !");" is 224.,306
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,assertReleaseRepoDoesntAlreadyContain,Long Statement,The length of the statement "if (relRepo.getRef("refs/heads/mdm/release/" + version) != null) throw new MdmExitMessage(":'("`"the releases repo already has a release point branch labeled version " + version + " !");" is 186.,306
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,assertReleaseRepoDoesntAlreadyContain,Long Statement,The length of the statement "if (relRepo.getRef("refs/tags/release/" + version) != null) throw new MdmExitMessage(":'("`"the releases repo already has a release point tag labeled version " + version + " !");" is 178.,306
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,assertReleaseRepoDoesntAlreadyContain,Long Statement,The length of the statement "if (treeWalk.next()) throw new MdmExitMessage(":'("`"the releases repo already has files committed in the master branch where version " + version + " should go!");" is 163.,306
polydawn_mdm,net.polydawn.mdm.commands,MdmReleaseCommand,selectInputFiles,Long Statement,The length of the statement "if (inputFilenames == null || inputFilenames.size() == 0) throw new MdmExitMessage(":("`"no files were found at " + inputPath + "\nrelease aborted.");" is 150.,346
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,call,Complex Method,Cyclomatic complexity of the method is 8,89
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,call,Long Statement,The length of the statement "if (url.startsWith("../") || url.startsWith("./")) os.println("hey` heads up: when you use a relative url to describe a submodule location` git assumes it's relative to the remote origin of the parent project (NOT relative to the project location on the local filesystem` which is what you might have expected). this... works` but it's not recommended because of the potential it has to surprise.");" is 399.,89
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,call,Long Statement,The length of the statement "if (versions.size() == 0) throw new MdmExitMessage(":("`"no releases could be found at the url you gave for a releases repository -- it doesn't look like releases that mdm understands are there.\nare you sure this is the releases repo? keep in mind that the release repo and the source repo isn't the same for most projects -- check the project readme for the location of their release repo.");" is 394.,89
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,call,Long Statement,The length of the statement "if (path.exists()) throw new MdmExitMessage(":'("`"there are already files at " + path + " !\nWe can't pull down a dependency there until this conflict is cleared away.");" is 171.,89
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,call,Long Statement,The length of the statement "if (SubmoduleWalk.forIndex(repo).setFilter(PathFilter.create(path.getPath())).next()) throw new MdmExitMessage(":'("`"there is already a submodule in the git index at " + path + " !\nWe can't pull down a dependency there until this conflict is cleared away.");" is 260.,89
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,call,Long Statement,The length of the statement "if (!versions.contains(version)) throw new MdmExitMessage(":("`"no version labelled " + version + " available from the provided remote url.");" is 142.,89
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,fetchVersions,Long Statement,The length of the statement "throw new MdmExitMessage(":'("`"transport failed! check that your url is correct and reachable and try again?\n (error message: " + e.getMessage() + ")");" is 154.,142
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,doSubmoduleConfig,Long Statement,The length of the statement "gitmodulesCfg.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION`slashedPath`ConfigConstants.CONFIG_KEY_PATH`slashedPath);" is 122.,154
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,doSubmoduleConfig,Long Statement,The length of the statement "gitmodulesCfg.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION`slashedPath`MdmConfigConstants.Module.MODULE_TYPE.toString()`MdmModuleType.DEPENDENCY.toString());" is 163.,154
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,doSubmoduleConfig,Long Statement,The length of the statement "gitmodulesCfg.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION`slashedPath`MdmConfigConstants.Module.DEPENDENCY_VERSION.toString()`version);" is 142.,154
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,doGitStage,Complex Conditional,The conditional expression c == null || c.getDirCacheEntry() == null || !c.getDirCacheEntry().isAssumeValid() is complex.,173
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,doGitStage,Complex Method,Cyclomatic complexity of the method is 8,173
polydawn_mdm,net.polydawn.mdm.commands,MdmAddCommand,doGitCommit,Long Statement,The length of the statement "new Git(repo).commit().setOnly(path.getPath()).setOnly(Constants.DOT_GIT_MODULES).setMessage("adding dependency on " + name + " at "+ version+ ".").call();" is 155.,243
polydawn_mdm,net.polydawn.mdm.util,VersionComparatorTest,test,Long Statement,The length of the statement "List<String> list=Arrays.asList(new String[]{"1.5.1"`"1.5.1+1"`"1.5.2b2"`"3.10A"`"161"`"3.10b"`"3.10a"`"8.02"`"3.4j"`"1996.07.12"`"3.2.pl0"`"3.1.1.6"`"2g6"`"11g"`"1.13-"`"0.960923"`"1.13+"`"1.13"`"2.2beta29"`"1.13++"`"5.5.kw"`"2.0b1pl0"});" is 239.,48
polydawn_mdm,net.polydawn.mdm.util,VersionComparatorTest,test,Long Statement,The length of the statement "List<String> expected=Arrays.asList(new String[]{"0.960923"`"1.5.1"`"1.5.1+1"`"1.5.2b2"`"1.13"`"1.13+"`"1.13++"`"1.13-"`"2.0b1pl0"`"2.2beta29"`"2g6"`"3.1.1.6"`"3.2.pl0"`"3.4j"`"3.10A"`"3.10a"`"3.10b"`"5.5.kw"`"8.02"`"11g"`"161"`"1996.07.12"});" is 243.,48
polydawn_mdm,net.polydawn.mdm.util,FileUtils,copyDirectory,Complex Method,Cyclomatic complexity of the method is 9,36
polydawn_mdm,net.polydawn.mdm.util,FileUtils,copyDirectory,Long Parameter List,The method has 5 parameters. ,36
polydawn_mdm,net.polydawn.mdm.util,FileUtils,copyFile,Complex Method,Cyclomatic complexity of the method is 9,59
polydawn_mdm,net.polydawn.mdm.util,FileUtils,doCopyDirectory,Complex Method,Cyclomatic complexity of the method is 10,74
polydawn_mdm,net.polydawn.mdm.util,FileUtils,doCopyDirectory,Long Parameter List,The method has 6 parameters. ,74
polydawn_mdm,net.polydawn.mdm.util,FileUtils,closeQuietly,Empty catch clause,The method has an empty catch block.,143
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Abstract Function Call From Constructor,The constructor MdmModule calls a virtual method getType.,32
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Complex Method,Cyclomatic complexity of the method is 11,32
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Long Parameter List,The method has 5 parameters. ,32
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Long Statement,The length of the statement "MdmModuleType type_configured=MdmModuleType.fromString(gitmodulesCfg.getString(ConfigConstants.CONFIG_SUBMODULE_SECTION`handle`MdmConfigConstants.Module.MODULE_TYPE.toString()));" is 178.,32
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Long Statement,The length of the statement "if (type_configured == null) throw new MdmModuleTypeException("expected module of type " + type + " for repository "+ handle+ "` but gitmodules file has no known type for this module.");" is 186.,32
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Long Statement,The length of the statement "if (type != type_configured) throw new MdmModuleTypeException("expected module of type " + type + " for repository "+ handle+ "` but gitmodules file states this is a "+ type_configured+ " module.");" is 198.,32
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Long Statement,The length of the statement "this.urlHistoric=gitmodulesCfg.getString(ConfigConstants.CONFIG_SUBMODULE_SECTION`handle`ConfigConstants.CONFIG_KEY_URL);" is 121.,32
polydawn_mdm,net.polydawn.mdm,MdmModule,MdmModule,Long Statement,The length of the statement "this.urlLocal=parent.getConfig().getString(ConfigConstants.CONFIG_SUBMODULE_SECTION`handle`ConfigConstants.CONFIG_KEY_URL);" is 123.,32
polydawn_mdm,net.polydawn.mdm,Mdm,dealUnexpected,Long Statement,The length of the statement "return new MdmExitMessage(":'("`"An unexpected error occurred! please file a bug report to help fix the problem." + "\na stack trace " + (stackSave == null ? "follows" : "has been saved to " + stackSave) + "; please include it in the report."+ (stackSave == null ? "\n\n" + X.toString(e) : ""));" is 295.,124
polydawn_mdm,net.polydawn.mdm,MdmModuleRelease,MdmModuleRelease,Long Parameter List,The method has 5 parameters. ,78
polydawn_mdm,net.polydawn.mdm,MdmModuleRelease,assertPresentsAsReleaseRepo,Long Statement,The length of the statement "if (repo.getRef("refs/heads/mdm/init") == null && repo.getRef("refs/remotes/origin/mdm/init") == null) throw new MdmModuleReleaseNeedsBranch(getHandle()`"mdm/init");" is 165.,86
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser=ArgumentParsers.newArgumentParser("mdm").version(Package.getPackage("net.polydawn.mdm").getImplementationVersion());" is 123.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser.description("mdm is a dependency management tool. It can forge a connection between a software project's git repository and other libraries or assets required by that project.\n" + "\n" + "Users coming to a project that manages dependencies with mdm -- the most important command you're looking for is `mdm update`. This command will fetch dependencies and whip your workspace into shape.\n"+ "\n"+ "Most mdm operations are subcommands` listed below. For more information any subcommand` run `mdm [subcommand] -h` or `mdm [subcommand] --help`.\n");" is 555.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser.epilog("The source for mdm can be found on github:\n" + "\n" + " https://github.com/polydawn/mdm/\n"+ "\n"+ "Working examples` extended explanation of concepts and mechanics` and other additional documentation is tracked with the source` and thus can also be found on github:\n"+ "\n"+ " https://github.com/polydawn/mdm/tree/master/doc\n"+ "\n"+ "mdm is a Polydawn project. mdm and other Polydawn projects can be discovered at http://polydawn.net/\n"+ "\n");" is 465.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "@Override public void run( ArgumentParser parser` Argument arg` Map<String`Object> attrs` String flag` Object value) throws ArgumentParserException {" is 149.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "Subparser parser_status=subparsers.addParser("status").help("list dependencies managed by mdm` and their current status.");" is 123.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_status.addArgument("--name").help("get the status of a particular dependency by name. If specified` only that dependency will be included in the report.");" is 162.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_status.addArgument("--format").help("the format of report to print. Some formats contain subsets of information` suitable for use in extracting values for other scripts. Valid values include: default` versionCheckedOut` versionSpecified.");" is 247.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "Subparser parser_update=subparsers.addParser("update").help("pull all dependencies up to date. Run this after cloning a fresh repo` or pulling or checking out commits that change a dependency.");" is 195.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_update.addArgument("--strict").action(storeTrue()).help("check hashes strictly: if a version fetched has a different hash than this repo expects` in addition to the normal warning message` report a failure code on exit.");" is 229.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_update.addArgument("--reclaim").action(storeTrue()).help("apply config flags to any submodules managed by mdm. there is normally no reason to do this manually` as these flags are already created automatically by all other mdm commands` but may be useful for upgrading old workspaces.");" is 293.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_add.addArgument("url").help("url pointing to an mdm-style releases repository. Any kind of url that `git clone` understands will fly here too.");" is 152.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_add.addArgument("--lib").help("specifies the directory which shall contain the dependency module. (default: 'lib')").setDefault("lib");" is 142.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_add.addArgument("--name").help("the name to give the new dependency module (if not specified` the url of the upstream will be parsed to determine the appropriate name` and if that fails` mdm will prompt you to choose one interactively). Note that in the future` this dependency will be refered to by its path -- i.e.` ${lib}/${name} .");" is 344.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_add.addArgument("--version").help("the version name of the dependency to set up. If not provided` a mdm will obtain a list of available versions and prompt you to choose one interactively.");" is 198.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "Subparser parser_alter=subparsers.addParser("alter").help("alter an existing dependency (i.e. switch to a new version).");" is 122.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_alter.addArgument("--version").help("the version name of the dependency to set up. If not provided` a mdm will obtain a list of available versions and prompt you to choose one interactively.");" is 200.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "Subparser parser_release=subparsers.addParser("release").help("generates a new release (adding commits to a releases repository; then` if this command was issued from inside a project's repository and the releases repository is a submodule in the canonical location` the new head commit of the master branch of the releases repo will be committed to the project repo along with a release tag).");" is 396.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_release.addArgument("--version").help("specifies the name/number of the release version to be made. This will be used in naming tags/branches` and also mentioned in commit messages.").required(true);" is 206.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_release.addArgument("--files").help("specifies the artifact files to commit in the release. If a directory` all non-hidden contents of the directory will be included.").required(true);" is 191.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_release.addArgument("--repo").help("specifies a local path to the releases repository for this project. The new release commits will be added to this repository. By default` it is assumed that the releases repo of this project is already a submodule in the ./releases/ directory` but using a path like '../projX-releases/' is also reasonable. (default: 'releases')").setDefault("releases");" is 397.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_release.addArgument("--skip-accumulation").action(Arguments.storeTrue()).help("don't place the release data in the master branch. The default behavior is to include all released files under a directory named '{version}/' in the master branch; enabling this flag skips this behavior` leaving less data on disk when the master branch is checked out (the commits linking releases to the master branch are otherwise unaffected).");" is 434.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "Subparser parser_releaseinit=subparsers.addParser("release-init").help("set up a releases repository for a new project. Future invocations of `mdm release` will generate commits into this repository.");" is 202.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_releaseinit.addArgument("--name").help("the name of the project. If not provided` either the path of the parent project will be parsed to determine the appropriate name` or failing that` mdm will prompt you to choose one interactively.");" is 245.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_releaseinit.addArgument("--repo").help("specifies a path where the releases repository should be created. If not provided` the default varies depending on if this command is issued from the root of an existing git repo: if so` it is assumed the releases repo should be a submodule in the \"./releases/\" directory; otherwise` the default behavior is to initialize the release repo in the current directory.");" is 416.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_releaseinit.addArgument("--use-defaults").action(Arguments.storeTrue()).help("tell mdm to make its best guess for name based on local folders` and use relative paths for remote urls as necessary. No interactive prompts for missing parameters.");" is 252.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_releaseinit.addArgument("--remote-url").help("assign a remote url where this repo will be accessible. If creating this release repo as submodule of an existing project` this will be committed to the superproject's .gitmodules file` and so should be a publicly accessible url.");" is 285.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,MdmArgumentParser,Long Statement,The length of the statement "parser_releaseinit.addArgument("--remote-publish-url").help("assign a remote url you'll push this repo to when making releases. This will not be committed to the project; just set in the the release repo's local config (therefore` if not creating this release repo as submodule of an existing project` specifying --remote-url at the same time as this option is useless).");" is 373.,10
polydawn_mdm,net.polydawn.mdm,MdmArgumentParser,run,Long Parameter List,The method has 5 parameters. ,41
polydawn_mdm,net.polydawn.mdm,MdmModuleSet,MdmModuleSet,Long Statement,The length of the statement "String type_configured_string=gitmodulesCfg.getString(ConfigConstants.CONFIG_SUBMODULE_SECTION`handle`MdmConfigConstants.Module.MODULE_TYPE.toString());" is 152.,32
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,load,Long Statement,The length of the statement "return new MdmModuleDependency(SubmoduleWalk.getSubmoduleRepository(parent`generator.getPath())`generator.getPath()`parent`gitmodulesCfg`generator.getObjectId());" is 162.,20
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Complex Method,Cyclomatic complexity of the method is 8,28
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Empty catch clause,The method has an empty catch block.,28
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Long Parameter List,The method has 5 parameters. ,28
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Long Statement,The length of the statement "versionName=gitmodulesCfg.getString(ConfigConstants.CONFIG_SUBMODULE_SECTION`getHandle()`MdmConfigConstants.Module.DEPENDENCY_VERSION.toString());" is 146.,28
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Magic Number,The method contains a magic number: 5,28
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Magic Number,The method contains a magic number: 2,28
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Magic Number,The method contains a magic number: 3,28
polydawn_mdm,net.polydawn.mdm,MdmModuleDependency,MdmModuleDependency,Magic Number,The method contains a magic number: 4,28
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Complex Method,Cyclomatic complexity of the method is 13,45
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Empty catch clause,The method has an empty catch block.,45
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Long Identifier,The length of the identifier submoduleWorkTreeRelativeToGitDir is 33.,45
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Long Identifier,The length of the identifier submoduleGitDirRelativeToWorkTree is 33.,45
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Magic Number,The method contains a magic number: 7,45
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Magic Number,The method contains a magic number: 7,45
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Magic Number,The method contains a magic number: 2,45
polydawn_mdm,net.polydawn.mdm,Plumbing,fetch,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@61b33ef7,45
polydawn_mdm,net.polydawn.mdm,Plumbing,initLocalConfig,Long Statement,The length of the statement "repo.getConfig().setString(ConfigConstants.CONFIG_SUBMODULE_SECTION`module.getHandle()`ConfigConstants.CONFIG_KEY_URL`module.getUrlLocal());" is 140.,192
polydawn_mdm,net.polydawn.mdm,Plumbing,initLocalConfig,Long Statement,The length of the statement "repo.getConfig().setString(ConfigConstants.CONFIG_SUBMODULE_SECTION`module.getHandle()`ConfigConstants.CONFIG_KEY_UPDATE`"none");" is 129.,192
polydawn_mdm,net.polydawn.mdm,Plumbing,initModuleConfig,Long Statement,The length of the statement "for ( String url : parentConfig.getSubsections(ConfigConstants.CONFIG_KEY_URL)) for ( String insteadOf : parentConfig.getStringList(ConfigConstants.CONFIG_KEY_URL`url`"insteadof")) moduleConfig.setString(ConfigConstants.CONFIG_KEY_URL`url`"insteadof"`insteadOf);" is 262.,207
polydawn_mdm,net.polydawn.mdm,Plumbing,initModuleConfig,Long Statement,The length of the statement "for ( String url : parentConfig.getSubsections(ConfigConstants.CONFIG_KEY_URL)) for ( String insteadOf : parentConfig.getStringList(ConfigConstants.CONFIG_KEY_URL`url`"pushinsteadof")) moduleConfig.setString(ConfigConstants.CONFIG_KEY_URL`url`"pushinsteadof"`insteadOf);" is 270.,207
polydawn_mdm,net.polydawn.mdm,Plumbing,setMdmRemote,Long Statement,The length of the statement "module.getRepo().getConfig().setString(ConfigConstants.CONFIG_REMOTE_SECTION`"origin"`ConfigConstants.CONFIG_KEY_URL`url);" is 122.,281
polydawn_mdm,net.polydawn.mdm,Plumbing,setMdmRemote,Long Statement,The length of the statement "module.getRepo().getConfig().setString(ConfigConstants.CONFIG_REMOTE_SECTION`"origin"`"fetch"`"+refs/heads/mdm/init:refs/remotes/origin/mdm/init");" is 147.,281
polydawn_mdm,net.polydawn.mdm,MdmExitMessage,MdmExitMessage,Magic Number,The method contains a magic number: 128,26
polydawn_mdm,net.polydawn.mdm.errors,MdmRepositoryIOException,MdmRepositoryIOException,Long Statement,The length of the statement "super("mdm failed to " + (writing ? "write" : "read") + " data while trying to "+ tryingTo+ " at "+ path+ ": "+ cause.getMessage()`cause);" is 138.,30
polydawn_mdm,net.polydawn.mdm.errors,MdmRepositoryIOException,MdmRepositoryIOException,Long Statement,The length of the statement "super("mdm failed to " + (writing ? "write" : "read") + " data while trying to "+ tryingTo+ " at "+ path+ ": "+ cause.getMessage()`cause);" is 138.,34
polydawn_mdm,net.polydawn.mdm.errors,MdmConcurrentException,MdmConcurrentException,Long Statement,The length of the statement "super("mdm failed because a ref was changed in a repository as we were in the middle of working.\n" + lamentShouldntNormallyMessage`e);" is 135.,8

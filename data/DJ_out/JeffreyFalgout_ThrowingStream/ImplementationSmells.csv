Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,exceptionTest,Magic Number,The method contains a magic number: 10,23
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,exceptionTest,Magic Number,The method contains a magic number: 10,23
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,worksCorrectlyWithoutExceptions,Magic Number,The method contains a magic number: 10,58
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,worksCorrectlyWithoutExceptions,Magic Number,The method contains a magic number: 10,58
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,flatMapExceptions,Magic Number,The method contains a magic number: 10,65
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,flatMapExceptions,Magic Number,The method contains a magic number: 10,65
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,flatMapExceptionsInStream,Magic Number,The method contains a magic number: 10,87
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream,ThrowingStreamTest,flatMapExceptionsInStream,Magic Number,The method contains a magic number: 10,87
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedIntStream,flatMap,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Function<? super ThrowingIntStream<? extends X>`? extends IntStream> c=s -> ThrowingBridge.of((ThrowingIntStream<X>)s`getExceptionClass());" is 170.,88
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedIntStream,collect,Long Statement,The length of the statement "return unmaskException(() -> getDelegate().collect(getExceptionMasker().mask(supplier)`getExceptionMasker().mask(accumulator)`getExceptionMasker().mask(combiner)));" is 164.,146
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedDoubleStream,flatMap,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Function<? super ThrowingDoubleStream<? extends X>`? extends DoubleStream> c=s -> ThrowingBridge.of((ThrowingDoubleStream<X>)s`getExceptionClass());" is 179.,88
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedDoubleStream,collect,Long Statement,The length of the statement "return unmaskException(() -> getDelegate().collect(getExceptionMasker().mask(supplier)`getExceptionMasker().mask(accumulator)`getExceptionMasker().mask(combiner)));" is 164.,146
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,flatMap,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Function<? super ThrowingStream<? extends R`? extends X>`? extends Stream<? extends R>> c=s -> ThrowingBridge.of((ThrowingStream<? extends R`X>)s`getExceptionClass());" is 198.,97
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,flatMapToInt,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Function<? super ThrowingIntStream<? extends X>`? extends IntStream> c=s -> ThrowingBridge.of((ThrowingIntStream<X>)s`getExceptionClass());" is 170.,106
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,flatMapToInt,Long Statement,The length of the statement "return ThrowingBridge.of(getDelegate().flatMapToInt(getExceptionMasker().mask(mapper.andThen(c::apply)))`getExceptionMasker());" is 127.,106
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,flatMapToLong,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Function<? super ThrowingLongStream<? extends X>`? extends LongStream> c=s -> ThrowingBridge.of((ThrowingLongStream<X>)s`getExceptionClass());" is 173.,117
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,flatMapToLong,Long Statement,The length of the statement "return ThrowingBridge.of(getDelegate().flatMapToLong(getExceptionMasker().mask(mapper.andThen(c::apply)))`getExceptionMasker());" is 128.,117
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,flatMapToDouble,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Function<? super ThrowingDoubleStream<? extends X>`? extends DoubleStream> c=s -> ThrowingBridge.of((ThrowingDoubleStream<X>)s`getExceptionClass());" is 179.,128
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,flatMapToDouble,Long Statement,The length of the statement "return ThrowingBridge.of(getDelegate().flatMapToDouble(getExceptionMasker().mask(mapper.andThen(c::apply)))`getExceptionMasker());" is 130.,128
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,reduce,Long Statement,The length of the statement "return unmaskException(() -> getDelegate().reduce(identity`getExceptionMasker().mask(accumulator)`getExceptionMasker().mask(combiner)));" is 136.,200
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedStream,collect,Long Statement,The length of the statement "return unmaskException(() -> getDelegate().collect(getExceptionMasker().mask(supplier)`getExceptionMasker().mask(accumulator)`getExceptionMasker().mask(combiner)));" is 164.,208
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,UncheckedStream,flatMap,Long Statement,The length of the statement "Function<? super T`? extends ThrowingStream<? extends R`? extends X>> f=mapper.andThen(s -> ThrowingBridge.of((Stream<? extends R>)s`getExceptionClass()));" is 155.,87
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,UncheckedStream,flatMapToInt,Long Statement,The length of the statement "Function<? super T`? extends ThrowingIntStream<? extends X>> f=mapper.andThen(s -> ThrowingBridge.of(s`getExceptionClass()));" is 125.,94
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,UncheckedStream,flatMapToLong,Long Statement,The length of the statement "Function<? super T`? extends ThrowingLongStream<? extends X>> f=mapper.andThen(s -> ThrowingBridge.of(s`getExceptionClass()));" is 126.,101
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,UncheckedStream,flatMapToDouble,Long Statement,The length of the statement "Function<? super T`? extends ThrowingDoubleStream<? extends X>> f=mapper.andThen(s -> ThrowingBridge.of(s`getExceptionClass()));" is 128.,108
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedLongStream,flatMap,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Function<? super ThrowingLongStream<? extends X>`? extends LongStream> c=s -> ThrowingBridge.of((ThrowingLongStream<X>)s`getExceptionClass());" is 173.,88
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,CheckedLongStream,collect,Long Statement,The length of the statement "return unmaskException(() -> getDelegate().collect(getExceptionMasker().mask(supplier)`getExceptionMasker().mask(accumulator)`getExceptionMasker().mask(combiner)));" is 164.,147
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.adapter,UncheckedDoubleStream,flatMap,Long Statement,The length of the statement "DoubleFunction<? extends ThrowingDoubleStream<? extends X>> f=i -> ThrowingBridge.of(mapper.apply(i)`getExceptionClass());" is 122.,75
JeffreyFalgout_ThrowingStream,name.falgout.jeffrey.throwing.stream.intermediate,ThrowingStreamIntermediate,normalFlatMapToDouble,Long Statement,The length of the statement "return flatMapToDouble((ThrowingFunction<? super T`? extends ThrowingDoubleStream<? extends X>`? extends X>)mapper::apply);" is 123.,97

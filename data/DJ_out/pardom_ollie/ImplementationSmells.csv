Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
pardom_ollie,ollie.internal.codegen,OllieProcessor,getSupportedAnnotationTypes,Long Statement,The length of the statement "return ImmutableSet.of(Migration.class.getName()`TypeAdapter.class.getName()`Table.class.getName()`Column.class.getName());" is 123.,45
pardom_ollie,ollie.internal.codegen,OllieProcessor,init,Long Statement,The length of the statement "registry=new Registry(processingEnv.getMessager()`processingEnv.getTypeUtils()`processingEnv.getElementUtils()`processingEnv.getFiler());" is 137.,55
pardom_ollie,ollie.internal.codegen,OllieProcessor,init,Long Statement,The length of the statement "processingSteps=ImmutableSet.of(new MigrationStep(registry)`new TypeAdapterStep(registry)`new ColumnStep(registry)`new ModelAdapterStep(registry)`new AdapterHolderStep(registry));" is 179.,55
pardom_ollie,ollie.internal.codegen.writer,ModelAdapterWriter,writeImports,Long Statement,The length of the statement "Set<String> imports=Sets.newHashSet(modelQualifiedName`"android.content.ContentValues"`"android.database.Cursor"`"android.database.sqlite.SQLiteDatabase"`ModelAdapter.class.getName());" is 184.,99
pardom_ollie,ollie.internal.codegen.writer,ModelAdapterWriter,writeLoad,Long Statement,The length of the statement "value.append("entity.").append(column.getFieldName()).append(" = ").append(column.getColumnName()).append("Index >= 0 ? ");" is 123.,152
pardom_ollie,ollie.internal.codegen.writer,ModelAdapterWriter,writeSave,Long Statement,The length of the statement "value.append("(").append(column.getSerializedQualifiedName()).append(") Ollie.getTypeAdapter(").append(column.getDeserializedQualifiedName()).append(".class).serialize(");" is 171.,202
pardom_ollie,ollie.internal.codegen.writer,AdapterHolderWriter,writeImports,Long Statement,The length of the statement "Set<String> imports=Sets.newHashSet(ArrayList.class.getName()`HashMap.class.getName()`List.class.getName()`Map.class.getName()`AdapterHolder.class.getName()`ModelAdapter.class.getName());" is 187.,75
pardom_ollie,ollie.internal.codegen.writer,AdapterHolderWriter,writeCollections,Long Statement,The length of the statement "writer.emitField("Map<Class<? extends Model>` ModelAdapter>"`"MODEL_ADAPTERS"`CONSTANT_MODIFIERS`"new HashMap<Class<? extends Model>` ModelAdapter>()");" is 152.,89
pardom_ollie,ollie.internal.codegen.writer,AdapterHolderWriter,writeStaticInitializations,Long Statement,The length of the statement "writer.emitStatement("MODEL_ADAPTERS.put(%s.class` new %s())"`modelAdapter.getModelQualifiedName()`modelAdapter.getQualifiedName());" is 132.,111
pardom_ollie,ollie.internal.codegen.writer,AdapterHolderWriter,writeStaticInitializations,Long Statement,The length of the statement "writer.emitStatement("TYPE_ADAPTERS.put(%s.class` new %s())"`typeAdapter.getDeserializedQualifiedName()`typeAdapter.getQualifiedName());" is 136.,111
pardom_ollie,ollie.internal.codegen.writer,AdapterHolderWriter,writeGetModelAdapter,Long Statement,The length of the statement "writer.beginMethod("<T extends Model> ModelAdapter<T>"`"getModelAdapter"`METHOD_MODIFIERS`"Class<? extends Model>"`"cls");" is 122.,156
pardom_ollie,ollie.internal.codegen.element,TypeAdapterElement,TypeAdapterElement,Long Statement,The length of the statement "final DeclaredType typeAdapterType=types.getDeclaredType(elements.getTypeElement("ollie.TypeAdapter")`types.getWildcardType(null`null)`types.getWildcardType(null`null));" is 169.,31
pardom_ollie,ollie.internal.codegen.element,ColumnElement,getSchema,Complex Method,Cyclomatic complexity of the method is 8,133
pardom_ollie,ollie.internal,ModelAdapterTest,modelAdapter,Long Statement,The length of the statement "JavaFileObject source=JavaFileObjects.forSourceLines("ollie.test.Note"`"package ollie.test;"`"import java.util.Date;"`"import ollie.Model;"`"import ollie.annotation.Column;"`"import ollie.annotation.NotNull;"`"import ollie.annotation.Table;"`"@Table(\"notes\")"`"public class Note extends Model {"`" public static final String TITLE = \"title\";"`" public static final String BODY = \"body\";"`" public static final String DATE = \"date\";"`" @Column(TITLE) public String title;"`" @Column(BODY) @NotNull public String body;"`" @Column(DATE) public Date date;"`"}");" is 566.,30
pardom_ollie,ollie.internal,ModelAdapterTest,modelAdapter,Long Statement,The length of the statement "JavaFileObject expectedSource=JavaFileObjects.forSourceLines("ollie/Note$$ModelAdapter"`"package ollie;"`"import android.content.ContentValues;"`"import android.database.Cursor;"`"import android.database.sqlite.SQLiteDatabase;"`"import ollie.internal.ModelAdapter;"`"import ollie.test.Note;"`"public final class Note$$ModelAdapter extends ModelAdapter<Note> {"`" public final Class<? extends Model> getModelType() {"`" return Note.class;"`" }"`" public final String getTableName() {"`" return \"notes\";"`" }"`" public final String getSchema() {"`" return \"CREATE TABLE IF NOT EXISTS notes (\" +"`" \"_id INTEGER PRIMARY KEY AUTOINCREMENT` \" +"`" \"title TEXT` \" +"`" \"body TEXT NOT NULL` \" +"`" \"date INTEGER)\";"`" }"`" public final void load(Note entity` Cursor cursor) {"`" final int _idIndex = cursor.getColumnIndex(\"_id\");"`" final int titleIndex = cursor.getColumnIndex(\"title\")"`" final int bodyIndex = cursor.getColumnIndex(\"body\")"`" final int dateIndex = cursor.getColumnIndex(\"date\")"`" entity.id = _idIndex >= 0 ? cursor.getLong(_idIndex) : null;"`" entity.title = titleIndex >= 0 ? cursor.getString(titleIndex) : null;"`" entity.body = bodyIndex >= 0 ? cursor.getString(bodyIndex) : null;"`" entity.date = dateIndex >= 0 ? Ollie.getTypeAdapter(java.util.Date.class)"`" .deserialize(cursor.getLong(dateIndex)) : null;"`" }"`" public final Long save(Note entity` SQLiteDatabase db) {"`" ContentValues values = new ContentValues();"`" values.put(\"_id\"` entity.id);"`" values.put(\"title\"` entity.title);"`" values.put(\"body\"` entity.body);"`" values.put(\"date\"` (java.lang.Long) Ollie.getTypeAdapter(java.util.Date.class)"`" .serialize(entity.date));"`" return insertOrUpdate(entity` db` values);"`" }"`" public final void delete(Note entity` SQLiteDatabase db) {"`" db.delete(\"notes\"` \"_id=?\"` new String[]{entity.id.toString()});"`" }"`"}");" is 1879.,30
pardom_ollie,ollie.internal,ModelAdapterTest,modelAdapter,Long Statement,The length of the statement "ASSERT.about(javaSource()).that(source).processedWith(ollieProcessors()).compilesWithoutError().and().generatesSources(expectedSource);" is 135.,30
pardom_ollie,ollie.internal,ModelAdapterTest,tablesAreClasses,Long Statement,The length of the statement "JavaFileObject source=JavaFileObjects.forSourceLines("ollie.test.Note"`"package ollie.test;"`"import java.util.Date;"`"import ollie.Model;"`"import ollie.annotation.Column;"`"import ollie.annotation.NotNull;"`"import ollie.annotation.Table;"`"@Table(\"notes\")"`"public class Note extends Model {"`" public static final String TITLE = \"title\";"`" public static final String BODY = \"body\";"`" public static final String DATE = \"date\";"`" @Table(TITLE) public String title;"`" @Table(BODY) @NotNull public String body;"`" @Table(DATE) public Date date;"`"}");" is 563.,113
pardom_ollie,ollie.internal,ModelAdapterTest,columnsAreFields,Long Statement,The length of the statement "JavaFileObject source=JavaFileObjects.forSourceLines("ollie.test.Note"`"package ollie.test;"`"import java.util.Date;"`"import ollie.Model;"`"import ollie.annotation.Column;"`"import ollie.annotation.NotNull;"`"import ollie.annotation.Table;"`"@Column(\"notes\")"`"public class Note extends Model {"`" public static final String TITLE = \"title\";"`" public static final String BODY = \"body\";"`" public static final String DATE = \"date\";"`" @Column(TITLE) public String title;"`" @Column(BODY) @NotNull public String body;"`" @Column(DATE) public Date date;"`"}");" is 567.,140
pardom_ollie,ollie.internal,ModelAdapterTest,columnsAreFields,Long Statement,The length of the statement "ASSERT.about(javaSource()).that(source).processedWith(ollieProcessors()).failsToCompile().withErrorContaining(Errors.COLUMN_TYPE_ERROR);" is 136.,140
pardom_ollie,ollie.internal,ModelAdapterTest,columnsAreUnique,Long Statement,The length of the statement "JavaFileObject source=JavaFileObjects.forSourceLines("ollie.test.Note"`"package ollie.test;"`"import java.util.Date;"`"import ollie.Model;"`"import ollie.annotation.Column;"`"import ollie.annotation.NotNull;"`"import ollie.annotation.Table;"`"@Table(\"notes\")"`"public class Note extends Model {"`" public static final String TITLE = \"title\";"`" public static final String DATE = \"date\";"`" @Column(TITLE) public String title;"`" @Column(TITLE) @NotNull public String body;"`" @Column(DATE) public Date date;"`"}");" is 520.,168
pardom_ollie,ollie.internal,ModelAdapterTest,columnsAreUnique,Long Statement,The length of the statement "ASSERT.about(javaSource()).that(source).processedWith(ollieProcessors()).failsToCompile().withErrorContaining(Errors.COLUMN_DUPLICATE_ERROR);" is 141.,168
pardom_ollie,ollie.internal,AdapterHolderTest,migrations,Long Statement,The length of the statement "JavaFileObject source=JavaFileObjects.forSourceLines("ollie.test.AddDateColumnMigration"`"package ollie.test;"`"import ollie.Migration;"`"public class AddDateColumnMigration extends ollie.Migration {"`" @Override"`" public int getVersion() {"`" return 2;"`" }"`" @Override"`" public String[] getStatements() {"`" return new String[]{"`" \"ALTER TABLE notes ADD COLUMN date INTEGER\""`" };"`" }"`"}");" is 400.,13
pardom_ollie,ollie.internal,AdapterHolderTest,migrations,Long Statement,The length of the statement "JavaFileObject adapterHolderImpl=JavaFileObjects.forSourceLines("ollie/AdapterHolderImpl"`"package ollie;"`"import java.util.ArrayList;"`"import java.util.HashMap;"`"import java.util.List;"`"import java.util.Map;"`"import ollie.internal.AdapterHolder;"`"import ollie.internal.ModelAdapter;"`"public final class AdapterHolderImpl implements AdapterHolder {"`" private static final List<Migration> MIGRATIONS = new ArrayList<Migration>();"`" private static final Map<Class<? extends Model>` ModelAdapter> MODEL_ADAPTERS = " + "new HashMap<Class<? extends Model>` ModelAdapter>();"`" private static final Map<Class` TypeAdapter> TYPE_ADAPTERS = new HashMap<Class` TypeAdapter>();"`" static {"`" MIGRATIONS.add(new ollie.test.AddDateColumnMigration());"`" TYPE_ADAPTERS.put(java.lang.Boolean.class` new ollie.adapter.BooleanAdapter());"`" TYPE_ADAPTERS.put(java.util.Calendar.class` new ollie.adapter.CalendarAdapter());"`" TYPE_ADAPTERS.put(java.sql.Date.class` new ollie.adapter.SqlDateAdapter());"`" TYPE_ADAPTERS.put(java.util.Date.class` new ollie.adapter.UtilDateAdapter());"`" }"`" public final List<? extends Migration> getMigrations() {"`" return MIGRATIONS;"`" }"`" public final <T extends Model> ModelAdapter<T> getModelAdapter(Class<? extends Model> cls) {"`" return MODEL_ADAPTERS.get(cls);"`" }"`" public final List<? extends ModelAdapter> getModelAdapters() {"`" return new ArrayList(MODEL_ADAPTERS.values());"`" }"`" public final <D` S> TypeAdapter<D` S> getTypeAdapter(Class<D> cls) {"`" return TYPE_ADAPTERS.get(cls);"`" }"`"}");" is 1543.,13
pardom_ollie,ollie.internal,AdapterHolderTest,migrations,Long Statement,The length of the statement "ASSERT.about(javaSource()).that(source).processedWith(ollieProcessors()).compilesWithoutError().and().generatesSources(adapterHolderImpl);" is 138.,13
pardom_ollie,ollie,Model,hashCode,Magic Number,The method contains a magic number: 17,112
pardom_ollie,ollie,Model,hashCode,Magic Number,The method contains a magic number: 31,112
pardom_ollie,ollie,OllieProvider,onCreate,Magic Number,The method contains a magic number: 2,92
pardom_ollie,ollie,OllieProvider,onCreate,Magic Number,The method contains a magic number: 2,92
pardom_ollie,ollie,OllieProvider,onCreate,Magic Number,The method contains a magic number: 2,92
pardom_ollie,ollie,OllieProvider,getType,Magic Number,The method contains a magic number: 2,117
pardom_ollie,ollie,OllieProvider,query,Long Parameter List,The method has 5 parameters. ,186
pardom_ollie,ollie,OllieProvider,query,Long Statement,The length of the statement "final Cursor cursor=Ollie.getDatabase().query(Ollie.getTableName(getModelType(uri))`projection`selection`selectionArgs`null`null`sortOrder);" is 140.,186
pardom_ollie,ollie,Ollie,init,Long Parameter List,The method has 5 parameters. ,113
pardom_ollie,ollie.util,QueryUtils,query,Long Parameter List,The method has 9 parameters. ,23
pardom_ollie,ollie.util,QueryUtils,query,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().query(distinct`Ollie.getTableName(cls)`columns`selection`selectionArgs`groupBy`having`orderBy`limit));" is 161.,23
pardom_ollie,ollie.util,QueryUtils,query,Long Parameter List,The method has 10 parameters. ,30
pardom_ollie,ollie.util,QueryUtils,query,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().query(distinct`Ollie.getTableName(cls)`columns`selection`selectionArgs`groupBy`having`orderBy`limit`cancellationSignal));" is 180.,30
pardom_ollie,ollie.util,QueryUtils,queryWithFactory,Long Parameter List,The method has 10 parameters. ,38
pardom_ollie,ollie.util,QueryUtils,queryWithFactory,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().queryWithFactory(cursorFactory`distinct`Ollie.getTableName(cls)`columns`selection`selectionArgs`groupBy`having`orderBy`limit));" is 186.,38
pardom_ollie,ollie.util,QueryUtils,queryWithFactory,Long Parameter List,The method has 11 parameters. ,46
pardom_ollie,ollie.util,QueryUtils,queryWithFactory,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().queryWithFactory(cursorFactory`distinct`Ollie.getTableName(cls)`columns`selection`selectionArgs`groupBy`having`orderBy`limit`cancellationSignal));" is 205.,46
pardom_ollie,ollie.util,QueryUtils,query,Long Parameter List,The method has 7 parameters. ,55
pardom_ollie,ollie.util,QueryUtils,query,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().query(Ollie.getTableName(cls)`columns`selection`selectionArgs`groupBy`having`orderBy));" is 146.,55
pardom_ollie,ollie.util,QueryUtils,query,Long Parameter List,The method has 8 parameters. ,62
pardom_ollie,ollie.util,QueryUtils,query,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().query(Ollie.getTableName(cls)`columns`selection`selectionArgs`groupBy`having`orderBy`limit));" is 152.,62
pardom_ollie,ollie.util,QueryUtils,rawQueryWithFactory,Long Parameter List,The method has 5 parameters. ,79
pardom_ollie,ollie.util,QueryUtils,rawQueryWithFactory,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().rawQueryWithFactory(cursorFactory`sql`selectionArgs`editTable));" is 123.,79
pardom_ollie,ollie.util,QueryUtils,rawQueryWithFactory,Long Parameter List,The method has 6 parameters. ,86
pardom_ollie,ollie.util,QueryUtils,rawQueryWithFactory,Long Statement,The length of the statement "return Ollie.processAndCloseCursor(cls`Ollie.getDatabase().rawQueryWithFactory(cursorFactory`sql`selectionArgs`editTable`cancellationSignal));" is 142.,86
pardom_ollie,ollie.query,ResultQueryBase,fetchValue,Complex Method,Cyclomatic complexity of the method is 9,49
pardom_ollie,ollie.test,OllieTest,testSelectSql,Long Statement,The length of the statement "sql="SELECT notes.* " + "FROM notes " + "INNER JOIN noteTags ON notes.id=noteTags.note "+ "INNER JOIN tags ON tag.id=noteTags.tag "+ "WHERE tag.name=? "+ "ORDER BY notes.title ASC "+ "LIMIT 10 "+ "OFFSET 10";" is 208.,135
pardom_ollie,ollie.test,OllieTest,testSelectSql,Long Statement,The length of the statement "query=Select.from(Note.class).innerJoin(NoteTag.class).on("notes.id=noteTags.note").innerJoin(Tag.class).on("tag.id=noteTags.tag").where("tag.name=?"`"test").orderBy("notes.title ASC").limit("10").offset("10");" is 210.,135
pardom_ollie,ollie.test,OllieTest,testSelectEntity,Long Statement,The length of the statement "notes=Select.columns("notes.*").from(Note.class).innerJoin(NoteTag.class).on("notes._id=noteTags.note").innerJoin(Tag.class).on("tags._id=noteTags.tag").where("tags._id=?"`tag.id.toString()).fetch();" is 199.,270
pardom_ollie,ollie.test.model.migration,AddDateColumnMigration,getVersion,Magic Number,The method contains a magic number: 2,22

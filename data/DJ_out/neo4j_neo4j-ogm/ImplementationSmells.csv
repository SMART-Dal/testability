Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.driver,HttpDriver,httpClient,Long Statement,The length of the statement "Registry<ConnectionSocketFactory> socketFactoryRegistry=RegistryBuilder.<ConnectionSocketFactory>create().register("http"`PlainConnectionSocketFactory.getSocketFactory()).register("https"`sslSocketFactory).build();" is 214.,208
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,AbstractHttpResponse,AbstractHttpResponse,Long Statement,The length of the statement "try (CloseableHttpResponse httpResponseToClose=httpResponse;InputStream inputStreamOfResponse=httpResponseToClose.getEntity().getContent();TokenBuffer bufferedResponse=createTokenBuffer(inputStreamOfResponse)){" is 210.,68
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonResponseTest,resultsAndErrors,Long Statement,The length of the statement "String s="{\n" + " \"results\": [\n" + " {\n"+ " \"columns\": [\n"+ " \"ID(_0)\"\n"+ " ]`\n"+ " \"data\": [\n"+ " {\n"+ " \"row\": [\n"+ " 381\n"+ " ]\n"+ " }\n"+ " ]\n"+ " }\n"+ " ]`\n"+ " \"errors\": [\n"+ " {\n"+ " \"code\": \"Neo.DatabaseError.Transaction.CouldNotCommit\"`\n"+ " \"message\": \"org.neo4j.kernel.api.exceptions.TransactionFailureException: Node record Node[381`used=false`rel=526`prop=-1`labels=Inline(0x0:[])`light] still has relationships\"`\n"+ " \"stackTrace\": \"java.lang.RuntimeException: org.neo4j.kernel.api.exceptions.TransactionFailureException: Node record Node[381`used=false`rel=526`prop=-1`labels=Inline(0x0:[])`light] still has relationships\\n\\tat org.neo4j.server.rest.transactional.TransitionalTxManagementKernelTransaction.commit(TransitionalTxManagementKernelTransaction.java:87)\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.closeContextAndCollectErrors(TransactionHandle.java:279)\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:148)\\n\\tat org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:211)\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\\n\\tat com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\\n\\tat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\\n\\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\\n\\tat org.neo4j.server.rest.dbms.AuthorizationFilter.doFilter(AuthorizationFilter.java:116)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\\n\\tat java.lang.Thread.run(Thread.java:724)\\nCaused by: org.neo4j.kernel.api.exceptions.TransactionFailureException: Node record Node[381`used=false`rel=526`prop=-1`labels=Inline(0x0:[])`light] still has relationships\\n\\tat org.neo4j.kernel.impl.transaction.state.IntegrityValidator.validateNodeRecord(IntegrityValidator.java:52)\\n\\tat org.neo4j.kernel.impl.transaction.state.TransactionRecordState.extractCommands(TransactionRecordState.java:170)\\n\\tat org.neo4j.kernel.impl.api.KernelTransactionImplementation.commit(KernelTransactionImplementation.java:537)\\n\\tat org.neo4j.kernel.impl.api.KernelTransactionImplementation.close(KernelTransactionImplementation.java:456)\\n\\tat org.neo4j.server.rest.transactional.TransitionalTxManagementKernelTransaction.commit(TransitionalTxManagementKernelTransaction.java:83)\\n\\t... 35 more\\n\"\n"+ " }\n"+ " ]\n"+ "}";" is 4826.,97
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonResponseTest,noResultsAndErrors,Long Statement,The length of the statement "String s="{\n" + " \"results\": []`\n" + " \"errors\": [\n"+ " {\n"+ " \"code\": \"Neo.ClientError.Statement.InvalidSyntax\"`\n"+ " \"message\": \"Invalid input 'T': expected 'a/A' (line 1` column 4 (offset: 3))\\n\\\"CRETE (_0:`School`:`DomainObject`{_0_props}) RETURN id(_0) AS _0 \\\"\\n ^\"\n"+ " }\n"+ " ]\n"+ "}";" is 319.,126
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonResponseTest,rowResultsAndNoErrors,Long Statement,The length of the statement "final String s="{\"results\": [{\"columns\": [\"collect(p)\"]`\"data\": [{\"row\": [[[{\"name\": \"My Test\"}]]]}]}]`\"errors\": []}";" is 134.,141
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseColumnsInRowResponseCorrectly,Magic Number,The method contains a magic number: 3,51
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseColumnsInRowResponseWithNoColumnsCorrectly,Magic Number,The method contains a magic number: 3,62
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseDataInRowResponseCorrectly,Magic Number,The method contains a magic number: 3,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseDataInRowResponseCorrectly,Magic Number,The method contains a magic number: 1931L,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseDataInRowResponseCorrectly,Magic Number,The method contains a magic number: 395L,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseDataInRowResponseCorrectly,Magic Number,The method contains a magic number: 3,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseDataInRowResponseCorrectly,Magic Number,The method contains a magic number: 1931L,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,shouldParseDataInRowResponseCorrectly,Magic Number,The method contains a magic number: 2007L,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRestResponseTest,rowResultsAndNoErrors,Long Statement,The length of the statement "final String s="{\"results\":[{\"columns\":[\"count\"`\"director\"`\"movie\"]`\"data\":[{\"rest\":[1`{\"outgoing_relationships\":\"http://localhost:7474/db/data/node/396/relationships/out\"`\"labels\":\"http://localhost:7474/db/data/node/396/labels\"`\"all_typed_relationships\":\"http://localhost:7474/db/data/node/396/relationships/all/{-list|&|types}\"`\"traverse\":\"http://localhost:7474/db/data/node/396/traverse/{returnType}\"`\"self\":\"http://localhost:7474/db/data/node/396\"`\"property\":\"http://localhost:7474/db/data/node/396/properties/{key}\"`\"outgoing_typed_relationships\":\"http://localhost:7474/db/data/node/396/relationships/out/{-list|&|types}\"`\"properties\":\"http://localhost:7474/db/data/node/396/properties\"`\"incoming_relationships\":\"http://localhost:7474/db/data/node/396/relationships/in\"`\"create_relationship\":\"http://localhost:7474/db/data/node/396/relationships\"`\"paged_traverse\":\"http://localhost:7474/db/data/node/396/paged/traverse/{returnType}{?pageSize`leaseTime}\"`\"all_relationships\":\"http://localhost:7474/db/data/node/396/relationships/all\"`\"incoming_typed_relationships\":\"http://localhost:7474/db/data/node/396/relationships/in/{-list|&|types}\"`\"metadata\":{\"id\":396`\"labels\":[\"Person\"]}`\"data\":{\"born\":1931`\"name\":\"Mike Nichols\"}}`{\"outgoing_relationships\":\"http://localhost:7474/db/data/node/395/relationships/out\"`\"labels\":\"http://localhost:7474/db/data/node/395/labels\"`\"all_typed_relationships\":\"http://localhost:7474/db/data/node/395/relationships/all/{-list|&|types}\"`\"traverse\":\"http://localhost:7474/db/data/node/395/traverse/{returnType}\"`\"self\":\"http://localhost:7474/db/data/node/395\"`\"property\":\"http://localhost:7474/db/data/node/395/properties/{key}\"`\"outgoing_typed_relationships\":\"http://localhost:7474/db/data/node/395/relationships/out/{-list|&|types}\"`\"properties\":\"http://localhost:7474/db/data/node/395/properties\"`\"incoming_relationships\":\"http://localhost:7474/db/data/node/395/relationships/in\"`\"create_relationship\":\"http://localhost:7474/db/data/node/395/relationships\"`\"paged_traverse\":\"http://localhost:7474/db/data/node/395/paged/traverse/{returnType}{?pageSize`leaseTime}\"`\"all_relationships\":\"http://localhost:7474/db/data/node/395/relationships/all\"`\"incoming_typed_relationships\":\"http://localhost:7474/db/data/node/395/relationships/in/{-list|&|types}\"`\"metadata\":{\"id\":395`\"labels\":[\"Movie\"]}`\"data\":{\"released\":1996`\"title\":\"The Birdcage\"`\"tagline\":\"Come as you are\"}}]}`{\"rest\":[1`{\"outgoing_relationships\":\"http://localhost:7474/db/data/node/396/relationships/out\"`\"labels\":\"http://localhost:7474/db/data/node/396/labels\"`\"all_typed_relationships\":\"http://localhost:7474/db/data/node/396/relationships/all/{-list|&|types}\"`\"traverse\":\"http://localhost:7474/db/data/node/396/traverse/{returnType}\"`\"self\":\"http://localhost:7474/db/data/node/396\"`\"property\":\"http://localhost:7474/db/data/node/396/properties/{key}\"`\"outgoing_typed_relationships\":\"http://localhost:7474/db/data/node/396/relationships/out/{-list|&|types}\"`\"properties\":\"http://localhost:7474/db/data/node/396/properties\"`\"incoming_relationships\":\"http://localhost:7474/db/data/node/396/relationships/in\"`\"create_relationship\":\"http://localhost:7474/db/data/node/396/relationships\"`\"paged_traverse\":\"http://localhost:7474/db/data/node/396/paged/traverse/{returnType}{?pageSize`leaseTime}\"`\"all_relationships\":\"http://localhost:7474/db/data/node/396/relationships/all\"`\"incoming_typed_relationships\":\"http://localhost:7474/db/data/node/396/relationships/in/{-list|&|types}\"`\"metadata\":{\"id\":396`\"labels\":[\"Person\"]}`\"data\":{\"born\":1931`\"name\":\"Mike Nichols\"}}`{\"outgoing_relationships\":\"http://localhost:7474/db/data/node/457/relationships/out\"`\"labels\":\"http://localhost:7474/db/data/node/457/labels\"`\"all_typed_relationships\":\"http://localhost:7474/db/data/node/457/relationships/all/{-list|&|types}\"`\"traverse\":\"http://localhost:7474/db/data/node/457/traverse/{returnType}\"`\"self\":\"http://localhost:7474/db/data/node/457\"`\"property\":\"http://localhost:7474/db/data/node/457/properties/{key}\"`\"outgoing_typed_relationships\":\"http://localhost:7474/db/data/node/457/relationships/out/{-list|&|types}\"`\"properties\":\"http://localhost:7474/db/data/node/457/properties\"`\"incoming_relationships\":\"http://localhost:7474/db/data/node/457/relationships/in\"`\"create_relationship\":\"http://localhost:7474/db/data/node/457/relationships\"`\"paged_traverse\":\"http://localhost:7474/db/data/node/457/paged/traverse/{returnType}{?pageSize`leaseTime}\"`\"all_relationships\":\"http://localhost:7474/db/data/node/457/relationships/all\"`\"incoming_typed_relationships\":\"http://localhost:7474/db/data/node/457/relationships/in/{-list|&|types}\"`\"metadata\":{\"id\":457`\"labels\":[\"Movie\"]}`\"data\":{\"released\":2007`\"title\":\"Charlie Wilson's War\"`\"tagline\":\"A stiff drink. A little mascara. A lot of nerve. Who said they couldn't bring down the Soviet empire.\"}}]}]}]`\"errors\":[]}";" is 5143.,102
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphRowResponseTest,shouldParseDataInFilterGraphResponseCorrectly,Magic Number,The method contains a magic number: 8,53
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphRowResponseTest,shouldParseDataInFilterGraphResponseCorrectly,Magic Number,The method contains a magic number: 26,53
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphRowResponseTest,shouldParseDataInFilterGraphResponseCorrectly,Magic Number,The method contains a magic number: 2,53
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphRowResponseTest,shouldParseDataInFilterGraphResponseCorrectly,Magic Number,The method contains a magic number: 26L,53
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphRowResponseTest,filterQueryGraphRowResponse,Long Statement,The length of the statement "final String s="{\n" + " \"results\": [\n" + " {\n"+ " \"columns\": [\n"+ " \"p\"`\n"+ " \"ID(n)\"\n"+ " ]`\n"+ " \"data\": [\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": []\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"344\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"vince\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"19\"`\n"+ " \"type\": \"EMPLOYED_BY\"`\n"+ " \"startNode\": \"344\"`\n"+ " \"endNode\": \"26\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }`\n"+ " {}`\n"+ " {\n"+ " \"firstName\": \"vince\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"343\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"adam\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"18\"`\n"+ " \"type\": \"EMPLOYED_BY\"`\n"+ " \"startNode\": \"343\"`\n"+ " \"endNode\": \"26\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }`\n"+ " {}`\n"+ " {\n"+ " \"firstName\": \"adam\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"346\"`\n"+ " \"labels\": [\n"+ " \"Issue\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"title\": \"fake 1\"`\n"+ " \"number\": \"1\"`\n"+ " \"title\": \"fake 1\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"20\"`\n"+ " \"type\": \"LOGGED_BY\"`\n"+ " \"startNode\": \"346\"`\n"+ " \"endNode\": \"26\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }`\n"+ " {}`\n"+ " {\n"+ " \"title\": \"fake 1\"`\n"+ " \"number\": \"1\"`\n"+ " \"title\": \"fake 1\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"347\"`\n"+ " \"labels\": [\n"+ " \"Issue\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"title\": \"fake 7\"`\n"+ " \"number\": \"7\"`\n"+ " \"title\": \"fake 7\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"501\"`\n"+ " \"type\": \"LOGGED_BY\"`\n"+ " \"startNode\": \"347\"`\n"+ " \"endNode\": \"26\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }`\n"+ " {}`\n"+ " {\n"+ " \"title\": \"fake 7\"`\n"+ " \"number\": \"7\"`\n"+ " \"title\": \"fake 7\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"27\"`\n"+ " \"labels\": [\n"+ " \"Company\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"Acme\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"502\"`\n"+ " \"type\": \"LOCATED_AT\"`\n"+ " \"startNode\": \"26\"`\n"+ " \"endNode\": \"27\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }`\n"+ " {}`\n"+ " {\n"+ " \"name\": \"Acme\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"28\"`\n"+ " \"labels\": [\n"+ " \"Company\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"CodeIsUs\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"503\"`\n"+ " \"type\": \"LOCATED_AT\"`\n"+ " \"startNode\": \"26\"`\n"+ " \"endNode\": \"28\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }`\n"+ " {}`\n"+ " {\n"+ " \"name\": \"CodeIsUs\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"0\"`\n"+ " \"labels\": [\n"+ " \"Issue\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"number\": \"8\"`\n"+ " \"title\": \"fake 8\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"520\"`\n"+ " \"type\": \"LOGGED_BY\"`\n"+ " \"startNode\": \"0\"`\n"+ " \"endNode\": \"26\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }`\n"+ " \"row\": [\n"+ " [\n"+ " {\n"+ " \"name\": \"GraphAware\"\n"+ " }`\n"+ " {}`\n"+ " {\n"+ " \"number\": \"8\"`\n"+ " \"title\": \"fake 8\"\n"+ " }\n"+ " ]`\n"+ " 26\n"+ " ]\n"+ " }\n"+ " ]\n"+ " }\n"+ " ]`\n"+ " \"errors\": []\n"+ "}";" is 5745.,75
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphResponseTest,shouldParseDataInLoadByIdsGraphResponseCorrectly,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphResponseTest,shouldParseDataInLoadByIdsGraphResponseCorrectly,Magic Number,The method contains a magic number: 4,73
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphResponseTest,graphResultsAndNoErrors,Long Statement,The length of the statement "final String s="{\n" + " \"results\": [\n" + " {\n"+ " \"columns\": [\n"+ " \"_0\"\n"+ " ]`\n"+ " \"data\": [\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"381\"`\n"+ " \"labels\": [\n"+ " \"School\"\n"+ " ]`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]`\n"+ " \"relationships\": []\n"+ " }\n"+ " }\n"+ " ]\n"+ " }\n"+ " ]`\n"+ " \"errors\": []\n"+ "}";" is 373.,103
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphResponseTest,noGraphResultsAndNoErrors,Long Statement,The length of the statement "final String s="{\n" + " \"results\": [\n" + " {\n"+ " \"columns\": [\n"+ " \"_0\"\n"+ " ]`\n"+ " \"data\": []\n"+ " }\n"+ " ]`\n"+ " \"errors\": []\n"+ "}";" is 157.,135
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonGraphResponseTest,loadByIdsGraphResults,Long Statement,The length of the statement "final String s="{\n" + " \"results\": [\n" + " {\n"+ " \"columns\": [\n"+ " \"p\"\n"+ " ]`\n"+ " \"data\": [\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"343\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"adam\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": []\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"343\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"adam\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"18\"`\n"+ " \"type\": \"EMPLOYED_BY\"`\n"+ " \"startNode\": \"343\"`\n"+ " \"endNode\": \"26\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"343\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"adam\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"347\"`\n"+ " \"labels\": [\n"+ " \"Issue\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"title\": \"fake 7\"`\n"+ " \"number\": \"7\"`\n"+ " \"title\": \"fake 7\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"506\"`\n"+ " \"type\": \"ASSIGNED_TO\"`\n"+ " \"startNode\": \"347\"`\n"+ " \"endNode\": \"343\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"344\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"vince\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": []\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"26\"`\n"+ " \"labels\": [\n"+ " \"Customer\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"name\": \"GraphAware\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"344\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"vince\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"19\"`\n"+ " \"type\": \"EMPLOYED_BY\"`\n"+ " \"startNode\": \"344\"`\n"+ " \"endNode\": \"26\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"graph\": {\n"+ " \"nodes\": [\n"+ " {\n"+ " \"id\": \"346\"`\n"+ " \"labels\": [\n"+ " \"Issue\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"title\": \"fake 1\"`\n"+ " \"number\": \"1\"`\n"+ " \"title\": \"fake 1\"\n"+ " }\n"+ " }`\n"+ " {\n"+ " \"id\": \"344\"`\n"+ " \"labels\": [\n"+ " \"User\"\n"+ " ]`\n"+ " \"properties\": {\n"+ " \"firstName\": \"vince\"\n"+ " }\n"+ " }\n"+ " ]`\n"+ " \"relationships\": [\n"+ " {\n"+ " \"id\": \"509\"`\n"+ " \"type\": \"CREATED\"`\n"+ " \"startNode\": \"344\"`\n"+ " \"endNode\": \"346\"`\n"+ " \"properties\": {}\n"+ " }\n"+ " ]\n"+ " }\n"+ " }\n"+ " ]\n"+ " }\n"+ " ]`\n"+ " \"errors\": []\n"+ "}";" is 2973.,152
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCreateRowResponseCorrectly,Magic Number,The method contains a magic number: 4,88
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCreateRowResponseCorrectly,Magic Number,The method contains a magic number: 388L,88
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCreateRowResponseCorrectly,Magic Number,The method contains a magic number: 527L,88
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCreateRowResponseCorrectly,Magic Number,The method contains a magic number: 2,88
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCreateRowResponseCorrectly,Magic Number,The method contains a magic number: 389L,88
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCreateRowResponseCorrectly,Magic Number,The method contains a magic number: 3,88
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCreateRowResponseCorrectly,Magic Number,The method contains a magic number: 528L,88
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCustomQueryRowResponseCorrectly,Magic Number,The method contains a magic number: 3,105
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,shouldParseDataInCustomQueryRowResponseCorrectly,Magic Number,The method contains a magic number: 2,105
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,rowResultsAndNoErrors,Long Statement,The length of the statement "final String s="{\"results\": [{\"columns\": [\"collect(p)\"]`\"data\": [{\"row\": [[[{\"name\": \"My Test\"}]]]}]}]`\"errors\": []}";" is 134.,122
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,createRowResults,Long Statement,The length of the statement "final String s="{\n" + " \"results\": [\n" + " {\n"+ " \"columns\": [\n"+ " \"_0\"`\n"+ " \"_1\"`\n"+ " \"_2\"`\n"+ " \"_3\"\n"+ " ]`\n"+ " \"data\": [\n"+ " {\n"+ " \"row\": [\n"+ " 388`\n"+ " 527`\n"+ " 389`\n"+ " 528\n"+ " ]\n"+ " }\n"+ " ]\n"+ " }\n"+ " ]`\n"+ " \"errors\": []\n"+ "}";" is 290.,136
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.response,JsonRowResponseTest,customQueryRowResults,Long Statement,The length of the statement "final String s="{\n" + " \"results\": [\n" + " {\n"+ " \"columns\": [\n"+ " \"n\"`\n"+ " \"r\"`\n"+ " \"m.name\"\n"+ " ]`\n"+ " \"data\": [\n"+ " {\n"+ " \"row\": [\n"+ " {\n"+ " \"name\": \"Betty\"\n"+ " }`\n"+ " {}`\n"+ " \"Peter\"\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"row\": [\n"+ " {\n"+ " \"name\": \"Betty\"\n"+ " }`\n"+ " {}`\n"+ " \"Patrick\"\n"+ " ]\n"+ " }`\n"+ " {\n"+ " \"row\": [\n"+ " {\n"+ " \"name\": \"Betty\"\n"+ " }`\n"+ " {}`\n"+ " \"Priscilla\"\n"+ " ]\n"+ " }\n"+ " ]\n"+ " }\n"+ " ]`\n"+ " \"errors\": []\n"+ "}";" is 532.,163
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequest,execute,Long Statement,The length of the statement "LOGGER.warn("Thread: {}` No response from server: Retrying in {} milliseconds` retries left: {}"`Thread.currentThread().getId()`retryStrategy.getTimeToWait()`retryStrategy.numberOfTriesLeft);" is 191.,179
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequest,execute,Magic Number,The method contains a magic number: 300,179
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequest,parseError,Long Identifier,The length of the field JSON_PARSE_ERROR_EXCEPTION_MESSAGE is 34.,289
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequestTest,shouldHandleErrorJsonResponseGracefully,Long Statement,The length of the statement "final String validJsonResponse="" + "{\"errors\":[" + " {\"message\":\"This is an error\"}"+ "`{\"message\":\"This is another error\"}"+ "]}";" is 142.,41
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequestTest,shouldHandleErrorJsonResponseGracefully,Long Statement,The length of the statement "httpClientMock.onGet(failWithJsonUrl).doReturn(validJsonResponse).withStatus(HttpStatus.SC_BAD_GATEWAY).withHeader(CONTENT_TYPE`APPLICATION_JSON.getMimeType());" is 160.,41
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequestTest,shouldHandleErrorJsonResponseGracefully,Long Statement,The length of the statement "assertThatExceptionOfType(ConnectionException.class).isThrownBy(() -> HttpRequest.execute(httpClientMock`new HttpGet(failWithJsonUrl)`null)).withRootCauseInstanceOf(HttpResponseException.class).withStackTraceContaining("This is an error");" is 239.,41
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequestTest,shouldHandleErrorNonJsonResponseGracefully,Long Statement,The length of the statement "final String htmlResponse="" + "<!DOCTYPE html>" + "<html lang=\"en\">"+ "<head>"+ "<meta charset=\"utf-8\">"+ "<title>Error</title>"+ "</head>"+ "<body>"+ "<pre>Cannot POST /db/data/transaction/commit</pre>"+ "</body>"+ "</html> ";" is 232.,62
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequestTest,shouldHandleErrorNonJsonResponseGracefully,Long Statement,The length of the statement "httpClientMock.onGet(failWithHtmlUrl).doReturn(htmlResponse).withStatus(HttpStatus.SC_BAD_GATEWAY).withHeader(CONTENT_TYPE`TEXT_HTML.getMimeType());" is 148.,62
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.http.request,HttpRequestTest,shouldHandleErrorNonJsonResponseGracefully,Long Statement,The length of the statement "assertThatExceptionOfType(ConnectionException.class).isThrownBy(() -> HttpRequest.execute(httpClientMock`new HttpGet(failWithHtmlUrl)`null)).withRootCauseInstanceOf(HttpResponseException.class).withStackTraceContaining("Could not parse the servers response as JSON");" is 267.,62
neo4j_neo4j-ogm,(default package),MavenWrapperDownloader,main,Empty catch clause,The method has an empty catch block.,48
neo4j_neo4j-ogm,(default package),MavenWrapperDownloader,main,Long Identifier,The length of the identifier mavenWrapperPropertyFileInputStream is 35.,48
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedEntityAdapter,arrayToMapped,Long Statement,The length of the statement "Function<Object`Object> nativeToMappedTypeAdapter=this.typeSystem.getNativeToMappedTypeAdapter(array.getClass().getComponentType());" is 132.,131
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriver,configure,Long Statement,The length of the statement "try (BufferedReader in=new BufferedReader(new InputStreamReader(neo4ConfUrl.openStream()));BufferedWriter out=Files.newBufferedWriter(tmp`StandardCharsets.UTF_8)){" is 163.,105
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriver,getDatabase,Long Statement,The length of the statement "return Optional.ofNullable(this.database).filter(s -> !s.isBlank()).map(String::trim).orElse(GraphDatabaseSettings.DEFAULT_DATABASE_NAME);" is 138.,153
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriver,getGraphDatabaseFactory,Long Statement,The length of the statement "graphDatabaseFactoryClass=(Class<? extends DatabaseManagementServiceBuilder>)Class.forName("com.neo4j.dbms.api.ClusterDatabaseManagementServiceBuilder");" is 153.,158
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriver,getGraphDatabaseFactory,Long Statement,The length of the statement "graphDatabaseFactoryClass=(Class<? extends DatabaseManagementServiceBuilder>)Class.forName("com.neo4j.dbms.api.EnterpriseDatabaseManagementServiceBuilder");" is 156.,158
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriver,request,Long Statement,The length of the statement "return new EmbeddedRequest(graphDatabaseService`transaction`parameterConversion`new EmbeddedEntityAdapter(typeSystem)`getCypherModification());" is 143.,223
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriverTest,shouldWriteAndReadFromProvidedDatabase,Long Statement,The length of the statement "GraphDatabaseService impermanentDatabase=new TestDatabaseManagementServiceBuilder().impermanent().build().database("neo4j");" is 124.,115
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriverTest,shouldHandleCustomConfFilesFromOgmProperties,Long Statement,The length of the statement "driver.configure(new Configuration.Builder(new ClasspathConfigurationSource("ogm-pointing-to-custom-conf.properties")).build());" is 128.,225
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriverTest,shouldLoadHaBasedOnNeo4ConfFile,Long Identifier,The length of the identifier databaseManagementServiceBuilder is 32.,237
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriverTest,shouldLoadHaBasedOnNeo4ConfFile,Long Statement,The length of the statement "DatabaseManagementServiceBuilder databaseManagementServiceBuilder=EmbeddedDriver.getGraphDatabaseFactory(new Configuration.Builder().neo4jConfLocation("classpath:custom-neo4j-ha.conf").build()`path.toFile());" is 208.,237
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriverTest,shouldLoadHaBasedOnNeo4ConfFile,Long Statement,The length of the statement "assertThat(databaseManagementServiceBuilder.getClass().getSimpleName()).isEqualTo("ClusterDatabaseManagementServiceBuilder");" is 125.,237
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriverTest,canRunHATests,Long Statement,The length of the statement "Class.forName("com.neo4j.dbms.api.ClusterDatabaseManagementServiceFactory"`false`EmbeddedDriverTest.class.getClassLoader());" is 124.,248
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.driver,EmbeddedDriverTest,getValueOfCypherPlanner,Long Statement,The length of the statement "return databaseService.executeTransactionally("" + "CALL dbms.listConfig()\n" + "YIELD name` value\n"+ "WHERE name ='cypher.planner'\n"+ "RETURN value"`Map.of()`r -> r.next());" is 176.,264
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapter,apply,Magic Number,The method contains a magic number: 2,34
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapter,apply,Magic Number,The method contains a magic number: 3,34
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapter,apply,Magic Number,The method contains a magic number: 2,34
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 4326,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 7203,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 4979,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 2,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 9157,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 2,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,PointToEmbeddedValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,internallyCreatedTypesShouldBeConvertedCorrect,Long Statement,The length of the statement "assertThat(adapter.apply(DurationValue.duration(Period.ofMonths(1).plusDays(1)))).isEqualTo(Period.ofMonths(1).plusDays(1));" is 124.,37
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,internallyCreatedTypesShouldBeConvertedCorrect,Magic Number,The method contains a magic number: 120,37
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,internallyCreatedTypesShouldBeConvertedCorrect,Magic Number,The method contains a magic number: 2,37
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,durationsShouldStayDurations,Long Statement,The length of the statement "Duration duration=MONTHS.getDuration().multipliedBy(13).plus(DAYS.getDuration().multipliedBy(32)).plusHours(25).plusMinutes(120);" is 129.,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 13,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 32,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 25,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 120,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 2018,60
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 11,60
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 15,60
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 2020,60
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 12,60
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,TemporalAmountAdapterWithEmbeddedTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 24,60
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 4326,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 7203,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 4979,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 9157,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.types.adapter,EmbeddedValueToPointAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30.0,35
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.embedded.request,EmbeddedRequest,EmbeddedRequest,Long Parameter List,The method has 5 parameters. ,72
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,newSession,Long Statement,The length of the statement "SessionConfig.Builder sessionConfigBuilder=SessionConfig.builder().withDefaultAccessMode(accessMode).withBookmarks(bookmarksFromStrings(bookmarks));" is 148.,283
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,getBoltLogging,Long Statement,The length of the statement "LOGGER.warn("Invalid object of type {} for {}` not changing log."`possibleLogging.getClass()`CONFIG_PARAMETER_BOLT_LOGGING);" is 124.,302
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,buildDriverConfig,Empty catch clause,The method has an empty catch block.,316
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,buildDriverConfig,Long Identifier,The length of the identifier shouldApplyEncryptionAndTrustSettings is 37.,316
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,buildDriverConfig,Long Statement,The length of the statement "configBuilder.withConnectionLivenessCheckTimeout(configuration.getConnectionLivenessCheckTimeout()`TimeUnit.MILLISECONDS);" is 122.,316
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,applyEncryptionAndTrustSettings,Complex Method,Cyclomatic complexity of the method is 8,356
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,applyEncryptionAndTrustSettings,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@78856430,356
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriver,bookmarksFromStrings,Long Statement,The length of the statement "return StreamSupport.stream(bookmarks.spliterator()`false).map(b -> Arrays.stream(b.split(BOOKMARK_SEPARATOR)).collect(collectingAndThen(Collectors.toSet()`Bookmark::from))).collect(toList());" is 192.,406
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltCypherExceptionTest,initSessionFactory,Long Statement,The length of the statement "Driver driver=new BoltDriver(GraphDatabase.driver(serverControls.boltURI()`Config.builder().withoutEncryption().build()));" is 122.,36
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverConfigurationTest,setup,Long Statement,The length of the statement "Mockito.when(GraphDatabase.driver(Mockito.any(URI.class)`Mockito.any()`Mockito.any())).thenAnswer(Answers.RETURNS_MOCKS);" is 121.,54
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverConfigurationTest,shouldSupportAdditionalRoutingUris,Long Statement,The length of the statement "List<URI> routingUris=Arrays.asList(URI.create("neo4j://somewhere1")`URI.create("neo4j://somewhere2")`URI.create("neo4j://somewhere3"));" is 136.,65
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverConfigurationTest,shouldRenameBoltRoutingSchemeToNeo4j,Long Statement,The length of the statement "List<URI> routingUris=Arrays.asList(URI.create("neo4j://somewhere1")`URI.create("neo4j://somewhere2")`URI.create("neo4j://somewhere3"));" is 136.,91
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverConfigurationTest,shouldSupportAdditionalRoutingUrisWithoutDefiningUri,Long Statement,The length of the statement "List<URI> routingUris=Arrays.asList(URI.create("neo4j://somewhere1")`URI.create("neo4j://somewhere2")`URI.create("neo4j://somewhere3"));" is 136.,117
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverConfigurationTest,boltDriverJavaDriverInitializationShouldFailIfNoUriOrUrisAreSupplied,Long Statement,The length of the statement "assertThatThrownBy(() -> new BoltDriver().configure(new Configuration.Builder().verifyConnection(true).build())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("You must provide either an URI or at least one URI in the URIS parameter.");" is 256.,180
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverConfigurationTest,shouldCallCloseOnJavaDriverWhenVerifyConnectivityFails,Long Statement,The length of the statement "new BoltDriver().configure(new Configuration.Builder(new ClasspathConfigurationSource("ogm-bolt.properties")).uri("bolt://localhost:" + TestUtils.getAvailablePort()).verifyConnection(true).build());" is 198.,188
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverTest,throwCorrectExceptionOnUnavailableCluster,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder().uri("neo4j://localhost:1022").uris(new String[]{"neo4j://localhost:1023"}).verifyConnection(true).build();" is 162.,41
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverTest,shouldFailEarlyOnInvalidSchemes,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> BoltDriver.isSimpleScheme(invalidScheme)).withMessage("'%s' is not a supported scheme."`invalidScheme);" is 157.,75
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverTest,advancedSchemesInRoutingScenariosShouldFail,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder().uris(new String[]{"neo4j+s://localhost:7687"`"neo4j+ssc://localhost:7983"}).verifyConnection(true).build();" is 163.,116
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverTest,advancedSchemesInRoutingScenariosShouldFail,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> boltDriver.configure(configuration)).withMessage("Illegal URI scheme` expected 'neo4j' in 'neo4j+s://localhost:7687'");" is 173.,116
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverTest,configSettingsShouldAlwaysBeAppliedInRoutingScenarios,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder().uris(new String[]{"neo4j+s://localhost:7687"`"neo4j+ssc://localhost:7983"}).encryptionLevel("REQUIRED").build();" is 168.,130
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverLazyInitializationTest,setUp,Long Statement,The length of the statement "configBuilder=new Configuration.Builder(new ClasspathConfigurationSource("ogm-bolt.properties")).uri("bolt://localhost:" + TestUtils.getAvailablePort());" is 153.,32
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.driver,BoltDriverExceptionTranslatorTest,translatesServiceUnavailabeException,Long Statement,The length of the statement "Configuration ogmConfiguration=new Configuration.Builder().uri(serverControls.boltURI().toString()).verifyConnection(true).build();" is 131.,40
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 4326,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 7203,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 4979,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 9157,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 10.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 20.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,PointToBoltValueAdapterTest,mappingShouldWork,Magic Number,The method contains a magic number: 30.0,33
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,internallyCreatedTypesShouldBeConvertedCorrect,Long Statement,The length of the statement "assertThat(adapter.apply(Values.isoDuration(1`1`1`0).asIsoDuration())).isEqualTo(Values.isoDuration(1`1`1`0).asIsoDuration());" is 126.,37
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,internallyCreatedTypesShouldBeConvertedCorrect,Magic Number,The method contains a magic number: 120,37
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,internallyCreatedTypesShouldBeConvertedCorrect,Magic Number,The method contains a magic number: 2,37
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,durationsShouldStayDurations,Long Statement,The length of the statement "Duration duration=MONTHS.getDuration().multipliedBy(13).plus(DAYS.getDuration().multipliedBy(32)).plusHours(25).plusMinutes(120);" is 129.,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 13,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 32,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 25,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,durationsShouldStayDurations,Magic Number,The method contains a magic number: 120,50
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 2018,61
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 11,61
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 15,61
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 2020,61
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 12,61
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.types.adapter,TemporalAmountAdapterWithBoltTypesTest,periodsShouldStayPeriods,Magic Number,The method contains a magic number: 24,61
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.response,BoltResponse,logNotifications,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@33d910f8,96
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.response,BoltResponse,format,Long Statement,The length of the statement "queryHint.append("\t").append(Stream.generate(() -> " ").limit(position.column() - 1).collect(Collectors.joining())).append("^").append(System.lineSeparator());" is 160.,120
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.transaction,BoltTransaction,newOrExistingNativeTransaction,Long Identifier,The length of the identifier newOrExistingNativeTransaction is 30.,54
neo4j_neo4j-ogm,org.neo4j.ogm.drivers.bolt.transaction,BoltTransactionTest,commitShouldCloseSessionWhenTransactionIsClosed,Empty catch clause,The method has an empty catch block.,46
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestContainersTestBase,hasAcceptedAndWantsToUseCommercialEdition,Long Identifier,The length of the field SYS_PROPERTY_ACCEPT_AND_USE_COMMERCIAL_EDITION is 46.,142
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestContainersTestBase,hasAcceptedAndWantsToUseCommercialEdition,Long Statement,The length of the statement "return Optional.ofNullable(System.getenv(TestContainersTestBase.SYS_PROPERTY_ACCEPT_AND_USE_COMMERCIAL_EDITION)).orElse("no").toLowerCase(Locale.ENGLISH).equals("yes");" is 168.,142
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestContainersTestBase,isEmbeddedEnterpriseEdition,Long Statement,The length of the statement "Class.forName("com.neo4j.dbms.api.ClusterDatabaseManagementServiceFactory"`false`TestContainersTestBase.class.getClassLoader());" is 128.,200
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestContainersTestBase,isEmbeddedEnterpriseEdition,Long Statement,The length of the statement "LOGGER.warn("Could not reliable determine weather HighlyAvailableGraphDatabaseFactory is available or not` assuming not."`e);" is 125.,200
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestContainersTestBase,extractVersionFromEmbedded,Long Statement,The length of the statement "List<String> versions=graphDatabaseService.executeTransactionally("CALL dbms.components() YIELD versions"`Map.of()`result -> (List<String>)result.next().get("versions"));" is 170.,216
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestContainersTestBase,fromProperties,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3e0f5e57,263
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestServer,startServer,Long Statement,The length of the statement "this.controls=testHarnessProvider.get().withConfig(BoltConnector.enabled`true).withConfig(BoltConnector.listen_address`new SocketAddress("localhost"`port)).build();" is 164.,66
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestServer,startServer,Long Statement,The length of the statement "this.controls=testHarnessProvider.get().withConfig(HttpConnector.enabled`true).withConfig(HttpConnector.listen_address`new SocketAddress("localhost"`port)).withConfig(GraphDatabaseSettings.transaction_timeout`Duration.ofSeconds(transactionTimeoutSeconds)).build();" is 264.,66
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,TestServer,shutdown,Magic Number,The method contains a magic number: 100,97
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,GraphTestUtils,doAssertSubgraph,Long Statement,The length of the statement "assertRelationshipsMappingExistsForSingleNodeMapping(database`otherDatabase`nodeMappings.iterator().next()`firstDatabaseName);" is 126.,89
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,GraphTestUtils,buildNodeMappingPermutations,Long Statement,The length of the statement "Assert.fail("Could not find a node corresponding to: " + print(tx.getNodeById(entry.getKey())) + ". There are most likely more nodes with the same characteristics (labels` properties) in your "+ "cypher CREATE statement but fewer in the database.");" is 249.,109
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,GraphTestUtils,relationshipMappingExists,Long Statement,The length of the statement "for ( Relationship candidate : database.getNodeById(nodeMapping.get(relationship.getStartNode().getId())).getRelationships(OUTGOING)) {" is 135.,287
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,GraphTestUtils,propertiesToString,Magic Number,The method contains a magic number: 2,389
neo4j_neo4j-ogm,org.neo4j.ogm.testutil,GraphTestUtils,propertyValueToString,Complex Method,Cyclomatic complexity of the method is 10,418
neo4j_neo4j-ogm,org.neo4j.ogm.context,ResponseMapperTest,shouldIgnoreResultsIfQueryMapsToVoid,Long Statement,The length of the statement "session.query("CALL apoc.periodic.iterate('MATCH (d:Document) RETURN d'` " + " 'SET d.thisIsAProperty = 0'" + " `{batchSize:200` parallel:false` iterateList:true}) "`new HashMap<>());" is 183.,59
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,setUpPrimaryIdToNativeIdAccessor,Long Identifier,The length of the field PRIMARY_ID_TO_NATIVE_ID_ACCESSOR is 32.,46
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,setUp,Long Statement,The length of the statement "this.metaData=new MetaData("org.neo4j.ogm.domain.policy"`"org.neo4j.ogm.context"`"org.neo4j.ogm.domain.annotations.ids");" is 121.,61
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,testPath,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`policy.getId()`null`Person.class`Policy.class));" is 127.,69
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,testPath,Long Statement,The length of the statement "assertThat(mappingContext.containsRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`policy.getId()`null`Person.class`Policy.class))).isTrue();" is 153.,69
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,testPath,Magic Number,The method contains a magic number: 2L,69
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearOne,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`policy.getId()`null`Person.class`Policy.class));" is 127.,89
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearOne,Long Statement,The length of the statement "assertThat(mappingContext.containsRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`policy.getId()`null`Person.class`Policy.class))).isFalse();" is 154.,89
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearOne,Magic Number,The method contains a magic number: 2L,89
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearOneEqualToAnother,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`policy.getId()`null`Person.class`Policy.class));" is 127.,110
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearOneEqualToAnother,Long Statement,The length of the statement "assertThat(mappingContext.containsRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`policy.getId()`null`Person.class`Policy.class))).isFalse();" is 154.,110
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearOneEqualToAnother,Magic Number,The method contains a magic number: 3L,110
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearOneEqualToAnother,Magic Number,The method contains a magic number: 2L,110
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearType,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`healthcare.getId()`null`Person.class`Policy.class));" is 131.,136
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearType,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(jim.getId()`"INFLUENCES"`immigration.getId()`null`Person.class`Policy.class));" is 132.,136
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearType,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(jim.getId()`"WORKS_WITH"`rik.getId()`null`Person.class`Person.class));" is 124.,136
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearType,Magic Number,The method contains a magic number: 2L,136
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearType,Magic Number,The method contains a magic number: 3L,136
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,clearType,Magic Number,The method contains a magic number: 4L,136
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,areObjectsReportedAsDirtyCorrectly,Magic Number,The method contains a magic number: 2L,173
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,areObjectsReportedAsDirtyCorrectly,Magic Number,The method contains a magic number: 3L,173
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,areObjectsReportedAsDirtyCorrectly,Magic Number,The method contains a magic number: 4L,173
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,nativeIdsAreMappedWithoutPrimaryIdConversion,Long Statement,The length of the statement "assertThat(containsNativeId(metaData.classInfo(entity)`new UuidStringConverter().toGraphProperty(entity.identifier))).isFalse();" is 128.,200
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,nodeEntitiesAreReplacedWithoutPrimaryIdConversion,Long Statement,The length of the statement "assertThat(containsNativeId(metaData.classInfo(entity)`new UuidStringConverter().toGraphProperty(entity.identifier))).isFalse();" is 128.,212
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,nodeEntitiesAreReplacedWithoutPrimaryIdConversion,Magic Number,The method contains a magic number: 999L,212
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,nodeEntitiesAreReplacedWithoutPrimaryIdConversion,Magic Number,The method contains a magic number: 999L,212
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContextTest,containsNativeId,Long Identifier,The length of the field PRIMARY_ID_TO_NATIVE_ID_ACCESSOR is 32.,230
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMapTest,testUnchangedObjectDetected,Magic Number,The method contains a magic number: 115L,44
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMapTest,testChangedPropertyDetected,Magic Number,The method contains a magic number: 115L,53
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMapTest,testRelatedObjectChangeDoesNotAffectNodeMemoisation,Magic Number,The method contains a magic number: 115L,64
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,oneTimeSetUp,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.gh551"`"org.neo4j.ogm.domain.gh391"`"org.neo4j.ogm.domain.gh750"`"org.neo4j.ogm.domain.gh777"`"org.neo4j.ogm.domain.cineasts.minimum"`"org.neo4j.ogm.domain.gh813"`"org.neo4j.ogm.domain.gh873");" is 261.,75
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,gh813,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,105
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,gh813,Long Statement,The length of the statement "results=sessionFactory.openSession().query("RETURN 'containerName' AS name` [i IN RANGE(0`3) | {a:{id: i` name:'a'+i}` b:{id: i` name:'b'+i}` c:{id: i` name:'c'+i}}] AS rows"`EMPTY_MAP).queryResults();" is 201.,105
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,gh813,Long Statement,The length of the statement "results=sessionFactory.openSession().query("WITH {a: {id: 0` name: 'a0'}` b: {id:0` name:'b0'}` c: {id:0` name: 'c0'}} AS i RETURN 'containerName' as name` collect(i) as rows"`EMPTY_MAP).queryResults();" is 202.,105
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,gh813,Magic Number,The method contains a magic number: 4,105
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfUnkownThings,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,155
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfUnkownThings,Long Statement,The length of the statement "results=sessionFactory.openSession().query("unwind range (0`1) as x return collect(x) as result"`EMPTY_MAP).queryResults();" is 123.,155
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfUnkownThings,Long Statement,The length of the statement "results=sessionFactory.openSession().query("unwind range (0`0) as x return collect(x) as result"`EMPTY_MAP).queryResults();" is 123.,155
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfUnkownThings,Long Statement,The length of the statement "results=sessionFactory.openSession().query("unwind range (0`-1) as x return collect(x) as result"`EMPTY_MAP).queryResults();" is 124.,155
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfKownThings,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,189
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfKownThings,Long Statement,The length of the statement "results=sessionFactory.openSession().query("match (r:ThingEntity) return collect (r) as result"`EMPTY_MAP).queryResults();" is 122.,189
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfKownThings,Long Statement,The length of the statement "assertThat(genericQueryResultWrapper.getResult()).hasSize(10).extracting(ThingEntity::getName).allSatisfy(s -> s.startsWith("Thing"));" is 134.,189
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfKownThings,Long Statement,The length of the statement "results=sessionFactory.openSession().query("match (r:ThingEntity {name: 'Thing 1'}) return collect (r) as result"`EMPTY_MAP).queryResults();" is 140.,189
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfKownThings,Long Statement,The length of the statement "assertThat(genericQueryResultWrapper.getResult()).hasSize(1).extracting(ThingEntity::getName).allSatisfy(s -> s.startsWith("Thing"));" is 133.,189
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfKownThings,Long Statement,The length of the statement "results=sessionFactory.openSession().query("unwind range (0`-1) as x return collect(x) as result"`EMPTY_MAP).queryResults();" is 124.,189
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,genericTargetTypesWithCollectionsOfKownThings,Magic Number,The method contains a magic number: 10,189
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNestedObjects,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,227
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNestedObjects,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("MATCH (t:ThingEntity) RETURN 'a name' as something` collect({name: t.name}) as things"`EMPTY_MAP).queryResults();" is 186.,227
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNestedObjects,Long Statement,The length of the statement "assertThat(thingResult.getThings()).hasSize(10).extracting(AnotherThing::getName).allSatisfy(s -> s.startsWith("Thing"));" is 121.,227
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNestedObjects,Magic Number,The method contains a magic number: 10,227
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNullableNestedNodeEntities,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,248
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNullableNestedNodeEntities,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("WITH 'a name' AS something OPTIONAL MATCH (t:ThingEntity {na:false}) RETURN something` t as entity"`EMPTY_MAP).queryResults();" is 199.,248
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNonNullNestedNodeEntities,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,267
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,singleUseEntityMapperShouldWorkWithNonNullNestedNodeEntities,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("WITH 'a name' AS something OPTIONAL MATCH (t:ThingEntity {name: 'Thing 7'}) RETURN something` t as entity"`EMPTY_MAP).queryResults();" is 206.,267
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldFailOnIncompatibleProperties,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,287
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldFailOnIncompatibleProperties,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("WITH 'a name' AS something OPTIONAL MATCH (t:ThingEntity) RETURN something` COLLECT(t) as entity"`EMPTY_MAP).queryResults();" is 197.,287
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldFailOnIncompatibleProperties,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> entityMapper.map(ThingResult2.class`results.iterator().next())).withMessageContaining("Can not set org.neo4j.ogm.domain.gh551.ThingEntity field org.neo4j.ogm.domain.gh551.ThingResult2.entity to java.util.ArrayList");" is 270.,287
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldFailOnIncompatibleProperties,Long Statement,The length of the statement "Condition<String> stringMatches=new Condition<>(s -> s.contains("Cannot map property entity from result set: The result contains more than one entry for the property.")`"String matches");" is 187.,287
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldBeLenientWithSingleValuedCollectionsForSkalarPropertiesMode,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,311
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldBeLenientWithSingleValuedCollectionsForSkalarPropertiesMode,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("WITH 'a name' AS something OPTIONAL MATCH (t:ThingEntity {name: 'Thing 7'}) RETURN something` COLLECT(t) as entity"`EMPTY_MAP).queryResults();" is 215.,311
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldWorkWithCustomConverters,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,331
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldWorkWithCustomConverters,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("RETURN 'foo' AS foobar"`EMPTY_MAP).queryResults();" is 123.,331
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldWorkWithCustomConvertersOnListProperty,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,349
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldWorkWithCustomConvertersOnListProperty,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("RETURN ['foo'` 'bar'] AS foobars"`EMPTY_MAP).queryResults();" is 133.,349
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldDealWithArtificalNullValues,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,363
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldDealWithArtificalNullValues,Long Statement,The length of the statement "Movie movie=sessionFactory.openSession().queryForObject(Movie.class`"return apoc.create.vNode(['Movie']`{name: null` foo: null})"`Collections.emptyMap());" is 154.,363
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,queryResultShouldHandleNodeAndRelationshipEntities,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,375
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,queryResultShouldHandleNodeAndRelationshipEntities,Long Statement,The length of the statement "for ( String query : new String[]{"MATCH (a:Actor {name: 'A1'})-[r:ACTS_IN]->(m:Movie) RETURN a AS actor`COLLECT(r) AS roles` COLLECT(m) as movies"`"MATCH p = (a:Actor {name: 'A1'})-[:ACTS_IN*]->(:Movie) " + "WITH a AS actor` p " + "UNWIND relationships(p) AS r "+ "UNWIND [x IN nodes(p) WHERE x:Movie] AS m "+ "RETURN actor` collect(r) AS roles` collect(m) AS movies"}) {" is 372.,375
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,queryResultShouldHandleNodeAndRelationshipEntities,Magic Number,The method contains a magic number: 2,375
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldMapEnumeratedMapProperties,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,406
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldMapEnumeratedMapProperties,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("MATCH (t:MyNode) RETURN t.id AS id` t.type AS type` t.`attributes.a1` AS `attributes.a1`` t.`attributes.a2` AS `attributes.a2` LIMIT 1"`EMPTY_MAP).queryResults();" is 235.,406
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldMapAggregatedMapProperties,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,426
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldMapAggregatedMapProperties,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("MATCH (t:MyNode) RETURN t.id AS id` t.type AS type` {b1: 'w1'` b2: 'w2'} AS attributes LIMIT 1"`EMPTY_MAP).queryResults();" is 195.,426
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldUseIdFields,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,446
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldUseIdFields,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("MATCH (t:ThingEntity) RETURN 4711 as id` 'a name' as name LIMIT 1"`EMPTY_MAP).queryResults();" is 166.,446
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldUseIdFields,Magic Number,The method contains a magic number: 4711,446
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldDealWithStaticInnerClasses,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,479
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldDealWithStaticInnerClasses,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("MATCH (t:ThingEntity) RETURN 'a name' as something LIMIT 1"`EMPTY_MAP).queryResults();" is 159.,479
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldDealWithStaticInnerClasses,Long Statement,The length of the statement "SomeContainer.StaticInnerThingResult thingResult=entityMapper.map(SomeContainer.StaticInnerThingResult.class`results.iterator().next());" is 136.,479
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,shouldMapFromMap,Long Statement,The length of the statement "assertThat(userResult.getProfile()).containsAllEntriesOf((Map<? extends String`?>)results.iterator().next().get("profile"));" is 124.,497
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,assertThatNullOrEmptyObjectsAreMappedCorrectly,Long Statement,The length of the statement "SingleUseEntityMapper entityMapper=new SingleUseEntityMapper(sessionFactory.metaData()`new ReflectionEntityInstantiator(sessionFactory.metaData()));" is 148.,533
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,assertThatNullOrEmptyObjectsAreMappedCorrectly,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=sessionFactory.openSession().query("OPTIONAL MATCH (ui:UserInfo {email: 'idontexists@here.com'}) RETURN 4711 AS id` 'infoIsNull' AS status` coalesce(ui` null) as info\n" + "UNION\n" + "OPTIONAL MATCH (ui:UserInfo {email: 'idontexists@either.com'}) RETURN 4712 AS id` 'infoIsEmptyStringApocWhen' AS status` coalesce(ui` '') as info\n"+ "UNION\n"+ "OPTIONAL MATCH (ui:UserInfo {email: 'i@do.com'}) RETURN 4713 AS id` 'existingMatch' AS status` coalesce(ui` '') as info\n"`EMPTY_MAP).queryResults();" is 533.,533
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,assertThatNullOrEmptyObjectsAreMappedCorrectly,Magic Number,The method contains a magic number: 3,533
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,assertThatNullOrEmptyObjectsAreMappedCorrectly,Magic Number,The method contains a magic number: 4711L,533
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,assertThatNullOrEmptyObjectsAreMappedCorrectly,Magic Number,The method contains a magic number: 4712L,533
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapperTest,assertThatNullOrEmptyObjectsAreMappedCorrectly,Magic Number,The method contains a magic number: 4713L,533
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,map,Long Statement,The length of the statement "Consumer<GraphModel> mapContentOfIndividualModel=graphModel -> mapContentOf(graphModel`additionalNodeFilter`returnedNodeIds`mappedRelationshipIds`returnedRelationshipIds`mappedNodeIds);" is 185.,87
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,map,Long Statement,The length of the statement "List<T> results=returnedNodeIds.stream().map(mappingContext::getNodeEntity).filter(entityPresentAndCompatible).map(type::cast).collect(toList());" is 145.,87
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,map,Long Statement,The length of the statement "results=returnedRelationshipIds.stream().map(mappingContext::getRelationshipEntity).filter(entityPresentAndCompatible).map(type::cast).collect(toList());" is 153.,87
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapContentOf,Long Parameter List,The method has 6 parameters. ,140
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,executePostLoad,Long Statement,The length of the statement "logger.warn("Cannot call PostLoad annotated method {} on class {}` " + "security manager denied access."`postLoadMethod.getMethod().getName()`classInfo.name()`e);" is 162.,187
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,executePostLoad,Long Statement,The length of the statement "logger.warn("Cannot call PostLoad annotated method {} on class {}. " + "Make sure it is public and has no arguments"`postLoadMethod.getMethod().getName()`classInfo.name()`e);" is 174.,187
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapRelationships,Long Statement,The length of the statement "String messageFormat="Relationship {} cannot be fully hydrated because one or more required node entities have not been part of the result set.";" is 145.,305
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapRelationshipEntity,Long Parameter List,The method has 5 parameters. ,340
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapRelationshipEntity,Long Statement,The length of the statement "logger.debug("Found relationship type: {} to map to RelationshipEntity: {}"`edge.getType()`relationshipEntityClassInfo.name());" is 127.,340
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapRelationshipEntity,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(edge.getStartNode()`edge.getType()`edge.getEndNode()`edge.getId()`source.getClass()`DescriptorMappings.getType(writer.getTypeDescriptor())));" is 195.,340
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Complex Method,Cyclomatic complexity of the method is 10,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "entityCollector.collectRelationship(edge.getStartNode()`DescriptorMappings.getType(outgoingWriter.getTypeDescriptor())`edge.getType()`Direction.OUTGOING`edge.getId()`edge.getEndNode()`relationshipEntity);" is 204.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "relationshipsToRegister.add(new MappedRelationship(edge.getStartNode()`edge.getType()`edge.getEndNode()`edge.getId()`instance.getClass()`DescriptorMappings.getType(outgoingWriter.getTypeDescriptor())));" is 202.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "entityCollector.collectRelationship(edge.getEndNode()`DescriptorMappings.getType(incomingWriter.getTypeDescriptor())`edge.getType()`Direction.INCOMING`edge.getId()`edge.getStartNode()`relationshipEntity);" is 204.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "relationshipsToRegister.add(new MappedRelationship(edge.getStartNode()`edge.getType()`edge.getEndNode()`edge.getId()`instance.getClass()`DescriptorMappings.getType(incomingWriter.getTypeDescriptor())));" is 202.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "entityCollector.collectRelationship(edge.getStartNode()`DescriptorMappings.getType(outgoingWriter.getTypeDescriptor())`edge.getType()`Direction.OUTGOING`edge.getEndNode()`parameter);" is 182.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "MappedRelationship mappedRelationship=new MappedRelationship(edge.getStartNode()`edge.getType()`edge.getEndNode()`null`instance.getClass()`DescriptorMappings.getType(outgoingWriter.getTypeDescriptor()));" is 203.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "entityCollector.collectRelationship(edge.getEndNode()`DescriptorMappings.getType(incomingWriter.getTypeDescriptor())`edge.getType()`Direction.INCOMING`edge.getStartNode()`instance);" is 181.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "relationshipsToRegister.add(new MappedRelationship(edge.getStartNode()`edge.getType()`edge.getEndNode()`null`instance.getClass()`DescriptorMappings.getType(incomingWriter.getTypeDescriptor())));" is 194.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Statement,The length of the statement "entityCollector.forCollectedEntities((sourceId`type`direction`targetType`entities) -> mapOneToMany(mappingContext.getNodeEntity(sourceId)`targetType`entities`type`direction));" is 175.,432
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,mapOneToMany,Long Parameter List,The method has 5 parameters. ,531
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,getRelationshipEntity,Complex Method,Cyclomatic complexity of the method is 10,572
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,getRelationshipEntity,Long Statement,The length of the statement "logger.error("Found more than one matching @RelationshipEntity for {} but cannot tell which one to use"`edge.toString());" is 121.,572
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphEntityMapper,declaresRelationshipTo,Long Statement,The length of the statement "return EntityAccessManager.getRelationalWriter(metadata.classInfo(by.getName())`relationshipName`relationshipDirection`to) != null;" is 131.,626
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapper,resolveClassInfoFor,Long Statement,The length of the statement "throw new MappingException("Error mapping to ad-hoc " + type + ". At present` only @Result types that are discovered by the domain entity package scanning can be mapped.");" is 172.,122
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapper,writeProperty,Complex Conditional,The conditional expression !targetIsCollection && GenericUtils.isGenericField(writer.getField()) && value != null && isCollectionLike.test(value.getClass()) is complex.,131
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapper,writeProperty,Complex Method,Cyclomatic complexity of the method is 14,131
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapper,writeProperty,Long Statement,The length of the statement "if (!targetIsCollection && GenericUtils.isGenericField(writer.getField()) && value != null && isCollectionLike.test(value.getClass())) {" is 136.,131
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapper,getAndMergeExistingCompositeValue,Long Statement,The length of the statement "mergedValues.put(key.replaceAll(Pattern.quote(((MapCompositeConverter)writer.getCompositeConverter()).getPropertyLookup())`"")`value);" is 134.,203
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapper,mapKnownEntityType,Long Statement,The length of the statement "logger.warn("Cannot map property {} from result set: The result contains more than one entry for the property."`property);" is 122.,240
neo4j_neo4j-ogm,org.neo4j.ogm.context,SingleUseEntityMapper,isMappedCollection,Long Statement,The length of the statement "return resultObject instanceof Collection && ((Collection<?>)resultObject).stream().allMatch(isElementType.or(v -> isMappedCollection(v`elementType)));" is 151.,299
neo4j_neo4j-ogm,org.neo4j.ogm.context,DirectedRelationship,hashCode,Magic Number,The method contains a magic number: 31,66
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappedRelationship,MappedRelationship,Long Parameter List,The method has 6 parameters. ,46
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappedRelationship,equals,Long Statement,The length of the statement "return startNodeId == that.startNodeId && endNodeId == that.endNodeId && Objects.equals(relationshipType`that.relationshipType) && Objects.equals(relationshipId`that.relationshipId);" is 182.,81
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphRowListModelMapper,map,Long Statement,The length of the statement "Set<Long> idsInCurrentRow=Arrays.stream(graphRowModel.getRow()).filter(Number.class::isInstance).map(Number.class::cast).map(Number::longValue).collect(toSet());" is 161.,50
neo4j_neo4j-ogm,org.neo4j.ogm.context,GraphRowListModelMapper,next,Long Statement,The length of the statement "Set<Long> idsInCurrentRow=Arrays.stream(graphRowModel.getRow()).filter(Number.class::isInstance).map(Number.class::cast).map(Number::longValue).collect(toSet());" is 161.,58
neo4j_neo4j-ogm,org.neo4j.ogm.context,RestModelMapper,map,Long Statement,The length of the statement "ResultRowBuilder resultRowBuilder=new ResultRowBuilder(RestModelMapper.this::getEntityOrNodeModel`mappingContext::getRelationshipEntity);" is 137.,58
neo4j_neo4j-ogm,org.neo4j.ogm.context,RestModelMapper,next,Long Statement,The length of the statement "ResultRowBuilder resultRowBuilder=new ResultRowBuilder(RestModelMapper.this::getEntityOrNodeModel`mappingContext::getRelationshipEntity);" is 137.,63
neo4j_neo4j-ogm,org.neo4j.ogm.context,RestModelMapper,getEntityOrNodeModel,Long Statement,The length of the statement "return Optional.ofNullable(mappingContext.getNodeEntity(id)).orElseGet(() -> graphModel.findNode(id).orElseThrow(() -> new RuntimeException("Lost NodeModel for id " + id)));" is 173.,99
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,getNodeEntityById,Complex Conditional,The conditional expression (classInfo.isInterface() || classInfo.isAbstract()) && classInfo.annotationsInfo().get(NodeEntity.class) == null is complex.,100
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,removeNodeEntity,Long Identifier,The length of the parameter deregisterDependentRelationshipEntity is 37.,175
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,getEntities,Long Statement,The length of the statement "result=relationshipEntityRegister.values().stream().filter((c) -> c.getClass().isAssignableFrom(type)).collect(Collectors.toList());" is 132.,226
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,getEntities,Long Statement,The length of the statement "result=nodeEntityRegister.values().stream().filter((c) -> c.getClass().isAssignableFrom(type)).collect(Collectors.toList());" is 124.,226
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,neighbours,Long Statement,The length of the statement "Object affectedObject=mappedRelationship.getEndNodeId() == id ? getNodeEntity(mappedRelationship.getStartNodeId()) : getNodeEntity(mappedRelationship.getEndNodeId());" is 166.,400
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,deregisterDependentRelationshipEntity,Long Statement,The length of the statement "if (startOrEndEntity == startNodeReader.read(relationshipEntity) || startOrEndEntity == endNodeReader.read(relationshipEntity)) {" is 129.,439
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,optionalNativeId,Long Statement,The length of the statement "throw new IllegalArgumentException("Class " + entity.getClass() + " is not a valid entity class. "+ "Please check the entity mapping.");" is 136.,518
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,nativeId,Long Statement,The length of the statement "throw new IllegalArgumentException("Class " + entity.getClass() + " is not a valid entity class. "+ "Please check the entity mapping.");" is 136.,542
neo4j_neo4j-ogm,org.neo4j.ogm.context,MappingContext,generateIdIfNecessary,Long Statement,The length of the statement "throw new MappingException("Id strategy " + classInfo.idStrategyClass() + " could not be instantiated "+ "and wasn't registered. Either provide no argument constructor or register instance "+ "with SessionFactory");" is 215.,569
neo4j_neo4j-ogm,org.neo4j.ogm.context,TransientRelationship,TransientRelationship,Long Parameter List,The method has 6 parameters. ,51
neo4j_neo4j-ogm,org.neo4j.ogm.context,TransientRelationship,equals,Complex Method,Cyclomatic complexity of the method is 9,60
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,addWriteProtection,Long Identifier,The length of the field optionalWriteProtectionSupplier is 31.,97
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,map,Long Statement,The length of the statement "LOGGER.debug("context-init: ({})-[:{}]->({})"`mappedRelationship.getStartNodeId()`mappedRelationship.getRelationshipType()`mappedRelationship.getEndNodeId());" is 158.,108
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,map,Long Statement,The length of the statement "RelationshipBuilder relationshipBuilder=getRelationshipBuilder(compiler`entity`directedRelationship`mappingContext.isDirty(entity));" is 132.,108
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,deleteObsoleteRelationships,Long Identifier,The length of the identifier snapshotOfKnownRelationshipEntities is 35.,183
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,deleteObsoleteRelationships,Long Statement,The length of the statement "RelationshipBuilder builder=compiler.unrelate(mappedRelationship.getStartNodeId()`mappedRelationship.getRelationshipType()`mappedRelationship.getEndNodeId()`mappedRelationship.getRelationshipId());" is 197.,183
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,clearRelatedObjects,Long Statement,The length of the statement "LOGGER.debug("flushing end node of: (${})-[:{}]->(${})"`mappedRelationship.getStartNodeId()`mappedRelationship.getRelationshipType()`mappedRelationship.getEndNodeId());" is 168.,230
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,clearRelatedObjects,Long Statement,The length of the statement "LOGGER.debug("flushing start node of: (${})-[:{}]->(${})"`mappedRelationship.getStartNodeId()`mappedRelationship.getRelationshipType()`mappedRelationship.getEndNodeId());" is 170.,230
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,isWriteProtected,Long Identifier,The length of the field optionalWriteProtectionSupplier is 31.,289
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,isWriteProtected,Long Statement,The length of the statement "return this.optionalWriteProtectionSupplier.map(supplier -> supplier.apply(mode`target.getClass())).map(p -> p.test(target)).orElse(false);" is 139.,289
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,newNodeBuilder,Long Statement,The length of the statement "primaryIndex=joinPrimaryIndexAttributesIfNecessary(primaryIndexField.property()`primaryIndexField.hasCompositeConverter() ? primaryIndexField.readComposite(entity) : null);" is 172.,316
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,newNodeBuilder,Long Statement,The length of the statement "this.mappingContext.getSnapshotOf(entity).ifPresent(snapshot -> nodeBuilder.setPreviousDynamicLabels(snapshot.getDynamicLabels()).setPreviousCompositeProperties(snapshot.getDynamicCompositeProperties()));" is 204.,316
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapEntityReferences,Complex Method,Cyclomatic complexity of the method is 14,364
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,clearContextRelationships,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@31f12a36,461
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,link,Long Parameter List,The method has 5 parameters. ,494
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,link,Long Statement,The length of the statement "RelationshipBuilder relationshipBuilder=getRelationshipBuilder(compiler`relNodes.target`directedRelationship`mapBothDirections);" is 128.,494
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,link,Long Statement,The length of the statement "mapRelationshipEntity(relNodes.target`relNodes.source`relationshipBuilder`context`nodeBuilder`horizon`relNodes.sourceType`relNodes.targetType);" is 143.,494
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,getRelationshipBuilder,Long Statement,The length of the statement "relationshipBuilder=cypherBuilder.existingRelationship(relId`directedRelationship.direction()`directedRelationship.type()`mappingContext.isDirty(entity));" is 154.,540
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,getRelationshipBuilder,Long Statement,The length of the statement "this.mappingContext.getSnapshotOf(entity).ifPresent(snapshot -> relationshipBuilder.setPreviousCompositeProperties(snapshot.getDynamicCompositeProperties()));" is 158.,540
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,haveRelationEndsChanged,Complex Conditional,The conditional expression mappedRelationship.getRelationshipId() != null && relId != null && mappedRelationship.getRelationshipId().equals(relId) is complex.,601
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,haveRelationEndsChanged,Complex Conditional,The conditional expression srcIdentity == null || tgtIdentity == null || mappedRelationship.getStartNodeId() != srcIdentity || mappedRelationship.getEndNodeId() != tgtIdentity is complex.,601
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,haveRelationEndsChanged,Long Statement,The length of the statement "if (mappedRelationship.getRelationshipId() != null && relId != null && mappedRelationship.getRelationshipId().equals(relId)) {" is 126.,601
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,haveRelationEndsChanged,Long Statement,The length of the statement "if (srcIdentity == null || tgtIdentity == null || mappedRelationship.getStartNodeId() != srcIdentity || mappedRelationship.getEndNodeId() != tgtIdentity) {" is 155.,601
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapRelationshipEntity,Complex Method,Cyclomatic complexity of the method is 8,633
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapRelationshipEntity,Long Parameter List,The method has 8 parameters. ,633
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,createMappedRelationship,Long Statement,The length of the statement "MappedRelationship mappedRelationshipOutgoing=new MappedRelationship(relNodes.sourceId`relationshipBuilder.type()`relNodes.targetId`isRelationshipEntity ? relationshipBuilder.reference() : null`relNodes.sourceType`relNodes.targetType);" is 235.,778
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,createMappedRelationship,Long Statement,The length of the statement "MappedRelationship mappedRelationshipIncoming=new MappedRelationship(relNodes.targetId`relationshipBuilder.type()`relNodes.sourceId`isRelationshipEntity ? relationshipBuilder.reference() : null`relNodes.sourceType`relNodes.targetType);" is 235.,778
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapRelatedEntity,Complex Conditional,The conditional expression !alreadyVisitedNode || !selfReferentialUndirectedRelationship || relationshipFromExplicitlyMappedObject is complex.,818
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapRelatedEntity,Long Identifier,The length of the identifier selfReferentialUndirectedRelationship is 37.,818
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapRelatedEntity,Long Identifier,The length of the identifier relationshipFromExplicitlyMappedObject is 38.,818
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapRelatedEntity,Long Parameter List,The method has 5 parameters. ,818
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,mapRelatedEntity,Long Statement,The length of the statement "boolean selfReferentialUndirectedRelationship=relationshipBuilder.hasDirection(Direction.UNDIRECTED) && relNodes.source.getClass() == relNodes.target.getClass();" is 161.,818
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,updateRelationship,Long Parameter List,The method has 5 parameters. ,859
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,updateRelationship,Long Statement,The length of the statement "maybeCreateRelationship(compileContext`srcNodeBuilder.reference()`relationshipBuilder`tgtNodeBuilder.reference()`relNodes.sourceType`relNodes.targetType);" is 154.,859
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,updateRelationship,Long Statement,The length of the statement "maybeCreateRelationship(compileContext`srcNodeBuilder.reference()`relationshipBuilder`tgtNodeBuilder.reference()`relNodes.sourceType`relNodes.targetType);" is 154.,859
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,updateRelationship,Long Statement,The length of the statement "LOGGER.debug("context-add: ({})-[{}:{}]->({})"`mappedRelationship.getStartNodeId()`relationshipBuilder.reference()`mappedRelationship.getRelationshipType()`mappedRelationship.getEndNodeId());" is 191.,859
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,maybeCreateRelationship,Long Parameter List,The method has 6 parameters. ,900
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,maybeCreateRelationship,Long Statement,The length of the statement "context.registerTransientRelationship(new SrcTargetKey(src`tgt)`new TransientRelationship(src`relationshipBuilder.reference()`relationshipBuilder.type()`tgt`tgtClass`srcClass));" is 177.,900
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,reallyCreateRelationship,Long Parameter List,The method has 6 parameters. ,968
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,reallyCreateRelationship,Long Statement,The length of the statement "ctx.registerTransientRelationship(new SrcTargetKey(src`tgt)`new TransientRelationship(src`relBuilder.reference()`relBuilder.type()`tgt`srcClass`tgtClass));" is 155.,968
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,bothWayMappingRequired,Complex Conditional,The conditional expression tgtRelationshipDirection != Direction.UNDIRECTED && tgtRelReader.relationshipType().equals(relationshipType) && relationshipDirection.equals(tgtRelationshipDirection) is complex.,1000
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,bothWayMappingRequired,Long Statement,The length of the statement "if (tgtRelationshipDirection != Direction.UNDIRECTED && tgtRelReader.relationshipType().equals(relationshipType) && relationshipDirection.equals(tgtRelationshipDirection)) {" is 173.,1000
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityGraphMapper,targetEqualsSource,Complex Method,Cyclomatic complexity of the method is 8,1042
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityCollector,collectRelationship,Long Parameter List,The method has 7 parameters. ,45
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityCollector,collectRelationship,Long Statement,The length of the statement "record(sourceId`startPropertyType`relationshipType`relationshipDirection`new TargetTriple(relationshipId`targetId`target));" is 123.,45
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityCollector,collectRelationship,Long Parameter List,The method has 6 parameters. ,62
neo4j_neo4j-ogm,org.neo4j.ogm.context,EntityCollector,record,Long Parameter List,The method has 5 parameters. ,78
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMap,IdentityMap,Long Identifier,The length of the field snapshotsOfRelationshipEntities is 31.,55
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMap,remember,Long Identifier,The length of the field snapshotsOfRelationshipEntities is 31.,63
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMap,getSnapshotOf,Long Identifier,The length of the field snapshotsOfRelationshipEntities is 31.,112
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMap,clear,Long Identifier,The length of the field snapshotsOfRelationshipEntities is 31.,134
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMap,hash,Magic Number,The method contains a magic number: 31L,142
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMap,hash,Magic Number,The method contains a magic number: 31L,142
neo4j_neo4j-ogm,org.neo4j.ogm.context,IdentityMap,hashArray,Magic Number,The method contains a magic number: 31L,164
neo4j_neo4j-ogm,org.neo4j.ogm.context,DirectedRelationshipForType,hashCode,Magic Number,The method contains a magic number: 31,54
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,setUpTestDatabase,Long Statement,The length of the statement "mappingMetadata=new MetaData("org.neo4j.ogm.domain.education"`"org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.social"`"org.neo4j.domain.policy"`"org.neo4j.ogm.domain.music"`"org.neo4j.ogm.domain.restaurant"`"org.neo4j.ogm.domain.travel");" is 241.,72
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createSingleObjectWithLabelsAndProperties,Long Statement,The length of the statement "assertThat(compiler.createNodesStatements()).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`DomainObject`:`Student`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 223.,101
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createSingleStatementForLabelsInDifferentOrder,Long Statement,The length of the statement "assertThat(compiler.createNodesStatements()).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Franchise`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type"`"UNWIND $rows as row CREATE (n:`Delicious`:`Foreign`:`Restaurant`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 348.,113
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,updateSingleObjectPropertyAndLabel,Long Statement,The length of the statement "assertThat(compiler.updateNodesStatements()).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (n) WHERE ID(n)=row.nodeId SET n:`DomainObject`:`Student` SET n += row.props RETURN row.nodeId as ref` ID(n) as id` $type as type");" is 253.,137
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createSimpleRelationshipsBetweenObjects,Long Statement,The length of the statement "assertThat(compiler.createNodesStatements()).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`DomainObject`:`School`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type"`"UNWIND $rows as row CREATE (n:`Teacher`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 335.,173
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createSimpleRelationshipsBetweenObjects,Long Statement,The length of the statement "assertThat(compiler.createRelationshipsStatements()).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`TEACHERS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type"`"UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`SCHOOL`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 597.,173
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,addObjectToExistingCollection,Long Statement,The length of the statement "assertThat(createNodesStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Teacher`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 197.,241
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,addObjectToExistingCollection,Long Statement,The length of the statement "assertThat(createRelsStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`SCHOOL`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type"`"UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`TEACHERS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 577.,241
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,addObjectToExistingCollection,Long Statement,The length of the statement "assertThat(createNodesStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Teacher`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 197.,241
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,addObjectToExistingCollection,Long Statement,The length of the statement "assertThat(createRelsStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`SCHOOL`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type"`"UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`TEACHERS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 577.,241
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,addObjectToExistingCollection,Long Statement,The length of the statement "assertThat(createNodesStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Teacher`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 197.,241
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,addObjectToExistingCollection,Long Statement,The length of the statement "assertThat(createRelsStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`SCHOOL`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type"`"UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`TEACHERS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 577.,241
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,addObjectToExistingCollection,Magic Number,The method contains a magic number: 2,241
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Complex Method,Cyclomatic complexity of the method is 8,333
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Long Statement,The length of the statement "assertThat(createNodesStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Teacher`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type"`"UNWIND $rows as row CREATE (n:`Course`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type"`"UNWIND $rows as row CREATE (n:`DomainObject`:`Student`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 437.,333
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Long Statement,The length of the statement "assertThat(createRelsStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`COURSES`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type"`"UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`STUDENTS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 578.,333
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Magic Number,The method contains a magic number: 3,333
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Magic Number,The method contains a magic number: 2,333
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Magic Number,The method contains a magic number: 4,333
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Magic Number,The method contains a magic number: 2,333
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsRemovedFromCollection,Long Statement,The length of the statement "assertThat(deleteRelsStatement).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`STUDENTS`]->(endNode) DELETE rel");" is 286.,392
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsRemovedFromCollection,Magic Number,The method contains a magic number: 2L,392
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsRemovedFromCollection,Magic Number,The method contains a magic number: 3L,392
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsRemovedFromCollection,Magic Number,The method contains a magic number: 2,392
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(teacherId`"COURSES"`businessStudiesCourseId`null`Teacher.class`Course.class));" is 132.,443
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(teacherId`"COURSES"`designTechnologyCourseId`null`Teacher.class`Course.class));" is 133.,443
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(businessStudiesCourseId`"STUDENTS"`shivaniId`null`Teacher.class`Student.class));" is 134.,443
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`STUDENTS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 321.,443
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Long Statement,The length of the statement "assertThat(deleteRelsStatements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`STUDENTS`]->(endNode) DELETE rel");" is 287.,443
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Magic Number,The method contains a magic number: 2L,443
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Magic Number,The method contains a magic number: 3L,443
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsDisconnectedFromNonOwningSide,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`TEACHERS`]->(endNode) DELETE rel");" is 277.,520
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsDisconnectedFromNonOwningSide,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`SCHOOL`]->(endNode) DELETE rel");" is 275.,520
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCorrectlyRemoveRelationshipWhenItemIsDisconnectedFromNonOwningSide,Magic Number,The method contains a magic number: 2L,520
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCreateRelationshipWithPropertiesFromRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Forum`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type"`"UNWIND $rows as row CREATE (n:`Topic`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 295.,605
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCreateRelationshipWithPropertiesFromRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId CREATE (startNode)-[rel:`HAS_TOPIC`]->(endNode) SET rel += row.props RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 344.,605
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCreateRelationshipWithPropertiesFromRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Forum`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type"`"UNWIND $rows as row CREATE (n:`Topic`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 295.,605
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCreateRelationshipWithPropertiesFromRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId CREATE (startNode)-[rel:`HAS_TOPIC`]->(endNode) SET rel += row.props RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 344.,605
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCreateRelationshipWithPropertiesFromRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Topic`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 184.,605
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldCreateRelationshipWithPropertiesFromRelationshipEntity,Magic Number,The method contains a magic number: 1647209L,605
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldMergeNewRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row " + "MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode " + "MATCH (endNode) WHERE ID(endNode) = row.endNodeId "+ "MERGE (startNode)-[rel:`VISITED` {`identifier`: row.props.`identifier`}]->(endNode) "+ "SET rel += row.props "+ "RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 402.,682
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldUpdatingExistingRelationshipEntity,Long Statement,The length of the statement "MappedRelationship mappedRelationship=new MappedRelationship(forumId`"HAS_TOPIC"`topicId`relationshipId`Forum.class`ForumTopicLink.class);" is 138.,702
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldUpdatingExistingRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows AS row MATCH ()-[r]->() WHERE ID(r) = row.relId SET r += row.props RETURN ID(r) as ref` ID(r) as id` $type as type");" is 203.,702
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldUpdatingExistingRelationshipEntity,Magic Number,The method contains a magic number: 2L,702
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldUpdatingExistingRelationshipEntity,Magic Number,The method contains a magic number: 327790L,702
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldDeleteExistingRelationshipEntity,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(forumId`"HAS_TOPIC"`topicId`null`Forum.class`ForumTopicLink.class));" is 122.,746
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldDeleteExistingRelationshipEntity,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`HAS_TOPIC`]->(endNode) DELETE rel");" is 278.,746
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,shouldDeleteExistingRelationshipEntity,Magic Number,The method contains a magic number: 2L,746
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createSimpleRelationshipWithIllegalCharactersBetweenObjects,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`l'artiste`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type"`"UNWIND $rows as row CREATE (n:`l'album`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 301.,803
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createSimpleRelationshipWithIllegalCharactersBetweenObjects,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`HAS-ALBUM`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 322.,803
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createOutgoingRelationWhenUnmarkedRelationIsSpecified,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Individual`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 189.,833
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createOutgoingRelationWhenUnmarkedRelationIsSpecified,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`FRIENDS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 320.,833
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createOutgoingRelationWhenUnmarkedRelationIsSpecified,Magic Number,The method contains a magic number: 2,833
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createIncomingRelationWhenSpecified,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row CREATE (n:`Mortal`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 185.,867
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createIncomingRelationWhenSpecified,Long Statement,The length of the statement "assertThat(statements).extracting(Statement::getStatement).containsOnly("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`KNOWN_BY`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 321.,867
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CompilerTest,createIncomingRelationWhenSpecified,Magic Number,The method contains a magic number: 2,867
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CyclicStructureTest,testCyclicStructure,Long Statement,The length of the statement "MultiStatementCypherCompiler compiler=(MultiStatementCypherCompiler)mapAndCompile((Neo4jSession)session`nodes.get(0)`-1);" is 121.,60
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CyclicStructureTest,testCyclicStructure,Long Statement,The length of the statement "assertThat(newRelationshipBuilders).size().isEqualTo(numberOfNodes * numberOfNodes + (numberOfNodes * numberOfRefFields * 2));" is 126.,60
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CyclicStructureTest,testCyclicStructure,Long Statement,The length of the statement "Result result=session.query("" + " MATCH (c1:CyclicNodeType) - [s:SUBORDINATE] - (c2:CyclicNodeType)`" + " (c1) - [f:HAS_FIELD] -> (r:RefField)"+ " RETURN count(distinct c1) as numberOfNodes` count(distinct s) as countRelCyc` "+ " count(distinct r) as numberOfRefFields` count(distinct f) as countRelHasField"`Collections.emptyMap());" is 334.,60
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CyclicStructureTest,testCyclicStructure,Magic Number,The method contains a magic number: 10,60
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CyclicStructureTest,testCyclicStructure,Magic Number,The method contains a magic number: 100,60
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CyclicStructureTest,testCyclicStructure,Magic Number,The method contains a magic number: 2,60
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContextTest,data,Magic Number,The method contains a magic number: 10,65
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContextTest,shouldDeregisterRelationshipEntities,Long Statement,The length of the statement "Predicate<Variable> isVariableAWithDataItemM2=v -> v.getVariable().equals("A") && v.getDataItem().getNodeId().equals("m2");" is 123.,88
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContextTest,shouldDeregisterRelationshipEntities,Magic Number,The method contains a magic number: 3,88
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContextTest,shouldDeregisterRelationshipEntities,Magic Number,The method contains a magic number: 2,88
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContextTest,shouldDeregisterRelationshipEntities,Magic Number,The method contains a magic number: 2,88
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContext,deregisterIncomingRelationships,Long Statement,The length of the statement "Function<Mappable`Class> endNodeTypeExtractor=relationshipEntity ? Mappable::getEndNodeType : Mappable::getStartNodeType;" is 121.,146
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContext,deregisterRelationshipsImpl,Complex Conditional,The conditional expression candidateNodeId == nodeId && candidateRelationshipType.equals(relationshipType) && candidateNodeType.equals(endNodeType) is complex.,173
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContext,deregisterRelationshipsImpl,Long Parameter List,The method has 5 parameters. ,173
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,CypherContext,deregisterRelationshipsImpl,Long Statement,The length of the statement "if (candidateNodeId == nodeId && candidateRelationshipType.equals(relationshipType) && candidateNodeType.equals(endNodeType)) {" is 127.,173
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,MultiStatementCypherCompiler,Long Identifier,The length of the field deletedRelationshipEntityBuilders is 33.,61
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,existingRelationship,Long Statement,The length of the statement "RelationshipBuilder relationshipBuilder=existingRelationshipBuilders.computeIfAbsent(key`k -> new DefaultRelationshipBuilder(type`existingRelationshipId));" is 155.,95
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,unrelate,Long Identifier,The length of the field deletedRelationshipEntityBuilders is 33.,103
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,createRelationshipsStatements,Long Statement,The length of the statement "Map<String`Set<Edge>> relsByProps=relsByTypeAndProps.computeIfAbsent(relationshipBuilder.type()`(key) -> new HashMap<>());" is 122.,145
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,updateRelationshipStatements,Long Statement,The length of the statement "Map<Boolean`Set<Edge>> collect=existingRelationshipBuilders.values().stream().collect(partitioningBy(RelationshipBuilder::isDirty`Collectors.mapping(RelationshipBuilder::edge`Collectors.toSet())));" is 197.,196
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,updateRelationshipStatements,Long Statement,The length of the statement "ExistingRelationshipStatementBuilder builder=new ExistingRelationshipStatementBuilder(collect.get(true)`statementFactory`true);" is 127.,196
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,updateRelationshipStatements,Long Statement,The length of the statement "ExistingRelationshipStatementBuilder builder=new ExistingRelationshipStatementBuilder(collect.get(false)`statementFactory`false);" is 129.,196
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,deleteRelationshipStatements,Long Statement,The length of the statement "DeletedRelationshipStatementBuilder deletedRelationshipBuilder=new DeletedRelationshipStatementBuilder(edges`statementFactory);" is 127.,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,deleteRelationshipEntityStatements,Long Identifier,The length of the field deletedRelationshipEntityBuilders is 33.,236
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,deleteRelationshipEntityStatements,Long Statement,The length of the statement "DeletedRelationshipEntityStatementBuilder deletedRelationshipBuilder=new DeletedRelationshipEntityStatementBuilder(edges`statementFactory);" is 139.,236
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,hasStatementsDependentOnNewNodes,Complex Conditional,The conditional expression (edge.getStartNode() != null && edge.getStartNode() < 0) || (edge.getEndNode() != null && edge.getEndNode() < 0) is complex.,270
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,unmap,Complex Conditional,The conditional expression relationshipBuilder.type().equals(newRelBuilder.type()) && relationshipBuilder.edge().getStartNode().equals(newRelBuilder.edge().getStartNode()) && relationshipBuilder.edge().getEndNode().equals(newRelBuilder.edge().getEndNode()) is complex.,288
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,unmap,Long Statement,The length of the statement "if (relationshipBuilder.type().equals(newRelBuilder.type()) && relationshipBuilder.edge().getStartNode().equals(newRelBuilder.edge().getStartNode()) && relationshipBuilder.edge().getEndNode().equals(newRelBuilder.edge().getEndNode())) {" is 236.,288
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler,MultiStatementCypherCompiler,groupNodesByLabel,Long Statement,The length of the statement "return nodeBuilders.stream().map(NodeBuilder::node).collect(groupingBy(Node::labelSignature`Collectors.mapping(Function.identity()`Collectors.toSet())));" is 153.,318
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher,Magic Number,The method contains a magic number: 23,49
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher,Magic Number,The method contains a magic number: 23,49
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher_function,Long Statement,The length of the statement "assertThat(filter.toCypher("n"`true)).isEqualTo("WHERE NOT(point.distance(point({latitude: n.latitude` longitude: n.longitude})`point({latitude: $lat` longitude: $lon})) < $distance ) ");" is 187.,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher_function,Magic Number,The method contains a magic number: 37.4,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher_function,Magic Number,The method contains a magic number: 112.1,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher_function,Magic Number,The method contains a magic number: 1000.0,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher_function,Magic Number,The method contains a magic number: 37.4,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher_function,Magic Number,The method contains a magic number: 112.1,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,toCypher_function,Magic Number,The method contains a magic number: 1000.0,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,inCollectionFilterTest,Long Statement,The length of the statement "assertThat(filter.toCypher("n"`true)).isEqualTo("WHERE ANY(collectionFields IN $`property_0` WHERE collectionFields in n.`property`) ");" is 136.,73
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,convertersShouldBeAppliedToSingleValues,Long Statement,The length of the statement "assertThat(parameters).hasSize(1).hasValueSatisfying(new Condition<>(o -> v1.toString().equals(o)`"Value should have been converted"));" is 135.,186
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,FilterTest,convertersShouldBeAppliedToCollectionValues,Long Statement,The length of the statement "assertThat(parameters).hasSize(1).hasValueSatisfying(new Condition<>(o -> o instanceof List && ((List)o).stream().allMatch(e -> e.equals(v1.toString()) || e.equals(v2.toString()))`"Values should have been converted"));" is 218.,197
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Long Statement,The length of the statement "assertThat(createRelStatements.get(0)).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 298.,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Long Statement,The length of the statement "assertThat(createRelStatements.get(0)).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 298.,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Magic Number,The method contains a magic number: 2,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderDocumentPair,Magic Number,The method contains a magic number: 2,71
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Complex Method,Cyclomatic complexity of the method is 10,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createRelStatements.get(0)).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 298.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createRelStatements.get(0)).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 298.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Long Statement,The length of the statement "assertThat(createRelStatements.get(0)).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 298.,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldSaveNewFolderWithTwoDocuments,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Long Statement,The length of the statement "assertThat(createRelStatements.get(0)).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 298.,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Long Statement,The length of the statement "assertThat(createRelStatements.get(0)).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type");" is 298.,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Magic Number,The method contains a magic number: 2,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Magic Number,The method contains a magic number: 2,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldNotBeAbleToCreateDuplicateRelationship,Magic Number,The method contains a magic number: 2,221
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Complex Method,Cyclomatic complexity of the method is 8,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createRelStatements.contains("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type")).isTrue();" is 299.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createRelStatements.contains("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`ARCHIVED`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type")).isTrue();" is 299.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Folder`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 164.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createNodeStatements.contains("UNWIND $rows as row CREATE (n:`Document`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type")).isTrue();" is 166.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createRelStatements.contains("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`CONTAINS`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type")).isTrue();" is 299.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Long Statement,The length of the statement "assertThat(createRelStatements.contains("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MERGE (startNode)-[rel:`ARCHIVED`]->(endNode) RETURN row.relRef as ref` ID(rel) as id` $type as type")).isTrue();" is 299.,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Magic Number,The method contains a magic number: 2,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Magic Number,The method contains a magic number: 2,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Magic Number,The method contains a magic number: 2,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToCreateDifferentRelationshipsToTheSameDocument,Magic Number,The method contains a magic number: 2,291
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveTheOnlyRegisteredRelationship,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"CONTAINS"`document.getId()`null`Folder.class`Document.class));" is 132.,379
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveTheOnlyRegisteredRelationship,Long Statement,The length of the statement "assertThat(statements.get(0).getStatement()).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`CONTAINS`]->(endNode) DELETE rel");" is 260.,379
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveTheOnlyRegisteredRelationship,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"CONTAINS"`document.getId()`null`Folder.class`Document.class));" is 132.,379
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveTheOnlyRegisteredRelationship,Long Statement,The length of the statement "assertThat(statements.get(0).getStatement()).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`CONTAINS`]->(endNode) DELETE rel");" is 260.,379
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"CONTAINS"`doc1.getId()`null`Folder.class`Document.class));" is 128.,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"CONTAINS"`doc2.getId()`null`Folder.class`Document.class));" is 128.,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Long Statement,The length of the statement "assertThat(statements.get(0).getStatement()).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`CONTAINS`]->(endNode) DELETE rel");" is 260.,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"CONTAINS"`doc2.getId()`null`Folder.class`Document.class));" is 128.,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Long Statement,The length of the statement "assertThat(statements.get(0).getStatement()).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`CONTAINS`]->(endNode) DELETE rel");" is 260.,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"CONTAINS"`doc2.getId()`null`Folder.class`Document.class));" is 128.,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Long Statement,The length of the statement "assertThat(statements.get(0).getStatement()).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`CONTAINS`]->(endNode) DELETE rel");" is 260.,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveAnyRegisteredRelationship,Magic Number,The method contains a magic number: 2L,421
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveContainedRelationshipOnly,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"CONTAINS"`doc1.getId()`null`Folder.class`Document.class));" is 128.,486
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveContainedRelationshipOnly,Long Statement,The length of the statement "mappingContext.addRelationship(new MappedRelationship(folder.getId()`"ARCHIVED"`doc1.getId()`null`Folder.class`Document.class));" is 128.,486
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,DirectRelationshipsTest,shouldBeAbleToRemoveContainedRelationshipOnly,Long Statement,The length of the statement "assertThat(statements.get(0).getStatement()).isEqualTo("UNWIND $rows as row MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode MATCH (endNode) WHERE ID(endNode) = row.endNodeId MATCH (startNode)-[rel:`CONTAINS`]->(endNode) DELETE rel");" is 260.,486
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,Filter,ignoreCase,Long Statement,The length of the statement "throw new IllegalStateException(String.format("ignoreCase is only supported for %s or %s comparison"`EQUALS.name()`CONTAINING.name()));" is 135.,181
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,Filter,ignoreCase,Long Statement,The length of the statement "this.function=new PropertyComparison.CaseInsensitiveEqualsComparison(propertyComparision.getOperator()`propertyComparision.getValue());" is 135.,181
neo4j_neo4j-ogm,org.neo4j.ogm.cypher,Filter,parameters,Long Statement,The length of the statement "List<Object> convertedValues=StreamSupport.stream(CollectionUtils.iterableOf(value).spliterator()`false).map((Function<Object`Object>)applicablePropertyConverter::toGraphProperty).collect(Collectors.toList());" is 209.,386
neo4j_neo4j-ogm,org.neo4j.ogm.utils,RelationshipUtils,inferRelationshipType,Magic Number,The method contains a magic number: 3,33
neo4j_neo4j-ogm,org.neo4j.ogm.utils,EntityUtils,setIdentity,Long Statement,The length of the statement "classInfo.fieldsInfo().fields().stream().filter(f -> f.getAnnotations().has(Id.class) && f.getAnnotations().has(GeneratedValue.class)).findFirst().ifPresent(generatedField -> generatedField.write(entity`null));" is 210.,67
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,SingleIndexAutoIndexManagerTest,lookupIndexesMustNotBeDropped,Magic Number,The method contains a magic number: 2L,63
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,SingleIndexAutoIndexManagerTest,lookupIndexesMustNotBeDropped,Magic Number,The method contains a magic number: 2L,63
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,SingleIndexAutoIndexManagerTest,getLookupIndexesCount,Long Statement,The length of the statement "return session.queryForObject(Long.class`"call db.indexes() yield type where type = 'LOOKUP' RETURN count(*)"`Collections.emptyMap());" is 134.,80
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,RelPropertyExistenceConstraintAutoIndexManagerTest,RelPropertyExistenceConstraintAutoIndexManagerTest,Long Statement,The length of the statement "super(new String[]{"CONSTRAINT org_neo4j_ogm_domain_autoindex_relpropertyexistenceconstraintentity_description_rel_prop_existence FOR ()-[`rel`:`REL`]-() REQUIRE `rel`.`description` IS NOT NULL"}`Entity.class`RelPropertyExistenceConstraintEntity.class);" is 253.,37
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,NodePropertyExistenceConstraintAutoIndexManagerTest,NodePropertyExistenceConstraintAutoIndexManagerTest,Long Statement,The length of the statement "super(new String[]{"CONSTRAINT org_neo4j_ogm_domain_autoindex_nodepropertyexistenceconstraintentity_login_node_prop_existence FOR (`entity`:`Entity`) REQUIRE `entity`.`login` IS NOT NULL"}`NodePropertyExistenceConstraintEntity.class);" is 234.,36
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexOnDecomposedFieldTest,setUpClass,Long Statement,The length of the statement "assumeTrue("This test uses composite index and node key constraint and can only be run on enterprise edition"`useEnterpriseEdition());" is 134.,40
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexOnDecomposedFieldTest,setUpClass,Long Statement,The length of the statement "assumeTrue("This test uses db.indexes() which does not contain all required information prior to 3.3"`isVersionOrGreater("3.3"));" is 129.,40
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexOnDecomposedFieldTest,autoIndexManagerShouldWorkWithDecomposedField,Magic Number,The method contains a magic number: 2L,50
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexOnDecomposedFieldTest,shouldStillGenerateIndexOnNonCompositeFields,Magic Number,The method contains a magic number: 4L,60
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexOnDecomposedFieldTest,countIndexes,Long Statement,The length of the statement "query="CALL db.indexes() YIELD " + labelsOrTypes + " AS labelsOrTypes` properties \n"+ "WHERE labelsOrTypes = [$label]\n"+ "UNWIND properties AS p\n"+ "WITH p\n"+ "RETURN COUNT(p) as cnt";" is 188.,96
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexOnDecomposedFieldTest,countIndexes,Long Statement,The length of the statement "query="CALL db.indexes() YIELD label` properties \n" + "WHERE label = $label\n" + "UNWIND properties AS p\n"+ "WITH p\n"+ "RETURN COUNT(p) as cnt";" is 147.,96
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,NodeKeyConstraintIndexAutoIndexManagerTest,setUpClass,Long Statement,The length of the statement "assumeTrue("This test uses composite index and node key constraint and can only be run on enterprise edition"`useEnterpriseEdition());" is 134.,45
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,BaseAutoIndexManagerTestClass,Long Identifier,The length of the field expectedNumberOfAdditionalIndexes is 33.,94
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,BaseAutoIndexManagerTestClass,Magic Number,The method contains a magic number: 2,94
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,setUp,Long Statement,The length of the statement "String[] existingConstraints=StreamSupport.stream(session.query("SHOW CONSTRAINTS YIELD name"`emptyMap()).queryResults().spliterator()`false).map(r -> "constraint " + r.get("name")).map(String.class::cast).toArray(String[]::new);" is 229.,115
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,setUp,Long Statement,The length of the statement "session.query("CALL db.index.fulltext.createRelationshipIndex('unknown_index_rel_ft'` ['SOME_TYPE']` ['someProperty'])"`emptyMap());" is 132.,115
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,setUp,Long Statement,The length of the statement "session.query("CALL db.index.fulltext.createNodeIndex('unknown_index_node_rel'`['SomeLabel']`['somePropertyA'` 'somePropertyB'])"`emptyMap());" is 142.,115
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,silentTearDown,Long Statement,The length of the statement "List<String> silencedFailures=Arrays.asList("Neo.DatabaseError.Schema.ConstraintDropFailed"`"Neo.DatabaseError.Schema.IndexDropFailed");" is 136.,167
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexNoneNoIndexIsCreated,Long Identifier,The length of the field expectedNumberOfAdditionalIndexes is 33.,186
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexNoneNoIndexIsDropped,Long Identifier,The length of the field expectedNumberOfAdditionalIndexes is 33.,194
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testIndexValidationFailsOnMissingIndex,Long Statement,The length of the statement "final AbstractThrowableAssert<?`? extends Throwable> assertThatException=assertThatThrownBy(() -> runAutoIndex("validate")).isInstanceOf(MissingIndexException.class).hasMessageContaining("Validation of Constraints and Indexes failed. Could not find the following :");" is 267.,212
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexAssertDropsAllIndexesAndCreatesExisting,Long Identifier,The length of the field expectedNumberOfAdditionalIndexes is 33.,224
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexUpdateKeepIndexesAndCreateNew,Long Identifier,The length of the field expectedNumberOfAdditionalIndexes is 33.,237
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexUpdateKeepIndexesAndCreateNew,Long Statement,The length of the statement "int expectedNumberOfIndexes=this.indexes.length + this.constraints.length + this.expectedIndexDefinitions.length+ this.expectedNumberOfAdditionalIndexes;" is 153.,237
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexUpdateIndexExistsDoNothing,Long Identifier,The length of the field expectedNumberOfAdditionalIndexes is 33.,252
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexDumpCreatesIndex,Long Statement,The length of the statement "Configuration configuration=getBaseConfigurationBuilder().autoIndex("dump").generatedIndexesOutputDir(file.getParent()).generatedIndexesOutputFilename(file.getName()).build();" is 175.,266
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,testAutoIndexDumpCreatesIndex,Long Statement,The length of the statement "assertThat(contentOf(file)).contains(Arrays.stream(expectedIndexDefinitions).map(d -> "CREATE " + d).toArray(String[]::new));" is 125.,266
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,executeForIndexes,Long Statement,The length of the statement "IndexInfo indexInfo=new IndexInfo((String)queryResult.get("uniqueness")`(labelsOrTypes instanceof String[] ? (String[])labelsOrTypes : new String[0]));" is 151.,290
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,BaseAutoIndexManagerTestClass,executeForIndexes,Long Statement,The length of the statement "String[] labels=queryResult.get("tokenNames") != null ? (String[])queryResult.get("tokenNames") : new String[]{(String)queryResult.get("label")};" is 145.,290
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexAutoIndexManagerTest,setUpClass,Long Statement,The length of the statement "assumeTrue("This test uses composite index and node key constraint and can only be run on enterprise edition"`useEnterpriseEdition());" is 134.,51
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexAutoIndexManagerTest,setUpClass,Long Statement,The length of the statement "assumeTrue("This test uses db.indexes() which does not contain all required information prior to 3.3"`isVersionOrGreater("3.3"));" is 129.,51
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexAutoIndexManagerTest,testMultipleCompositeIndexAnnotations,Long Statement,The length of the statement "executeForIndexes(indexes -> assertThat(indexes.stream().filter(byLabel("EntityWithMultipleCompositeIndexes"))).asList().hasSize(2));" is 133.,80
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexAutoIndexManagerTest,testMultipleCompositeIndexAnnotations,Magic Number,The method contains a magic number: 2,80
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,CompositeIndexAutoIndexManagerTest,testMultipleCompositeIndexAnnotations,Magic Number,The method contains a magic number: 2,80
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,run,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5a8f593a,92
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,validateIndexes,Long Statement,The length of the statement "throw new MissingIndexException("Validation of Constraints and Indexes failed. Could not find the following : " + missingIndexes);" is 130.,139
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Complex Method,Cyclomatic complexity of the method is 10,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Long Identifier,The length of the field COMPOSITE_KEY_MAP_COMPOSITE_PATTERN is 35.,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Long Statement,The length of the statement "AutoIndex autoIndex=new AutoIndex(classInfo.getUnderlyingClass()`type`owningType`properties.toArray(new String[0])`null);" is 121.,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Long Statement,The length of the statement "LOGGER.warn("\n" + "The field {} of {} should be indexed with an index of type {}.\n" + "This is not supported on a composite field (a field that is decomposed into a set of properties)` no index will be created.\n"+ "Use a @CompositeIndex on the class instead and prefix the properties with `{}.`."`fieldInfo.getName()`classInfo.getUnderlyingClass()`type`fieldInfo.getName());" is 377.,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Long Statement,The length of the statement "final AutoIndex autoIndex=new AutoIndex(classInfo.getUnderlyingClass()`type`owningType`new String[]{fieldInfo.property()}`null);" is 128.,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Long Statement,The length of the statement "IndexType type=classInfo.isRelationshipEntity() ? IndexType.REL_PROP_EXISTENCE_CONSTRAINT : IndexType.NODE_PROP_EXISTENCE_CONSTRAINT;" is 133.,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Long Statement,The length of the statement "AutoIndex autoIndex=new AutoIndex(classInfo.getUnderlyingClass()`type`owningType`new String[]{requiredField.property()}`null);" is 126.,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndexManager,initialiseAutoIndex,Magic Number,The method contains a magic number: 2,258
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,AutoIndex,Long Parameter List,The method has 5 parameters. ,70
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,AutoIndex,Long Statement,The length of the statement "this.name=targetEntity.getCanonicalName().toLowerCase(Locale.ROOT).replace("."`"_") + "_" + String.join("_"`properties)+ (type.isConstraint() ? "_" + type.name().toLowerCase(Locale.ROOT).replace("_constraint"`"") : "");" is 219.,70
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,createDescription,Complex Method,Cyclomatic complexity of the method is 14,85
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,createDescription,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@ca8eeb9,85
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,createDescription,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6b9fb00b,85
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,validatePropertiesLength,Long Statement,The length of the statement "throw new IllegalArgumentException(violatedIndexType + " must have exactly one property` got " + Arrays.toString(properties));" is 126.,160
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,buildNodeKeyConstraint,Long Statement,The length of the statement "sb.append("CONSTRAINT ").append(name).append(" FOR (`").append(variable).append("`:`").append(owningType).append("`) REQUIRE (");" is 129.,187
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,getDropStatement,Long Statement,The length of the statement "var statement="DROP " + (this.name != null && this.description.contains(" FOR ") ? this.description.substring(0`this.description.indexOf(this.name) + this.name.length()) : this.description);" is 190.,248
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,isNodeOrRelationshipLookup,Long Statement,The length of the statement "return indexType != null && entityType != null && indexType.toLowerCase(Locale.ENGLISH).trim().equals("lookup") && ENTITIES_IN_LOOKUP_INDIZES.contains(entityType.trim().toLowerCase(Locale.ENGLISH));" is 198.,291
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,parseIndex,Complex Conditional,The conditional expression indexRow.containsKey("properties") && indexRow.containsKey("labelsOrTypes") && indexRow.get("labelsOrTypes") instanceof String[] is complex.,301
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,parseIndex,Long Statement,The length of the statement "logger.info("The Node and Relationship lookups available in Neo4j 4.3+ should not be modified and Neo4j-OGM wont touch it.");" is 125.,301
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,parseIndex,Long Statement,The length of the statement "if (indexRow.containsKey("properties") && indexRow.containsKey("labelsOrTypes") && indexRow.get("labelsOrTypes") instanceof String[]) {" is 135.,301
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,parseIndex,Long Statement,The length of the statement "return Optional.of(new AutoIndex(null`indexProperties.length > 1 ? COMPOSITE_INDEX : SINGLE_INDEX`indexLabel`indexProperties`name));" is 132.,301
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,equals,Long Statement,The length of the statement "return Arrays.equals(properties`autoIndex.properties) && owningType.equals(autoIndex.owningType) && type == autoIndex.type;" is 123.,338
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,hashCode,Magic Number,The method contains a magic number: 31,352
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,hasOpposite,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@530797d4,366
neo4j_neo4j-ogm,org.neo4j.ogm.autoindex,AutoIndex,createOppositeIndex,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@73614207,379
neo4j_neo4j-ogm,org.neo4j.ogm.config,DriverServiceTest,shouldDisableCertificateValidationIfIgnoreSSLHandshake,Empty catch clause,The method has an empty catch block.,96
neo4j_neo4j-ogm,org.neo4j.ogm.config,DriverServiceTest,shouldDisableCertificateValidationIfIgnoreSSLHandshake,Long Statement,The length of the statement "request.setEntity(new StringEntity("{\n" + " \"statements\" : [ {\n" + " \"statement\" : \"MATCH (n) RETURN id(n)\"\n"+ " } ]\n"+ "}"`"UTF-8"));" is 144.,96
neo4j_neo4j-ogm,org.neo4j.ogm.config,DriverServiceTest,shouldDisableCertificateValidationIfIgnoreSSLHandshake,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder().uri("https://neo4j:password@localhost:7473").trustStrategy("ACCEPT_UNSIGNED").build();" is 142.,96
neo4j_neo4j-ogm,org.neo4j.ogm.config,DriverServiceTest,shouldDisableCertificateValidationIfIgnoreSSLHandshake,Magic Number,The method contains a magic number: 2,96
neo4j_neo4j-ogm,org.neo4j.ogm.config,DriverServiceTest,shouldDisableCertificateValidationIfIgnoreSSLHandshake,Magic Number,The method contains a magic number: 2,96
neo4j_neo4j-ogm,org.neo4j.ogm.config,HttpDriverLazyInitializationTest,setUp,Long Statement,The length of the statement "configBuilder=new Configuration.Builder(new ClasspathConfigurationSource("ogm-http.properties")).uri("http://neo4j:neo4j12@localhost:" + TestUtils.getAvailablePort());" is 167.,29
neo4j_neo4j-ogm,org.neo4j.ogm.config,DriverLazyInitializationTest,shouldInitialiseDriverAfterServerComesOnline,Magic Number,The method contains a magic number: 5,60
neo4j_neo4j-ogm,org.neo4j.ogm.config,DriverLazyInitializationTest,shouldInitialiseDriverAfterServerComesOnline,Magic Number,The method contains a magic number: 5,60
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldConfigureFromSimplePropertiesFile,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder(new ClasspathConfigurationSource("ogm-simple.properties")).build();" is 121.,38
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldConfigureFromUsernamePasswordProperties,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder(new ClasspathConfigurationSource("ogm-password.properties")).build();" is 123.,90
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldConfigureFromSpringBootPropertiesFile,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder(new ClasspathConfigurationSource("application.properties")).build();" is 122.,100
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldConfigureFromNameSpacePropertiesFile,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder(new ClasspathConfigurationSource("ogm-namespace.properties")).build();" is 124.,112
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldConfigureFromNameSpacePropertiesFile,Magic Number,The method contains a magic number: 100,112
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldLoadHttpDriverConfigFromPropertiesFile,Long Statement,The length of the statement "Configuration driverConfig=new Configuration.Builder(new ClasspathConfigurationSource("http.driver.properties")).build();" is 121.,130
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldLoadEmbeddedDriverConfigFromPropertiesFile,Long Statement,The length of the statement "Configuration driverConfig=new Configuration.Builder(new ClasspathConfigurationSource("embedded.driver.properties")).build();" is 125.,137
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldLoadBoltDriverConfigFromPropertiesFile,Long Statement,The length of the statement "Configuration driverConfig=new Configuration.Builder(new ClasspathConfigurationSource("bolt.driver.properties")).build();" is 121.,144
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationFromPropertiesFileTest,shouldLoadBoltDriverConfigFromPropertiesFile,Magic Number,The method contains a magic number: 150,144
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationTest,shouldConfigureProgrammatically,Magic Number,The method contains a magic number: 200,35
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationTest,shouldConfigureProgrammatically,Magic Number,The method contains a magic number: 1000,35
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationTest,shouldConfigureProgrammatically,Magic Number,The method contains a magic number: 200,35
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationTest,shouldConfigureProgrammatically,Magic Number,The method contains a magic number: 1000,35
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationTest,shouldFailEarlyOnInvalidSchemes,Long Statement,The length of the statement "assertThatIllegalArgumentException().isThrownBy(() -> new Configuration.Builder().uri(uri).build()).withMessage("A URI Scheme must be one of: bolt` bolt+routing` bolt+s` bolt+ssc` neo4j` neo4j+s` neo4j+ssc` file` http` https.");" is 228.,191
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,getDefaultClassLoader,Empty catch clause,The method has an empty catch block.,71
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,getDefaultClassLoader,Empty catch clause,The method has an empty catch block.,71
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,Configuration,Long Identifier,The length of the field connectionLivenessCheckTimeout is 30.,132
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,Configuration,Long Identifier,The length of the field generatedIndexesOutputFilename is 30.,132
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,Configuration,Long Statement,The length of the statement "this.generatedIndexesOutputFilename=builder.generatedIndexesOutputFilename != null ? builder.generatedIndexesOutputFilename : "generated_indexes.cql";" is 150.,132
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,getDumpFilename,Long Identifier,The length of the field generatedIndexesOutputFilename is 30.,209
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,getConnectionLivenessCheckTimeout,Long Identifier,The length of the field connectionLivenessCheckTimeout is 30.,241
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,equals,Long Identifier,The length of the field generatedIndexesOutputFilename is 30.,314
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,equals,Long Identifier,The length of the field connectionLivenessCheckTimeout is 30.,314
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,equals,Long Statement,The length of the statement "return connectionPoolSize == that.connectionPoolSize && Objects.equals(uri`that.uri) && Arrays.equals(uris`that.uris) && Objects.equals(encryptionLevel`that.encryptionLevel) && Objects.equals(trustStrategy`that.trustStrategy) && Objects.equals(trustCertFile`that.trustCertFile) && autoIndex == that.autoIndex && Objects.equals(generatedIndexesOutputDir`that.generatedIndexesOutputDir) && Objects.equals(generatedIndexesOutputFilename`that.generatedIndexesOutputFilename) && Objects.equals(neo4jConfLocation`that.neo4jConfLocation) && Objects.equals(driverName`that.driverName) && Objects.equals(credentials`that.credentials) && Objects.equals(connectionLivenessCheckTimeout`that.connectionLivenessCheckTimeout) && Objects.equals(verifyConnection`that.verifyConnection) && Objects.equals(useNativeTypes`that.useNativeTypes) && Arrays.equals(basePackages`that.basePackages) && Objects.equals(useStrictQuerying`that.useStrictQuerying);" is 932.,314
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,hashCode,Long Identifier,The length of the field generatedIndexesOutputFilename is 30.,342
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,hashCode,Long Identifier,The length of the field connectionLivenessCheckTimeout is 30.,342
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,hashCode,Long Statement,The length of the statement "int result=Objects.hash(uri`connectionPoolSize`encryptionLevel`trustStrategy`trustCertFile`autoIndex`generatedIndexesOutputDir`generatedIndexesOutputFilename`neo4jConfLocation`driverName`credentials`connectionLivenessCheckTimeout`verifyConnection`useNativeTypes);" is 263.,342
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,hashCode,Magic Number,The method contains a magic number: 31,342
neo4j_neo4j-ogm,org.neo4j.ogm.config,Configuration,hashCode,Magic Number,The method contains a magic number: 31,342
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationUtilsTest,shouldThrowFileNotFoundOnInvalidUrls,Long Statement,The length of the statement "assertThatExceptionOfType(FileNotFoundException.class).isThrownBy(() -> ConfigurationUtils.getResourceUrl("invalid://test.com"));" is 129.,68
neo4j_neo4j-ogm,org.neo4j.ogm.config,ConfigurationUtilsTest,shouldThrowFileNotFoundOnInvalidResources,Long Statement,The length of the statement "assertThatExceptionOfType(FileNotFoundException.class).isThrownBy(() -> ConfigurationUtils.getResourceUrl("idontexists"));" is 122.,75
neo4j_neo4j-ogm,org.neo4j.ogm.domain.mappings,Entity,equals,Complex Conditional,The conditional expression o == null || nodeId == null || getClass() != o.getClass() is complex.,40
neo4j_neo4j-ogm,org.neo4j.ogm.domain.social,SocialUser,hashCode,Magic Number,The method contains a magic number: 31,108
neo4j_neo4j-ogm,org.neo4j.ogm.domain.social,SocialUser,hashCode,Magic Number,The method contains a magic number: 31,108
neo4j_neo4j-ogm,org.neo4j.ogm.domain.social,SocialUser,hashCode,Magic Number,The method contains a magic number: 31,108
neo4j_neo4j-ogm,org.neo4j.ogm.domain.social,SocialUser,hashCode,Magic Number,The method contains a magic number: 31,108
neo4j_neo4j-ogm,org.neo4j.ogm.domain.convertible.numbers,HexadecimalNumberConverter,HexadecimalNumberConverter,Magic Number,The method contains a magic number: 16,26
neo4j_neo4j-ogm,org.neo4j.ogm.domain.convertible.date,Memo,getActionedAsInstantWithCustomFormat1,Long Identifier,The length of the field actionedAsInstantWithCustomFormat1 is 34.,164
neo4j_neo4j-ogm,org.neo4j.ogm.domain.convertible.date,Memo,setActionedAsInstantWithCustomFormat1,Long Identifier,The length of the parameter actionedAsInstantWithCustomFormat1 is 34.,168
neo4j_neo4j-ogm,org.neo4j.ogm.domain.convertible.date,Memo,setActionedAsInstantWithCustomFormat1,Long Identifier,The length of the field actionedAsInstantWithCustomFormat1 is 34.,168
neo4j_neo4j-ogm,org.neo4j.ogm.domain.convertible.date,Memo,getActionedAsInstantWithCustomFormat2,Long Identifier,The length of the field actionedAsInstantWithCustomFormat2 is 34.,172
neo4j_neo4j-ogm,org.neo4j.ogm.domain.convertible.date,Memo,setActionedAsInstantWithCustomFormat2,Long Identifier,The length of the parameter actionedAsInstantWithCustomFormat2 is 34.,176
neo4j_neo4j-ogm,org.neo4j.ogm.domain.convertible.date,Memo,setActionedAsInstantWithCustomFormat2,Long Identifier,The length of the field actionedAsInstantWithCustomFormat2 is 34.,176
neo4j_neo4j-ogm,org.neo4j.ogm.domain.cineasts.annotated,Knows,hashCode,Magic Number,The method contains a magic number: 31,93
neo4j_neo4j-ogm,org.neo4j.ogm.domain.cineasts.annotated,Rating,toString,Long Statement,The length of the statement "return String.format("(%s:%s)-[%s:%s]->(%s:%s)"`user.getLogin()`user.getName()`id`"RATING: {stars:" + stars + "` comment:'"+ comment+ "'}"`movie.getUuid()`movie.getTitle());" is 173.,85
neo4j_neo4j-ogm,org.neo4j.ogm.domain.cineasts.partial,Knows,hashCode,Magic Number,The method contains a magic number: 31,93
neo4j_neo4j-ogm,org.neo4j.ogm.domain.cineasts.partial,Rating,toString,Long Statement,The length of the statement "return String.format("(%s:%s)-[%s:%s]->(%s:%s)"`user.getId()`user.getName()`id`"RATING: {stars:" + stars + "` comment:'"+ comment+ "'}"`movie.getId()`movie.getTitle());" is 168.,85
neo4j_neo4j-ogm,org.neo4j.ogm.domain.friendships,Person,addFriend,Magic Number,The method contains a magic number: 5,58
neo4j_neo4j-ogm,org.neo4j.ogm.domain.concurrency,World,hashCode,Magic Number,The method contains a magic number: 31,126
neo4j_neo4j-ogm,org.neo4j.ogm.domain.concurrency,World,hashCode,Magic Number,The method contains a magic number: 31,126
neo4j_neo4j-ogm,org.neo4j.ogm,CypherModificationSPITest,abstractDriverShouldLoadCypherModificationsInCorrectOrder,Long Statement,The length of the statement "Configuration driverConfiguration=new Configuration.Builder().withCustomProperty("config1"`6).withCustomProperty("config2"`9).build();" is 134.,45
neo4j_neo4j-ogm,org.neo4j.ogm,CypherModificationSPITest,abstractDriverShouldLoadCypherModificationsInCorrectOrder,Magic Number,The method contains a magic number: 6,45
neo4j_neo4j-ogm,org.neo4j.ogm,CypherModificationSPITest,abstractDriverShouldLoadCypherModificationsInCorrectOrder,Magic Number,The method contains a magic number: 9,45
neo4j_neo4j-ogm,org.neo4j.ogm,CypherModificationSPITest,driverShouldNotProvideModificationWithoutConfiguration,Long Statement,The length of the statement "assertThatExceptionOfType(IllegalStateException.class).isThrownBy(driver::getCypherModification).withMessage("Driver is not configured and cannot load Cypher modifications.").withNoCause();" is 189.,81
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,GenericCollectionRelationshipsTest,shouldLoadSimpleRelationshipIntoCollection,Long Statement,The length of the statement "long id=(long)sessionFactory.openSession().query("" + "CREATE (p:P {name: 'P'})\n" + "MERGE (p) - [:HAS] -> (:C {name: 'C1'})\n"+ "MERGE (p) - [:HAS] -> (:C {name: 'C2'})\n"+ "RETURN id(p) AS id"`emptyMap()).queryResults().iterator().next().get("id");" is 251.,48
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,GenericCollectionRelationshipsTest,shouldLoadSimpleRelationshipIntoCollection,Magic Number,The method contains a magic number: 2,48
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,GenericCollectionRelationshipsTest,shouldLoadRichRelationshipIntoCollection,Long Statement,The length of the statement "long id=(long)sessionFactory.openSession().query("" + "CREATE (s:S)\n" + "MERGE (s) - [:R {name: 'Same'}] -> (:E {name: 'E1'})\n"+ "MERGE (s) - [:R {name: 'Same'}] -> (:E {name: 'E2'})\n"+ "RETURN id(s) AS id"`emptyMap()).queryResults().iterator().next().get("id");" is 265.,66
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,init,Long Statement,The length of the statement "session=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.hierarchy.relations"`"org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.gh806").openSession();" is 155.,67
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,inheritanceImpl,Long Statement,The length of the statement "String verificationQuery="match (c:Container) <- [:RELATES_TO|RELATES_TO_TOO|RELATES_TO_AS_WELL] - (p) " + "where any (label in labels(p) where label in $expectedLabels) return c.name as c` p.name as p";" is 203.,93
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,inheritanceImpl,Long Statement,The length of the statement "Set<String> expectedLabels=new HashSet<>(Arrays.asList(ConcreteElement.class.getSimpleName()`port1.getClass().getSimpleName()));" is 128.,93
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,inheritanceImpl,Magic Number,The method contains a magic number: 3,93
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,inheritanceImpl,Magic Number,The method contains a magic number: 2,93
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,shouldLoadRelationByAbstractParent,Long Statement,The length of the statement "Post p=(Post)StreamSupport.stream(reloaded.getActivityList().spliterator()`false).filter(elt -> elt.getClass().equals(Post.class)).findFirst().get();" is 149.,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,shouldLoadRelationByAbstractParent,Long Statement,The length of the statement "Comment c=(Comment)StreamSupport.stream(reloaded.getActivityList().spliterator()`false).filter(elt -> elt.getClass().equals(Comment.class)).findFirst().get();" is 158.,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,HierarchyRelsTest,shouldLoadRelationByAbstractParent,Magic Number,The method contains a magic number: 2,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,DeepNestQueryingOfRelationshipEntitiesIntegrationTest,nPathSegmentsShouldWork,Long Statement,The length of the statement "filter.setNestedPath(new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("address"`Address.class));" is 124.,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,DeepNestQueryingOfRelationshipEntitiesIntegrationTest,nPathSegmentsShouldWork,Magic Number,The method contains a magic number: 2,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,DeepNestQueryingOfRelationshipEntitiesIntegrationTest,nPathSegmentsShouldWorkFromTheEnd,Long Statement,The length of the statement "filter.setNestedPath(new Filter.NestedPathSegment("group"`UserGroup.class)`new Filter.NestedPathSegment("city"`City.class));" is 124.,149
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,DeepNestQueryingOfRelationshipEntitiesIntegrationTest,nPathSegmentsShouldWorkFromBothEnds,Long Statement,The length of the statement "outgoing.setNestedPath(new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("address"`Address.class));" is 126.,164
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,DeepNestQueryingOfRelationshipEntitiesIntegrationTest,nPathSegmentsShouldWorkFromBothEnds,Long Statement,The length of the statement "incoming.setNestedPath(new Filter.NestedPathSegment("group"`UserGroup.class)`new Filter.NestedPathSegment("city"`City.class));" is 126.,164
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,DeepNestQueryingOfRelationshipEntitiesIntegrationTest,nPlus1PathSegmentsShouldWork,Long Statement,The length of the statement "filter.setNestedPath(new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("address"`Address.class)`new Filter.NestedPathSegment("city"`City.class));" is 172.,187
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RichRelationTest,versionedRelationshipsTargetingDifferentEndNodes,Magic Number,The method contains a magic number: 20,67
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,init,Magic Number,The method contains a magic number: 4,59
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldAddR,Magic Number,The method contains a magic number: 5,73
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldAddR,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldUpdateExistingR,Magic Number,The method contains a magic number: 3,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldUpdateExistingR,Magic Number,The method contains a magic number: 3,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldDirectlyUpdateR,Magic Number,The method contains a magic number: 5,161
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldDirectlyUpdateR,Magic Number,The method contains a magic number: 5,161
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldDirectlyUpdateR,Magic Number,The method contains a magic number: 5,161
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldDirectlyDeleteR,Long Statement,The length of the statement "M findM2=session.queryForObject(M.class`"MATCH (n:M) WHERE ID(n) = $id WITH n MATCH p=(n)-[*0..1]-(m) RETURN nodes(p)"`Collections.singletonMap("id"`m.id));" is 156.,183
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,RelationshipEntityTest,shouldReloadCompleteRelationshipWhenStartAndEndNodesDontDeclareTheRelationshipExplicitly,Long Statement,The length of the statement "Arc reloaded=session.queryForObject(Arc.class`"MATCH (f:Vertex)-[a:Arc]->(t:Vertex) return f` a` t"`Collections.emptyMap());" is 124.,276
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,DualTargetEntityRelationshipTest,shouldKeepAllRelations,Long Statement,The length of the statement "Collection<Category> categoriesFound=session.loadAll(Category.class`new Filter("name"`ComparisonOperator.EQUALS`"cat1"));" is 121.,80
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Long Statement,The length of the statement "session.query("create (_5:`PersonX` {`name`:\"Jim\"})\n" + "create (_6:`PersonX` {`name`:\"Mary\"})\n" + "create (_7:`PersonX` {`name`:\"Bill\"})\n"+ "create (_8:`Movie` {`name`:\"Die Hard\"})\n"+ "create (_9:`Movie` {`name`:\"The Matrix\"})\n"+ "create (_5)-[:`FOLLOWS`]->(_6)\n"+ "create (_5)-[:`LIKES`]->(_6)\n"+ "create (_5)-[:`RATED` {`value`:4}]->(_9)\n"+ "create (_5)-[:`RATED` {`value`:5}]->(_8)\n"+ "create (_6)-[:`FOLLOWS`]->(_5)\n"+ "create (_6)-[:`FOLLOWS`]->(_7)\n"+ "create (_6)-[:`LIKES`]->(_5)\n"+ "create (_6)-[:`RATED` {`value`:5}]->(_8)\n"+ "create (_7)-[:`FOLLOWS`]->(_5)\n"+ "create (_7)-[:`LIKES`]->(_6)\n"+ "create (_7)-[:`RATED` {`value`:4}]->(_9)\n"+ "create (_7)-[:`RATED` {`value`:5}]->(_9)\n"+ ";\n"`Collections.EMPTY_MAP);" is 751.,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Magic Number,The method contains a magic number: 2,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Magic Number,The method contains a magic number: 2,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Magic Number,The method contains a magic number: 2,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Magic Number,The method contains a magic number: 2,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Magic Number,The method contains a magic number: 2,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Magic Number,The method contains a magic number: 3,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldMapFromGraphToEntitiesCorrectly,Magic Number,The method contains a magic number: 2,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 4,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 5,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 3,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 5,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 5,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 3,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 4,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 5,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships,MultipleRelationshipsTest,shouldCreateGraphProperly,Magic Number,The method contains a magic number: 2,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldFindAFromB,Magic Number,The method contains a magic number: 2,113
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldFindAFromB,Magic Number,The method contains a magic number: 2,113
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldFindAFromB,Magic Number,The method contains a magic number: 2,113
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldBeAbleToUpdateRBySavingA,Magic Number,The method contains a magic number: 2,258
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldBeAbleToUpdateRBySavingA,Magic Number,The method contains a magic number: 2,258
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldBeAbleToUpdateRBySavingB,Magic Number,The method contains a magic number: 2,281
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldBeAbleToUpdateRBySavingB,Magic Number,The method contains a magic number: 2,281
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldBeAbleToUpdateRBySavingR,Magic Number,The method contains a magic number: 2,304
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.aabb,AABBTest,shouldBeAbleToUpdateRBySavingR,Magic Number,The method contains a magic number: 2,304
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.ab,ABTest,shouldBeAbleToUpdateRBySavingA,Magic Number,The method contains a magic number: 2,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.ab,ABTest,shouldBeAbleToUpdateRBySavingA,Magic Number,The method contains a magic number: 2,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.ab,ABTest,shouldBeAbleToUpdateRBySavingB,Magic Number,The method contains a magic number: 2,145
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.ab,ABTest,shouldBeAbleToUpdateRBySavingB,Magic Number,The method contains a magic number: 2,145
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.ab,ABTest,shouldBeAbleToUpdateRBySavingR,Magic Number,The method contains a magic number: 2,168
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.ab,ABTest,shouldBeAbleToUpdateRBySavingR,Magic Number,The method contains a magic number: 2,168
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldFindBFromA,Magic Number,The method contains a magic number: 2,89
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldBeAbleToAddNewR,Magic Number,The method contains a magic number: 2,155
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldBeAbleToUpdateRBySavingA,Magic Number,The method contains a magic number: 2,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldBeAbleToUpdateRBySavingA,Magic Number,The method contains a magic number: 2,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldBeAbleToUpdateRBySavingB,Magic Number,The method contains a magic number: 2,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldBeAbleToUpdateRBySavingB,Magic Number,The method contains a magic number: 2,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldBeAbleToUpdateRBySavingR,Magic Number,The method contains a magic number: 2,224
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.relationships.transitive.abb,ABBTest,shouldBeAbleToUpdateRBySavingR,Magic Number,The method contains a magic number: 2,224
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveRestaurantWithCompositeLocationConverter,Long Statement,The length of the statement "Restaurant restaurant=new Restaurant("San Francisco International Airport (SFO)"`new Location(37.61649`-122.38681)`94128);" is 122.,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveRestaurantWithCompositeLocationConverter,Long Statement,The length of the statement "assertThat(session.query("MATCH (n:`Restaurant` {name: 'San Francisco International Airport (SFO)'` latitude: 37.61649` " + "longitude: -122.38681` zip: 94128` score: 0.0` halal: false` specialities:[]}) return n"`emptyMap()).queryResults()).hasSize(1);" is 253.,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveRestaurantWithCompositeLocationConverter,Magic Number,The method contains a magic number: 37.61649,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveRestaurantWithCompositeLocationConverter,Magic Number,The method contains a magic number: 122.38681,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveRestaurantWithCompositeLocationConverter,Magic Number,The method contains a magic number: 94128,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveBranchWitlCompositeLocationConverter,Magic Number,The method contains a magic number: 37.61649,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveBranchWitlCompositeLocationConverter,Magic Number,The method contains a magic number: 122.38681,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveBranchWitlCompositeLocationConverter,Magic Number,The method contains a magic number: 37.61649,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveBranchWitlCompositeLocationConverter,Magic Number,The method contains a magic number: 0.00001,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveBranchWitlCompositeLocationConverter,Magic Number,The method contains a magic number: 122.38681,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSaveBranchWitlCompositeLocationConverter,Magic Number,The method contains a magic number: 0.00001,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistance,Long Statement,The length of the statement "Restaurant restaurant=new Restaurant("San Francisco International Airport (SFO)"`new Location(37.61649`-122.38681)`94128);" is 122.,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistance,Long Statement,The length of the statement "Restaurant found=session.queryForObject(Restaurant.class`"MATCH (r:Restaurant) " + "WHERE point.distance(point({latitude: r.latitude` longitude:r.longitude})`point({latitude:37.0` longitude:-118.0` crs: 'WGS-84'})) < $distance*1000 RETURN r;"`parameters);" is 255.,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistance,Magic Number,The method contains a magic number: 37.61649,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistance,Magic Number,The method contains a magic number: 122.38681,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistance,Magic Number,The method contains a magic number: 94128,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistance,Magic Number,The method contains a magic number: 1000,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Long Statement,The length of the statement "Restaurant restaurant=new Restaurant("San Francisco International Airport (SFO)"`new Location(37.61649`-122.38681)`94128);" is 122.,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Long Statement,The length of the statement "Filter filter=new Filter(new DistanceComparison(new DistanceFromPoint(37.61649`-122.38681`1000 * 1000.0))`ComparisonOperator.LESS_THAN);" is 136.,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Magic Number,The method contains a magic number: 37.61649,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Magic Number,The method contains a magic number: 122.38681,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Magic Number,The method contains a magic number: 94128,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Magic Number,The method contains a magic number: 37.61649,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Magic Number,The method contains a magic number: 122.38681,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Magic Number,The method contains a magic number: 1000,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldQueryByDistanceUsingFilter,Magic Number,The method contains a magic number: 1000.0,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,saveAndRetrieveRestaurantWithLocation,Long Statement,The length of the statement "Restaurant restaurant=new Restaurant("San Francisco International Airport (SFO)"`new Location(37.61649`-122.38681)`94128);" is 122.,136
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,saveAndRetrieveRestaurantWithLocation,Long Statement,The length of the statement "Collection<Restaurant> results=session.loadAll(Restaurant.class`new Filter("name"`ComparisonOperator.EQUALS`"San Francisco International Airport (SFO)"));" is 154.,136
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,saveAndRetrieveRestaurantWithLocation,Magic Number,The method contains a magic number: 37.61649,136
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,saveAndRetrieveRestaurantWithLocation,Magic Number,The method contains a magic number: 122.38681,136
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,saveAndRetrieveRestaurantWithLocation,Magic Number,The method contains a magic number: 94128,136
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,saveAndRetrieveRestaurantWithLocation,Magic Number,The method contains a magic number: 37.61649,136
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,saveAndRetrieveRestaurantWithLocation,Magic Number,The method contains a magic number: 122.38681,136
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldSyncMappedLabelsFromEntityToTheNode_and_NodeToEntity,Magic Number,The method contains a magic number: 3,154
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyWithConverter,Magic Number,The method contains a magic number: 72.4,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyWithConverter,Magic Number,The method contains a magic number: 1000,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyWithConverter,Magic Number,The method contains a magic number: 80.5,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyWithConverter,Magic Number,The method contains a magic number: 2000,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyWithConverter,Magic Number,The method contains a magic number: 1001,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyWithConverter,Magic Number,The method contains a magic number: 999,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyStartingWith,Magic Number,The method contains a magic number: 72.4,293
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyStartingWith,Magic Number,The method contains a magic number: 1000,293
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyStartingWith,Magic Number,The method contains a magic number: 80.5,293
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyStartingWith,Magic Number,The method contains a magic number: 2000,293
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyEndingWith,Magic Number,The method contains a magic number: 72.4,314
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyEndingWith,Magic Number,The method contains a magic number: 1000,314
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyEndingWith,Magic Number,The method contains a magic number: 80.5,314
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyEndingWith,Magic Number,The method contains a magic number: 2000,314
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyContaining,Magic Number,The method contains a magic number: 72.4,335
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyContaining,Magic Number,The method contains a magic number: 1000,335
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyContaining,Magic Number,The method contains a magic number: 80.5,335
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyContaining,Magic Number,The method contains a magic number: 2000,335
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyIn,Magic Number,The method contains a magic number: 72.4,356
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyIn,Magic Number,The method contains a magic number: 1000,356
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyIn,Magic Number,The method contains a magic number: 80.5,356
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyIn,Magic Number,The method contains a magic number: 2000,356
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByCollectionContaining,Magic Number,The method contains a magic number: 72.4,377
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByCollectionContaining,Magic Number,The method contains a magic number: 80.5,377
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByCollectionContaining,Magic Number,The method contains a magic number: 2,377
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyExists,Magic Number,The method contains a magic number: 72.4,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyExists,Magic Number,The method contains a magic number: 1000,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyExists,Magic Number,The method contains a magic number: 80.5,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyExists,Magic Number,The method contains a magic number: 2000,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyExists,Magic Number,The method contains a magic number: 2,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyIsTrue,Magic Number,The method contains a magic number: 77.0,429
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.restaurant,RestaurantIntegrationTest,shouldFilterByPropertyIsTrue,Magic Number,The method contains a magic number: 72.4,429
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 15,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 2,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 18,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 27,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 19,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 42.99,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 2,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 16L,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 3,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 17L,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.bike,BikeTest,testDeserialiseBikeModel,Magic Number,The method contains a magic number: 5,39
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.numbers,BucketIntegrationTest,savedBucketShouldHaveDefaultValue,Magic Number,The method contains a magic number: 2,59
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.numbers,BucketIntegrationTest,savedBucketShouldHaveDefaultValue,Magic Number,The method contains a magic number: 3,59
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.tree,TreeIntegrationTest,shouldCreateTreeProperly,Magic Number,The method contains a magic number: 2,59
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.tree,TreeIntegrationTest,shouldLoadTreeProperly,Long Statement,The length of the statement "String cypher="CREATE (parent:Entity {name:'parent'}) CREATE (child1:Entity {name:'c1'}) CREATE (child2:Entity {name:'c2'}) CREATE (child1)-[:REL]->(parent) CREATE (child2)-[:REL]->(parent)";" is 191.,82
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.tree,TreeIntegrationTest,shouldLoadTreeProperly,Magic Number,The method contains a magic number: 2,82
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.tree,TreeIntegrationTest,shouldMapElementsToTreeSetProperly,Long Statement,The length of the statement "String cypher="CREATE (parent:Entity {name:'parent'}) CREATE (child1:Entity {name:'c1'}) CREATE (child2:Entity {name:'c2'}) CREATE (child1)-[:REL]->(parent) CREATE (child2)-[:REL]->(parent)";" is 191.,101
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.tree,TreeIntegrationTest,shouldMapElementsToTreeSetProperly,Magic Number,The method contains a magic number: 2,101
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,SessionCacheOptimisticLockingTest,lockingWithExternalIdsShouldWorkInDifferentSessions,Long Statement,The length of the statement "VersionedEntityWithExternalId t1emp=session1.queryForObject(VersionedEntityWithExternalId.class`cypherTemplate`Collections.emptyMap());" is 135.,230
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,SessionCacheOptimisticLockingTest,lockingWithExternalIdsShouldWorkInDifferentSessions,Long Statement,The length of the statement "VersionedEntityWithExternalId t2emp=session2.queryForObject(VersionedEntityWithExternalId.class`cypherTemplate`Collections.emptyMap());" is 135.,230
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,SessionCacheOptimisticLockingTest,lockingWithExternalIdsShouldWorkInDifferentSessions,Magic Number,The method contains a magic number: 2,230
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,givenNodeWithWrongVersionWhenSaveNodeThenFailWithOptimisticLockingException,Long Statement,The length of the statement "assertThatThrownBy(() -> session.save(wrongVersion)).isInstanceOf(OptimisticLockingException.class).hasMessageContaining("Entity with type='[User]'").hasMessageContaining("id='" + frantisek.getId() + "' had incorrect version 0");" is 229.,91
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedProperties,Long Statement,The length of the statement "long existingId=session1.queryForObject(Long.class`"CREATE (a:Location {name: 'Aachen'` customVersion: 1}) RETURN id(a)"`Collections.emptyMap());" is 145.,176
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedProperties,Long Statement,The length of the statement "version=session1.queryForObject(Long.class`"MATCH (a:Location {name: $name}) RETURN a.customVersion"`Collections.singletonMap("name"`location.getName()));" is 154.,176
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedProperties,Long Statement,The length of the statement "version=session1.queryForObject(Long.class`"MATCH (a:Location {name: $name}) RETURN a.customVersion"`Collections.singletonMap("name"`location.getName()));" is 154.,176
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedProperties,Magic Number,The method contains a magic number: 2L,176
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedProperties,Magic Number,The method contains a magic number: 2L,176
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedProperties,Magic Number,The method contains a magic number: 3L,176
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedProperties,Magic Number,The method contains a magic number: 3L,176
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Long Statement,The length of the statement "long bertId=session1.queryForObject(Long.class`"CREATE (a:User {name: 'bert'` version: 1}) RETURN id(a)"`Collections.emptyMap());" is 129.,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Long Statement,The length of the statement "long ernieId=session1.queryForObject(Long.class`"CREATE (a:User {name: 'Ernie'` version: 1}) RETURN id(a)"`Collections.emptyMap());" is 131.,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Long Statement,The length of the statement "versions=session1.query("MATCH (a:User {name: $name}) -[f:FRIEND_OF] -> (:User) RETURN" + " a.version as userVersion` f.version as relVersion"`Collections.singletonMap("name"`bert.getName())).queryResults().iterator().next();" is 225.,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Long Statement,The length of the statement "versions=session1.query("MATCH (a:User {name: $name}) -[f:FRIEND_OF] -> (:User) RETURN" + " a.version as userVersion` f.version as relVersion"`Collections.singletonMap("name"`bert.getName())).queryResults().iterator().next();" is 225.,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Long Statement,The length of the statement "versions=session1.query("MATCH (a:User {name: $name}) -[f:FRIEND_OF] -> (:User) RETURN" + " a.version as userVersion` f.version as relVersion` f.description as description"`Collections.singletonMap("name"`bert.getName())).queryResults().iterator().next();" is 255.,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Magic Number,The method contains a magic number: 2L,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Magic Number,The method contains a magic number: 2L,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Magic Number,The method contains a magic number: 3L,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Magic Number,The method contains a magic number: 3L,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Magic Number,The method contains a magic number: 3L,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,NodeOptimisticLockingTest,assertWorkingLocksOnReReadWithChangedRelationships,Magic Number,The method contains a magic number: 3L,214
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.locking,RelationshipEntityOptimisticLockingTest,ensureFriendsOfRelationshipsHaveCount,Long Statement,The length of the statement "Long relationshipCount=(Long)session.query("MATCH ()-[r:FRIEND_OF]->() return count(r) as c"`emptyMap()).queryResults().iterator().next().get("c");" is 147.,249
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchOnlyPeopleILike,Long Statement,The length of the statement "session.query("create (p1:Person {name:'A'}) create (p2:Person {name:'B'}) create (p3:Person {name:'C'})" + " create (p4:Person {name:'D'}) create (p1)-[:LIKES]->(p2) create (p1)-[:LIKES]->(p3) create (p4)-[:LIKES]->(p1)"`Collections.EMPTY_MAP);" is 245.,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchOnlyPeopleILike,Magic Number,The method contains a magic number: 2,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchFriendsInBothDirections,Long Statement,The length of the statement "session.query("create (p1:Individual {name:'A'}) create (p2:Individual {name:'B'}) create (p3:Individual {name:'C'})" + " create (p4:Individual {name:'D'}) create (p1)-[:FRIENDS]->(p2) create (p1)-[:FRIENDS]->(p3) create (p4)-[:FRIENDS]->(p1)"`Collections.EMPTY_MAP);" is 267.,89
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchFriendsInBothDirections,Long Statement,The length of the statement "Individual individualA=session.loadAll(Individual.class`new Filter("name"`ComparisonOperator.EQUALS`"A")).iterator().next();" is 124.,89
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchFriendsInBothDirections,Magic Number,The method contains a magic number: 2,89
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchFriendsForUndirectedRelationship,Long Statement,The length of the statement "session.query("create (p1:User {name:'A'}) create (p2:User {name:'B'}) create (p3:User {name:'C'})" + " create (p4:User {name:'D'}) create (p1)-[:FRIEND]->(p2) create (p1)-[:FRIEND]->(p3) create (p4)-[:FRIEND]->(p1)"`Collections.EMPTY_MAP);" is 240.,105
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchFriendsForUndirectedRelationship,Magic Number,The method contains a magic number: 3,105
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldSaveUndirectedFriends,Magic Number,The method contains a magic number: 3,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldSaveIncomingKnownMortals,Magic Number,The method contains a magic number: 2,188
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchIncomingKnownMortals,Long Statement,The length of the statement "session.query("create (m1:Mortal {name:'A'}) create (m2:Mortal {name:'B'}) create (m3:Mortal {name:'C'})" + " create (m4:Mortal {name:'D'}) create (m1)<-[:KNOWN_BY]-(m2) create (m1)<-[:KNOWN_BY]-(m3) create (m4)<-[:KNOWN_BY]-(m1)"`Collections.EMPTY_MAP);" is 254.,227
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchIncomingKnownMortals,Magic Number,The method contains a magic number: 2,227
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchFriendsUndirected,Magic Number,The method contains a magic number: 2,258
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldFetchFriendsUndirected,Magic Number,The method contains a magic number: 2,258
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldSaveObjectsToCorrectDepth,Magic Number,The method contains a magic number: 2,295
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldSaveObjectsToCorrectDepth,Magic Number,The method contains a magic number: 5,295
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldSaveAllDirectedRelationships,Magic Number,The method contains a magic number: 2,330
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialIntegrationTest,shouldSaveAllDirectedRelationships,Magic Number,The method contains a magic number: 2,330
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,saveUndirectedSavesOutgoingRelationship,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:User {name:'A'}) -[:FRIEND]-> (b:User {name:'B'}) RETURN a` b"`emptyMap()).queryResults()).hasSize(1);" is 137.,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,saveUnmarkedSavesOutgoingRelationship,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Individual {name:'A'` age: 0` code:0` bankBalance:0.0}) -[:FRIENDS]->" + "(b:Individual {name:'B'` age:0` code:0` bankBalance:0.0}) RETURN a` b"`emptyMap()).queryResults()).hasSize(1);" is 219.,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,saveOutgoingSavesOutgoingRelationship,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Person {name:'A'}) -[:LIKES]-> (b:Person {name:'B'}) RETURN a` b"`emptyMap()).queryResults()).hasSize(1);" is 140.,96
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,saveIncomingSavesIncomingRelationship,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Mortal {name:'A'}) <-[:KNOWN_BY]- (b:Mortal {name:'B'}) RETURN a` b"`emptyMap()).queryResults()).hasSize(1);" is 143.,107
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,saveOutgoingSavesOutgoingRelationshipInBothDirections,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Person {name:'A'}) -[:LIKES]-> (b:Person {name:'B'}) " + "WHERE exists((b)-[:LIKES]->(a)) RETURN a` b"`emptyMap()).queryResults()).hasSize(1);" is 177.,118
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,saveOutgoingToExistingNodesSavesOutgoingRelationshipInBothDirections,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Person {name:'A'}) -[:LIKES]-> (b:Person {name:'B'}) " + "WHERE exists((b)-[:LIKES]->(a)) RETURN a` b"`emptyMap()).queryResults()).hasSize(1);" is 177.,132
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,updateOutgoingRelSavesOutgoingRelationshipInBothDirections,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Person {name:'A'}) -[:LIKES]-> (b:Person {name:'B'}) " + "WHERE exists((b)-[:LIKES]->(a)) RETURN a`b"`emptyMap()).queryResults()).hasSize(1);" is 176.,147
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,updateOutgoingRelSavesOutgoingRelationshipInBothDirections,Long Statement,The length of the statement "assertThat(session.query("" + "MATCH (a:Person {name:'A'})-[:LIKES]->(c:Person {name:'C'}) " + "MATCH (b:Person {name:'B'})-[:LIKES]->(a) "+ " WHERE exists((c)-[:LIKES]->(a)) RETURN a` b` c"`emptyMap()).queryResults()).hasSize(1);" is 230.,147
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,updateOutgoingRelInListSavesOutgoingRelationshipInBothDirections,Long Statement,The length of the statement "assertThat(session.query("" + "MATCH (a:Person {name:'A'}) -[:LIKES]-> (b:Person {name:'B'}) " + "MATCH (a) -[:LIKES]-> (c:Person {name:'C'}) "+ "MATCH (d:Person {name:'D'}) -[:LIKES] ->(a) "+ "WHERE exists((b)-[:LIKES]->(a)) "+ "RETURN a` b` c` d"`emptyMap()).queryResults()).hasSize(1);" is 288.,172
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,shouldManageRelationshipsToTheSameNodeType,Magic Number,The method contains a magic number: 2,197
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,shouldManageRelationshipsToTheSameNodeType,Magic Number,The method contains a magic number: 2,197
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,shouldManageRelationshipsToTheSameNodeType,Magic Number,The method contains a magic number: 2,197
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,shouldUseOptimizedQueryToSaveExistingRelations,Magic Number,The method contains a magic number: 2,229
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,shouldUseOptimizedQueryToSaveExistingRelations,Magic Number,The method contains a magic number: 2,229
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.social,SocialRelationshipsIntegrationTest,shouldUseOptimizedQueryToSaveExistingRelations,Magic Number,The method contains a magic number: 2,229
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldDeleteRelationshipEntity,Magic Number,The method contains a magic number: 2017,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldSaveAndLoadRelationshipEntityWithoutId,Magic Number,The method contains a magic number: 2017,235
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldSaveAndLoadRelationshipEntityWithoutIdDirect,Magic Number,The method contains a magic number: 2017,251
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldUpdateRelationshipEntityTransitive,Magic Number,The method contains a magic number: 1917,268
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldUpdateRelationshipEntityTransitive,Magic Number,The method contains a magic number: 2017,268
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldUpdateRelationshipEntityTransitive,Magic Number,The method contains a magic number: 2017,268
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldUpdateRelationshipEntityDirect,Magic Number,The method contains a magic number: 1917,287
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldUpdateRelationshipEntityDirect,Magic Number,The method contains a magic number: 2017,287
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldUpdateRelationshipEntityDirect,Magic Number,The method contains a magic number: 2017,287
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldCreateRelationshipEntityDirect,Magic Number,The method contains a magic number: 2017,307
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.drink,DrinkIntegrationTest,shouldCreateRelationshipEntityDirect,Magic Number,The method contains a magic number: 2017,307
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.convertible,ParameterizedConversionTest,shouldConvertParameterizedStringMap,Magic Number,The method contains a magic number: 3,77
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Complex Method,Cyclomatic complexity of the method is 17,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Long Method,The method has 125 lines of code.,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Magic Number,The method contains a magic number: 2,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Magic Number,The method contains a magic number: 2,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Magic Number,The method contains a magic number: 2,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Magic Number,The method contains a magic number: 2,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Magic Number,The method contains a magic number: 2,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Magic Number,The method contains a magic number: 2,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadPairingWithCustomDepth,Magic Number,The method contains a magic number: 2,142
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 2,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 2,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 3,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 3,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 2,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 2,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 3,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithPagingAndDepth,Magic Number,The method contains a magic number: 3,292
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "Collection<Ingredient> ingredients=session.loadAll(Ingredient.class`new Filter("name"`ComparisonOperator.EQUALS`"Chicken")`new Pagination(0`1));" is 144.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "ingredients=session.loadAll(Ingredient.class`new Filter("name"`ComparisonOperator.EQUALS`"Chicken")`new Pagination(1`1));" is 121.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "ingredients=session.loadAll(Ingredient.class`new Filter("name"`ComparisonOperator.EQUALS`"Chicken")`new Pagination(0`2));" is 121.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "ingredients=session.loadAll(Ingredient.class`new Filter("name"`ComparisonOperator.EQUALS`"Chicken")`new Pagination(0`3));" is 121.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "Collection<Pairing> pairings=session.loadAll(Pairing.class`new Filter("affinity"`ComparisonOperator.EQUALS`"EXCELLENT")`new Pagination(0`1));" is 141.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "pairings=session.loadAll(Pairing.class`new Filter("affinity"`ComparisonOperator.EQUALS`"EXCELLENT")`new Pagination(1`1));" is 121.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "pairings=session.loadAll(Pairing.class`new Filter("affinity"`ComparisonOperator.EQUALS`"EXCELLENT")`new Pagination(0`2));" is 121.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Long Statement,The length of the statement "pairings=session.loadAll(Pairing.class`new Filter("affinity"`ComparisonOperator.EQUALS`"EXCELLENT")`new Pagination(0`3));" is 121.,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 2,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 2,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 3,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 3,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 2,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 2,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 3,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.ingredients,IngredientsIntegrationTest,shouldBeAbleToLoadIngredientsWithFiltersPagingAndDepth,Magic Number,The method contains a magic number: 3,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.election,ElectionTest,shouldAllowVoterToChangeHerMind,Long Statement,The length of the statement "assertThat(context.containsRelationship(new MappedRelationship(v.getId()`"CANDIDATE_VOTED_FOR"`b.getId()`null`Voter.class`Candidate.class))).isTrue();" is 150.,106
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.election,ElectionTest,shouldAllowVoterToChangeHerMind,Long Statement,The length of the statement "assertThat(context.containsRelationship(new MappedRelationship(v.getId()`"CANDIDATE_VOTED_FOR"`b.getId()`null`Voter.class`Candidate.class))).isTrue();" is 150.,106
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.election,ElectionTest,shouldAllowVoterToChangeHerMind,Long Statement,The length of the statement "assertThat(context.containsRelationship(new MappedRelationship(v.getId()`"CANDIDATE_VOTED_FOR"`a.getId()`null`Voter.class`Candidate.class))).isTrue();" is 150.,106
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.election,ElectionTest,shouldAllowVoterToChangeHerMind,Long Statement,The length of the statement "assertThat(context.containsRelationship(new MappedRelationship(v.getId()`"CANDIDATE_VOTED_FOR"`b.getId()`null`Voter.class`Candidate.class))).isFalse();" is 151.,106
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationRequest,getResponse,Long Statement,The length of the statement "throw new UnsupportedOperationException("Please use org.neo4j.ogm.persistence.examples.education.EducationRequest.getResponse(java.lang.String)");" is 146.,436
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationRequest,getResponse,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3877a7f4,441
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationIntegrationTest,loadingASchoolWithNegativeDepthShouldLoadAllConnectedEntities,Magic Number,The method contains a magic number: 2,78
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationIntegrationTest,loadingASchoolWithNegativeDepthShouldLoadAllConnectedEntities,Magic Number,The method contains a magic number: 2,78
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationIntegrationTest,loadingASchoolWithNegativeDepthShouldLoadAllConnectedEntities,Magic Number,The method contains a magic number: 2,78
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationIntegrationTest,loadingASchoolWithNegativeDepthShouldLoadAllConnectedEntities,Magic Number,The method contains a magic number: 3,78
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,testFetchCoursesTaughtByAllTeachers,Complex Method,Cyclomatic complexity of the method is 10,60
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,testFetchCoursesTaughtByAllTeachers,Magic Number,The method contains a magic number: 7,60
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,testFetchCoursesTaughtByAllTeachers,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2e7e5719,60
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkEnglish,Magic Number,The method contains a magic number: 101,113
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkEnglish,Magic Number,The method contains a magic number: 127,113
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 102,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 103,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 105,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 107,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 111,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 113,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 117,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 119,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkGeography,Magic Number,The method contains a magic number: 123,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkHistory,Magic Number,The method contains a magic number: 102,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkHistory,Magic Number,The method contains a magic number: 127,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkHistory,Magic Number,The method contains a magic number: 2,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPE,Magic Number,The method contains a magic number: 103,138
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPE,Magic Number,The method contains a magic number: 127,138
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPE,Magic Number,The method contains a magic number: 3,138
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPhilosophyAndEthics,Magic Number,The method contains a magic number: 101,147
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPhilosophyAndEthics,Magic Number,The method contains a magic number: 127,147
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPhysics,Magic Number,The method contains a magic number: 101,156
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPhysics,Magic Number,The method contains a magic number: 127,156
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkPhysics,Magic Number,The method contains a magic number: 2,156
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkMaths,Magic Number,The method contains a magic number: 101,165
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.education,EducationTest,checkMaths,Magic Number,The method contains a magic number: 127,165
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveEntitiesWithInvalidCharsInLabelsAndRels,Long Statement,The length of the statement "assertThat(theBeatles.getAlbums().iterator().next().getRecording().getStudio().getName()).isEqualTo("EMI Studios` London");" is 123.,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveEntitiesWithInvalidCharsInLabelsAndRels,Magic Number,The method contains a magic number: 1963,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveEntitiesWithInvalidCharsInLabelsAndRels,Magic Number,The method contains a magic number: 1964,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveEntitiesWithInvalidCharsInLabelsAndRels,Magic Number,The method contains a magic number: 2,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveEntitiesWithInvalidCharsInLabelsAndRels,Magic Number,The method contains a magic number: 1963,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveEntitiesWithInvalidCharsInLabelsAndRels,Magic Number,The method contains a magic number: 1964,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldLoadStudioWithLocationMissingInDomainModel,Long Statement,The length of the statement "Studio studio=session.loadAll(Studio.class`new Filter("name"`ComparisonOperator.EQUALS`"Abbey Road Studios")).iterator().next();" is 128.,115
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldRetrieveEntityByPropertyWithZeroDepth,Long Statement,The length of the statement "assertThat(theBeatles.getAlbums().iterator().next().getRecording().getStudio().getName()).isEqualTo("EMI Studios` London");" is 123.,127
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldRetrieveEntityByPropertyWithZeroDepth,Magic Number,The method contains a magic number: 1963,127
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveArtistWithTwoRelationshipTypesToAlbums,Long Statement,The length of the statement "theBeatles=session.loadAll(Artist.class`new Filters().add(new Filter("name"`ComparisonOperator.EQUALS`"The Beatles"))).iterator().next();" is 137.,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveArtistWithTwoRelationshipTypesToAlbums,Long Statement,The length of the statement "assertThat(theBeatles.getAlbums().iterator().next().getRecording().getStudio().getName()).isEqualTo("EMI Studios` London");" is 123.,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveArtistWithTwoRelationshipTypesToAlbums,Long Statement,The length of the statement "Artist loadedEric=session.loadAll(Artist.class`new Filters().add(new Filter("name"`ComparisonOperator.EQUALS`"Eric Clapton"))).iterator().next();" is 145.,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveArtistWithTwoRelationshipTypesToAlbums,Magic Number,The method contains a magic number: 1977,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldSaveAndRetrieveArtistWithTwoRelationshipTypesToAlbums,Magic Number,The method contains a magic number: 1968,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithAlias,Long Statement,The length of the statement "Iterator<Map<String`Object>> resultIterator=session.query("MATCH (n:`l'artiste`)-[:`HAS-ALBUM`]-(a) return {artist: collect(distinct n.name)` albums: collect(a.name)} as result"`Collections.EMPTY_MAP).queryResults().iterator();" is 227.,204
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithAlias,Magic Number,The method contains a magic number: 1968,204
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithAlias,Magic Number,The method contains a magic number: 1963,204
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithAlias,Magic Number,The method contains a magic number: 2,204
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithoutAlias,Long Statement,The length of the statement "Iterator<Map<String`Object>> resultIterator=session.query("MATCH (n:`l'artiste`)-[:`HAS-ALBUM`]-(a) return {artist: collect(distinct n.name)` albums: collect(a.name)}"`Collections.EMPTY_MAP).queryResults().iterator();" is 217.,242
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithoutAlias,Magic Number,The method contains a magic number: 1968,242
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithoutAlias,Magic Number,The method contains a magic number: 1963,242
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.music,MusicIntegrationTest,shouldBeAbleToQueryForLiteralMapWithoutAlias,Magic Number,The method contains a magic number: 2,242
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 100,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 123.4,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 567.8f,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 5,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 8L,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 200,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 10,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 100,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 30,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 300,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 567.8,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 123.4f,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 99,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 1_000L,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 10,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 100,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 30,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.canonical,CanonicalTest,shouldMapArraysWhenUsingCustomQueries,Magic Number,The method contains a magic number: 300,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadRatingsAndCommentsAboutMovies,Magic Number,The method contains a magic number: 3,88
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadParticularUserRatingsAndComments,Magic Number,The method contains a magic number: 2,106
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadRatingsForSpecificFilm,Magic Number,The method contains a magic number: 2,123
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByRatingUsersPet,Long Statement,The length of the statement "filter.setNestedPath(new Filter.NestedPathSegment("ratings"`Rating.class)`new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("pets"`Pet.class));" is 170.,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByRatingUsersPet,Magic Number,The method contains a magic number: 2,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByRating,Magic Number,The method contains a magic number: 5,157
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByRatingUserPlays,Long Statement,The length of the statement "filter.setNestedPath(new Filter.NestedPathSegment("ratings"`Rating.class)`new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("plays"`Plays.class));" is 173.,170
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByRatingUserPlays,Magic Number,The method contains a magic number: 2,170
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByUserAndRatingUserPlays,Long Statement,The length of the statement "userFilter.setNestedPath(new Filter.NestedPathSegment("ratings"`Rating.class)`new Filter.NestedPathSegment("user"`User.class));" is 127.,185
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByUserAndRatingUserPlays,Long Statement,The length of the statement "playsFilter.setNestedPath(new Filter.NestedPathSegment("ratings"`Rating.class)`new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("plays"`Plays.class));" is 178.,185
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadFilmByUserAndRatingUserPlays,Magic Number,The method contains a magic number: 2,185
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadRatingByUserName,Magic Number,The method contains a magic number: 5,210
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,loadRatingByUserNameAndStars,Magic Number,The method contains a magic number: 2,224
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldQueryForSpecificActorUsingBespokeParameterisedCypherQuery,Long Statement,The length of the statement "Actor loadedActor=session.queryForObject(Actor.class`"MATCH (a:Actor) WHERE a.name=$param RETURN a"`Collections.singletonMap("param"`"Alec Baldwin"));" is 150.,285
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldQueryForCollectionOfActorsUsingBespokeCypherQuery,Long Statement,The length of the statement "Iterable<Actor> actors=session.query(Actor.class`"MATCH (a:Actor) WHERE a.name=~'J.*' RETURN a"`Collections.<String`Object>emptyMap());" is 135.,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldQueryForActorByIdUsingBespokeParameterisedCypherQuery,Long Statement,The length of the statement "Actor loadedActor=session.queryForObject(Actor.class`"MATCH (a:Actor) WHERE a.uuid=$param RETURN a"`Collections.<String`Object>singletonMap("param"`carrie.getUuid()));" is 167.,310
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldModifyStringArraysCorrectly,Magic Number,The method contains a magic number: 3,323
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldModifyStringArraysCorrectly,Magic Number,The method contains a magic number: 2,323
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldModifyStringArraysCorrectly,Magic Number,The method contains a magic number: 2,323
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldModifyStringArraysCorrectly,Magic Number,The method contains a magic number: 3,323
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldModifyStringArraysCorrectly,Magic Number,The method contains a magic number: 2,323
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldModifyStringArraysCorrectly,Magic Number,The method contains a magic number: 2,323
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,shouldBeAbleToSetNodePropertiesToNull,Magic Number,The method contains a magic number: 2016,355
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringMustThrowExceptionWithOrInThePipeline,Long Statement,The length of the statement "filterA.setNestedPath(new Filter.NestedPathSegment("ratings"`Rating.class)`new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("pets"`Pet.class));" is 171.,375
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringMustThrowExceptionWithOrInThePipeline,Long Statement,The length of the statement "@Override public Map<String`Object> parameters( UnaryOperator createUniqueParameterName` PropertyValueTransformer valueTransformer){" is 132.,375
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringMustThrowExceptionWithOrInThePipeline,Long Statement,The length of the statement "@Override public String expression( String nodeIdentifier` String filteredProperty` UnaryOperator createUniqueParameterName){" is 125.,375
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringMustThrowExceptionWithOrInThePipeline,Long Statement,The length of the statement "filterB.setNestedPath(new Filter.NestedPathSegment("ratings"`Rating.class)`new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("pets"`Pet.class));" is 171.,375
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringMustThrowExceptionWithOrInThePipeline,Long Statement,The length of the statement "assertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(() -> session.loadAll(Movie.class`filters)).withMessage("Filters containing nested paths cannot be combined via the logical OR operator.");" is 213.,375
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringCanBeTheOneAndOnlyOredFilter,Long Statement,The length of the statement "filterB.setNestedPath(new Filter.NestedPathSegment("ratings"`Rating.class)`new Filter.NestedPathSegment("user"`User.class)`new Filter.NestedPathSegment("pets"`Pet.class));" is 171.,424
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringCanBeTheOneAndOnlyOredFilter,Magic Number,The method contains a magic number: 2,424
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringMustThrowExceptionWithOrInThePipelineForRelationshipEntities,Long Statement,The length of the statement "assertThatExceptionOfType(UnsupportedOperationException.class).isThrownBy(() -> session.loadAll(Rating.class`userNameFilter.and(ratingFilter))).withMessage("Filters containing nested paths cannot be combined via the logical OR operator.");" is 239.,438
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsIntegrationTest,nestedFilteringMustThrowExceptionWithOrInThePipelineForRelationshipEntities,Magic Number,The method contains a magic number: 5,438
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRatingsFromDifferentUsersForSameMovie,Magic Number,The method contains a magic number: 1994,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRatingsFromDifferentUsersForSameMovie,Magic Number,The method contains a magic number: 5,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRatingsFromDifferentUsersForSameMovie,Magic Number,The method contains a magic number: 3,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRatingsFromDifferentUsersForSameMovie,Magic Number,The method contains a magic number: 2,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldCreateREWithExistingStartAndEndNodes,Magic Number,The method contains a magic number: 2,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldCreateREWithExistingStartAndEndNodes,Magic Number,The method contains a magic number: 5,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldNotLoseRelationshipEntitiesWhenALoadedEntityIsPersisted,Magic Number,The method contains a magic number: 2,165
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldNotLoseRelationshipEntitiesWhenALoadedEntityIsPersisted,Magic Number,The method contains a magic number: 2,165
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldNotLoseRelationshipEntitiesWhenALoadedEntityIsPersisted,Magic Number,The method contains a magic number: 2,165
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadActorsForAPersistedMovie,Long Statement,The length of the statement "session.query("CREATE " + "(dh:Movie {title:'Die Hard'})` " + "(bw:Actor {name: 'Bruce Willis'})` "+ "(bw)-[:ACTS_IN {role : 'John'}]->(dh)"`Collections.emptyMap());" is 165.,184
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Long Statement,The length of the statement "Collection<Movie> movies=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Philosophers Stone"));" is 142.,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Long Statement,The length of the statement "movies=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Philosophers Stone"));" is 124.,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Long Statement,The length of the statement "movies=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Philosophers Stone"));" is 124.,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Long Statement,The length of the statement "movies=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Philosophers Stone"));" is 124.,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Magic Number,The method contains a magic number: 2003,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Magic Number,The method contains a magic number: 5,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Magic Number,The method contains a magic number: 5,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Magic Number,The method contains a magic number: 3,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Magic Number,The method contains a magic number: 3,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Magic Number,The method contains a magic number: 2,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToModifyRating,Magic Number,The method contains a magic number: 2,201
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveAndRetrieveRelationshipEntitiesDirectly,Long Statement,The length of the statement "session.query("CREATE " + "(nc:NotAClass {name:'Colin'})` " + "(g:NotAClass {age: 39})` "+ "(g)-[:TEST {comment : 'test'}]->(nc)"`Collections.emptyMap());" is 154.,289
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveAndRetrieveRelationshipEntitiesDirectly,Long Statement,The length of the statement "assertThat(loadedRating.getStars()).as("The relationship properties weren't saved correctly").isEqualTo(filmRating.getStars());" is 127.,289
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveAndRetrieveRelationshipEntitiesDirectly,Magic Number,The method contains a magic number: 2015,289
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveAndRetrieveRelationshipEntitiesDirectly,Magic Number,The method contains a magic number: 2,289
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveAndRetrieveRelationshipEntitiesPreExistingDirectly,Long Statement,The length of the statement "session.query("CREATE " + "(ff:Movie {title:'Fast and Furious XVII'})` " + "(g:User {name: 'Gary'})` "+ "(g)-[:RATED {comment : 'Too many of these films!'}]->(ff)"`Collections.emptyMap());" is 188.,322
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveAndRetrieveRelationshipEntitiesPreExistingDirectly,Long Statement,The length of the statement "assertThat(loadedRating.getMovie().getTitle()).as("The rated film wasn't saved correctly").isEqualTo("Fast and Furious XVII");" is 126.,322
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Long Statement,The length of the statement "Collection<Movie> movies=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Goblet of Fire"));" is 138.,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Long Statement,The length of the statement "movies=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Order of the Phoenix"));" is 126.,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Long Statement,The length of the statement "movies=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Order of the Phoenix"));" is 126.,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Magic Number,The method contains a magic number: 2006,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Magic Number,The method contains a magic number: 2009,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Magic Number,The method contains a magic number: 3,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Magic Number,The method contains a magic number: 2,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSaveAndUpdateMultipleUserRatings,Magic Number,The method contains a magic number: 2,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteAllRatings,Long Statement,The length of the statement "phoenix=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Order of the Phoenix")).iterator().next();" is 145.,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteAllRatings,Long Statement,The length of the statement "goblet=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Goblet of Fire")).iterator().next();" is 138.,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteAllRatings,Magic Number,The method contains a magic number: 2006,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteAllRatings,Magic Number,The method contains a magic number: 2009,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteAllRatings,Magic Number,The method contains a magic number: 3,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteAllRatings,Magic Number,The method contains a magic number: 2,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteAllRatings,Magic Number,The method contains a magic number: 2,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteOneRating,Long Statement,The length of the statement "phoenix=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Order of the Phoenix")).iterator().next();" is 145.,464
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteOneRating,Long Statement,The length of the statement "goblet=session.loadAll(Movie.class`new Filter("title"`ComparisonOperator.EQUALS`"Harry Potter and the Goblet of Fire")).iterator().next();" is 138.,464
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteOneRating,Magic Number,The method contains a magic number: 2006,464
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteOneRating,Magic Number,The method contains a magic number: 2009,464
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteOneRating,Magic Number,The method contains a magic number: 3,464
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteOneRating,Magic Number,The method contains a magic number: 2,464
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToDeleteOneRating,Magic Number,The method contains a magic number: 2,464
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldHydrateTheEndNodeOfAnRECorrectly,Magic Number,The method contains a magic number: 1994,581
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldHydrateTheEndNodeOfAnRECorrectly,Magic Number,The method contains a magic number: 5,581
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldHydrateTheEndNodeOfAnRECorrectly,Magic Number,The method contains a magic number: 2,581
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRoleRelationshipsBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 2016,620
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRoleRelationshipsBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 65,620
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRoleRelationshipsBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 90,620
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRoleRelationshipsBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 26,620
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveMultipleRoleRelationshipsBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 26,620
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveSameRoleTwiceRelationshipBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 2016,640
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveSameRoleTwiceRelationshipBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 2,640
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSaveSameRoleTwiceRelationshipBetweenTheSameTwoObjects,Magic Number,The method contains a magic number: 2,640
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,updateRoleToSameValueResultsInTwoRelationshipBetweenSameObjects,Magic Number,The method contains a magic number: 2016,667
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,updateRoleToSameValueResultsInTwoRelationshipBetweenSameObjects,Magic Number,The method contains a magic number: 2,667
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,updateRoleToSameValueResultsInTwoRelationshipBetweenSameObjects,Magic Number,The method contains a magic number: 2,667
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,updateRoleToSameValueResultsInTwoRelationshipBetweenSameObjects,Magic Number,The method contains a magic number: 2,667
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldRetainREsWhenAStartOrEndNodeIsLoaded,Magic Number,The method contains a magic number: 2,692
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldRetainREsWhenAStartOrEndNodeIsLoaded,Magic Number,The method contains a magic number: 2,692
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadFilmsByTitleUsingCaseInsensitiveWildcardBasedLikeExpression,Magic Number,The method contains a magic number: 1977,710
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadFilmsByTitleUsingCaseInsensitiveWildcardBasedLikeExpression,Magic Number,The method contains a magic number: 2009,710
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadFilmsByTitleUsingCaseInsensitiveWildcardBasedLikeExpression,Magic Number,The method contains a magic number: 2012,710
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadASingleRating,Magic Number,The method contains a magic number: 1994,730
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadASingleRating,Magic Number,The method contains a magic number: 5,730
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadASingleRating,Magic Number,The method contains a magic number: 3,730
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldLoadASingleRating,Magic Number,The method contains a magic number: 3,730
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSortRatings,Magic Number,The method contains a magic number: 1994,767
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSortRatings,Magic Number,The method contains a magic number: 5,767
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSortRatings,Magic Number,The method contains a magic number: 3,767
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSortRatings,Magic Number,The method contains a magic number: 3,767
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldSortRatings,Magic Number,The method contains a magic number: 5,767
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSetREPropertiesToNull,Magic Number,The method contains a magic number: 1994,809
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSetREPropertiesToNull,Magic Number,The method contains a magic number: 5,809
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSetREPropertiesToNull,Magic Number,The method contains a magic number: 5,809
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,shouldBeAbleToSetREPropertiesToNull,Magic Number,The method contains a magic number: 5,809
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 1994,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 2009,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 3,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 3,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 3,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 3,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 3,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 2,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelationshipEntity,Magic Number,The method contains a magic number: 2,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelatedNode,Magic Number,The method contains a magic number: 2,903
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,CineastsRelationshipEntityTest,testFilterOnRelatedNode,Magic Number,The method contains a magic number: 2,903
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.annotated,UserTest,testDeserialiseUserWithArrayOfEnums,Magic Number,The method contains a magic number: 2,34
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.partial,RelationshipEntityPartialMappingTest,testCreateAndReloadActorMultipleRolesAndMovies,Magic Number,The method contains a magic number: 2,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.partial,RelationshipEntityPartialMappingTest,testCreateAndReloadActorMultipleRolesAndMovies,Magic Number,The method contains a magic number: 3,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.cineasts.partial,RelationshipEntityPartialMappingTest,testCreateAndDeleteActorMultipleRolesAndMovies,Magic Number,The method contains a magic number: 2,94
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendsInLongTransactionTest,createPersonAndFriendsInLongTransaction,Magic Number,The method contains a magic number: 2,51
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldSaveFromStartObjectSetsAllObjectIds,Magic Number,The method contains a magic number: 5,57
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldSaveAndReloadAllSetsAllObjectIdsAndReferencesCorrectly,Magic Number,The method contains a magic number: 5,73
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldSaveAndReloadAllSetsAllObjectIdsAndReferencesCorrectly,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldSaveFromRelationshipEntitySetsAllObjectIds,Magic Number,The method contains a magic number: 5,98
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldLoadStartObjectHydratesProperly,Magic Number,The method contains a magic number: 5,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldLoadStartObjectHydratesProperly,Magic Number,The method contains a magic number: 5,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldLoadRelationshipEntityObjectHydratesProperly,Magic Number,The method contains a magic number: 5,137
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldLoadRelationshipEntityObjectHydratesProperly,Magic Number,The method contains a magic number: 5,137
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldRetrieveRelationshipEntitySetPropertyCorrectly,Magic Number,The method contains a magic number: 5,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.friendships,FriendshipsRelationshipEntityTest,shouldRetrieveRelationshipEntitySetPropertyCorrectly,Magic Number,The method contains a magic number: 2,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.companies,CompaniesIntegrationTest,employeesShouldNotBeSetAsOwnersWhenLoadingCompanies,Magic Number,The method contains a magic number: 2,63
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.companies,CompaniesIntegrationTest,employeesAndOwnersShouldBeLoaded,Magic Number,The method contains a magic number: 2,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.companies,CompaniesIntegrationTest,employeesAndOwnersShouldBeLoaded,Magic Number,The method contains a magic number: 2,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.satellite,SatelliteIntegrationTest,shouldLoadPrograms,Magic Number,The method contains a magic number: 4,66
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.satellite,SatelliteIntegrationTest,shouldLoadSatellites,Magic Number,The method contains a magic number: 11,87
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.satellite,SatelliteIntegrationTest,shouldUseLongTransaction,Magic Number,The method contains a magic number: 11,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.satellite,SatelliteIntegrationTest,shouldRollbackLongTransaction,Magic Number,The method contains a magic number: 11,148
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.satellite,SatelliteIntegrationTest,shouldRollbackClosedAndUnCommittedTransaction,Magic Number,The method contains a magic number: 11,184
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.satellite,SatelliteIntegrationTest,shouldCommitLongTransaction,Magic Number,The method contains a magic number: 11,217
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.satellite,SatelliteIntegrationTest,shouldLoadActiveSatellitesByPropertySorted,Long Statement,The length of the statement "Collection<Satellite> satellites=session.loadAll(Satellite.class`new Filter("manned"`ComparisonOperator.EQUALS`"Y")`new SortOrder().add("ref"));" is 144.,280
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldBeAbleToSaveAndLoadPizzaWithToppingsOnly,Magic Number,The method contains a magic number: 2,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldBeAbleToSaveAndLoadPizzaWithToppingsAndCrust,Magic Number,The method contains a magic number: 2,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldBeAbleToSaveAndRetrieveFullyLoadedPizza,Magic Number,The method contains a magic number: 2,179
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldUseOptimizedCypherWhenSavingRelationships,Magic Number,The method contains a magic number: 2,221
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldSyncMappedLabelsFromEntityToTheNode_and_NodeToEntity_noGetterOrSetter,Magic Number,The method contains a magic number: 3,250
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldSyncMappedLabelsFromEntityToTheNode_and_NodeToEntity_noGetterOrSetter,Magic Number,The method contains a magic number: 2,250
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldSyncMappedLabelsFromEntityToTheNode_and_NodeToEntity_noGetterOrSetter,Magic Number,The method contains a magic number: 2,250
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldApplyLabelsWhenSessionClearedBeforeSave,Magic Number,The method contains a magic number: 3,299
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldApplyLabelsWhenSessionClearedBeforeSave,Magic Number,The method contains a magic number: 2,299
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.pizza,PizzaIntegrationTest,shouldRaiseExceptionWhenAmbiguousClassLabelApplied,Long Statement,The length of the statement "Session sessionWithAmbiguousDomain=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.pizza"`"org.neo4j.ogm.domain.music").openSession();" is 139.,335
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.examples.simpleNetwork,SimpleNetworkIntegrationTest,shouldReadIdentityNodeAlongWithStates,Magic Number,The method contains a magic number: 2,57
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.authentication,AuthenticatingHttpDriverTest,testInvalidCredentials,Long Statement,The length of the statement "session=new SessionFactory(getBaseConfigurationBuilder().credentials("neo4j"`"invalid_password").build()`"dummy").openSession();" is 128.,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.identity,IdentityTest,shouldBeAbleToLoadAllNodesOfATypeEvenIfTheyAreConsideredEqual,Magic Number,The method contains a magic number: 2,116
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.identity,IdentityTest,shouldBeAbleToLoadAllREsEvenIfTheyAreConsideredEqual,Magic Number,The method contains a magic number: 2,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.identity,IdentityTest,shouldBeAbleToLoadAllRelatedNodesIfTheyAreConsideredEqual,Magic Number,The method contains a magic number: 2,155
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.identity,IdentityTest,indistinguishableRelationshipsMapAsSingleRelatedEntityInstance,Long Statement,The length of the statement "Map<String`Object> ids=session.query("CREATE " + "(n1:NODE)` (n2:NODE)`" + "(n1)-[:RELATED]->(n2)`"+ "(n1)-[:RELATED]->(n2)"+ "RETURN id(n1) AS id1` id(n2) AS id2"`emptyMap()).queryResults().iterator().next();" is 209.,175
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.postload,PostLoadTest,shouldCallPostLoadMethodWhenEntityIsInSession,Magic Number,The method contains a magic number: 2,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.postload,PostLoadTest,shouldCallPostLoadForEachEntityOnce,Magic Number,The method contains a magic number: 3,90
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.postload,PostLoadTest,shouldPreventAmbiguousPostLoadScenario,Long Statement,The length of the statement "assertThatExceptionOfType(MetadataException.class).isThrownBy(() -> session.loadAll(UserWithBrokenMethodDeclaration.class)).withMessage("Cannot have more than one post load method annotated with @PostLoad for class '%s'"`UserWithBrokenMethodDeclaration.class.getName());" is 270.,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.postload,PostLoadTest,shouldRecognizeOverwrittenPostLoadFromSuperClass,Long Statement,The length of the statement "assertThat(children).isNotEmpty().filteredOn(ChildB.class::isInstance).allSatisfy(child -> assertThat(((ChildB)child).getValue()).isNotNull());" is 143.,133
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,MinimalRelationshipEntityMappingTest,verifyChangeOfRelationshipEnd,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=session.query("MATCH (m:Movie) <- [:ACTS_IN] - (:Actor {name: 'A1'}) RETURN COUNT(m) as cnt"`Collections.emptyMap()).queryResults();" is 169.,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,MinimalRelationshipEntityMappingTest,verifyChangeOfRelationshipEnd,Long Statement,The length of the statement "results=session.query("MATCH (m:Movie) <- [:ACTS_IN] - (:Actor {name: 'A1'}) RETURN COUNT(m) as cnt"`Collections.emptyMap()).queryResults();" is 140.,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,LabelDeterminationTest,indexesShouldBeCreatedForLoadableClassesInHierarchy,Long Statement,The length of the statement "final IndexDescription[] expectedIndexes=new IndexDescription[]{new IndexDescription("DefaultUser"`"id")`new IndexDescription("Admin"`"id")`new IndexDescription("ChildA"`"uuid")`new IndexDescription("ChildB"`"uuid")`new IndexDescription("ChildC"`"uuid")`new IndexDescription("LabeledEntity"`"uuid")`new IndexDescription("EntityWithImplicitPlusAdditionalLabels"`"id")};" is 368.,120
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,LabelDeterminationTest,labelsShouldBeDeleted,Long Statement,The length of the statement "throwAwaySession.query("CREATE (a:EntityWithImplicitPlusAdditionalLabels:Label1:Label2 {id: 'myId'}) RETURN a"`emptyMap());" is 123.,207
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityPartialMappingTest,testCreateActorRoleAndMovie,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Actor {name:'Keanu Reeves'}) -[:ACTS_IN {played:'Neo'}]-> (m:Movie {name:'The Matrix'}) " + "RETURN a` m"`emptyMap()).queryResults()).hasSize(1);" is 180.,63
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityPartialMappingTest,shouldNotDropUnmappedRelationshipModels,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=session.query("MATCH (m) - [r] - (a) WHERE id(a) = $id RETURN r"`Collections.singletonMap("id"`actor.getId())).queryResults();" is 163.,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityPartialMappingTest,shouldMapSingleRelationshipModel,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=session.query("MATCH (m) - [r] - (a) WHERE id(a) = $id RETURN m` r` a"`Collections.singletonMap("id"`actor.getId())).queryResults();" is 169.,98
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,GenericRelationshipEntityTest,loadEntitySuperInterfaceToEntitySuperInterfaceRelationship,Long Statement,The length of the statement "SourceEntityWithEntitySuperInterface source=session.loadAll(SourceEntityWithEntitySuperInterface.class).iterator().next();" is 122.,55
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,GenericRelationshipEntityTest,loadEntitySuperInterfaceToEntityInterfaceRelationship,Long Statement,The length of the statement "SourceEntityWithEntitySuperInterface source=session.loadAll(SourceEntityWithEntitySuperInterface.class).iterator().next();" is 122.,67
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,GenericRelationshipEntityTest,createSuperInterfaceToSuperInterfaceRelationship,Long Statement,The length of the statement "GenericRelationship<SourceEntityWithEntitySuperInterface`TargetEntityWithEntitySuperInterface> relationship=new GenericRelationship<>();" is 136.,102
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,GenericRelationshipEntityTest,createSuperInterfaceToInterfaceRelationship,Long Statement,The length of the statement "GenericRelationship<SourceEntityWithEntitySuperInterface`TargetEntityWithEntityInterface> relationship=new GenericRelationship<>();" is 131.,114
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,GenericRelationshipEntityTest,createInterfaceToSuperInterfaceRelationship,Long Statement,The length of the statement "GenericRelationship<SourceEntityWithEntityInterface`TargetEntityWithEntitySuperInterface> relationship=new GenericRelationship<>();" is 131.,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,GenericRelationshipEntityTest,createInterfaceToInterfaceRelationship,Long Statement,The length of the statement "GenericRelationship<SourceEntityWithEntityInterface`TargetEntityWithEntityInterface> relationship=new GenericRelationship<>();" is 126.,138
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,DegenerateEntityModelTests,init,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (f:Folder { name: 'f' } )" + "CREATE (a:Document { name: 'a' } ) " + "CREATE (b:Document { name: 'b' } ) "+ "CREATE (f)-[:CONTAINS]->(a) "+ "CREATE (f)-[:CONTAINS]->(b) "+ "RETURN id(f) AS fid` id(a) AS aid` id(b) AS bid"`emptyMap()).queryResults();" is 316.,63
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,DegenerateEntityModelTests,testSaveDegenerateDocument,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Folder {name : 'f' } ) -[:CONTAINS]->(b:Document { name: 'b' } ) " + "MATCH (a:Document { name: 'a' } ) " + "WHERE NOT EXISTS((f)-[:CONTAINS]->(a)) return f` a` b"`emptyMap()).queryResults()).hasSize(1);" is 238.,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,DegenerateEntityModelTests,testSaveDegenerateFolder,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Folder {name : 'f' } ) -[:CONTAINS]->(b:Document { name: 'b' } ) " + "MATCH (a:Document { name: 'a' } ) " + "WHERE NOT EXISTS((f)-[:CONTAINS]->(a)) return f` a` b"`emptyMap()).queryResults()).hasSize(0);" is 238.,99
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,DegenerateEntityModelTests,testSaveDegenerateDocumentClone,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Folder { name: 'f' } )-[:CONTAINS]->(b:Document { name: 'b'} ) " + "MATCH (a:Document { name: 'a'} ) " + "WHERE NOT EXISTS((f)-[:CONTAINS]->(a)) RETURN f` a` b"`emptyMap()).queryResults()).hasSize(1);" is 235.,112
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,DegenerateEntityModelTests,testSaveDegenerateFolderClone,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Folder { name: 'f' } ) " + "MATCH (a:Document { name: 'a' } ) " + "MATCH (b:Document { name: 'b' } ) WHERE NOT EXISTS ((f) - [:CONTAINS] -> (a)) AND NOT EXISTS((f) - [:CONTAINS] -> (b)) return f"`emptyMap()).queryResults()).hasSize(1);" is 270.,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,DegenerateEntityModelTests,testSaveChangedDocument,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Folder { name: 'f' } )-[:CONTAINS]-> (b:Document { name: 'b' }) " + "MATCH (g:Folder { name: 'g' } )-[:CONTAINS]-> (a:Document { name: 'a' }) " + "RETURN f` g` a` b"`emptyMap()).queryResults()).hasSize(1);" is 240.,145
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,DegenerateEntityModelTests,testSaveChangedFolder,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Folder { name: 'f' }) -[:CONTAINS]-> (c:Document { name: 'c' } ) " + "MATCH (f)-[:CONTAINS]-> (b:Document { name: 'b' }) " + "MATCH (a:Document { name: 'a' }) "+ "WHERE NOT EXISTS((f) - [:CONTAINS] -> (a)) "+ "RETURN f` a` b` c"`emptyMap()).queryResults()).hasSize(1);" is 303.,161
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistArraysOfPrimitives,Long Statement,The length of the statement "assertThat(session.query("MATCH (i:Individual {name:'Jeff'` age:41` bankBalance: 1000.50` code:0` primitiveIntArray:[1`6`4`7`2]}) " + "return i"`emptyMap()).queryResults()).hasSize(1);" is 184.,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistArraysOfPrimitives,Magic Number,The method contains a magic number: 41,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistArraysOfPrimitives,Magic Number,The method contains a magic number: 1000.50f,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistByteArray,Long Statement,The length of the statement "assertThat(session.query("MATCH (i:Individual {age:41` bankBalance: 1000.50` code:0` primitiveByteArray:'AQIDBAU='}) return i"`emptyMap()).queryResults()).hasSize(1);" is 166.,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistByteArray,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("MATCH (i:Individual) RETURN i.primitiveByteArray AS bytes"`emptyMap()).queryResults();" is 146.,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistByteArray,Magic Number,The method contains a magic number: 41,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistByteArray,Magic Number,The method contains a magic number: 1000.50f,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldDeserializeByteArrays,Long Statement,The length of the statement "long id=(long)session.query("CREATE (i:Individual {age:42` bankBalance: 23` code:6` primitiveByteArray:'AQIDBAU='}) return id(i) as id"`Collections.emptyMap()).queryResults().iterator().next().get("id");" is 203.,102
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldDeserializeNativeByteArrays,Long Statement,The length of the statement "long id=(long)session.query("CREATE (i:EntityWithNativeByteArrays {primitive: $primitive` wrapped: $wrapped` someTuple: $someTuple}) return id(i) as id"`parameters).queryResults().iterator().next().get("id");" is 208.,116
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldSerializeNativeByteArrays,Long Statement,The length of the statement "Map<String`Object> result=session.query("MATCH (i:EntityWithNativeByteArrays) WHERE id(i) = $id RETURN i.primitive AS primitiveArray` i.wrapped AS wrappedArray` i.someTuple as someTuple"`singletonMap("id"`entityWithNativeByteArrays.getId())).queryResults().iterator().next();" is 275.,141
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Long Statement,The length of the statement "assertThat(session.query("MATCH (i:Individual {name:'Gary'` age:36` bankBalance:99.25` code:0` favouriteRadioStations:[97.4` 105.4` 98.2]}) " + "return i"`emptyMap()).queryResults()).hasSize(1);" is 194.,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 36,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 99.25f,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 97.4,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 105.4,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,ArraysMappingTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 98.2,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,AbstractWithGenericPropertyRelationshipTest,oneTimeSetUp,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.persistence.model"`"org.neo4j.ogm.persistence.examples.stage");" is 124.,57
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,AbstractWithGenericPropertyRelationshipTest,shouldReloadEntitiesJustSaved,Magic Number,The method contains a magic number: 2,69
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,AbstractWithGenericPropertyRelationshipTest,testQueryByGenericRelationshipType,Long Identifier,The length of the identifier anotherRelationshipImplementation is 33.,89
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,AbstractWithGenericPropertyRelationshipTest,testGenericTypeInConcreteRelationship,Long Identifier,The length of the identifier anotherRelationshipImplementation is 33.,118
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,AbstractWithGenericPropertyRelationshipTest,testGenericTypeInConcreteRelationship,Long Statement,The length of the statement "AnotherRelationshipImplementation<String> retrieved=session.load(AnotherRelationshipImplementation.class`anotherRelationshipImplementation.id);" is 143.,118
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,oneTimeSetup,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.election"`"org.neo4j.ogm.domain.gh640"`"org.neo4j.ogm.domain.gh641"`"org.neo4j.ogm.domain.gh656"`"org.neo4j.ogm.domain.gh666"`"org.neo4j.ogm.domain.gh704"`"org.neo4j.ogm.domain.gh737"`"org.neo4j.ogm.domain.policy"`"org.neo4j.ogm.domain.typed_relationships");" is 326.,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,testThatABiDirectionalMappingIsEstablishedWhenAMutualRelationshipWithNoAnnotationsIsSaved,Long Statement,The length of the statement "assertThat(session.query("MATCH (n:Policy:DomainObject {name:'Health'})-[:INFLUENCERS]->" + "(m:Person:DomainObject {name:'Jim'})-[:INFLUENCED]->(n) return n` m"`emptyMap()).queryResults()).hasSize(1);" is 201.,88
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,testThatAnAnnotatedRelationshipOnTwoObjectsThatIsSavedFromTheOutgoingCreatesTheCorrectRelationshipInTheGraph,Long Statement,The length of the statement "assertThat(session.query("MATCH (n:Policy:DomainObject {name:'Health'})<-[:WRITES_POLICY]" + "-(m:Person:DomainObject {name:'Jim'}) return n` m"`emptyMap()).queryResults()).hasSize(1);" is 184.,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,testThatAnAnnotatedRelationshipSavedFromTheIncomingSideCreatesTheCorrectRelationshipInTheGraph,Long Statement,The length of the statement "assertThat(session.query("MATCH (n:Policy:DomainObject {name:'Health'})<-[:WRITES_POLICY]" + "-(m:Person:DomainObject {name:'Jim'}) return n` m"`emptyMap()).queryResults()).hasSize(1);" is 184.,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,testPersistAnnotatedSingleRelationshipMappingBothDomainObjectsParticipating,Long Statement,The length of the statement "assertThat(session.query("MATCH (n:Policy:DomainObject {name:'Health'})<-[:WRITES_POLICY]" + "-(m:Person:DomainObject {name:'Jim'}) return n` m"`emptyMap()).queryResults()).hasSize(1);" is 184.,138
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,testAnnotatedRelationshipTypeWhenMethodsAreJsonIgnored,Long Statement,The length of the statement "assertThat(session.query("MATCH (n:Policy:DomainObject {name:'Health'})<-[:AUTHORIZED_POLICY]" + "-(m:Person:DomainObject {name:'Jim'}) return n` m"`emptyMap()).queryResults()).hasSize(1);" is 188.,155
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldAllowVoterToChangeHerMind,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE " + "(a:Voter:Candidate {name:'A'})` " + "(b:Voter:Candidate {name:'B'})` "+ "(v:Voter {name:'V'})-[:CANDIDATE_VOTED_FOR]->(b) "+ "RETURN id(a) AS a_id` id(b) AS b_id` id(v) AS v_id"`emptyMap()).queryResults();" is 277.,170
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldAllowVoterToChangeHerMind,Long Statement,The length of the statement "assertThat(session.query("MATCH (v:Voter {name:'V'})-[:CANDIDATE_VOTED_FOR]->(a:Voter:Candidate {name:'A'}) " + "MATCH (b:Voter:Candidate {name:'B'}) " + " return a` b` v"`emptyMap()).queryResults()).hasSize(1);" is 211.,170
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldDealWithTheSameButNotEqualParentEntities,Long Statement,The length of the statement "Map<String`Object> result=tx.query("CREATE (n1:MyNode {name: 'node1'})\n" + "CREATE (n2:MyNode {name: 'node2'})\n" + "CREATE (n3:MyNode {name: 'node3'})\n"+ "CREATE (n1) - [:REL_TWO] -> (n2)\n"+ "CREATE (n2) - [:REL_ONE] -> (n1)\n"+ "RETURN id(n1) as idOfn1` id(n2) as idOfn2` id(n3) as idOfn3"`emptyMap()).iterator().next();" is 325.,203
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldDealWithTheSameButNotEqualParentEntities,Long Statement,The length of the statement "assertThat(session.query("MATCH (n1:MyNode {name: 'Dirty thing.'}) - [:REL_TWO] -> (n2:MyNode {name: 'node2'}) " + "MATCH (n3:MyNode {name: 'node3'}) - [:REL_ONE] -> (n1)" + "RETURN n1` n2` n3"`emptyMap()).queryResults()).hasSize(1);" is 233.,203
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldDealWithTheSameButNotEqualParentEntitiesWithAssignedId,Long Statement,The length of the statement "tx.query("CREATE (n1:MyNodeWithAssignedId {name: 'node1'})\n" + "CREATE (n2:MyNodeWithAssignedId {name: 'node2'})\n" + "CREATE (n3:MyNodeWithAssignedId {name: 'node3'})\n"+ "CREATE (n1) - [:REL_TWO] -> (n2)\n"+ "CREATE (n2) - [:REL_ONE] -> (n1)\n"+ "RETURN id(n1) as idOfn1` id(n2) as idOfn2` id(n3) as idOfn3"`emptyMap()).iterator().next();" is 341.,250
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldDealWithTheSameButNotEqualParentEntitiesWithAssignedId,Long Statement,The length of the statement "assertThat(session.query("MATCH (n1:MyNodeWithAssignedId {name: 'node1'}) - [:REL_TWO] -> (n2:MyNodeWithAssignedId {name: 'node2'}) " + "MATCH (n3:MyNodeWithAssignedId {name: 'node3'}) - [:REL_ONE] -> (n1) " + "RETURN n1` n2` n3"`emptyMap()).queryResults()).hasSize(1);" is 269.,250
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldKeepOrderOfRelatedElements,Long Statement,The length of the statement "session.query("CREATE (e1:Entity1)\n" + "CREATE (e2:Entity2)\n" + "CREATE (e3:Entity2)\n"+ "CREATE (e4:Entity2)\n"+ "CREATE (e1) - [:MY_RELATIONSHIP {ordering: 1}] -> (e3)\n"+ "CREATE (e1) - [:MY_RELATIONSHIP {ordering: 2}] -> (e4)\n"+ "CREATE (e1) - [:MY_RELATIONSHIP {ordering: 3}] -> (e2)\n"+ "RETURN *"`emptyMap());" is 319.,291
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldKeepOrderOfRelatedElements,Long Statement,The length of the statement "Entity1 entity1=session.queryForObject(Entity1.class`"MATCH (e1:Entity1)-[r:MY_RELATIONSHIP]->(e2:Entity2)\n" + "RETURN e1` r` e2\n" + "ORDER BY r.ordering"`emptyMap());" is 169.,291
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldKeepOrderOfRelatedElements,Magic Number,The method contains a magic number: 2,291
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldKeepOrderOfRelatedElements,Magic Number,The method contains a magic number: 3,291
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldDealWithTypedRelationships,Long Statement,The length of the statement "assertThat(someEntity.getMoreThings()).extracting(t -> (String)t.getSomeThing()).containsExactlyInAnyOrder("Die halbe Wahrheit"`"21");" is 134.,315
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldDealWithTypedRelationships,Magic Number,The method contains a magic number: 42.21,315
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldDealWithTypedRelationships,Magic Number,The method contains a magic number: 42.21,315
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,deletesOfEntitiesWithTheSameButNotEqualParentShouldWork,Long Statement,The length of the statement "Map<String`Object> result=tx.query("CREATE (n1:MyNode {name: 'node1'})\n" + "CREATE (n2:MyNode {name: 'node2'})\n" + "CREATE (n3:MyNode {name: 'node3'})\n"+ "CREATE (n1) - [:REL_TWO] -> (n2)\n"+ "CREATE (n2) - [:REL_ONE] -> (n1)\n"+ "RETURN id(n1) as idOfn1` id(n2) as idOfn2` id(n3) as idOfn3"`Collections.emptyMap()).iterator().next();" is 337.,375
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,deletesOfEntitiesWithTheSameButNotEqualParentShouldWork,Long Statement,The length of the statement "Iterable<Map<String`Object>> actual=sessionFactory.openSession().query("" + " MATCH (n1:MyNode {name: 'Dirty thing.'}) <- [:REL_ONE] -(n2:MyNode {name: 'node2'}) " + " MATCH (n3:MyNode {name: 'node3'}) "+ " RETURN n1`n2`n3`exists((n1) - [:REL_TWO] -> (n2)) as relTwo"`emptyMap()).queryResults();" is 295.,375
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,deletesOfEntitiesWithTheSameButNotEqualParentShouldWork2,Long Statement,The length of the statement "Map<String`Object> result=tx.query("CREATE (n1:MyNode {name: 'node1'})\n" + "CREATE (n2:MyNode {name: 'node2'})\n" + "CREATE (n3:MyNode {name: 'node3'})\n"+ "CREATE (n1) - [:REL_TWO] -> (n2)\n"+ "CREATE (n2) - [:REL_ONE] -> (n1)\n"+ "RETURN id(n1) as idOfn1` id(n2) as idOfn2` id(n3) as idOfn3"`Collections.emptyMap()).iterator().next();" is 337.,422
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,deletesOfEntitiesWithTheSameButNotEqualParentShouldWork2,Long Statement,The length of the statement "Iterable<Map<String`Object>> actual=sessionFactory.openSession().query("" + " MATCH (n1:MyNode {name: 'node1'}) <- [:REL_ONE] - (n2:MyNode {name: 'Dirty thing.'}) " + " MATCH (n3:MyNode {name: 'node3'})"+ " RETURN n1`n2`n3`exists((n1) - [:REL_TWO] -> (n2)) as relTwo"`emptyMap()).queryResults();" is 295.,422
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,deletesOfEntitiesWithTheSameButNotEqualParentShouldWork3,Long Statement,The length of the statement "Map<String`Object> result=tx.query("CREATE (n1:MyNode {name: 'node1'})\n" + "CREATE (n2:MyNode {name: 'node2'})\n" + "CREATE (n3:MyNode {name: 'node3'})\n"+ "CREATE (n2) - [:REL_ONE] -> (n1)\n"+ "RETURN id(n1) as idOfn1` id(n2) as idOfn2` id(n3) as idOfn3"`Collections.emptyMap()).iterator().next();" is 299.,471
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,deletesOfEntitiesWithTheSameButNotEqualParentShouldWork3,Long Statement,The length of the statement "Iterable<Map<String`Object>> actual=sessionFactory.openSession().query("" + " MATCH (n1:MyNode {name: 'Dirty thing.'}) <- [:REL_ONE] - (n2:MyNode {name: 'node2'})" + " MATCH (n3:MyNode {name: 'node3'})"+ " RETURN n1`n2`n3`exists((n1) - [:REL_TWO] - (n2)) as relTwo"`emptyMap()).queryResults();" is 293.,471
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,shouldNotDropUnmappedRelationshipModels,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=session.query("MATCH (v) - [r] - (c) WHERE id(v) = $id RETURN r"`Collections.singletonMap("id"`voter.getId())).queryResults();" is 163.,518
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,patternComprehensionShouldBeMappedToCorrectRelationships,Long Statement,The length of the statement "Map<String`Object> ids=sessionFactory.openSession().query("" + "CREATE (n1:Gh737Node1) - [:RELATION_A] -> (n2:Gh737Node2) RETURN id(n1) AS idn1` id(n2) AS idn2"`Collections.emptyMap()).queryResults().iterator().next();" is 218.,537
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,assertMapping,Long Statement,The length of the statement "Map<String`Object> ids=sessionFactory.openSession().query("" + "MERGE (n3:MessedUpNode2:TypeY) <-[:RELATION_A] - (n1:" + targetclassInfo.neo4jName() + ")-[:RELATION_NOT_MODELED]->(n2:MessedUpNode2:TypeX) "+ "RETURN id(n1) as id1` id(n2) as id2` id(n3) as id3"`Collections.emptyMap()).queryResults().iterator().next();" is 317.,584
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,assertMapping,Long Statement,The length of the statement "String query="MATCH (n1:" + targetclassInfo.neo4jName() + ")-[rel:RELATION_NOT_MODELED]->(n2:`TypeX`) WHERE id(n1) = $id1 RETURN n1` rel` n2";" is 142.,584
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipMappingTest,assertMapping,Long Statement,The length of the statement "Iterable<Map<String`Object>> r=session.query(query`Collections.singletonMap("id1"`(long)ids.get("id1"))`true).queryResults();" is 125.,584
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,oneTimeSetUp,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.cineasts.annotated"`"org.neo4j.ogm.domain.canonical.hierarchies");" is 134.,54
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,testThatAnnotatedRelationshipOnRelationshipEntityCreatesTheCorrectRelationshipTypeInTheGraph,Long Statement,The length of the statement "assertThat(session.query("MATCH (m:Movie {uuid:\"" + hp.getUuid().toString() + "\"}) <-[:ACTS_IN {role:'Harry Potter'}]- "+ "(a:Actor {uuid:\""+ daniel.getUuid().toString()+ "\"}) "+ " WHERE m.title = 'Goblet of Fire' and m.year = 2005 and a.name='Daniel Radcliffe' "+ " return m` a"`emptyMap()).queryResults()).hasSize(1);" is 323.,66
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,testThatAnnotatedRelationshipOnRelationshipEntityCreatesTheCorrectRelationshipTypeInTheGraph,Magic Number,The method contains a magic number: 2005,66
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,testThatRelationshipEntityNameIsUsedAsRelationshipTypeWhenTypeIsNotDefined,Long Statement,The length of the statement "assertThat(session.query("MATCH (m:Movie {uuid:\"" + hp.getUuid().toString() + "\"}) <-[:NOMINATIONS {name:'Saturn Award'` year:2005}]- "+ "(a:Actor {uuid:\""+ daniel.getUuid().toString()+ "\"}) "+ " WHERE m.title = 'Goblet of Fire' and m.year = 2005 and a.name='Daniel Radcliffe'"+ " RETURN m` a"`emptyMap()).queryResults()).hasSize(1);" is 337.,82
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,testThatRelationshipEntityNameIsUsedAsRelationshipTypeWhenTypeIsNotDefined,Magic Number,The method contains a magic number: 2005,82
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,testThatRelationshipEntityNameIsUsedAsRelationshipTypeWhenTypeIsNotDefined,Magic Number,The method contains a magic number: 2005,82
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,shouldBeAbleToSaveAndLoadRelationshipEntityWithNullProperties,Long Statement,The length of the statement "Result result=session.query("MATCH (a:Actor)-[r:ACTS_IN]-(m:Movie) WHERE a.uuid = $actorId RETURN r as rel"`params`true);" is 121.,116
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,RelationshipEntityMappingTest,shouldBeAbleToSaveAndLoadRelationshipEntityWithNullProperties,Magic Number,The method contains a magic number: 1999,116
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,InheritedRelationshipsQueryTest,setUpTestDatabase,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=session.query("MATCH (t:Teacher) WHERE t.name = $name RETURN id(t) as id"`Collections.singletonMap("name"`teacher.getName())).queryResults();" is 178.,51
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,InheritedRelationshipsQueryTest,shouldReturnConcreteClassWithRelationships,Magic Number,The method contains a magic number: 2,76
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,setUpTestDatabase,Long Statement,The length of the statement "mappingMetadata=new MetaData("org.neo4j.ogm.domain.education"`"org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.social"`"org.neo4j.ogm.domain.policy");" is 152.,81
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,setUpMapper,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.policy"`"org.neo4j.ogm.domain.election"`"org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.education"`"org.neo4j.ogm.domain.types"`"org.neo4j.ogm.persistence.examples.versioned_rel_entity");" is 258.,92
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldOnlyTouchChangedRelEntities,Magic Number,The method contains a magic number: 2L,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,getRelVersion,Long Statement,The length of the statement "return session.queryForObject(Long.class`"MATCH (a:A {id: $id1}) <-[r]- (b:B) WHERE id(b) = $id2 AND id(r) = $id3 RETURN r.version"`parameters);" is 144.,140
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotWriteReadOnlyProperties,Long Statement,The length of the statement "Iterable<Member> members=sessionFactory.openSession().query(Member.class`"MATCH (n:User {userName: 'Test123'}) RETURN n"`Collections.emptyMap());" is 145.,149
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldReadReadOnlyProperties,Long Statement,The length of the statement "Iterable<Member> members=sessionFactory.openSession().query(Member.class`"MATCH (n:User {userName: 'Test123'}) RETURN n"`Collections.emptyMap());" is 145.,162
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldReadVirtualProperties,Long Statement,The length of the statement "apocInstalled=session.queryForObject(Long.class`"call apoc.help('apoc.create.vNode') yield name return count(name)"`Collections.emptyMap()) > 0;" is 144.,173
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldReadVirtualProperties,Long Statement,The length of the statement "Iterable<Member> members=session.query(Member.class`"MATCH (n:User {userName: 'Test123'}) \n" + "WITH 'a value' as someComputedValue` n\n" + "CALL apoc.create.vNode(labels(n)` n{.*` someComputedValue}) YIELD node\n"+ "RETURN node\n"`Collections.emptyMap());" is 257.,173
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,createObjectWithLabelsAndProperties,Long Statement,The length of the statement "assertThat(session.query("MATCH (s:Student:DomainObject {name: 'Gary'}) return s"`emptyMap()).queryResults()).isNotEmpty();" is 123.,197
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,updateObjectPropertyAndLabel,Long Statement,The length of the statement "Long sid=(Long)customSession.query("CREATE (s:Student {name:'Sheila Smythe'}) RETURN id(s) AS id"`emptyMap()).queryResults().iterator().next().get("id");" is 153.,209
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,updateObjectPropertyAndLabel,Long Statement,The length of the statement "assertThat(customSession.query("MATCH (s:DomainObject:Student {name:'Sheila Smythe-Jones'}) return s"`emptyMap()).queryResults()).isNotEmpty();" is 143.,209
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,doNothingIfNothingHasChanged,Long Statement,The length of the statement "Long existingNodeId=(Long)session.query("CREATE (s:Student:DomainObject {name:'Sheila Smythe'}) RETURN id(s) AS id"`emptyMap()).queryResults().iterator().next().get("id");" is 171.,231
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,addObjectToCollection,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (c:Course {name:'BSc Computer Science'})-[:STUDENTS]->(s:Student:DomainObject {name:'Gianfranco'}) " + "RETURN id(s) AS student_id` id(c) AS course_id"`emptyMap()).queryResults();" is 246.,251
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,addObjectToCollection,Long Statement,The length of the statement "assertThat(session.queryForObject(Course.class`"MATCH (c:Course)-[students:STUDENTS]->(s:Student:DomainObject) return c` students` s"`emptyMap()).getStudents()).hasSize(2);" is 172.,251
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,addObjectToCollection,Magic Number,The method contains a magic number: 2,251
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,persistManyToOneObjectFromSingletonSide,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (s:School:DomainObject {name:'Waller'})-[:TEACHERS]->(t:Teacher {name:'Mary'})-[:SCHOOL]->(s) " + "RETURN id(s) AS school_id` id(t) AS teacher_id"`emptyMap()).queryResults();" is 241.,283
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,persistManyToOneObjectFromSingletonSide,Long Statement,The length of the statement "assertThat(session.query("MATCH (s:School:DomainObject {name:'Waller'}) " + "MATCH (m:Teacher {name:'Mary'})-[:SCHOOL]->(s) " + "MATCH (s)-[:TEACHERS]->(j:Teacher {name:'Jim'}) "+ "WHERE exists((j)-[:SCHOOL]->(s)) and "+ "exists((s)-[:TEACHERS]->(m)) return s` m` j"`emptyMap()).queryResults()).hasSize(1);" is 306.,283
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotGetIntoAnInfiniteLoopWhenSavingObjectsThatReferenceEachOther,Long Statement,The length of the statement "assertThat(session.query("MATCH (s:School:DomainObject {name:'Hilly Fields'}) " + "MATCH (s)-[:TEACHERS]->(j:Teacher {name:'Miss Jones'})-[:SCHOOL]->(s) " + "MATCH (s)-[:TEACHERS]->(w:Teacher {name:'Mr White'})-[:SCHOOL]->(s)"+ "return j` w` s"`emptyMap()).queryResults()).hasSize(1);" is 284.,318
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldCorrectlyPersistObjectGraphsSeveralLevelsDeep,Long Statement,The length of the statement "assertThat(session.query("MATCH (t:Teacher {name:'Mrs Kapoor'}) " + "MATCH (t)-[:COURSES]->(p:Course {name:'GCSE Physics'}) " + "MATCH (t)-[:COURSES]->(m:Course {name:'A-Level Mathematics'}) "+ "MATCH (p)-[:STUDENTS]->(s:Student:DomainObject {name:'Sheila Smythe'})<-[:STUDENTS]-(m) "+ "MATCH (p)-[:STUDENTS]->(g:Student:DomainObject {name:'Gary Jones'}) "+ "MATCH (m)-[:STUDENTS]->(w:Student:DomainObject {name:'Winston Charles'}) "+ "return t` p` m` s` g` w"`emptyMap()).queryResults()).hasSize(1);" is 500.,336
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldCorrectlyRemoveRelationshipWhenItemIsRemovedFromCollection,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (c:Course {name:'GCSE Music'})` " + "(c)-[:STUDENTS]->(x:Student:DomainObject {name:'Xavier'})` " + "(c)-[:STUDENTS]->(y:Student:DomainObject {name:'Yvonne'})` "+ "(c)-[:STUDENTS]->(z:Student:DomainObject {name:'Zack'}) "+ "RETURN id(c) AS course_id` id(x) AS xid` id(y) AS yid` id(z) AS zid"`emptyMap()).queryResults();" is 387.,370
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldCorrectlyRemoveRelationshipWhenItemIsRemovedFromCollection,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Student:DomainObject {name:'Xavier'}) " + "MATCH (b:Student:DomainObject {name:'Zack'}) " + "MATCH (c:Course {name:'GCSE Music'})-[:STUDENTS]->(:Student:DomainObject {name:'Yvonne'}) return a`b`c"`emptyMap()).queryResults()).hasSize(1);" is 271.,370
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (t:Teacher {name:'Ms Thompson'})` " + "(bs:Course {name:'GNVQ Business Studies'})-[:STUDENTS]->(s:Student:DomainObject {name:'Shivani'})` " + "(dt:Course {name:'GCSE Design & Technology'})-[:STUDENTS]->(j:Student:DomainObject {name:'Jeff'})` "+ "(t)-[:COURSES]->(bs)` (t)-[:COURSES]->(dt) "+ "RETURN id(t) AS teacher_id` id(bs) AS bs_id` id(dt) AS dt_id` id(s) AS s_id"`emptyMap()).queryResults();" is 464.,409
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldCorrectlyRemoveRelationshipWhenItemIsMovedToDifferentCollection,Long Statement,The length of the statement "assertThat(session.query("MATCH (t:Teacher {name:'Ms Thompson'}) -[:COURSES]->(bs:Course {name:'GNVQ Business Studies'}) " + "MATCH (t)-[:COURSES]->(dt:Course {name:'GCSE Design & Technology'}) " + "WHERE exists((dt)-[:STUDENTS]->(:Student:DomainObject {name:'Jeff'})) and "+ "exists((dt)-[:STUDENTS]->(:Student:DomainObject {name:'Shivani'})) "+ "return t` bs` dt"`emptyMap()).queryResults()).hasSize(1);" is 405.,409
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testVariablePersistenceToDepthZero,Long Statement,The length of the statement "assertThat(session.query("MATCH (s:School:DomainObject {name:'Coal Hill'}) RETURN s"`emptyMap()).queryResults()).hasSize(1);" is 124.,450
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistArraysOfPrimitives,Magic Number,The method contains a magic number: 41,469
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistArraysOfPrimitives,Magic Number,The method contains a magic number: 1000.50f,469
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistByteArray,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("MATCH (i:Individual) RETURN i.primitiveByteArray AS bytes"`emptyMap()).queryResults();" is 146.,486
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistByteArray,Magic Number,The method contains a magic number: 41,486
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistByteArray,Magic Number,The method contains a magic number: 1000.50f,486
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Long Statement,The length of the statement "assertThat(session.query("MATCH (a:Individual " + "{name:'Gary'` age:36` bankBalance:99.25` code:0` favouriteRadioStations:[97.4` 105.4` 98.2]}) " + "return a"`emptyMap()).queryResults()).hasSize(1);" is 199.,509
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 36,509
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 99.25f,509
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 97.4,509
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 105.4,509
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldGenerateCypherToPersistCollectionOfBoxedPrimitivesToArrayOfPrimitives,Magic Number,The method contains a magic number: 98.2,509
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testVariablePersistenceToDepthOne,Long Statement,The length of the statement "assertThat(session.query("MATCH (s:School:DomainObject {name:'Coal Hill'})-[:TEACHERS]->(c:Teacher {name:'Clara Oswald'}) " + "MATCH (s)-[:TEACHERS]->(d:Teacher {name:'Danny Pink'}) " + "return s`c`d"`emptyMap())).hasSize(1);" is 225.,529
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testVariablePersistenceToDepthTwo,Long Statement,The length of the statement "assertThat(session.query("MATCH (school:School:DomainObject {name:'Coal Hill'})-[:TEACHERS]->(clara:Teacher {name:'Clara Oswald'}) " + "MATCH (school)-[:TEACHERS]->(danny:Teacher {name:'Danny Pink'}) " + "MATCH (clara)-[:COURSES]->(english:Course {name:'English'}) "+ "MATCH (danny)-[:COURSES]->(maths:Course {name:'Maths'}) "+ "WHERE exists((clara)-[:SCHOOL]->(school)) and "+ "exists((danny)-[:SCHOOL]->(school)) "+ "return school` clara` danny` english` maths"`emptyMap()).queryResults()).hasSize(1);" is 503.,558
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testVariablePersistenceToDepthTwo,Magic Number,The method contains a magic number: 2,558
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldProduceCypherForSavingNewRichRelationshipBetweenNodes,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Forum {name:'SDN FAQs'})-[:HAS_TOPIC {timestamp:1647209}]->(t:Topic) return f"`emptyMap()).queryResults()).hasSize(1);" is 153.,590
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldProduceCypherForSavingNewRichRelationshipBetweenNodes,Magic Number,The method contains a magic number: 1647209L,590
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldProduceCypherForUpdatingExistingRichRelationshipBetweenNodes,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (f:Forum {name:'Spring Data Neo4j'})-[r:HAS_TOPIC {timestamp:20000}]->(t:Topic {inActive:false}) " + "RETURN id(f) AS forumId` id(t) AS topicId` id(r) AS relId"`emptyMap()).queryResults();" is 255.,610
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldProduceCypherForUpdatingExistingRichRelationshipBetweenNodes,Long Statement,The length of the statement "assertThat(session.query("MATCH (f:Forum {name:'Spring Data Neo4j'})-[r:HAS_TOPIC {timestamp:327790}]->(t:Topic {inActive:false}) " + "return f"`emptyMap()).queryResults()).hasSize(1);" is 184.,610
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldProduceCypherForUpdatingExistingRichRelationshipBetweenNodes,Magic Number,The method contains a magic number: 327790L,610
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testCreateFirstReferenceFromOutgoingSide,Long Statement,The length of the statement "assertThat(session.query("MATCH (p:Person:DomainObject { name :'jim' })-[:WRITES_POLICY]->(:Policy:DomainObject { name: 'health' }) " + "return p"`emptyMap()).queryResults()).hasSize(1);" is 186.,635
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testCreateFirstReferenceFromIncomingSide,Long Statement,The length of the statement "assertThat(session.query("MERGE (p:Person:DomainObject { name :'jim' })-[:WRITES_POLICY]->(:Policy:DomainObject { name: 'health' }) " + "return p"`emptyMap()).queryResults()).hasSize(1);" is 186.,652
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testDeleteExistingReferenceFromOutgoingSide,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (j:Person:DomainObject { name :'jim' })" + "-[r:WRITES_POLICY]->" + "(h:Policy:DomainObject { name: 'health' }) "+ "RETURN id(j) AS jid` id(r) AS rid` id(h) AS hid"`emptyMap()).queryResults();" is 259.,668
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testDeleteExistingReferenceFromOutgoingSide,Long Statement,The length of the statement "assertThat(session.query("MATCH (pe:Person:DomainObject { name :'jim' })" + "WITH pe MATCH (po:Policy:DomainObject { name: 'health' }) return pe` po"`emptyMap()).queryResults()).hasSize(1);" is 189.,668
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testDeleteExistingReferenceFromIncomingSide,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (j:Person:DomainObject { name :'jim' })" + "-[r:WRITES_POLICY]->" + "(h:Policy:DomainObject { name: 'health' }) "+ "RETURN id(j) AS jid` id(r) AS rid` id(h) AS hid"`emptyMap()).queryResults();" is 259.,702
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testDeleteExistingReferenceFromIncomingSide,Long Statement,The length of the statement "assertThat(session.query("MATCH (pe:Person:DomainObject { name :'jim' }) " + "WITH pe MATCH (po:Policy:DomainObject { name: 'health' }) return pe` po"`emptyMap()).queryResults()).hasSize(1);" is 190.,702
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testAppendReferenceFromOutgoingSide,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (j:Person:DomainObject { name :'jim' })" + "CREATE (h:Policy:DomainObject { name: 'health' }) " + "CREATE (i:Policy:DomainObject { name: 'immigration' }) "+ "CREATE (j)-[r:WRITES_POLICY]->(h) "+ "RETURN id(j) AS jid` id(r) AS rid` id(h) AS hid` id(i) AS iid"`emptyMap()).queryResults();" is 353.,738
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testAppendReferenceFromOutgoingSide,Long Statement,The length of the statement "assertThat(session.query("MATCH (j:Person:DomainObject { name :'jim' })-[:WRITES_POLICY]-> (h:Policy:DomainObject { name: 'health' })` " + "(j)-[:WRITES_POLICY]->(i:Policy:DomainObject { name: 'immigration' }) " + "return j` h` i"`emptyMap()).queryResults()).hasSize(1);" is 270.,738
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testAppendReferenceFromIncomingSide,Long Statement,The length of the statement "Iterable<Map<String`Object>> executionResult=session.query("CREATE (j:Person:DomainObject { name :'jim' })" + "CREATE (h:Policy:DomainObject { name: 'health' }) " + "CREATE (i:Policy:DomainObject { name: 'immigration' }) "+ "CREATE (j)-[r:WRITES_POLICY]->(h) "+ "RETURN id(j) AS jid` id(r) AS rid` id(h) AS hid` id(i) AS iid"`emptyMap()).queryResults();" is 353.,775
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testAppendReferenceFromIncomingSide,Long Statement,The length of the statement "assertThat(session.query("MATCH (j:Person:DomainObject { name :'jim' })-[:WRITES_POLICY]->(h:Policy:DomainObject { name: 'health' }) " + "MATCH (j)-[:WRITES_POLICY]->(i:Policy:DomainObject { name: 'immigration' }) " + "return j` h` i"`emptyMap()).queryResults()).hasSize(1);" is 274.,775
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,testAppendReferenceFromIncomingSide,Magic Number,The method contains a magic number: 2,775
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldThrowInvalidRelationshipTargetExceptionOnNullElements,Long Statement,The length of the statement "assertThatExceptionOfType(InvalidRelationshipTargetException.class).isThrownBy(() -> session.save(course)).withMessage("The relationship 'STUDENTS' from 'org.neo4j.ogm.domain.education.Course' to 'org.neo4j.ogm.domain.education.Student' stored on '#students' contains 'null'` which is an invalid target for this relationship.'");" is 329.,821
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpNestedLists,Magic Number,The method contains a magic number: 4,848
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpNestedLists,Magic Number,The method contains a magic number: 2L,848
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpNestedLists,Magic Number,The method contains a magic number: 3L,848
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedNestedLists,Long Statement,The length of the statement "assertThat(columns[1]).isInstanceOf(Long[][].class).satisfies(c -> assertThat(((Long[][])c)[0]).containsExactly(23L`42L));" is 122.,865
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedNestedLists,Magic Number,The method contains a magic number: 4,865
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedNestedLists,Magic Number,The method contains a magic number: 2L,865
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedNestedLists,Magic Number,The method contains a magic number: 23L,865
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedNestedLists,Magic Number,The method contains a magic number: 42L,865
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedNestedCollectedLists,Long Statement,The length of the statement "Result result=session.query("UNWIND range(0`2) AS x WITH collect(x) AS x RETURN collect(x) AS nested_list"`Collections.emptyMap());" is 131.,882
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedNestedCollectedLists,Magic Number,The method contains a magic number: 2L,882
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedTypedLists,Long Statement,The length of the statement "Result result=session.query("MATCH (n:Teacher) RETURN n` [[0`1`2]` [[\"a\"`\"b\"]]` [\"c\"]` \"d\"] as nested_list"`Collections.emptyMap());" is 140.,898
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedTypedLists,Long Statement,The length of the statement "assertThat(columns[1]).isInstanceOf(String[][].class).satisfies(c -> assertThat(((String[][])c)[0]).containsExactly("a"`"b"));" is 126.,898
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedTypedLists,Magic Number,The method contains a magic number: 4,898
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedTypedLists,Magic Number,The method contains a magic number: 2L,898
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedTypedLists,Magic Number,The method contains a magic number: 2,898
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,shouldNotMessUpMixedTypedLists,Magic Number,The method contains a magic number: 3,898
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,nestedListsWithDomainModel,Long Statement,The length of the statement "Result result=session.query("match (m:Teacher) with collect(m) as x return collect(x) as listOfListsOfThings"`Collections.emptyMap());" is 134.,930
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,nestedListsWithDomainModel,Magic Number,The method contains a magic number: 2,930
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,nestedNestedLists,Long Statement,The length of the statement "Result result=session.query("match (m:Teacher) where m.name = 'T0' or m.name = 'T1' with collect(m) as x \n" + "match (m:Teacher {name: \"T2\"}) with x` collect(m) as y\n" + "with [x`y] as x\n"+ "return collect(x) as listOfListsOfThings"`Collections.emptyMap());" is 262.,953
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,nestedNestedLists,Long Statement,The length of the statement "assertThat((List<List<?>>)firstInnerList).hasSize(2).satisfies(EntityGraphMapperTest::assertContentOfList`Index.atIndex(0)).satisfies(l -> assertThat(l).hasSize(1).extracting(v -> ((Teacher)v).getName()).containsExactly("T2")`Index.atIndex(1));" is 244.,953
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,nestedNestedLists,Magic Number,The method contains a magic number: 3,953
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,nestedNestedLists,Magic Number,The method contains a magic number: 2,953
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,collectedListOfNodesFromPathsShouldNotCollapse,Long Statement,The length of the statement "Result result=session.query("MATCH p=(:School) -[*]->(:Course) RETURN COLLECT (DISTINCT nodes(p)) AS paths"`Collections.emptyMap());" is 132.,993
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,collectedListOfNodesFromPathsShouldNotCollapse,Long Statement,The length of the statement "assertThat((List<?>)v).extracting(Object::getClass).extracting(Class::getSimpleName).containsExactly("School"`"Teacher"`"Course");" is 130.,993
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.model,EntityGraphMapperTest,emptyCollectedNodeList,Long Statement,The length of the statement "Result result=session.query("MATCH p=(:AAA)-[*]->(:BBB) RETURN COLLECT (DISTINCT nodes(p)) AS paths"`Collections.emptyMap());" is 125.,1056
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,annotatedChildWithAnnotatedInterface,Long Statement,The length of the statement "assertThat(session.loadAll(AnnotatedInterfaceWithSingleImpl.class).iterator().next().getClass().getName()).isEqualTo("org.neo4j.ogm.domain.hierarchy.domain.annotated.AnnotatedChildWithAnnotatedInterface");" is 205.,329
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,plainChildOfTransientParent,Long Statement,The length of the statement "assertThatThrownBy(() -> session.save(new PlainChildOfTransientParent())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("is not a valid entity class");" is 171.,383
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,plainChildOfTransientInterface,Long Statement,The length of the statement "assertThatThrownBy(() -> session.save(new PlainChildOfTransientInterface())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("is not a valid entity class");" is 174.,392
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,transientChildWithPlainConcreteParent,Long Statement,The length of the statement "assertThatThrownBy(() -> session.save(new TransientChildWithPlainConcreteParent())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("is not a valid entity class");" is 181.,401
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,transientSingleClass,Long Statement,The length of the statement "assertThatThrownBy(() -> session.save(new TransientSingleClass())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("is not a valid entity class");" is 164.,410
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,transientSingleClassWithId,Long Statement,The length of the statement "assertThatThrownBy(() -> session.save(new TransientSingleClassWithId())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("is not a valid entity class");" is 170.,417
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldSaveHierarchy2,Long Statement,The length of the statement "assertThat(session.queryForObject(Female.class`"MATCH (f:Female:Person{name:'Daniela'}) return f"`emptyMap())).isNotNull();" is 123.,470
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldSaveHierarchy2,Long Statement,The length of the statement "assertThat(session.queryForObject(Bloke.class`"MATCH (b:Bloke:Male:Person{name:'Adam'}) return b"`emptyMap())).isNotNull();" is 123.,470
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchyAndRetrieveBySuperclass,Magic Number,The method contains a magic number: 3,485
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchyAndRetrieveBySuperclass,Magic Number,The method contains a magic number: 2,485
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldNotCountAbstractNonAnnotatedClass,Long Statement,The length of the statement "assertThat(session.countEntitiesOfType(Entity.class)).as("Shouldn't be able to count by non-annotated` abstract classes").isEqualTo(0);" is 135.,519
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldNotCountAbstractNonAnnotatedClass,Magic Number,The method contains a magic number: 3,519
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldNotCountAbstractNonAnnotatedClass,Magic Number,The method contains a magic number: 2,519
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldNotDeleteAbstractNonAnnotatedClass,Magic Number,The method contains a magic number: 3,538
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy2,Long Statement,The length of the statement "session.query("CREATE (:Female:Person:Entity {name:'Daniela'})`" + "(:Male:Person:Entity {name:'Michal'})`" + "(:Bloke:Male:Person:Entity {name:'Adam'})"`emptyMap());" is 166.,553
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy2,Magic Number,The method contains a magic number: 3,553
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy2,Magic Number,The method contains a magic number: 2,553
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy3,Long Statement,The length of the statement "session.query("CREATE (:Female:Person:Entity {name:'Daniela'})`" + "(:Male:Person:Entity {name:'Michal'})`" + "(:Bloke:Male:Person:Entity {name:'Adam'})"`emptyMap());" is 166.,590
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy3,Magic Number,The method contains a magic number: 3,590
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy3,Magic Number,The method contains a magic number: 2,590
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy4,Long Statement,The length of the statement "customSession.query("CREATE (:Female {name:'Daniela'})`" + "(:Male {name:'Michal'})`" + "(:Bloke:Male {name:'Adam'})"`emptyMap());" is 130.,621
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy4,Magic Number,The method contains a magic number: 2,621
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldReadHierarchy5,Long Statement,The length of the statement "customSession.query("CREATE (:Female {name:'Daniela'})`" + "(:Male {name:'Michal'})`" + "(:Bloke {name:'Adam'})"`emptyMap());" is 125.,649
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldFailWithConflictingHierarchies,Long Statement,The length of the statement "SessionFactory sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.hierarchy.domain"`"org.neo4j.ogm.domain.hierarchy.conflicting");" is 147.,698
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types,ClassHierarchiesIntegrationTest,shouldLoadRelatedSuperclasses,Long Statement,The length of the statement "session.query("CREATE (f1:Female:Person {name:'f1'})`" + "(m1:Male:Person {name:'m1'})`" + "(c1:Female:Person {name:'c1'})`"+ "(m1)-[:CHILD]->(c1)"`emptyMap());" is 160.,710
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint2d,Magic Number,The method contains a magic number: 2,52
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint2d,Magic Number,The method contains a magic number: 2,52
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint2d,Magic Number,The method contains a magic number: 2,52
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint2d,Magic Number,The method contains a magic number: 2,52
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint2dNoMatch,Magic Number,The method contains a magic number: 2,69
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint2dNoMatch,Magic Number,The method contains a magic number: 2,69
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint2dNoMatch,Magic Number,The method contains a magic number: 2,69
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3d,Magic Number,The method contains a magic number: 2,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3d,Magic Number,The method contains a magic number: 3,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3d,Magic Number,The method contains a magic number: 2,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3d,Magic Number,The method contains a magic number: 2,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3d,Magic Number,The method contains a magic number: 3,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3d,Magic Number,The method contains a magic number: 2,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3dNoMatch,Magic Number,The method contains a magic number: 2,103
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3dNoMatch,Magic Number,The method contains a magic number: 3,103
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3dNoMatch,Magic Number,The method contains a magic number: 2,103
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3dNoMatch,Magic Number,The method contains a magic number: 2,103
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForCartesianPoint3dNoMatch,Magic Number,The method contains a magic number: 3,103
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2d,Magic Number,The method contains a magic number: 55.6093093,120
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2d,Magic Number,The method contains a magic number: 13.0004377,120
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2d,Magic Number,The method contains a magic number: 55.611851,120
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2d,Magic Number,The method contains a magic number: 12.9949028,120
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2d,Magic Number,The method contains a magic number: 449,120
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2dNoMatch,Magic Number,The method contains a magic number: 55.6093093,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2dNoMatch,Magic Number,The method contains a magic number: 13.0004377,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2dNoMatch,Magic Number,The method contains a magic number: 55.611851,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2dNoMatch,Magic Number,The method contains a magic number: 12.9949028,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint2dNoMatch,Magic Number,The method contains a magic number: 448,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3d,Magic Number,The method contains a magic number: 55.6093093,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3d,Magic Number,The method contains a magic number: 13.0004377,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3d,Magic Number,The method contains a magic number: 5,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3d,Magic Number,The method contains a magic number: 55.611851,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3d,Magic Number,The method contains a magic number: 12.9949028,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3d,Magic Number,The method contains a magic number: 15,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3d,Magic Number,The method contains a magic number: 448.9591,158
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3dNoMatch,Magic Number,The method contains a magic number: 55.6093093,177
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3dNoMatch,Magic Number,The method contains a magic number: 13.0004377,177
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3dNoMatch,Magic Number,The method contains a magic number: 5,177
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3dNoMatch,Magic Number,The method contains a magic number: 55.611851,177
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3dNoMatch,Magic Number,The method contains a magic number: 12.9949028,177
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3dNoMatch,Magic Number,The method contains a magic number: 15,177
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.filter,DistanceComparisonTestBase,filterForGeographicPoint3dNoMatch,Magic Number,The method contains a magic number: 448.950,177
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,EnumMapPropertiesTest,shouldMapMapAttributeToProperties,Long Statement,The length of the statement "UserWithEnumMap loadedObject=(UserWithEnumMap)session.query("MATCH (n) where id(n)=" + user.getId() + " return n"`emptyMap()).queryResults().iterator().next().get("n");" is 168.,53
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,EnumMapPropertiesTest,shouldMapMapAttributeToProperties,Magic Number,The method contains a magic number: 2,53
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,EnumMapPropertiesTest,shouldMapNodePropertiesToPropertiesAttribute,Long Statement,The length of the statement "session.query("CREATE (u:User {`name`:'Frantisek'` `myProperties.CITY`:'London'` `myProperties.ZIP_CODE`:'SW1A 1AA'})"`emptyMap());" is 131.,73
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,EnumMapPropertiesTest,shouldMapNodePropertiesToPropertiesAttribute,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldHandleEnumsAsKey,Long Statement,The length of the statement "User loadedObject=(User)session.query("MATCH (n) where id(n)= $id return n"`Collections.singletonMap("id"`user.getId())).queryResults().iterator().next().get("n");" is 163.,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldHandleEnumsAsValues,Long Statement,The length of the statement "User loadedObject=(User)session.query("MATCH (n) where id(n)= $id AND n.`enumAValuesByString.aa` = 'VALUE_AA' and n.`enumBValuesByEnum.VALUE_AA` = 'VALUE_BA' return n"`Collections.singletonMap("id"`user.getId())).queryResults().iterator().next().get("n");" is 255.,92
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldHandleFilteredProperties,Long Statement,The length of the statement "User loadedObject=(User)session.query("MATCH (n) where id(n)=" + user.getId() + " return n"`emptyMap()).queryResults().iterator().next().get("n");" is 146.,116
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldNotAllowKeysOtherThanStringAndEnum,Magic Number,The method contains a magic number: 123,151
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapPropertiesAttributeToNodeProperties,Long Statement,The length of the statement "User loadedObject=(User)session.query("MATCH (n) where id(n)=" + user.getId() + " return n"`emptyMap()).queryResults().iterator().next().get("n");" is 146.,166
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapPropertiesAttributeWithNestedMapToNodeProperties,Long Statement,The length of the statement "User loadedObject=(User)session.query("MATCH (n) where id(n)=" + user.getId() + " return n"`emptyMap()).queryResults().iterator().next().get("n");" is 146.,182
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapPropertiesAttributeWithPrefixToNodeProperties,Long Statement,The length of the statement "User loadedObject=(User)session.query("MATCH (n) where id(n)=" + user.getId() + " return n"`emptyMap()).queryResults().iterator().next().get("n");" is 146.,199
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapPropertiesAttributeWithDelimiterToNodeProperties,Long Statement,The length of the statement "User loadedObject=(User)session.query("MATCH (n) where id(n)=" + user.getId() + " return n"`emptyMap()).queryResults().iterator().next().get("n");" is 146.,215
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttribute,Long Statement,The length of the statement "session.query("CREATE (u:User {`name`:'Frantisek'` `myProperties.city`:'London'` " + "`myProperties.zipCode`:'SW1A 1AA'})"`emptyMap());" is 135.,231
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttribute,Long Statement,The length of the statement "assertThat(user.getMyProperties()).hasSize(2).doesNotContainKey("name").containsEntry("city"`"London").containsEntry("zipCode"`"SW1A 1AA");" is 139.,231
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttribute,Magic Number,The method contains a magic number: 2,231
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNestedNodePropertiesToPropertiesAttributeAsNestedMap,Long Statement,The length of the statement "session.query("CREATE (u:User {`name`:'Frantisek'` " + "`myProperties.address.city`:'London'` " + "`myProperties.address.zipCode`:'SW1A 1AA'})"`emptyMap());" is 156.,245
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNestedNodePropertiesToPropertiesAttributeAsNestedMap,Magic Number,The method contains a magic number: 2,245
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttributeWithPrefix,Long Statement,The length of the statement "session.query("CREATE (u:User {`name`:'Frantisek'` `myPrefix.city`:'London'` `myPrefix.zipCode`:'SW1A 1AA'})"`emptyMap());" is 122.,260
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttributeWithPrefix,Long Statement,The length of the statement "assertThat(user.getPrefixedProperties()).hasSize(2).doesNotContainKey("name").containsEntry("city"`"London").containsEntry("zipCode"`"SW1A 1AA");" is 145.,260
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttributeWithPrefix,Magic Number,The method contains a magic number: 2,260
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttributeWithDelimiter,Long Statement,The length of the statement "session.query("CREATE (u:User {`name`:'Frantisek'` " + "`delimiterProperties__city`:'London'` " + "`delimiterProperties__zipCode`:'SW1A 1AA'})"`emptyMap());" is 156.,273
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttributeWithDelimiter,Long Statement,The length of the statement "assertThat(user.getDelimiterProperties()).hasSize(2).doesNotContainKey("name").containsEntry("city"`"London").containsEntry("zipCode"`"SW1A 1AA");" is 146.,273
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapNodePropertiesToPropertiesAttributeWithDelimiter,Magic Number,The method contains a magic number: 2,273
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 5L,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 7.0d,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 5L,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 6L,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 7L,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 7.0d,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 8.0d,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldSaveAndLoadMapOfAllPropertyTypes,Magic Number,The method contains a magic number: 9.0d,288
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldThrowExceptionWhenMappingNonCypherType,Magic Number,The method contains a magic number: 18,320
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapSpecificValueType,Magic Number,The method contains a magic number: 18,338
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldMapSpecificValueType,Magic Number,The method contains a magic number: 18,338
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldConvertNestedMapWithList,Magic Number,The method contains a magic number: 2,352
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldConvertNestedMapWithList,Magic Number,The method contains a magic number: 3,352
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldConvertNestedMapWithList,Magic Number,The method contains a magic number: 4,352
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldBeAbleToDeletePropertiesAgain,Magic Number,The method contains a magic number: 2,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldBeAbleToDeletePropertiesAgain,Magic Number,The method contains a magic number: 2,367
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldNotDeleteUnmappedProperties,Long Statement,The length of the statement "Iterator<Map<String`Object>> result=session.query("MATCH (u:SomeNode) WHERE id(u) = $id RETURN u.name as name` u.`myPrefix.anotherProperty` as anotherProperty"`Collections.singletonMap("id"`someNode.getId())).iterator();" is 220.,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldNotDeleteUnmappedProperties,Long Statement,The length of the statement "result.forEachRemaining(m -> assertThat(m).hasSize(2).containsEntry("name"`"Unmapped").containsEntry("anotherProperty"`"anotherValue"));" is 136.,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,shouldNotDeleteUnmappedProperties,Magic Number,The method contains a magic number: 2,402
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,manualConversionShouldSupportPropertiesWithouthPrefix,Long Statement,The length of the statement "assertThat(user.getManualProperties()).containsOnly(new HashMap.SimpleEntry<>("a"`1L)`new HashMap.SimpleEntry<>("b"`2L));" is 121.,434
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,manualConversionShouldSupportPropertiesWithouthPrefix,Magic Number,The method contains a magic number: 2L,434
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.properties,PropertiesTest,manualConversionShouldSupportPropertiesWithouthPrefix,Magic Number,The method contains a magic number: 2L,434
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 36,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 99.99f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 10,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 301,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 101,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 215.50f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 97.4,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 105.4,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 98.2,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 1.1f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 2.2f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 1000,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 2000,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 3000,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 100,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 200,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 10.5f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 20.5f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 30.5f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 36,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 99.99f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 10,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 301,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 101,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 215.50f,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 3,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 97.4,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 98.2,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 105.4,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 2,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 5,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 2,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 3,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 2,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 3,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 2,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldLoadDoubleWhenDecimalIsMissing,Magic Number,The method contains a magic number: 31,164
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldConvertToLongInsteadOfCasting,Magic Number,The method contains a magic number: 2L,171
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldConvertToLongInsteadOfCasting,Magic Number,The method contains a magic number: 3L,171
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,NumericConversionTest,shouldMapInitializedLongList,Long Statement,The length of the statement "Result result=session.query("MATCH (m:Immortal) WHERE ID(m) = $id RETURN m"`Collections.singletonMap("id"`immortal.getId()));" is 125.,187
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveEnums,Long Statement,The length of the statement "assertThat(luanne.getInProgressEducation()[0].equals(Education.MASTERS) || luanne.getInProgressEducation()[1].equals(Education.MASTERS)).isTrue();" is 146.,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveEnums,Long Statement,The length of the statement "assertThat(luanne.getInProgressEducation()[0].equals(Education.PHD) || luanne.getInProgressEducation()[1].equals(Education.PHD)).isTrue();" is 138.,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveEnums,Magic Number,The method contains a magic number: 2,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveEnumsAsResult,Long Statement,The length of the statement "assertThat(luanne.getInProgressEducation()[0].equals(Education.MASTERS) || luanne.getInProgressEducation()[1].equals(Education.MASTERS)).isTrue();" is 146.,100
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveEnumsAsResult,Long Statement,The length of the statement "assertThat(luanne.getInProgressEducation()[0].equals(Education.PHD) || luanne.getInProgressEducation()[1].equals(Education.PHD)).isTrue();" is 138.,100
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveEnumsAsResult,Magic Number,The method contains a magic number: 2,100
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveDates,Magic Number,The method contains a magic number: 20000,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveDates,Magic Number,The method contains a magic number: 40000,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveDates,Magic Number,The method contains a magic number: 100000,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveDates,Magic Number,The method contains a magic number: 20000,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveDates,Magic Number,The method contains a magic number: 2,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveDates,Magic Number,The method contains a magic number: 2,126
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,instantsWithCustomFormatAndTZShouldWork,Long Statement,The length of the statement "Iterable<Map<String`Object>> results=session.query("MATCH (m:Memo) WHERE id(m) = $id RETURN m.actionedAsInstantWithCustomFormat1 as a1` m.actionedAsInstantWithCustomFormat2 as a2"`Collections.singletonMap("id"`loadedMemo.getId())).queryResults();" is 246.,191
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,instantsWithCustomFormatAndTZShouldWork,Magic Number,The method contains a magic number: 2020,191
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,instantsWithCustomFormatAndTZShouldWork,Magic Number,The method contains a magic number: 3,191
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,instantsWithCustomFormatAndTZShouldWork,Magic Number,The method contains a magic number: 6,191
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,instantsWithCustomFormatAndTZShouldWork,Magic Number,The method contains a magic number: 16,191
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,instantsWithCustomFormatAndTZShouldWork,Magic Number,The method contains a magic number: 6,191
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,instantsWithCustomFormatAndTZShouldWork,Magic Number,The method contains a magic number: 23,191
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveJava8Dates,Magic Number,The method contains a magic number: 1196673330001L,217
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDate,Magic Number,The method contains a magic number: 2017,239
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDate,Magic Number,The method contains a magic number: 7,239
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDate,Magic Number,The method contains a magic number: 23,239
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveLocalDateTime,Magic Number,The method contains a magic number: 2017,261
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveLocalDateTime,Magic Number,The method contains a magic number: 7,261
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveLocalDateTime,Magic Number,The method contains a magic number: 23,261
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveLocalDateTime,Magic Number,The method contains a magic number: 2,261
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveLocalDateTime,Magic Number,The method contains a magic number: 3,261
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDateTime,Magic Number,The method contains a magic number: 2017,280
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDateTime,Magic Number,The method contains a magic number: 7,280
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDateTime,Magic Number,The method contains a magic number: 23,280
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDateTime,Magic Number,The method contains a magic number: 2,280
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveListOfLocalDateTime,Magic Number,The method contains a magic number: 3,280
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTime,Magic Number,The method contains a magic number: 2017,302
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTime,Magic Number,The method contains a magic number: 7,302
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTime,Magic Number,The method contains a magic number: 23,302
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTime,Magic Number,The method contains a magic number: 2,302
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTime,Magic Number,The method contains a magic number: 3,302
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTimeList,Magic Number,The method contains a magic number: 2017,322
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTimeList,Magic Number,The method contains a magic number: 7,322
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTimeList,Magic Number,The method contains a magic number: 23,322
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTimeList,Magic Number,The method contains a magic number: 2,322
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveOffsetDateTimeList,Magic Number,The method contains a magic number: 3,322
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 1000,344
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 123456,344
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 567890,344
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveNumbers,Magic Number,The method contains a magic number: 1000,344
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveIntegerFloats,Magic Number,The method contains a magic number: 10f,404
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.convertible,ConvertibleIntegrationTest,shouldSaveAndRetrieveIntegerFloats,Magic Number,The method contains a magic number: 18277.55f,404
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,convertPersistAndLoadTemporalAmounts,Long Statement,The length of the statement "long id=session.queryForObject(Long.class`"CREATE (s:`DatesTestBase$Sometime` {temporalAmount: duration('P13Y370M45DT25H120M')}) RETURN id(s)"`Collections.emptyMap());" is 167.,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Long Statement,The length of the statement "Map<String`Object> result=sessionFactory.unwrap(GraphDatabaseService.class).executeTransactionally("MATCH (n:Test) RETURN n.a` n.b"`Map.of()`r -> r.next());" is 156.,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 2018,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 11,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 14,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 2018,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 10,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 11,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 15,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 24,72
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesEmbeddedTest,shouldObeyExplicitConversionOfNativeTypes,Long Statement,The length of the statement "Map<String`Object> result=sessionFactory.unwrap(GraphDatabaseService.class).executeTransactionally("MATCH (n:`DatesTestBase$Sometime`) WHERE id(n) = $id RETURN n.convertedLocalDate AS convertedLocalDate"`params`r -> r.next());" is 226.,96
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDate,Magic Number,The method contains a magic number: 2018,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDate,Magic Number,The method contains a magic number: 11,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDate,Magic Number,The method contains a magic number: 15,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTime,Magic Number,The method contains a magic number: 2018,81
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTime,Magic Number,The method contains a magic number: 11,81
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTime,Magic Number,The method contains a magic number: 15,81
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTime,Magic Number,The method contains a magic number: 8,81
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTime,Magic Number,The method contains a magic number: 36,81
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDate,Magic Number,The method contains a magic number: 2018,94
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDate,Magic Number,The method contains a magic number: 11,94
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDate,Magic Number,The method contains a magic number: 15,94
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDate,Magic Number,The method contains a magic number: 8,94
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDate,Magic Number,The method contains a magic number: 36,94
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDuration,Magic Number,The method contains a magic number: 32,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDuration,Magic Number,The method contains a magic number: 25,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDuration,Magic Number,The method contains a magic number: 61,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDuration,Magic Number,The method contains a magic number: 61,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDuration,Magic Number,The method contains a magic number: 2123,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadPeriods,Magic Number,The method contains a magic number: 13,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadPeriods,Magic Number,The method contains a magic number: 13,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadPeriods,Magic Number,The method contains a magic number: 400,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 2019,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 6,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 17,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 13,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 31,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 2018,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 11,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 14,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 2018,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 10,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 11,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 15,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadZonedDateTimeInMap,Magic Number,The method contains a magic number: 24,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateForRelationship,Magic Number,The method contains a magic number: 2018,155
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateForRelationship,Magic Number,The method contains a magic number: 11,155
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateForRelationship,Magic Number,The method contains a magic number: 15,155
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTimeForRelationship,Magic Number,The method contains a magic number: 2018,168
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTimeForRelationship,Magic Number,The method contains a magic number: 11,168
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTimeForRelationship,Magic Number,The method contains a magic number: 15,168
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTimeForRelationship,Magic Number,The method contains a magic number: 8,168
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadLocalDateTimeForRelationship,Magic Number,The method contains a magic number: 36,168
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDateForRelationship,Magic Number,The method contains a magic number: 2018,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDateForRelationship,Magic Number,The method contains a magic number: 11,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDateForRelationship,Magic Number,The method contains a magic number: 15,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDateForRelationship,Magic Number,The method contains a magic number: 8,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDateForRelationship,Magic Number,The method contains a magic number: 36,181
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDurationForRelationship,Magic Number,The method contains a magic number: 32,195
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDurationForRelationship,Magic Number,The method contains a magic number: 25,195
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDurationForRelationship,Magic Number,The method contains a magic number: 61,195
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDurationForRelationship,Magic Number,The method contains a magic number: 61,195
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadDurationForRelationship,Magic Number,The method contains a magic number: 2123,195
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadPeriodsForRelationship,Magic Number,The method contains a magic number: 13,208
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadPeriodsForRelationship,Magic Number,The method contains a magic number: 13,208
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,convertPersistAndLoadPeriodsForRelationship,Magic Number,The method contains a magic number: 400,208
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,createSometimeWithConvertedLocalDate,Magic Number,The method contains a magic number: 2018,227
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,createSometimeWithConvertedLocalDate,Magic Number,The method contains a magic number: 11,227
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,createSometimeWithConvertedLocalDate,Magic Number,The method contains a magic number: 21,227
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,collectionsOfDatesShouldWork,Magic Number,The method contains a magic number: 2,240
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,collectionsOfDatesShouldWork,Magic Number,The method contains a magic number: 2,240
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesTestBase,collectionsOfDatesShouldWork,Magic Number,The method contains a magic number: 2,240
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,convertPersistAndLoadTemporalAmounts,Long Statement,The length of the statement "long id=session.queryForObject(Long.class`"CREATE (s:`DatesTestBase$Sometime` {temporalAmount: duration('P13Y370M45DT25H120M')}) RETURN id(s)"`Collections.emptyMap());" is 167.,61
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,convertPersistAndLoadTemporalAmounts,Magic Number,The method contains a magic number: 526,61
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,convertPersistAndLoadTemporalAmounts,Magic Number,The method contains a magic number: 45,61
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,convertPersistAndLoadTemporalAmounts,Magic Number,The method contains a magic number: 97200,61
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 2018,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 11,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 14,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 2018,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 10,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 11,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 15,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldUseNativeDateTimeTypesInParameterMaps,Magic Number,The method contains a magic number: 24,74
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,DatesBoltTest,shouldObeyExplicitConversionOfNativeTypes,Long Statement,The length of the statement "Record record=driver.session().run("MATCH (n:`DatesTestBase$Sometime`) WHERE id(n) = $id RETURN n.convertedLocalDate as convertedLocalDate"`params).next();" is 155.,103
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadGeographicPoint2d,Magic Number,The method contains a magic number: 2,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadGeographicPoint3d,Magic Number,The method contains a magic number: 2,69
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadGeographicPoint3d,Magic Number,The method contains a magic number: 3,69
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadCartesianPoint2d,Magic Number,The method contains a magic number: 2,82
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadCartesianPoint3d,Magic Number,The method contains a magic number: 2,95
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadCartesianPoint3d,Magic Number,The method contains a magic number: 3,95
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadGeographicPoint2dForRelationship,Magic Number,The method contains a magic number: 2,108
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadGeographicPoint3dForRelationship,Magic Number,The method contains a magic number: 2,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadGeographicPoint3dForRelationship,Magic Number,The method contains a magic number: 3,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadCartesianPoint2dForRelationship,Magic Number,The method contains a magic number: 2,134
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadCartesianPoint3dForRelationship,Magic Number,The method contains a magic number: 2,147
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,convertPersistAndLoadCartesianPoint3dForRelationship,Magic Number,The method contains a magic number: 3,147
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Long Statement,The length of the statement "assertThat(loaded.getArrayOfPoints()).hasSize(2).extracting(GeographicPoint2d::getLatitude).containsExactlyInAnyOrder(55.0`56.0);" is 129.,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Long Statement,The length of the statement "assertThat(loaded.getListOfPoints()).hasSize(2).extracting(GeographicPoint2d::getLatitude).containsExactlyInAnyOrder(50.0`51.0);" is 128.,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 55.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 13,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 56.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 14.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 50.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 6.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 51,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 7.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 2,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 55.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 56.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 2,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 50.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,collectionsOfPointsShouldWork,Magic Number,The method contains a magic number: 51.0,160
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,spatialObjectsInMapsShouldWork,Magic Number,The method contains a magic number: 2,179
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,spatialObjectsInMapsShouldWork,Magic Number,The method contains a magic number: 2,179
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,spatialObjectsInMapsShouldWork,Magic Number,The method contains a magic number: 3,179
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,spatialObjectsInMapsShouldWork,Magic Number,The method contains a magic number: 2,179
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,spatialObjectsInMapsShouldWork,Magic Number,The method contains a magic number: 2,179
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.types.nativetypes,SpatialTestBase,spatialObjectsInMapsShouldWork,Magic Number,The method contains a magic number: 3,179
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canSimpleQueryDatabase,Long Statement,The length of the statement "Saddle actual=session.queryForObject(Saddle.class`"MATCH (saddle:Saddle{material: $material}) RETURN saddle"`parameters);" is 121.,57
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canSimpleQueryDatabase,Magic Number,The method contains a magic number: 29.95,57
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canSimpleScalarQueryDatabase,Long Statement,The length of the statement "long actual=session.queryForObject(Long.class`"MATCH (saddle:Saddle{material: $material}) RETURN COUNT(saddle)"`parameters);" is 124.,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canSimpleScalarQueryDatabase,Magic Number,The method contains a magic number: 29.95,86
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canComplexQueryDatabase,Long Statement,The length of the statement "Bike actual=session.queryForObject(Bike.class`"MATCH (bike:Bike{brand:$brand})-[rels]-() RETURN bike` COLLECT(DISTINCT rels) as rels"`parameters);" is 146.,102
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canComplexQueryDatabase,Magic Number,The method contains a magic number: 29.95,102
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canComplexExecute,Magic Number,The method contains a magic number: 29.95,128
neo4j_neo4j-ogm,org.neo4j.ogm.persistence,EndToEndTest,canComplexExecute,Magic Number,The method contains a magic number: 19.95,128
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionManagerTest,shouldBeAbleToCreateManagedTransaction,Long Statement,The length of the statement "DefaultTransactionManager transactionManager=new DefaultTransactionManager(session`getDriver().getTransactionFactorySupplier());" is 128.,67
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionManagerTest,shouldRollbackManagedTransaction,Long Statement,The length of the statement "DefaultTransactionManager transactionManager=new DefaultTransactionManager(session`getDriver().getTransactionFactorySupplier());" is 128.,77
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionSerialisationTest,shouldBeAbleToRunMultiThreadedLongRunningQueriesWithoutLosingConnectionResources,Magic Number,The method contains a magic number: 4,41
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionSerialisationTest,shouldBeAbleToHandleMultiThreadedFailingQueriesWithoutLosingConnectionResources,Magic Number,The method contains a magic number: 4,60
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionTest,shouldNotCommitWhenTransactionIsManaged,Magic Number,The method contains a magic number: 1963,61
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionTest,shouldBeAbleToRetrySaveOnTransactionRollback,Long Statement,The length of the statement "assertThat(theBeatles.getAlbums().iterator().next().getRecording().getStudio().getName()).isEqualTo("EMI Studios` London");" is 123.,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionTest,shouldBeAbleToRetrySaveOnTransactionRollback,Magic Number,The method contains a magic number: 1963,79
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionTest,shouldNotBeAbleToExtendAReadTransactionWithAReadWriteInnerTransaction,Long Statement,The length of the statement "try (Transaction tx1=session.beginTransaction(Transaction.Type.READ_ONLY);Transaction tx2=session.beginTransaction(Transaction.Type.READ_WRITE)){" is 145.,124
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionTest,shouldNotBeAbleToExtendAReadWriteTransactionWithAReadOnlyInnerTransaction,Long Statement,The length of the statement "try (Transaction tx1=session.beginTransaction(Transaction.Type.READ_WRITE);Transaction tx2=session.beginTransaction(Transaction.Type.READ_ONLY)){" is 145.,137
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.transaction,TransactionTest,runReadQuery,Long Statement,The length of the statement "session.query("MATCH /*+ OGM_READ_ONLY */ path = (a:Actor)-[:PLAYED_IN*0..]->()" + " WHERE id(a) = $id" + " RETURN nodes(path)` relationships(path)"`params);" is 157.,217
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.lifecycle,StaleObjectTest,testSaveDegenerateDocument,Long Statement,The length of the statement "assertThat(p.getDocuments().iterator().next().toString()).isEqualTo("Document{folder=Folder{name='f'` documents=1` archived=0}` name='b'}");" is 140.,91
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,oneTimeSetUp,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.music"`"org.neo4j.ogm.domain.cineasts.annotated"`"org.neo4j.ogm.domain.gh817");" is 147.,71
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,init,Magic Number,The method contains a magic number: 2001,77
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldRefreshUpdatedEntities,Long Statement,The length of the statement "Iterable<Bike> updatedBikes=sessionForLoadingAndUpdate.query(Bike.class`"MATCH (c:Bike) SET c.damaged = true RETURN c"`Collections.emptyMap());" is 143.,246
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldRefreshUpdatedEntities,Magic Number,The method contains a magic number: 2,246
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldRefreshUpdatedEntities,Magic Number,The method contains a magic number: 2,246
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldFlushSessionWithoutReturningNodes,Magic Number,The method contains a magic number: 2,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldFlushSessionWithoutReturningNodes,Magic Number,The method contains a magic number: 2,266
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldRefreshUpdatedRelationshipEntities,Long Statement,The length of the statement "Iterable<Trip> updatedBikes=sessionForLoadingAndUpdate.query(Trip.class`"MATCH (r:Rider) - [t:RODE] -> (c:Bike) SET t.name = $newName RETURN *"`Collections.singletonMap("newName"`name));" is 186.,286
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldRefreshUpdatedRelationshipEntities,Magic Number,The method contains a magic number: 2,286
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldRefreshUpdatedRelationshipEntities,Magic Number,The method contains a magic number: 2,286
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.mappingContext,SessionAndMappingContextTest,shouldRefreshUpdatedRelationshipEntities,Magic Number,The method contains a magic number: 2,286
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,EventTestBaseClass,oneTimeSetUp,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.filesystem"`"org.neo4j.ogm.domain.cineasts.annotated");" is 123.,65
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldNotFireEventsOnAssociatedFolderThatHasNotChanged,Magic Number,The method contains a magic number: 2,33
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsForAllDirtyObjectsThatAreReachableFromTheRoot,Magic Number,The method contains a magic number: 6,48
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsForAssociatedObjectsWhenDeletingParentObjectWithInconsistentDomainModel,Magic Number,The method contains a magic number: 4,68
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsForAssociatedObjectsWhenDeletingParentObjectWithConsistentDomainModel,Magic Number,The method contains a magic number: 4,88
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsWhenAddNewObjectInCollectionAndSaveCollection,Magic Number,The method contains a magic number: 4,103
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsWhenAddNewObjectToCollectionAndSaveNewObject,Magic Number,The method contains a magic number: 4,121
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsWhenAddExistingObjectToCollectionAndSaveExistingObject,Magic Number,The method contains a magic number: 4,139
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsWhenSetAssociatedObjectToNewAnonymousObject,Magic Number,The method contains a magic number: 6,155
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsWhenAddExistingObjectToCollectionAndSaveCollection,Magic Number,The method contains a magic number: 4,178
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsWhenItemDisassociatedFromContainerAndSaveContainer,Magic Number,The method contains a magic number: 4,196
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,AssociatedObjectsTest,shouldFireEventsWhenItemDisassociatedFromContainerAndSaveItem,Magic Number,The method contains a magic number: 4,212
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenUpdatingRelationshipEntity,Magic Number,The method contains a magic number: 1293861599,44
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenUpdatingRelationshipEntity,Magic Number,The method contains a magic number: 60,44
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenUpdatingRelationshipEntity,Magic Number,The method contains a magic number: 60,44
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenUpdatingRelationshipEntity,Magic Number,The method contains a magic number: 24,44
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenUpdatingRelationshipEntity,Magic Number,The method contains a magic number: 365,44
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenUpdatingRelationshipEntity,Magic Number,The method contains a magic number: 2,44
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenDeletingRelationshipEntity,Magic Number,The method contains a magic number: 6,58
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,RelationshipEntityTest,shouldFireEventsWhenCreatingRelationshipEntity,Magic Number,The method contains a magic number: 6,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,CollectionsTest,shouldFireEventsWhenSavingACollection,Magic Number,The method contains a magic number: 6,37
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,CollectionsTest,shouldFireEventsWhenDeletingACollection,Magic Number,The method contains a magic number: 8,56
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,CollectionsTest,shouldFireEventWhenDeletingAllObjectsOfASpecifiedType,Magic Number,The method contains a magic number: 2,77
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,CollectionsTest,shouldFireEventsWhenDeletingObjectsOfDifferentTypes,Magic Number,The method contains a magic number: 14,88
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,NodeEntityTest,shouldFireEventsWhenCreatingNewEntity,Magic Number,The method contains a magic number: 2,49
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,NodeEntityTest,shouldFireEventsWhenUpdatingExistingEntity,Magic Number,The method contains a magic number: 2,66
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,NodeEntityTest,shouldFireEventsWhenSettingNullProperty,Magic Number,The method contains a magic number: 2,82
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.events,NodeEntityTest,shouldFireEventsWhenDeletingRelationshipEntity,Magic Number,The method contains a magic number: 6,104
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,init,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.cineasts.annotated"`"org.neo4j.ogm.domain.nested"`"org.neo4j.ogm.domain.linkedlist"`"org.neo4j.ogm.domain.gh726"`"org.neo4j.ogm.domain.gh851"`"org.neo4j.ogm.domain.gh875"`"org.neo4j.ogm.domain.sdn2306");" is 271.,102
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,createKennels,Long Statement,The length of the statement "session.query("MERGE (p:Person {name:\"Billy\"})<-[:OWNED_BY]-(d:Dog {name: \"Ralph\"` breed: \"Muppet\"})<-[:HOUSES]-(k:Kennel)"`Collections.emptyMap());" is 154.,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,createKennels,Long Statement,The length of the statement "session.query("MERGE (p:Person {name:\"Sally\"})<-[:LIVES_WITH]-(c:Cat {name: \"Mittens\"` food: \"Birds\"})<-[:HOUSES]-(k:Kennel)"`Collections.emptyMap());" is 156.,122
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldFillLabelsInComplexInheritanceHierachies,Long Statement,The length of the statement "Long id1=session.queryForObject(Long.class`"create (a:Node:SubNodeA:SubNodeB:SubNodeBImplA {name: 'eins'}) RETURN id(a)"`Collections.emptyMap());" is 145.,172
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldFillLabelsInComplexInheritanceHierachies,Long Statement,The length of the statement "Long id2=session.queryForObject(Long.class`"create (a:Node:SubNodeA:SubNodeB:AbstractNodeBImplA:More:Labels {name: 'zwei'}) RETURN id(a)"`Collections.emptyMap());" is 162.,172
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldFillLabelsInComplexInheritanceHierachies,Long Statement,The length of the statement "long cnt=session.queryForObject(Long.class`"match (a:X:Y) WHERE id(a) = $id RETURN count(a)"`Collections.singletonMap("id"`id1));" is 129.,172
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldFillLabelsInComplexInheritanceHierachies,Long Statement,The length of the statement "cnt=session.queryForObject(Long.class`"match (a:New1:New2) WHERE id(a) = $id RETURN count(a)"`Collections.singletonMap("id"`id2));" is 130.,172
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldQueryForArbitraryDataUsingBespokeParameterisedCypherQuery,Long Statement,The length of the statement "Iterable<Map<String`Object>> resultsIterable=session.query("MATCH (a:Actor) WHERE a.uuid=$param RETURN a.name as name"`Collections.<String`Object>singletonMap("param"`alec.getUuid()));" is 184.,216
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldQueryForArbitraryDataUsingBespokeParameterisedCypherQuery,Long Statement,The length of the statement "Result results=session.query("MATCH (a:Actor) WHERE a.uuid=$param RETURN a.name as name"`Collections.<String`Object>singletonMap("param"`alec.getUuid()));" is 154.,216
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,readOnlyQueryMustBeReadOnly,Long Statement,The length of the statement "assertThatThrownBy(() -> session.query("MATCH (a:Actor) SET a.age=$age"`Collections.singletonMap("age"`5)`true)).hasMessageContaining("Writing in read access mode not allowed.");" is 178.,237
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,readOnlyQueryMustBeReadOnly,Long Statement,The length of the statement "Condition<String> stringMatches=new Condition<>(s -> s.contains("Cypher query contains keywords that indicate a writing query but OGM is going to use a read only transaction as requested` so the query might fail.")`"String matches");" is 233.,237
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,readOnlyQueryMustBeReadOnly,Magic Number,The method contains a magic number: 5,237
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,readOnlyQueryMustBeReadOnly,Magic Number,The method contains a magic number: 5,237
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnStatistics,Magic Number,The method contains a magic number: 5,281
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnStatistics,Magic Number,The method contains a magic number: 3,281
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnStatistics,Magic Number,The method contains a magic number: 5,281
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnStatistics,Magic Number,The method contains a magic number: 3,281
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnResultsWithStatistics,Magic Number,The method contains a magic number: 5,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnResultsWithStatistics,Magic Number,The method contains a magic number: 3,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnResultsWithStatistics,Magic Number,The method contains a magic number: 3,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnResultsWithStatistics,Magic Number,The method contains a magic number: 5,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnResultsWithStatistics,Magic Number,The method contains a magic number: 3,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnResultsWithStatistics,Magic Number,The method contains a magic number: 5L,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldReturnResultsWithStatistics,Magic Number,The method contains a magic number: 3,297
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,readOnlyQueryShouldNotReturnStatistics,Magic Number,The method contains a magic number: 3,339
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldBePermittedWhenQueryingForObject,Magic Number,The method contains a magic number: 40,361
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldBePermittedWhenQueryingForObjects,Long Statement,The length of the statement "Iterable<Actor> actors=session.query(Actor.class`"MATCH (a:Actor) set a.age=$age return a"`Collections.singletonMap("age"`40));" is 127.,377
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldBePermittedWhenQueryingForObjects,Magic Number,The method contains a magic number: 40,377
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldBePermittedWhenQueryingForObjects,Magic Number,The method contains a magic number: 3,377
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntities,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User {name:$name})-[:RATED]->(m) RETURN u as user` m as movie"`Collections.singletonMap("name"`"Vince")).iterator();" is 177.,408
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalars,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User {name:$name})-[:RATED]->(m) RETURN u as user` count(m) as count"`Collections.singletonMap("name"`"Michal")).iterator();" is 185.,425
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalars,Magic Number,The method contains a magic number: 2L,425
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalarsMultipleRows,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User)-[r:RATED]->(m) RETURN m as movie` avg(r.stars) as average ORDER BY average DESC"`emptyMap()).iterator();" is 171.,441
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalarsMultipleRows,Magic Number,The method contains a magic number: 5.0,441
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalarsMultipleRows,Magic Number,The method contains a magic number: 3.5,441
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalarsMultipleRowsAndNoAlias,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User)-[r:RATED]->(m) RETURN m` avg(r.stars) ORDER BY avg(r.stars) DESC"`emptyMap()).iterator();" is 156.,467
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalarsMultipleRowsAndNoAlias,Magic Number,The method contains a magic number: 5.0,467
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndScalarsMultipleRowsAndNoAlias,Magic Number,The method contains a magic number: 3.5,467
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndRelationships,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User {name:$name})-[r:FRIENDS]->(friend) RETURN u as user` friend as friend` r"`Collections.singletonMap("name"`"Michal")).iterator();" is 195.,493
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndRelationshipsOfDifferentTypes,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User {name:$name})-[r:FRIENDS]->(friend)-[r2:RATED]->(m) RETURN u as user` friend as friend` r` r2` m as movie` r2.stars as stars"`Collections.singletonMap("name"`"Michal")).iterator();" is 246.,515
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapEntitiesAndRelationshipsOfDifferentTypes,Magic Number,The method contains a magic number: 4L,515
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapRelationshipEntities,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User {name:$name})-[r:RATED]->(m) RETURN u`r`m"`Collections.singletonMap("name"`"Vince")).iterator();" is 162.,546
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapRelationshipEntities,Magic Number,The method contains a magic number: 4,546
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapRelationshipEntitiesByIds,Long Statement,The length of the statement "for ( Map<String`Object> row : sessionFactory.openSession().query("MATCH ()-[r:RATED]->() RETURN id(r) as r"`Collections.emptyMap()).queryResults()) {" is 150.,573
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapVariableDepthRelationshipsWithIncompletePaths,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("match (u:User {name:$name}) match (m:Movie {title:$title}) match p=(u)-[*0..2]-(m) return u`relationships(p) as r`m"`params).iterator();" is 188.,588
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapVariableDepthRelationshipsWithIncompletePaths,Magic Number,The method contains a magic number: 4,588
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapVariableDepthRelationshipsWithIncompletePaths,Magic Number,The method contains a magic number: 4,588
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapVariableDepthRelationshipsWithCompletePaths,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("match (u:User {name:$name}) match p=(u)-[*0..1]-(n) return u`relationships(p)`n"`Collections.singletonMap("name"`"Vince")).iterator();" is 186.,651
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsOfNodes,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("match (u:User {name:$name})-[r:RATED]->(m) return u as user`collect(r)` collect(m) as movies"`Collections.singletonMap("name"`"Michal")).iterator();" is 200.,682
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsOfNodes,Magic Number,The method contains a magic number: 2,682
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsOfNodes,Magic Number,The method contains a magic number: 2,682
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsOfNodes,Magic Number,The method contains a magic number: 3,682
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsOfNodes,Magic Number,The method contains a magic number: 5,682
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsFromPath,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH p=(u:User {name:$name})-[r:RATED]->(m) RETURN nodes(p) as nodes` relationships(p) as rels"`Collections.singletonMap("name"`"Vince")).iterator();" is 202.,711
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsFromPath,Magic Number,The method contains a magic number: 2,711
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapCollectionsFromPath,Magic Number,The method contains a magic number: 4,711
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapArrays,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User {name:$name}) RETURN u.array as arr"`Collections.singletonMap("name"`"Christophe")).iterator();" is 161.,740
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapArrays,Magic Number,The method contains a magic number: 2,740
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapMixedArrays,Long Statement,The length of the statement "Iterator<Map<String`Object>> results=session.query("MATCH (u:User {name:$name}) RETURN u.array as arr` [1`'two'`true] as mixed"`Collections.singletonMap("name"`"Christophe")).iterator();" is 186.,751
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapMixedArrays,Magic Number,The method contains a magic number: 2,751
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapMixedArrays,Magic Number,The method contains a magic number: 3,751
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldBeAbleToMapMixedArrays,Magic Number,The method contains a magic number: 2,751
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldBeAbleToMapEntitiesAndReturnStatistics,Long Statement,The length of the statement "Result result=session.query("MATCH (u:User {name:$name})-[:RATED]->(m) WITH u`m SET u.age=$age RETURN u as user` m as movie"`params);" is 133.,767
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,modifyingQueryShouldBeAbleToMapEntitiesAndReturnStatistics,Magic Number,The method contains a magic number: 20,767
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldNotOverflowIntegers,Long Statement,The length of the statement "String incrementStmt="MATCH (n:Sequence) WHERE n.id = $id REMOVE n.lock SET n.next = n.next + $increment RETURN n.next - $increment as current";" is 144.,790
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldLoadNodesWithUnmappedOrNoLabels,Magic Number,The method contains a magic number: 4,816
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldLoadNodesWithUnmappedOrNoLabels,Magic Number,The method contains a magic number: 5,816
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldMapCypherCollectionsToArrays,Long Statement,The length of the statement "Iterator<Map<String`Object>> iterator=session.query("MATCH (n:User) return collect(n.name) as names"`emptyMap()).iterator();" is 124.,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldMapCypherCollectionsToArrays,Magic Number,The method contains a magic number: 4,850
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldThrowExceptionIfTypeMismatchesInQueryForObject,Long Statement,The length of the statement "assertThatExceptionOfType(MappingException.class).isThrownBy(() -> session.queryForObject(Restaurant.class`"MATCH (n:User) return count(n)"`emptyMap())).withMessage("Cannot map java.lang.Long to %s. This can be caused by missing registration of %1$s."`Restaurant.class.getName());" is 280.,875
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,queryForObjectFindsNestedClasses,Long Statement,The length of the statement "NestingClass.Something something=session.queryForObject(NestingClass.Something.class`"MATCH (n:`NestingClass$Something`) return n"`emptyMap());" is 143.,891
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,queryForObjectsShouldDealWithIncorrectResultSizes,Long Statement,The length of the statement "assertThatExceptionOfType(RuntimeException.class).isThrownBy(() -> session.queryForObject(Long.class`"UNWIND RANGE (1`3) AS n RETURN n"`emptyMap())).withMessage("Result not of expected size. Expected 1 row but found 3");" is 220.,902
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,testQueryWithProjection,Long Statement,The length of the statement "Iterable<User> results=session.query(User.class`"MATCH (u:User) where u.name=$name return u " + "`[[(u)-[r:EXTENDED_FRIEND]->(e) | [r` e ] ] ] "`Collections.singletonMap("name"`"Vince"));" is 187.,919
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,testQueryWithExplicitRelationship,Long Statement,The length of the statement "Iterable<User> results=session.query(User.class`"MATCH (u:User) -[r:EXTENDED_FRIEND] ->(e) where u.name=$name RETURN u` r` e"`Collections.singletonMap("name"`"Vince"));" is 168.,935
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldMaintainTheTraversalOrderFromMatchClause,Long Statement,The length of the statement "Iterable<Item> result=session.query(Item.class`"MATCH (i:Item)-[:NEXT*0..]->(n:Item) WHERE i.name=$name return n `" + "[ [ (n)-[r:BELONGS_TO]->(c:Item) | [r` c] ] ]"`Collections.singletonMap("name"`"A"));" is 204.,947
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldMapCorrectlyIfTwoClassesWithTheSameSimpleNameExist,Long Statement,The length of the statement "SameClass loadedSameClassA=session.query(SameClass.class`"MATCH (s:SameClassA) WHERE id(s) = $id RETURN s"`Collections.singletonMap("id"`sameClassA.getId())).iterator().next();" is 176.,962
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldMapCorrectlyIfTwoClassesWithTheSameSimpleNameExist,Long Statement,The length of the statement "org.neo4j.ogm.domain.gh726.package_b.SameClass loadedSameClassB=session.query(org.neo4j.ogm.domain.gh726.package_b.SameClass.class`"MATCH (s:SameClassB) WHERE id(s) = $id RETURN s"`Collections.singletonMap("id"`sameClassB.getId())).iterator().next();" is 250.,962
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldReturnListOfNodesAndRelationshipModelForUnknownRelationshipLists,Long Statement,The length of the statement "Result result=session.query("MATCH (n:Movie{title:'Pulp Fiction'}) return n` [(n)-[r:UNKNOWN]-(p) | [r`p]] as relAndNode"`emptyMap());" is 134.,986
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldReturnListOfNodesAndRelationshipModelForUnknownRelationshipLists,Long Statement,The length of the statement "assertThat(relAndNode).hasSize(2).satisfies(v -> assertThat(v).isInstanceOf(Pet.class)`Index.atIndex(0)).satisfies(v -> assertThat(v).isInstanceOf(RelationshipModel.class)`Index.atIndex(1));" is 190.,986
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,shouldReturnListOfNodesAndRelationshipModelForUnknownRelationshipLists,Magic Number,The method contains a magic number: 2,986
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,workaroundFor737,Long Statement,The length of the statement "Result result=session.query("MATCH (n:Movie{title:'Pulp Fiction'}) WITH n` [(n)-[r:UNKNOWN]-(p) | [r`p]] as patterns UNWIND patterns as relAndNode RETURN n` relAndNode"`emptyMap());" is 181.,1002
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,QueryCapabilityTest,polymorphicQueryShouldIncludeAllRelTypes,Magic Number,The method contains a magic number: 2,1058
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Long Statement,The length of the statement "artists=session.loadAll(Artist.class`Collections.singletonList(beatlesId)`new SortOrder().add("name")`new Pagination(0`5));" is 123.,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Long Statement,The length of the statement "albums=session.loadAll(Album.class`Collections.singletonList(beatlesId)`new SortOrder().add("name")`new Pagination(0`5));" is 121.,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Long Statement,The length of the statement "artists=session.loadAll(Artist.class`Collections.singletonList(beatlesId)`new SortOrder().add("name")`new Pagination(0`5)`0);" is 125.,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Long Statement,The length of the statement "artists=session.loadAll(Artist.class`Arrays.asList(beatlesId`pleaseId`bonJovi.getId())`new SortOrder().add("name")`new Pagination(0`5)`0);" is 138.,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Long Statement,The length of the statement "artists=session.loadAll(Artist.class`Collections.singletonList(beatlesId)`new SortOrder().add("name")`new Pagination(0`5)`0);" is 125.,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Long Statement,The length of the statement "albums=session.loadAll(Album.class`Collections.singletonList(beatlesId)`new SortOrder().add("name")`new Pagination(0`5)`0);" is 123.,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 2,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,loadAllShouldRespectEntityType,Magic Number,The method contains a magic number: 5,85
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldBeAbleToLoadEntitiesToDifferentDepthsInDifferentSessions,Magic Number,The method contains a magic number: 1994,180
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldNotBeDirtyOnLoadRelationshipEntityThenSaveThenReload,Magic Number,The method contains a magic number: 1994,269
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldNotBeDirtyOnLoadRelationshipEntityThenSaveThenReload,Magic Number,The method contains a magic number: 2,269
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldNotBeDirtyOnLoadRelationshipEntityThenSaveThenReload,Magic Number,The method contains a magic number: 1995,269
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldNotBeDirtyOnLoadRelationshipEntityThenSaveThenReload,Magic Number,The method contains a magic number: 2,269
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldRetainPreviouslyLoadedRelationshipsWhenDepthIsReduced,Magic Number,The method contains a magic number: 1970,305
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldRetainPreviouslyLoadedRelationshipsWhenDepthIsReduced,Magic Number,The method contains a magic number: 2,305
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldAddRelationshipsWhenDepthIsIncreased,Magic Number,The method contains a magic number: 1970,352
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldAddRelationshipsWhenDepthIsIncreased,Magic Number,The method contains a magic number: 2,352
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldNotModifyPreviouslyLoadedNodesWhenDepthIsIncreased,Magic Number,The method contains a magic number: 1970,393
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldNotModifyPreviouslyLoadedNodesWhenDepthIsReduced,Magic Number,The method contains a magic number: 1970,429
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldBeAbleToLoadEntityToDifferentDepthsInDifferentSessions,Magic Number,The method contains a magic number: 1970,465
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldBeAbleToLoadEntityToDifferentDepthsInDifferentSessions,Magic Number,The method contains a magic number: 2,465
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldNotModifyPreviouslyLoadedNodesWhenEntityIsReloaded,Magic Number,The method contains a magic number: 1970,497
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldMapNewNodesAndRelationshipsWhenEntityIsReloaded,Magic Number,The method contains a magic number: 1970,537
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldMapNewNodesAndRelationshipsWhenEntityIsReloaded,Magic Number,The method contains a magic number: 2,537
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldMapNewNodesAndRelationshipsWhenEntityIsReloaded,Magic Number,The method contains a magic number: 1972,537
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldMapNewNodesAndRelationshipsWhenEntityIsReloaded,Magic Number,The method contains a magic number: 2,537
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldMapNewNodesAndRelationshipsWhenEntityIsReloaded,Magic Number,The method contains a magic number: 2,537
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldRefreshEntityStateWhenReloadedOnCleanSession,Magic Number,The method contains a magic number: 1970,584
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldMaintainSortOrderWhenLoadingByIds,Magic Number,The method contains a magic number: 2,623
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,LoadCapabilityTest,shouldMaintainSortOrderWhenLoadingByIds,Magic Number,The method contains a magic number: 2,623
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,prepareMocks,Long Statement,The length of the statement "doAnswer(invocation -> ((TransactionalUnitOfWork)invocation.getArgument(0)).doInTransaction()).when(neo4jSession).doInTransaction(any(TransactionalUnitOfWork.class)`any(Transaction.Type.class));" is 194.,94
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForStandardEntity,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).isEqualTo("MATCH (n:`SomeEntity`) WHERE ID(n) IN $ids WITH n MATCH p=(n)-[*0..1]-(m) RETURN p");" is 149.,118
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForStandardEntity,Magic Number,The method contains a magic number: 2L,118
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForOneStandardEntity,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).isEqualTo("MATCH (n:`SomeEntity`) WHERE ID(n) = $id WITH n MATCH p=(n)-[*0..1]-(m) RETURN p");" is 147.,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForOneStandardEntity,Magic Number,The method contains a magic number: 4711L,129
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForAllStandardEntities,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).isEqualTo("MATCH (n:`SomeEntity`) WITH n MATCH p=(n)-[*0..1]-(m) RETURN p");" is 129.,140
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseAllLabelsInInheritanceScenario,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).isEqualTo("MATCH (n:`Category`:`Entity`) WHERE n.`uuid` IN $ids WITH n MATCH p=(n)-[*0..1]-(m) RETURN p");" is 159.,151
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseAllLabelsForOneEntityInInheritanceScenario,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).isEqualTo("MATCH (n:`Category`:`Entity`) WHERE n.`uuid` = $id WITH n MATCH p=(n)-[*0..1]-(m) RETURN p");" is 157.,162
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseAllLabelsForAllEntitiesInInheritanceScenario,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).isEqualTo("MATCH (n:`Category`:`Entity`) WITH n MATCH p=(n)-[*0..1]-(m) RETURN p");" is 136.,173
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForRelationshipEntities,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).startsWith("MATCH ()-[r0:`SOME_RELATIONSHIP`]-() WHERE ID(r0) IN $ids");" is 125.,184
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForRelationshipEntities,Magic Number,The method contains a magic number: 2L,184
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,StrictQueryingTest,shouldUseOnlyOneLabelForOneRelationshipEntity,Long Statement,The length of the statement "assertThat(argumentCaptor.getValue().getStatement()).startsWith("MATCH ()-[r0:`SOME_RELATIONSHIP`]->() WHERE ID(r0)=$id");" is 122.,195
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,init,Long Statement,The length of the statement "SessionFactory sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.music"`"org.neo4j.ogm.domain.gh787"`"org.neo4j.ogm.domain.gh789");" is 149.,59
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,saveCollectionShouldSaveLists,Magic Number,The method contains a magic number: 3,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,saveCollectionShouldSaveLists,Magic Number,The method contains a magic number: 2,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,saveCollectionShouldSaveSets,Magic Number,The method contains a magic number: 3,88
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,saveCollectionShouldSaveArrays,Magic Number,The method contains a magic number: 3,99
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,shouldSaveOnlyModifiedNodes,Magic Number,The method contains a magic number: 5,133
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,shouldSaveOnlyModifiedNodes,Magic Number,The method contains a magic number: 2,133
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,shouldCountRelationshipEntities,Magic Number,The method contains a magic number: 1962,170
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,shouldCountRelationshipEntities,Magic Number,The method contains a magic number: 1967,170
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,SaveCapabilityTest,shouldCountRelationshipEntities,Magic Number,The method contains a magic number: 2,170
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,GraphIdCapabilityTest,init,Magic Number,The method contains a magic number: 1963,51
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,GraphIdCapabilityTest,idShouldReturnNullForEntitiesNotPersisted,Magic Number,The method contains a magic number: 1966,95
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,GraphIdCapabilityTest,idShouldReturnNullForNonEntities,Magic Number,The method contains a magic number: 5,107
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,DeleteCapabilityTest,canDeleteEntityCollection,Magic Number,The method contains a magic number: 2,75
neo4j_neo4j-ogm,org.neo4j.ogm.persistence.session.capability,DeleteCapabilityTest,canDeleteEntityArray,Magic Number,The method contains a magic number: 2,91
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldSaveMultipleObjects,Magic Number,The method contains a magic number: 2,86
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldSaveMultipleObjectsWithWriteProtection,Long Statement,The length of the statement "((Neo4jSession)session).addWriteProtection(WriteProtectionTarget.PROPERTIES`object -> (object instanceof User) && bilbo.getId().equals(((User)object).getId()));" is 160.,106
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldSaveMultipleObjectsWithWriteProtection,Magic Number,The method contains a magic number: 2,106
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldSaveMultipleObjectsWithWriteProtectionFromRoot,Long Statement,The length of the statement "((Neo4jSession)session).addWriteProtection(WriteProtectionTarget.PROPERTIES`object -> (object instanceof User) && !avon.getId().equals(((User)object).getId()));" is 160.,137
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldSaveMultipleObjectsWithWriteProtectionFromRoot,Magic Number,The method contains a magic number: 2,137
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,customWriteProtectionStrategyShouldBeApplied,Magic Number,The method contains a magic number: 2,167
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldLoadByProperty,Long Statement,The length of the statement "User userByProperty=session.loadAll(User.class`new Filter("name"`ComparisonOperator.EQUALS`"Bilbo Baggins")).iterator().next();" is 127.,255
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldLoadByInstances,Magic Number,The method contains a magic number: 2,265
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldLoadByIds,Magic Number,The method contains a magic number: 2,279
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldQueryForDomainObjects,Long Statement,The length of the statement "Collection<User> users=(Collection)session.query(User.class`"MATCH(u:User) WHERE u.name =~ '.*Baggins' RETURN u"`Collections.emptyMap());" is 137.,301
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldQueryForDomainObjects,Magic Number,The method contains a magic number: 2,301
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldQueryForScalarValues,Long Statement,The length of the statement "Collection<String> userNames=(Collection)session.query(String.class`"MATCH(u:User) WHERE u.name =~ '.*Baggins' RETURN u.name"`Collections.emptyMap());" is 150.,312
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldQueryForScalarValues,Magic Number,The method contains a magic number: 2,312
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldObtainEmptyQueryResultsWithStatistics,Long Statement,The length of the statement "Result result=session.query("MATCH (u:User) WHERE u.name =~ '.*Baggins' SET u.species = 'Hobbit'"`Collections.emptyMap());" is 122.,323
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldObtainEmptyQueryResultsWithStatistics,Magic Number,The method contains a magic number: 2,323
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldObtainQueryResultsWithStatistics,Long Statement,The length of the statement "Result result=session.query("MATCH (u:User) WHERE u.name =~ '.*Baggins' SET u.species = 'Hobbit' RETURN u.name"`Collections.emptyMap());" is 136.,334
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldObtainQueryResultsWithStatistics,Magic Number,The method contains a magic number: 2,334
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,BasicDriverTest,shouldSucceedExtendedCommitCommitCommit,Magic Number,The method contains a magic number: 2,396
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,CypherExceptionTestBase,constraintViolationExceptionShouldBeConsistent,Long Identifier,The length of the field CONSTRAINT_VIOLATED_MESSAGE_PATTERN is 35.,67
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,DriverExceptionTest,shouldThrowExceptionWhenHttpDriverCannotConnect,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder(new ClasspathConfigurationSource("ogm-http-invalid.properties")).build();" is 127.,34
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,DriverExceptionTest,shouldThrowExceptionWhenEmbeddedDriverCannotConnect,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder(new ClasspathConfigurationSource("ogm-embedded-invalid.properties")).build();" is 131.,44
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,DriverExceptionTest,shouldThrowExceptionWhenBoltDriverCannotConnect,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder(new ClasspathConfigurationSource("ogm-bolt-invalid.properties")).build();" is 127.,54
neo4j_neo4j-ogm,org.neo4j.ogm.drivers,QueryStatisticsTest,statisticsPropertiesSet,Magic Number,The method contains a magic number: 2,82
neo4j_neo4j-ogm,org.neo4j.ogm.session,ConcurrentSessionTest,oneTimeSetUp,Long Identifier,The length of the identifier incompatibleForConcurrentTests is 30.,44
neo4j_neo4j-ogm,org.neo4j.ogm.session,ConcurrentSessionTest,multipleThreadsResultsGetMixedUp,Magic Number,The method contains a magic number: 2,53
neo4j_neo4j-ogm,org.neo4j.ogm.session,ConcurrentSessionTest,multipleThreadsResultsGetMixedUp,Magic Number,The method contains a magic number: 1000,53
neo4j_neo4j-ogm,org.neo4j.ogm.session,ConcurrentSessionTest,multipleThreadsResultsGetMixedUp,Magic Number,The method contains a magic number: 2,53
neo4j_neo4j-ogm,org.neo4j.ogm.session,ConcurrentSessionTest,multipleThreadsResultsGetMixedUp,Magic Number,The method contains a magic number: 2,53
neo4j_neo4j-ogm,org.neo4j.ogm.session,SessionFactoryTest,shouldMergeBasePackages,Long Statement,The length of the statement "Configuration configuration=new Configuration.Builder().withBasePackages(Bike.class.getPackage().getName()).uri("bolt://somewhere").build();" is 140.,44
neo4j_neo4j-ogm,org.neo4j.ogm.session,SessionFactoryTest,correctUseStrictQueryingSettingShouldBeApplied,Long Statement,The length of the statement "sessionFactory=new SessionFactory(new Configuration.Builder().uri("bolt://something:7687").build()`"org.neo4j.ogm.domain.gh651");" is 129.,101
neo4j_neo4j-ogm,org.neo4j.ogm.session,SessionFactoryTest,correctUseStrictQueryingSettingShouldBeApplied,Long Statement,The length of the statement "sessionFactory=new SessionFactory(new Configuration.Builder().uri("bolt://something:7687").relaxedQuerying().build()`"org.neo4j.ogm.domain.gh651");" is 147.,101
neo4j_neo4j-ogm,org.neo4j.ogm.session,BookmarkTest,shouldPassBookmarksToDriver,Long Statement,The length of the statement "assertThat(sessionConfig.bookmarks()).contains(Bookmark.from(Collections.singleton("bookmark1"))`Bookmark.from(Collections.singleton("bookmark2")));" is 148.,68
neo4j_neo4j-ogm,org.neo4j.ogm.session,BookmarkTest,shouldPassMultiValueBookmarksToDriver,Long Statement,The length of the statement "Set<String> bookmarkStringRepresentation=new HashSet<>(Arrays.asList("bookmark1"`"bookmark2"`"bookmark3-part1/_BS_/bookmark3-part2"));" is 134.,88
neo4j_neo4j-ogm,org.neo4j.ogm.session,BookmarkTest,shouldPassMultiValueBookmarksToDriver,Long Statement,The length of the statement "assertThat(sessionConfig.bookmarks()).contains(Bookmark.from(Collections.singleton("bookmark1"))`Bookmark.from(Collections.singleton("bookmark2"))`Bookmark.from(multipleBookmarks));" is 181.,88
neo4j_neo4j-ogm,org.neo4j.ogm.session,Utils,coerceTypes,Complex Method,Cyclomatic complexity of the method is 36,28
neo4j_neo4j-ogm,org.neo4j.ogm.session,Utils,coerceTypes,Long Method,The method has 122 lines of code.,28
neo4j_neo4j-ogm,org.neo4j.ogm.session,Utils,defaultForPrimitive,Complex Conditional,The conditional expression "int".equals(className) || "byte".equals(className) || "short".equals(className) is complex.,167
neo4j_neo4j-ogm,org.neo4j.ogm.session,SessionFactory,SessionFactory,Long Statement,The length of the statement "this(driver`Optional.ofNullable(driver.getConfiguration()).map(Configuration::getUseStrictQuerying).orElse(true)`packages);" is 123.,97
neo4j_neo4j-ogm,org.neo4j.ogm.session,SessionFactory,newConfiguredDriverInstance,Long Statement,The length of the statement "catch ( ClassNotFoundException|IllegalAccessException|InstantiationException|NoSuchMethodException|InvocationTargetException e) {" is 129.,263
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,Neo4jSession,Long Parameter List,The method has 6 parameters. ,122
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,notifyListeners,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4128dc35,138
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,loadAll,Long Parameter List,The method has 5 parameters. ,266
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,loadAll,Long Parameter List,The method has 5 parameters. ,307
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,loadAll,Long Parameter List,The method has 5 parameters. ,356
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,doInTransaction,Complex Conditional,The conditional expression forceTx || (driver.requiresTransaction() && transaction == null) is complex.,561
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,doInTransaction,Complex Conditional,The conditional expression newTransaction && transaction != null && !transaction.status().equals(Transaction.Status.CLOSED) is complex.,561
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,loadNodeClauseBuilder,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@38a0cf6d,724
neo4j_neo4j-ogm,org.neo4j.ogm.session,Neo4jSession,loadRelationshipClauseBuilder,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3d6d878a,741
neo4j_neo4j-ogm,org.neo4j.ogm.session,Session,loadAll,Long Parameter List,The method has 5 parameters. ,148
neo4j_neo4j-ogm,org.neo4j.ogm.session,Session,loadAll,Long Parameter List,The method has 5 parameters. ,393
neo4j_neo4j-ogm,org.neo4j.ogm.session,Session,loadAll,Long Parameter List,The method has 5 parameters. ,477
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindOne,Long Statement,The length of the statement "assertThat(query.findOne(0L`2).getStatement()).isEqualTo("MATCH ()-[r0]->() WHERE ID(r0)=$id " + "WITH r0` STARTNODE(r0) AS n` ENDNODE(r0) AS m MATCH p1 = (n)-[*0..2]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..2]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 395.,50
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindOne,Magic Number,The method contains a magic number: 2,50
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindOneByType,Long Statement,The length of the statement "assertThat(query.findOneByType("ORBITS"`0L`2).getStatement()).isEqualTo("MATCH ()-[r0:`ORBITS`]->() WHERE ID(r0)=$id " + "WITH r0`STARTNODE(r0) AS n` ENDNODE(r0) AS m MATCH p1 = (n)-[*0..2]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..2]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 418.,59
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindOneByType,Magic Number,The method contains a magic number: 2,59
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindOneByTypePrimaryIndex,Long Statement,The length of the statement "assertThat(pagingAndSortingQuery.getStatement()).isEqualTo("MATCH ()-[r0:`ORBITS`]->() WHERE r0.`uuid`=$id " + "WITH r0` STARTNODE(r0) AS n` ENDNODE(r0) AS m MATCH p1 = (n)-[*0..2]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..2]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 409.,75
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindOneByTypePrimaryIndex,Magic Number,The method contains a magic number: 2,75
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByLabel,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`3).getStatement()).isEqualTo("MATCH ()-[r0:`ORBITS`]-() WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m " + "MATCH p1 = (n)-[*0..3]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m " + "MATCH p2 = (m)-[*0..3]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p "+ "RETURN DISTINCT p` ID(r0)");" is 410.,88
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByLabel,Magic Number,The method contains a magic number: 3,88
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindAllByTypeCollection,Long Statement,The length of the statement "assertThat(query.findAllByType("ORBITS"`asList(1L`2L`3L)`1).getStatement()).isEqualTo("MATCH ()-[r0:`ORBITS`]-() WHERE ID(r0) IN $ids " + "WITH DISTINCT(r0) as r0` startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..1]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..1]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths "+ "UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 456.,98
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindAllByTypeCollection,Magic Number,The method contains a magic number: 2L,98
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindAllByTypeCollection,Magic Number,The method contains a magic number: 3L,98
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindAllByTypePrimaryIndex,Long Statement,The length of the statement "PagingAndSortingQuery pagingAndSortingQuery=primaryQuery.findAllByType("ORBITS"`Arrays.asList("test-uuid-1"`"test-uuid-2")`2);" is 126.,109
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindAllByTypePrimaryIndex,Long Statement,The length of the statement "assertThat(pagingAndSortingQuery.getStatement()).isEqualTo("MATCH ()-[r0:`ORBITS`]-() WHERE r0.`uuid` IN $ids " + "WITH DISTINCT(r0) as r0` startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..2]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..2]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths "+ "UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 432.,109
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindAllByTypePrimaryIndex,Magic Number,The method contains a magic number: 2,109
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByProperty,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(new Filter("distance"`EQUALS`60.2))`4).getStatement()).isEqualTo("MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`distance` = $`distance_0` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths "+ "UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 507.,125
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByProperty,Magic Number,The method contains a magic number: 60.2,125
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByProperty,Magic Number,The method contains a magic number: 4,125
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertyZeroDepth,Magic Number,The method contains a magic number: 19.7,147
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertyInfiniteDepth,Magic Number,The method contains a magic number: 2103.776,163
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByNestedPropertyOutgoing,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(planetFilter)`4).getStatement()).isEqualTo("MATCH (n:`Planet`) WHERE n.`name` = $`world_name_0` " + "MATCH (n)-[r0:`ORBITS`]->(m) WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m " + "MATCH p1 = (n)-[*0..4]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0..4]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths "+ "UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 501.,169
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByNestedPropertyOutgoing,Magic Number,The method contains a magic number: 4,169
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByNestedPropertyIncoming,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(planetFilter)`4).getStatement()).isEqualTo("MATCH (m:`Planet`) WHERE m.`name` = $`world_name_0` MATCH (n)<-[r0:`ORBITS`]-(m) " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0..4]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 497.,185
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByNestedPropertyIncoming,Magic Number,The method contains a magic number: 4,185
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByMultipleNestedProperties,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(planetNameFilter`planetMoonsFilter)`4).getStatement()).isEqualTo("MATCH (n:`Planet`) WHERE n.`name` = $`world_name_0` AND n.`moons` = $`moons_moons_1` " + "MATCH (n)-[r0:`ORBITS`]->(m) WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m " + "MATCH p1 = (n)-[*0..4]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0..4]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths "+ "UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 556.,200
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByMultipleNestedProperties,Magic Number,The method contains a magic number: 4,200
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByMultipleNestedPropertiesOnBothEnds,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(moonFilter`planetFilter)`4).getStatement()).isEqualTo("MATCH (n:`Moon`) WHERE n.`name` = $`world_name_0` MATCH (m:`Planet`) WHERE m.`colour` = $`colour_colour_1` " + "MATCH (n)-[r0:`ORBITS`]->(m) WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m " + "MATCH p1 = (n)-[*0..4]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0..4]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 563.,224
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByMultipleNestedPropertiesOnBothEnds,Magic Number,The method contains a magic number: 4,224
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesAnded,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(distance`time)`4).getStatement()).isEqualTo("MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`distance` = $`distance_0` AND r0.`time` = $`time_1` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 508.,248
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesAnded,Magic Number,The method contains a magic number: 60.2,248
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesAnded,Magic Number,The method contains a magic number: 3600,248
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesAnded,Magic Number,The method contains a magic number: 4,248
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesOred,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(distance`time)`4).getStatement()).isEqualTo("MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`distance` = $`distance_0` OR r0.`time` = $`time_1` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 507.,261
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesOred,Magic Number,The method contains a magic number: 60.2,261
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesOred,Magic Number,The method contains a magic number: 3600,261
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesOred,Magic Number,The method contains a magic number: 4,261
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsAnded,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(distance`time)`4).getStatement()).isEqualTo("MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`distance` < $`distance_0` AND r0.`time` = $`time_1` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 508.,274
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsAnded,Magic Number,The method contains a magic number: 60.2,274
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsAnded,Magic Number,The method contains a magic number: 3600,274
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsAnded,Magic Number,The method contains a magic number: 4,274
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsOred,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(distance`time)`4).getStatement()).isEqualTo("MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`distance` = $`distance_0` OR r0.`time` > $`time_1` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() " + "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 507.,287
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsOred,Magic Number,The method contains a magic number: 60.2,287
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsOred,Magic Number,The method contains a magic number: 3600,287
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesWithDifferentComparisonOperatorsOred,Magic Number,The method contains a magic number: 4,287
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndNestedPropertyOutgoing,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(planetFilter`time)`4).getStatement()).isEqualTo("MATCH (n:`Planet`) WHERE n.`name` = $`world_name_0` " + "MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`time` = $`time_1` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() "+ "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 534.,300
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndNestedPropertyOutgoing,Magic Number,The method contains a magic number: 3600,300
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndNestedPropertyOutgoing,Magic Number,The method contains a magic number: 4,300
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndNestedPropertyIncoming,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(planetFilter`time)`4).getStatement()).isEqualTo("MATCH (m:`Planet`) WHERE m.`name` = $`world_name_0` " + "MATCH (n)<-[r0:`ORBITS`]-(m) WHERE r0.`time` = $`time_1` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() "+ "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 534.,318
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndNestedPropertyIncoming,Magic Number,The method contains a magic number: 3600,318
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndNestedPropertyIncoming,Magic Number,The method contains a magic number: 4,318
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndMultipleNestedPropertiesOnBothEnds,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(moonFilter`planetFilter`time)`4).getStatement()).isEqualTo("MATCH (n:`Moon`) WHERE n.`name` = $`world_name_0` MATCH (m:`Planet`) WHERE m.`colour` = $`colour_colour_1` " + "MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`time` = $`time_2` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..4]-() "+ "WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..4]-() "+ "WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths WITH r0`startPaths + endPaths AS paths "+ "UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 600.,335
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndMultipleNestedPropertiesOnBothEnds,Magic Number,The method contains a magic number: 3600,335
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByBaseAndMultipleNestedPropertiesOnBothEnds,Magic Number,The method contains a magic number: 4,335
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesAndedWithMissingBooleanOperator,Magic Number,The method contains a magic number: 60.2,364
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesAndedWithMissingBooleanOperator,Magic Number,The method contains a magic number: 3600,364
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByPropertiesAndedWithMissingBooleanOperator,Magic Number,The method contains a magic number: 4,364
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatementsTest,testFindByMultipleNestedPropertiesMissingBooleanOperator,Magic Number,The method contains a magic number: 4,371
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaRelationshipLoadClauseBuilderTest,buildClauseWithDepthTwo,Long Statement,The length of the statement "assertThat(clause).isEqualToIgnoringWhitespace(" RETURN r`n`" + "[ " + "[ (n)-[r_f1:`FOUNDED`]->(o1:`Organisation`) | [ r_f1` o1 ] ]`"+ "[ (n)-[r_e1:`EMPLOYED_BY`]->(o1:`Organisation`) | [ r_e1` o1 ] ]`"+ "[ (n)-[r_l1:`LIVES_AT`]->(l1:`Location`) | [ r_l1` l1 ] ] "+ "]`"+ "m");" is 278.,49
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,CountStatementsTest,testCountNodesWithMultipleLabels,Long Statement,The length of the statement "assertThat(statements.countNodes(Arrays.asList("Person"`"Candidate")).getStatement()).isEqualTo("MATCH (n:`Person`:`Candidate`) RETURN COUNT(n)");" is 146.,48
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,CountStatementsTest,testCountEdgesWithTypeAndFilters,Long Statement,The length of the statement "CypherQuery query=statements.countEdges("INFLUENCE"`new Filters().add(new Filter("score"`ComparisonOperator.EQUALS`-12.2)));" is 124.,63
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,CountStatementsTest,testCountEdgesWithTypeAndFilters,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n)-[r0:`INFLUENCE`]->(m) WHERE r0.`score` = $`score_0` RETURN COUNT(r0)");" is 125.,63
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,CountStatementsTest,testCountEdgesWithTypeAndFilters,Magic Number,The method contains a magic number: 12.2,63
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,CountStatementsTest,testCountEdgesWithSpecificPath,Long Statement,The length of the statement "assertThat(statements.countEdges("StartNode"`"TYPE"`"EndNode").getStatement()).isEqualTo("MATCH (:`StartNode`)-[r0:`TYPE`]->(:`EndNode`) RETURN COUNT(r0)");" is 156.,72
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaNodeLoadClauseBuilderTest,buildQueryFromPerson,Long Statement,The length of the statement "assertThat(query).isEqualTo(" RETURN n`[ " + "[ (n)-[r_f1:`FOUNDED`]->(o1:`Organisation`) | [ r_f1` o1 ] ]` " + "[ (n)-[r_e1:`EMPLOYED_BY`]->(o1:`Organisation`) | [ r_e1` o1 ] ]` "+ "[ (n)-[r_l1:`LIVES_AT`]->(l1:`Location`) | [ r_l1` l1` "+ "[ [ (l1)<-[r_l2:`LIVES_AT`]-(p2:`Person`) | [ r_l2` p2 ] ] ] "+ "] ] "+ "]");" is 319.,51
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaNodeLoadClauseBuilderTest,buildQueryFromPerson,Magic Number,The method contains a magic number: 2,51
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaNodeLoadClauseBuilderTest,shouldMatchRelationshipForAllPossibleMappings,Long Statement,The length of the statement "assertThat(query).isEqualTo(" RETURN n`[ [ (n)-[r_c1:`COURCES`]->(c1:`Course`) | [ r_c1` c1 ] ]` [ (n)-[r_t1:`TAKES`]->(c1:`Course`) | [ r_t1` c1 ] ]` [ (n)<-[r_t1:`TAUGHT_BY`]-(t1:`Teacher`) | [ r_t1` t1 ] ]` [ (n)-[r_f1:`FRIENDS`]->(p1:`Pupil`) | [ r_f1` p1 ] ] ]");" is 268.,83
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaNodeLoadClauseBuilderTest,shouldMatchRelationshipForAllPossibleMappings,Long Statement,The length of the statement "assertThat(query).isEqualTo(" RETURN n`[ [ (n)-[r_t1:`TAKES`]->(c1:`Course`) | [ r_t1` c1 ] ]` [ (n)<-[r_t1:`TAUGHT_BY`]-(t1:`Teacher`) | [ r_t1` t1 ] ]` [ (n)-[r_f1:`FRIENDS`]->(p1:`Pupil`) | [ r_f1` p1 ] ] ]");" is 212.,83
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaNodeLoadClauseBuilderTest,shouldMatchRelationshipForAllPossibleMappings,Long Statement,The length of the statement "assertThat(query).isEqualTo(" RETURN n`[ [ (n)-[r_t1:`TAKES`]->(c1:`Course`) | [ r_t1` c1 ] ]` [ (n)<-[r_t1:`TAUGHT_BY`]-(t1:`Teacher`) | [ r_t1` t1 ] ]` [ (n)-[r_f1:`FRIENDS`]->(p1:`Pupil`) | [ r_f1` p1 ] ] ]");" is 212.,83
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaNodeLoadClauseBuilderTest,shouldMatchRelationshipForAllPossibleMappings,Long Statement,The length of the statement "assertThat(query).isEqualTo(" RETURN n`[ [ (n)-[r_c1:`COURCES`]->(c1:`Course`) | [ r_c1` c1` [ [ (c1)<-[r_t2:`TAKES`]-(p2:`Pupil`) | [ r_t2` p2` [ [ (p2)-[r_t3:`TAKES`]->(c3:`Course`) | [ r_t3` c3 ] ]` [ (p2)<-[r_t3:`TAUGHT_BY`]-(t3:`Teacher`) | [ r_t3` t3 ] ]` [ (p2)-[r_f3:`FRIENDS`]->(p3:`Pupil`) | [ r_f3` p3 ] ] ] ] ] ] ] ] ]");" is 333.,83
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,SchemaNodeLoadClauseBuilderTest,shouldMatchRelationshipForAllPossibleMappings,Magic Number,The method contains a magic number: 3,83
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,testFindOne,Magic Number,The method contains a magic number: 123L,51
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,testFindByTypeWithIllegalCharacter,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH ()-[r0:`HAS-ALBUM`]-() WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..1]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..1]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 372.,66
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyStringValue,Long Statement,The length of the statement "query=nodeQueryStatements.findByType("Asteroid"`new Filters().add(new Filter("ref"`ComparisonOperator.EQUALS`"45 Eugenia"))`1);" is 127.,74
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyStringValue,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`ref` = $`ref_0` WITH n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 139.,74
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyIntegralValue,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`index` = $`index_0` WITH n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 143.,90
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyIntegralValue,Magic Number,The method contains a magic number: 77,90
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyStandardForm,Long Statement,The length of the statement "query=nodeQueryStatements.findByType("Asteroid"`new Filters().add(new Filter("diameter"`ComparisonOperator.EQUALS`6.02E1))`1);" is 126.,99
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyStandardForm,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` = $`diameter_0` WITH n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 149.,99
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyStandardForm,Magic Number,The method contains a magic number: 6.02E1,99
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyDecimal,Long Statement,The length of the statement "query=nodeQueryStatements.findByType("Asteroid"`new Filters().add(new Filter("diameter"`ComparisonOperator.EQUALS`60.2))`1);" is 124.,108
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyDecimal,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` = $`diameter_0` WITH n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 149.,108
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyDecimal,Magic Number,The method contains a magic number: 60.2,108
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyEmbeddedDelimiter,Long Statement,The length of the statement "query=nodeQueryStatements.findByType("Cookbooks"`new Filters().add(new Filter("title"`ComparisonOperator.EQUALS`"Mrs Beeton's Household Recipes"))`1);" is 150.,117
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyEmbeddedDelimiter,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Cookbooks`) WHERE n.`title` = $`title_0` WITH n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 144.,117
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,findByPropertyEmbeddedDelimiter,Long Statement,The length of the statement "assertThat(mapper.writeValueAsString(query.getParameters())).isEqualTo("{\"title_0\":\"Mrs Beeton's Household Recipes\"}");" is 123.,117
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,delete,Magic Number,The method contains a magic number: 123L,127
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,deleteAll,Long Statement,The length of the statement "assertThat(cypherQuery.getStatement()).isEqualTo("MATCH (n) WHERE ID(n) in $ids OPTIONAL MATCH (n)-[r0]-() DELETE r0` n");" is 122.,135
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,deleteRel,Magic Number,The method contains a magic number: 123L,158
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,testFindByPropertyWithIllegalCharacter,Long Statement,The length of the statement "query=new RelationshipQueryStatements().findByType("HAS-ALBUM"`new Filters().add(new Filter("fake-property"`ComparisonOperator.EQUALS`"none"))`1);" is 146.,180
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementTest,testFindByPropertyWithIllegalCharacter,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n)-[r0:`HAS-ALBUM`]->(m) WHERE r0.`fake-property` = $`fake-property_0` WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m MATCH p1 = (n)-[*0..1]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..1]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 421.,180
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementsTest,testStatement,Long Statement,The length of the statement "assertThat(cypher).isEqualTo("{\"statements\":[{\"statement\":\"MATCH (n) WHERE ID(n) = $id WITH n MATCH p=(n)-[*0..1]-(m) RETURN p\"`\"parameters\":{\"id\":123}`\"resultDataContents\":[\"graph\"]`\"includeStats\":false}]}");" is 225.,43
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,ParameterisedStatementsTest,testStatement,Magic Number,The method contains a magic number: 123L,43
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByType,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Raptor"`1).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WITH n SKIP 4 LIMIT 2 MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 182.,42
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByTypeZeroDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Raptor"`0).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WITH n SKIP 4 LIMIT 2 RETURN n");" is 151.,48
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByTypeInfiniteDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Raptor"`-1).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WITH n SKIP 4 LIMIT 2 MATCH p=(n)-[*0..]-(m) RETURN p` ID(n)");" is 182.,54
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByProperty,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Raptor"`filters`2).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WHERE n.`name` = $`name_0` WITH n SKIP 4 LIMIT 2 MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)");" is 217.,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByProperty,Magic Number,The method contains a magic number: 2,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByPropertyZeroDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Raptor"`filters`0).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WHERE n.`name` = $`name_0` WITH n SKIP 4 LIMIT 2 RETURN n");" is 186.,67
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByPropertyInfiniteDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Raptor"`filters`-1).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WHERE n.`name` = $`name_0` WITH n SKIP 4 LIMIT 2 MATCH p=(n)-[*0..]-(m) RETURN p` ID(n)");" is 217.,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindAllByType,Long Statement,The length of the statement "assertThat(queryStatements.findAllByType("Raptor"`Arrays.asList(1L`2L)`1).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WHERE ID(n) IN $ids WITH n SKIP 4 LIMIT 2 MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 226.,80
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindAllByType,Magic Number,The method contains a magic number: 2L,80
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindAllByTypeZeroDepth,Long Statement,The length of the statement "assertThat(queryStatements.findAllByType("Raptor"`Arrays.asList(1L`2L)`0).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WHERE ID(n) IN $ids WITH n SKIP 4 LIMIT 2 RETURN n");" is 195.,88
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindAllByTypeZeroDepth,Magic Number,The method contains a magic number: 2L,88
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindAllByTypeInfiniteDepth,Long Statement,The length of the statement "assertThat(queryStatements.findAllByType("Raptor"`Arrays.asList(1L`2L)`-1).setPagination(paging).getStatement()).isEqualTo("MATCH (n:`Raptor`) WHERE ID(n) IN $ids WITH n SKIP 4 LIMIT 2 MATCH p=(n)-[*0..]-(m) RETURN p` ID(n)");" is 226.,95
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindAllByTypeInfiniteDepth,Magic Number,The method contains a magic number: 2L,95
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByTypeAndOffset,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Raptor`) WITH n SKIP 3 LIMIT 5 MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 127.,103
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByTypeAndOffset,Magic Number,The method contains a magic number: 5,103
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQueryPagingTest,testFindByTypeAndOffset,Magic Number,The method contains a magic number: 3,103
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatementsTest,testDeleteMany,Long Statement,The length of the statement "assertThat(statements.delete(Arrays.asList(1L`2L)).getStatement()).isEqualTo("MATCH (n)-[r0]->() WHERE ID(r0) IN $ids DELETE r0");" is 130.,47
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatementsTest,testDeleteMany,Magic Number,The method contains a magic number: 2L,47
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatementsTest,testDeleteWithType,Long Statement,The length of the statement "assertThat(statements.delete("TRAFFIC_WARDEN").getStatement()).isEqualTo("MATCH (n)-[r0:`TRAFFIC_WARDEN`]-() DELETE r0");" is 121.,58
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatementsTest,testDeleteWithTypeAndFilters,Magic Number,The method contains a magic number: 12.2,64
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatementsTest,testDeleteWithTypeAndFiltersAndList,Long Statement,The length of the statement "CypherQuery query=statements.deleteAndList("INFLUENCE"`new Filters().add(new Filter("score"`ComparisonOperator.EQUALS`-12.2)));" is 127.,72
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatementsTest,testDeleteWithTypeAndFiltersAndList,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n)-[r0:`INFLUENCE`]->(m) WHERE r0.`score` = $`score_0` DELETE r0 RETURN ID(r0)");" is 132.,72
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatementsTest,testDeleteWithTypeAndFiltersAndList,Magic Number,The method contains a magic number: 12.2,72
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOne,Long Statement,The length of the statement "assertThat(queryStatements.findOne(0L`2).getStatement()).isEqualTo("MATCH (n) WHERE ID(n) = $id WITH n MATCH p=(n)-[*0..2]-(m) RETURN p");" is 138.,59
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOne,Magic Number,The method contains a magic number: 2,59
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOnePrimaryIndex,Magic Number,The method contains a magic number: 2,65
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Orbit`) WHERE ID(n) = $id WITH n MATCH p=(n)-[*0..2]-(m) RETURN p");" is 122.,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Long Statement,The length of the statement "assertThat(queryStatements.findOne(0L`2).getStatement()).isEqualTo(queryStatements.findOneByType(""`0L`2).getStatement());" is 122.,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Long Statement,The length of the statement "assertThat(queryStatements.findOne(0L`2).getStatement()).isEqualTo(queryStatements.findOneByType(null`0L`2).getStatement());" is 124.,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByType,Magic Number,The method contains a magic number: 2,73
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByTypePrimaryIndex,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Orbit`) WHERE n.`uuid` = $id WITH n MATCH p=(n)-[*0..2]-(m) RETURN p");" is 125.,87
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByTypePrimaryIndex,Magic Number,The method contains a magic number: 2,87
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneByTypePrimaryIndexInfiniteDepth,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Orbit`) WHERE n.`uuid` = $id WITH n MATCH p=(n)-[*0..]-(m) RETURN p");" is 124.,96
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByLabel,Magic Number,The method contains a magic number: 3,105
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByDistance,Long Statement,The length of the statement "assertThat(statement).isEqualTo("MATCH (n:`Restaurant`) WHERE point.distance(point({latitude: n.latitude` longitude: n.longitude})`point({latitude: $lat` longitude: $lon})) = $distance WITH n MATCH p=(n)-[*0..4]-(m) RETURN p` ID(n)");" is 234.,111
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByDistance,Magic Number,The method contains a magic number: 37.4d,111
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByDistance,Magic Number,The method contains a magic number: 112.9d,111
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByDistance,Magic Number,The method contains a magic number: 1000.0d,111
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByDistance,Magic Number,The method contains a magic number: 4,111
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyIsNull,Long Statement,The length of the statement "assertThat(statement).isEqualTo("MATCH (n:`Restaurant`) WHERE n.`score` IS NULL WITH n MATCH p=(n)-[*0..3]-(m) RETURN p` ID(n)");" is 129.,121
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyIsNull,Long Statement,The length of the statement "assertThat(statement).isEqualTo("MATCH (n:`Restaurant`) WHERE NOT(n.`score` IS NULL ) WITH n MATCH p=(n)-[*0..3]-(m) RETURN p` ID(n)");" is 135.,121
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyIsNull,Magic Number,The method contains a magic number: 3,121
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyIsNull,Magic Number,The method contains a magic number: 3,121
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabel,Long Statement,The length of the statement "assertThat(queryStatements.findAllByType("Orbit"`asList(1L`2L`3L)`0).getStatement()).isEqualTo("MATCH (n:`Orbit`) WHERE ID(n) IN $ids WITH n RETURN n");" is 152.,138
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabel,Magic Number,The method contains a magic number: 2L,138
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabel,Magic Number,The method contains a magic number: 3L,138
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabelPrimaryIndexInfiniteDepth,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`Orbit`) WHERE n.`uuid` IN $ids WITH n MATCH p=(n)-[*0..]-(m) RETURN p");" is 126.,155
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabelDepthOne,Long Statement,The length of the statement "assertThat(queryStatements.findAllByType("Orbit"`asList(1L`2L`3L)`1).getStatement()).isEqualTo("MATCH (n:`Orbit`) WHERE ID(n) IN $ids WITH n MATCH p=(n)-[*0..1]-(m) RETURN p");" is 176.,166
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabelDepthOne,Magic Number,The method contains a magic number: 2L,166
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabelDepthOne,Magic Number,The method contains a magic number: 3L,166
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabelDepthInfinity,Long Statement,The length of the statement "assertThat(queryStatements.findAllByType("Orbit"`asList(1L`2L`3L)`-1).getStatement()).isEqualTo("MATCH (n:`Orbit`) WHERE ID(n) IN $ids WITH n MATCH p=(n)-[*0..]-(m) RETURN p");" is 176.,172
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabelDepthInfinity,Magic Number,The method contains a magic number: 2L,172
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindAllByLabelDepthInfinity,Magic Number,The method contains a magic number: 3L,172
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByProperty,Long Statement,The length of the statement "String statement=queryStatements.findByType("Asteroid"`new Filters().add(new Filter("diameter"`ComparisonOperator.EQUALS`60.2))`4).getStatement();" is 146.,178
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByProperty,Long Statement,The length of the statement "assertThat(statement).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` = $`diameter_0` WITH n MATCH p=(n)-[*0..4]-(m) RETURN p` ID(n)");" is 138.,178
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByProperty,Magic Number,The method contains a magic number: 60.2,178
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByProperty,Magic Number,The method contains a magic number: 4,178
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyZeroDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(new Filter("diameter"`EQUALS`60.2))`0).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` = $`diameter_0` WITH n RETURN n");" is 207.,205
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyZeroDepth,Magic Number,The method contains a magic number: 60.2,205
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyWithInfiniteValue,Long Statement,The length of the statement "PagingAndSortingQuery pagingAndSortingQuery=queryStatements.findByType("Asteroid"`new Filters().add(new Filter("albedo"`ComparisonOperator.EQUALS`-12.2))`0);" is 157.,211
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyWithInfiniteValue,Long Statement,The length of the statement "assertThat(pagingAndSortingQuery.getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`albedo` = $`albedo_0` WITH n RETURN n");" is 130.,211
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyWithInfiniteValue,Magic Number,The method contains a magic number: 12.2,211
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyWithInfiniteValue,Magic Number,The method contains a magic number: 12.2,211
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyWithInfiniteValue,Magic Number,The method contains a magic number: 0.005,211
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByLabelWithIllegalCharacters,Long Statement,The length of the statement "assertThat(queryStatements.findByType("l'artiste"`3).getStatement()).isEqualTo("MATCH (n:`l'artiste`) WITH n MATCH p=(n)-[*0..3]-(m) RETURN p");" is 144.,221
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByLabelWithIllegalCharacters,Magic Number,The method contains a magic number: 3,221
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindOneInfiniteDepth,Long Statement,The length of the statement "assertThat(queryStatements.findOne(0L`-1).getStatement()).isEqualTo("MATCH (n) WHERE ID(n) = $id WITH n MATCH p=(n)-[*0..]-(m) RETURN p");" is 138.,227
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByLabelInfiniteDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Orbit"`-1).getStatement()).isEqualTo("MATCH (n:`Orbit`) WITH n MATCH p=(n)-[*0..]-(m) RETURN p");" is 136.,233
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyInfiniteDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(new Filter("diameter"`EQUALS`60.2))`-1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` = $`diameter_0` WITH n MATCH p=(n)-[*0..]-(m) RETURN p` ID(n)");" is 238.,239
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyInfiniteDepth,Magic Number,The method contains a magic number: 60.2,239
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyWithIllegalCharacters,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Studio"`new Filters().add(new Filter("studio-name"`EQUALS`"Abbey Road Studios"))`3).getStatement()).isEqualTo("MATCH (n:`Studio`) WHERE n.`studio-name` = $`studio-name_0` WITH n MATCH p=(n)-[*0..3]-(m) RETURN p` ID(n)");" is 259.,246
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyWithIllegalCharacters,Magic Number,The method contains a magic number: 3,246
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyGreaterThan,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(parameter)`4).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` > $`diameter_0` WITH n MATCH p=(n)-[*0..4]-(m) RETURN p` ID(n)");" is 213.,254
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyGreaterThan,Magic Number,The method contains a magic number: 60,254
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyGreaterThan,Magic Number,The method contains a magic number: 4,254
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyGreaterThanEqual,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(parameter)`4).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` >= $`diameter_0` WITH n MATCH p=(n)-[*0..4]-(m) RETURN p` ID(n)");" is 214.,261
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyGreaterThanEqual,Magic Number,The method contains a magic number: 60,261
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyGreaterThanEqual,Magic Number,The method contains a magic number: 4,261
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyLessThan,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(parameter)`4).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` < $`diameter_0` " + "WITH n MATCH p=(n)-[*0..4]-(m) RETURN p` ID(n)");" is 218.,268
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyLessThan,Magic Number,The method contains a magic number: 60,268
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyLessThan,Magic Number,The method contains a magic number: 4,268
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyLessThanEqual,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(parameter)`4).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` <= $`diameter_0` " + "WITH n MATCH p=(n)-[*0..4]-(m) RETURN p` ID(n)");" is 219.,277
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyLessThanEqual,Magic Number,The method contains a magic number: 60,277
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByPropertyLessThanEqual,Magic Number,The method contains a magic number: 4,277
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByChainedAndedProperties,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam).and(moonParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_0` " + "MATCH (m1:`Moon`) WHERE m1.`name` = $`moon_name_1` MATCH (n)-[:`COLLIDES`]->(m0) " + "MATCH (n)<-[:`ORBITS`]-(m1) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 384.,286
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByChainedOredProperties,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam).or(moonParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`name` = $`name_0` " + "OR n.`name` = $`name_1` WITH n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 250.,299
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesLessThan,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(nameParam).add(diameterParam)`2).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`name` = $`name_0` AND n.`diameter` < $`diameter_1` " + "WITH n MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)");" is 262.,311
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesLessThan,Magic Number,The method contains a magic number: 60,311
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesLessThan,Magic Number,The method contains a magic number: 2,311
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesGreaterThan,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(nameParam).add(diameterParam)`2).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`name` = $`name_0` AND n.`diameter` > $`diameter_1` WITH n MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)");" is 257.,322
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesGreaterThan,Magic Number,The method contains a magic number: 60,322
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesGreaterThan,Magic Number,The method contains a magic number: 2,322
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesGreaterThanWithDifferentOrder,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(diameterParam).add(nameParam)`2).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` > $`diameter_0` AND n.`name` = $`name_1` WITH n MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)");" is 257.,333
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesGreaterThanWithDifferentOrder,Magic Number,The method contains a magic number: 60,333
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesGreaterThanWithDifferentOrder,Magic Number,The method contains a magic number: 2,333
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesGreaterThan,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(nameParam).add(diameterParam)`2).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`name` = $`name_0` OR n.`diameter` > $`diameter_1` WITH n MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)");" is 256.,344
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesGreaterThan,Magic Number,The method contains a magic number: 60,344
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesGreaterThan,Magic Number,The method contains a magic number: 2,344
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesLessThan,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(nameParam).add(diameterParam)`2).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`name` = $`name_0` OR n.`diameter` < $`diameter_1` WITH n MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)");" is 256.,355
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesLessThan,Magic Number,The method contains a magic number: 60,355
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesLessThan,Magic Number,The method contains a magic number: 2,355
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesGreaterThanWithDifferentOrder,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(diameterParam).add(nameParam)`2).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` > $`diameter_0` OR n.`name` = $`name_1` WITH n MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)");" is 256.,366
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesGreaterThanWithDifferentOrder,Magic Number,The method contains a magic number: 60,366
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleOrPropertiesGreaterThanWithDifferentOrder,Magic Number,The method contains a magic number: 2,366
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedPropertyOutgoing,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_0` MATCH (n)-[:`COLLIDES`]->(m0) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 280.,377
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedPropertySameEntityType,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(filter)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Asteroid`) WHERE m0.`name` = $`collidesWith_name_0` MATCH (n)-[:`COLLIDES`]->(m0) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 277.,384
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedPropertyIncoming,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_0` MATCH (n)<-[:`COLLIDES`]-(m0) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 280.,395
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedPropertyUndirected,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_0` MATCH (n)-[:`COLLIDES`]-(m0) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 279.,406
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedProperties,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(diameterParam).add(planetParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` > $`diameter_0` MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_1` MATCH (n)-[:`COLLIDES`]->(m0) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 334.,417
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedProperties,Magic Number,The method contains a magic number: 60,417
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedPropertiesInfiniteDepth,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(diameterParam).add(planetParam)`-1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) WHERE n.`diameter` > $`diameter_0` MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_1` MATCH (n)-[:`COLLIDES`]->(m0) WITH DISTINCT n MATCH p=(n)-[*0..]-(m) RETURN p` ID(n)");" is 334.,433
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedPropertiesInfiniteDepth,Magic Number,The method contains a magic number: 60,433
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedPropertiesOred,Magic Number,The method contains a magic number: 60,448
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedPropertiesOredDepth0,Long Statement,The length of the statement "String statement=queryStatements.findByType("Asteroid"`new Filters().add(diameterParam).add(planetParam)`0).getStatement();" is 123.,463
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedPropertiesOredDepth0,Magic Number,The method contains a magic number: 60,463
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedREProperty,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (n)-[r0:`COLLIDES`]->(m0) " + "WHERE r0.`totalDestructionProbability` = $`collision_totalDestructionProbability_0` " + "WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 315.,478
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedREProperty,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam).add(satelliteParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (n)-[r0:`COLLIDES`]->(m0) WHERE r0.`totalDestructionProbability` = $`collision_totalDestructionProbability_0` " + "MATCH (n)<-[r1:`MONITORED_BY`]-(m1) WHERE r1.`signalStrength` >= $`monitoringSatellites_signalStrength_1` WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 436.,494
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedBaseAndREProperty,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam`moonParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (n)-[r0:`COLLIDES`]->(m0) " + "WHERE r0.`totalDestructionProbability` = $`collision_totalDestructionProbability_0` " + "MATCH (m1:`Moon`) WHERE m1.`name` = $`moon_name_1` MATCH (n)<-[:`ORBITS`]-(m1) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 404.,520
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByDifferentNestedPropertiesAnded,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam).add(moonParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_0` " + "MATCH (m1:`Moon`) WHERE m1.`name` = $`moon_name_1` MATCH (n)-[:`COLLIDES`]->(m0) " + "MATCH (n)<-[:`ORBITS`]-(m1) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 384.,539
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedPropertiesOnTheSameEntityOredNotFollowingEachOtherDirectly,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam).add(moonParam).add(planetParam2)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_0` OR m0.`name` = $`collidesWith_name_2` " + "MATCH (m1:`Moon`) WHERE m1.`name` = $`moon_name_1` MATCH (n)-[:`COLLIDES`]->(m0) " + "MATCH (n)<-[:`ORBITS`]-(m1) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 440.,553
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByNestedPropertiesOnTheSameEntityOred,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(moonParam).add(planetParam).add(planetParam2)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Moon`) WHERE m0.`name` = $`moon_name_0` " + "MATCH (m1:`Planet`) WHERE m1.`name` = $`collidesWith_name_1` OR m1.`name` = $`collidesWith_name_2` " + "MATCH (n)<-[:`ORBITS`]-(m0) MATCH (n)-[:`COLLIDES`]->(m1) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 440.,572
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleNestedPropertiesAnded,Long Statement,The length of the statement "assertThat(queryStatements.findByType("Asteroid"`new Filters().add(planetParam).add(moonParam)`1).getStatement()).isEqualTo("MATCH (n:`Asteroid`) MATCH (m0:`Planet`) WHERE m0.`name` = $`collidesWith_name_0` AND m0.`size` = $`collidesWith_size_1` MATCH (n)-[:`COLLIDES`]->(m0) WITH DISTINCT n MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)");" is 334.,628
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesWithMissingBooleanOperator,Magic Number,The method contains a magic number: 60,644
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatementsTest,testFindByMultipleAndPropertiesWithMissingBooleanOperator,Magic Number,The method contains a magic number: 2,644
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteOne,Long Statement,The length of the statement "assertThat(statements.delete(0L).getStatement()).isEqualTo("MATCH (n) WHERE ID(n) = $id OPTIONAL MATCH (n)-[r0]-() DELETE r0` n");" is 130.,40
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteMany,Long Statement,The length of the statement "assertThat(statements.delete(Arrays.asList(1L`2L)).getStatement()).isEqualTo("MATCH (n) WHERE ID(n) in $ids OPTIONAL MATCH (n)-[r0]-() DELETE r0` n");" is 150.,46
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteMany,Magic Number,The method contains a magic number: 2L,46
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteWithLabel,Long Statement,The length of the statement "assertThat(statements.delete("TRAFFIC_WARDENS").getStatement()).isEqualTo("MATCH (n:`TRAFFIC_WARDENS`) OPTIONAL MATCH (n)-[r0]-() DELETE r0` n");" is 145.,58
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteWithLabelAndFilters,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`INFLUENCE`) " + "WHERE n.`score` = $`score_0` " + "WITH n "+ "OPTIONAL MATCH (n)-[r0]-() "+ "DELETE r0` n");" is 162.,64
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteWithLabelAndFilters,Magic Number,The method contains a magic number: 12.2,64
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteWithLabelAndFiltersAndList,Long Statement,The length of the statement "CypherQuery query=statements.deleteAndList("INFLUENCE"`new Filters().add(new Filter("score"`ComparisonOperator.EQUALS`-12.2)));" is 127.,76
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteWithLabelAndFiltersAndList,Long Statement,The length of the statement "assertThat(query.getStatement()).isEqualTo("MATCH (n:`INFLUENCE`) " + "WHERE n.`score` = $`score_0` " + "WITH n "+ "OPTIONAL MATCH (n)-[r0]-() "+ "DELETE r0` n RETURN ID(n)");" is 175.,76
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatementsTest,testDeleteWithLabelAndFiltersAndList,Magic Number,The method contains a magic number: 12.2,76
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testFindByType,Long Statement,The length of the statement "check("MATCH (n:`Raptor`) WITH n ORDER BY n.name MATCH p=(n)-[*0..1]-(m) RETURN p` ID(n)"`query.findByType("Raptor"`1).setSortOrder(sortOrder).getStatement());" is 159.,48
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testFindByProperty,Long Statement,The length of the statement "check("MATCH (n:`Raptor`) WHERE n.`name` = $`name_0` WITH n ORDER BY n.weight DESC MATCH p=(n)-[*0..2]-(m) RETURN p` ID(n)"`query.findByType("Raptor"`filters`2).setSortOrder(sortOrder).getStatement());" is 201.,55
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testFindByProperty,Magic Number,The method contains a magic number: 2,55
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testFindByTypeDepthZero,Long Statement,The length of the statement "check("MATCH (n:`Raptor`) WITH n ORDER BY n.name DESC RETURN n"`query.findByType("Raptor"`0).setSortOrder(sortOrder).getStatement());" is 133.,64
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testByPropertyDepthZero,Long Statement,The length of the statement "check("MATCH (n:`Raptor`) WHERE n.`name` = $`name_0` WITH n ORDER BY n.weight DESC RETURN n"`query.findByType("Raptor"`filters`0).setSortOrder(sortOrder).getStatement());" is 170.,71
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testFindByTypeDepthInfinite,Long Statement,The length of the statement "check("MATCH (n:`Raptor`) WITH n ORDER BY n.name DESC MATCH p=(n)-[*0..]-(m) RETURN p` ID(n)"`query.findByType("Raptor"`-1).setSortOrder(sortOrder).getStatement());" is 164.,79
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testFindByPropertyDepthInfinite,Long Statement,The length of the statement "check("MATCH (n:`Raptor`) WHERE n.`name` = $`name_0` WITH n ORDER BY n.name DESC MATCH p=(n)-[*0..]-(m) RETURN p` ID(n)"`query.findByType("Raptor"`filters`-1).setSortOrder(sortOrder).getStatement());" is 199.,86
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeEntityQuerySortingTest,testDifferentSortDirections,Long Statement,The length of the statement "check("MATCH (n:`Raptor`) WITH n ORDER BY n.age DESC`n.name RETURN n"`query.findByType("Raptor"`0).setSortOrder(sortOrder).getStatement());" is 139.,111
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatements,delete,Long Statement,The length of the statement "OptimisticLockingConfig optimisticLockingConfig=new OptimisticLockingConfig(1`classInfo.staticLabels().toArray(new String[]{})`versionField.property());" is 152.,48
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatements,delete,Long Statement,The length of the statement "return new DefaultRowModelRequest("MATCH (n)-[r0]->() " + " WHERE ID(r0) = $id AND r0.`" + versionField.property() + "` = $version "+ "SET "+ " r0.`"+ versionField.property()+ "` = r0.`"+ versionField.property()+ "` + 1 "+ "WITH r0 "+ " WHERE r0.`"+ versionField.property()+ "` = $version + 1 "+ "DELETE r0 "+ "RETURN DISTINCT ID(r0) AS id"`params`optimisticLockingConfig);" is 373.,48
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipDeleteStatements,delete,Long Statement,The length of the statement "return new DefaultRowModelRequest("MATCH (n)-[r0]->() WHERE ID(r0) IN $ids DELETE r0"`Collections.singletonMap("ids"`ids));" is 123.,71
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,RelationshipQueryStatements,findAllByType,Long Identifier,The length of the field idCollectionMatchClauseBuilder is 30.,89
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,PathRelationshipLoadClauseBuilder,build,Long Statement,The length of the statement "return " MATCH p1 = (n)-[*0.." + depth + "]-() "+ "WITH "+ variable+ "` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0.."+ depth+ "]-() "+ "WITH "+ variable+ "` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH "+ variable+ "`startPaths + endPaths AS paths "+ "UNWIND paths AS p "+ "RETURN DISTINCT p";" is 320.,35
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatements,splitPrimaryIndexAttributes,Long Statement,The length of the statement "return Arrays.stream(property.split(PROPERTY_SEPARATOR)).map(p -> "`" + p + "`: n.`"+ p+ "`").collect(Collectors.joining("`"`"{"`"}"));" is 135.,76
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatements,findAllByType,Long Identifier,The length of the field idCollectionMatchClauseBuilder is 30.,132
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeQueryStatements,findAllByType,Long Statement,The length of the statement "String primaryIndexToUse=joinPrimaryIndexAttributesIfNecessary(primaryIndex`ids.isEmpty() ? null : ids.iterator().next());" is 122.,132
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,AbstractSchemaLoadClauseBuilder,expand,Long Parameter List,The method has 5 parameters. ,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,AbstractSchemaLoadClauseBuilder,listComprehension,Long Parameter List,The method has 7 parameters. ,80
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,AbstractSchemaLoadClauseBuilder,listComprehension,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@35c1bc4c,80
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,AbstractSchemaLoadClauseBuilder,appendRel,Long Parameter List,The method has 5 parameters. ,139
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,AbstractSchemaLoadClauseBuilder,appendRel,Long Statement,The length of the statement "sb.append(start).append(variable).append(":").append(types.stream().map(type -> "`" + type + "`").collect(Collectors.joining("|"))).append(end);" is 144.,139
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,IdCollectionMatchRelationshipClauseBuilder,build,Long Statement,The length of the statement "return "MATCH ()-[r0:`" + label + "`]-() WHERE ID(r0) IN $ids WITH DISTINCT(r0) as r0` startnode(r0) AS n` endnode(r0) AS m";" is 125.,29
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,IdCollectionMatchRelationshipClauseBuilder,build,Long Statement,The length of the statement "return "MATCH ()-[r0:`" + label + "`]-() WHERE r0.`"+ property+ "` IN $ids WITH DISTINCT(r0) as r0` startnode(r0) AS n` endnode(r0) AS m";" is 138.,38
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,CountStatements,countNodes,Long Statement,The length of the statement "return new DefaultRowModelRequest(String.format("MATCH (n%s) RETURN COUNT(n)"`cypherLabels.toString())`Collections.<String`String>emptyMap());" is 142.,40
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,CountStatements,countEdges,Long Statement,The length of the statement "return new DefaultRowModelRequest(String.format("MATCH (:`%s`)-[r0:`%s`]->(:`%s`) RETURN COUNT(r0)"`startLabel`type`endLabel)`Collections.emptyMap());" is 150.,64
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatements,delete,Long Statement,The length of the statement "return new DefaultRowModelRequest("MATCH (n) WHERE ID(n) = $id OPTIONAL MATCH (n)-[r0]-() DELETE r0` n"`Collections.singletonMap("id"`id));" is 139.,42
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatements,delete,Long Statement,The length of the statement "OptimisticLockingConfig optimisticLockingConfig=new OptimisticLockingConfig(1`classInfo.staticLabels().toArray(new String[]{})`versionField.property());" is 152.,48
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatements,delete,Long Statement,The length of the statement "return new DefaultRowModelRequest("MATCH (n) " + " WHERE id(n) = $id AND n.`" + versionField.property() + "` = $version "+ "SET "+ " n.`"+ versionField.property()+ "` = n.`"+ versionField.property()+ "` + 1 "+ "WITH n "+ " WHERE n.`"+ versionField.property()+ "` = $version + 1 "+ "OPTIONAL MATCH (n)-[r0]-() "+ "DELETE r0` n "+ "RETURN DISTINCT id(n) AS id"`params`optimisticLockingConfig);" is 391.,48
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatements,delete,Long Statement,The length of the statement "return new DefaultRowModelRequest("MATCH (n) WHERE ID(n) in $ids OPTIONAL MATCH (n)-[r0]-() DELETE r0` n"`Collections.singletonMap("ids"`ids));" is 143.,74
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy.impl,NodeDeleteStatements,delete,Long Statement,The length of the statement "return new DefaultRowModelRequest(String.format("MATCH (n:`%s`) OPTIONAL MATCH (n)-[r0]-() DELETE r0` n"`label)`Collections.emptyMap());" is 136.,85
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQueryPagingTest,testFindByLabel,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`3).setPagination(new Pagination(1`10)).getStatement()).isEqualTo("MATCH ()-[r0:`ORBITS`]-() WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m SKIP 10 LIMIT 10 MATCH p1 = (n)-[*0..3]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..3]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 445.,37
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQueryPagingTest,testFindByLabel,Magic Number,The method contains a magic number: 3,37
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQueryPagingTest,testFindByLabel,Magic Number,The method contains a magic number: 10,37
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQueryPagingTest,testFindByProperty,Long Statement,The length of the statement "assertThat(query.findByType("ORBITS"`new Filters().add(new Filter("distance"`ComparisonOperator.EQUALS`60.2))`1).setPagination(new Pagination(0`4)).getStatement()).isEqualTo("MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`distance` = $`distance_0` WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m SKIP 0 LIMIT 4 MATCH p1 = (n)-[*0..1]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m MATCH p2 = (m)-[*0..1]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)");" is 554.,44
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQueryPagingTest,testFindByProperty,Magic Number,The method contains a magic number: 60.2,44
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQueryPagingTest,testFindByProperty,Magic Number,The method contains a magic number: 4,44
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testFindByLabel,Long Statement,The length of the statement "String expected="MATCH ()-[r0:`ORBITS`]-() WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m " + "ORDER BY r0.distance MATCH p1 = (n)-[*0..3]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m " + "MATCH p2 = (m)-[*0..3]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)";" is 372.,49
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testFindByLabel,Magic Number,The method contains a magic number: 3,49
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testFindByProperty,Long Statement,The length of the statement "String expected="MATCH (n)-[r0:`ORBITS`]->(m) WHERE r0.`distance` = $`distance_0` " + "WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m ORDER BY r0.aphelion " + "MATCH p1 = (n)-[*0..1]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0..1]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)";" is 419.,59
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testFindByProperty,Magic Number,The method contains a magic number: 60.2,59
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testMultipleSortOrders,Long Statement,The length of the statement "String cypher="MATCH ()-[r0:`ORBITS`]-() WITH DISTINCT(r0) as r0`startnode(r0) AS n` " + "endnode(r0) AS m ORDER BY r0.distance DESC`r0.aphelion DESC " + "MATCH p1 = (n)-[*0..3]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0..3]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)";" is 400.,71
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testMultipleSortOrders,Magic Number,The method contains a magic number: 3,71
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testDefaultMultipleSortOrders,Long Statement,The length of the statement "String cypher="MATCH ()-[r0:`ORBITS`]-() WITH DISTINCT(r0) as r0`startnode(r0) AS n` " + "endnode(r0) AS m ORDER BY r0.distance`r0.aphelion " + "MATCH p1 = (n)-[*0..3]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m "+ "MATCH p2 = (m)-[*0..3]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths "+ "WITH r0`startPaths + endPaths AS paths UNWIND paths AS p RETURN DISTINCT p` ID(r0)";" is 390.,85
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testDefaultMultipleSortOrders,Magic Number,The method contains a magic number: 3,85
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testDifferentSortDirections,Long Statement,The length of the statement "String expected="MATCH ()-[r0:`ORBITS`]-() WITH DISTINCT(r0) as r0`startnode(r0) AS n` endnode(r0) AS m " + "ORDER BY r0.type DESC`r0.name MATCH p1 = (n)-[*0..3]-() WITH r0` COLLECT(DISTINCT p1) AS startPaths` m " + "MATCH p2 = (m)-[*0..3]-() WITH r0` startPaths` COLLECT(DISTINCT p2) AS endPaths WITH r0`startPaths + endPaths AS paths "+ "UNWIND paths AS p RETURN DISTINCT p` ID(r0)";" is 385.,99
neo4j_neo4j-ogm,org.neo4j.ogm.session.request.strategy,RelationshipEntityQuerySortingTest,testDifferentSortDirections,Magic Number,The method contains a magic number: 3,99
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegateIntegrationTest,shouldPickupCorrectFieldInfo,Long Statement,The length of the statement "sessionDelegate.resolvePropertyAnnotations(Album.class`Arrays.asList(recordedAtFilter`releasedFilter`releasedAtFilter`enteredChartAtFilter`leftChartFilter`leftChartAtFilter));" is 175.,61
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegateIntegrationTest,shouldPickupCorrectFieldInfo,Long Statement,The length of the statement "assertThat(recordedAtFilter.getPropertyConverter()).as("Property converter %s should be used for Date fields without @Property-annotation"`DateStringConverter.class).isInstanceOf(DateStringConverter.class);" is 206.,61
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegateIntegrationTest,shouldPickupCorrectFieldInfo,Long Statement,The length of the statement "assertThat(releasedFilter.getPropertyConverter()).as("Property converter %s should be used for Date fields with @Property-annotation referred by field name"`DateStringConverter.class).isInstanceOf(DateStringConverter.class);" is 224.,61
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegateIntegrationTest,shouldPickupCorrectFieldInfo,Long Statement,The length of the statement "assertThat(releasedAtFilter.getPropertyConverter()).as("Property converter %s should be used for Date fields with @Property-annotation referred by property name"`DateStringConverter.class).isInstanceOf(DateStringConverter.class);" is 229.,61
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegateIntegrationTest,shouldPickupCorrectFieldInfo,Long Statement,The length of the statement "assertThat(enteredChartAtFilter.getPropertyConverter()).as("Specified provider should be used").isInstanceOf(DateLongConverter.class);" is 134.,61
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegateIntegrationTest,shouldPickupCorrectFieldInfo,Long Statement,The length of the statement "assertThat(leftChartFilter.getPropertyConverter()).as("Specified provider should be used").isInstanceOf(DateLongConverter.class);" is 129.,61
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegateIntegrationTest,shouldPickupCorrectFieldInfo,Long Statement,The length of the statement "assertThat(leftChartAtFilter.getPropertyConverter()).as("Specified provider should be used").isInstanceOf(DateLongConverter.class);" is 131.,61
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,ExecuteQueriesDelegate,queryForObject,Long Statement,The length of the statement "String message=String.format("Cannot map %s to %s. This can be caused by missing registration of %s."`typeOfResult`wantedType`wantedType);" is 138.,87
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,ExecuteQueriesDelegate,extractColumnValue,Long Statement,The length of the statement "throw new RuntimeException("Scalar response queries must only return one column. Make sure your cypher query only returns one item.");" is 134.,203
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,ExecuteQueriesDelegate,extractColumnValue,Long Statement,The length of the statement "return Optional.ofNullable(ConvertibleTypes.REGISTRY.get(type.getCanonicalName())).map(ac -> (AttributeConverter<T`Object>)(type.isArray() ? ac.forArray : ac.forScalar)).map(c -> c.toEntityAttribute(o)).orElse((T)Utils.coerceTypes(type`o));" is 240.,203
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,ExecuteQueriesDelegate,countEntitiesOfType,Complex Method,Cyclomatic complexity of the method is 8,216
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,ExecuteQueriesDelegate,validateQuery,Complex Conditional,The conditional expression LOGGER.isDebugEnabled() && readOnly && mayBeReadWrite(cypher) is complex.,305
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,ExecuteQueriesDelegate,validateQuery,Long Statement,The length of the statement "LOGGER.debug("Thread {}: Cypher query contains keywords that indicate a writing query but OGM is going to use a read only transaction as requested` so the query might fail."`Thread.currentThread().getId());" is 206.,305
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByTypeDelegate,loadAll,Long Identifier,The length of the identifier sortOrderWithResolvedProperties is 31.,57
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByTypeDelegate,loadAll,Long Parameter List,The method has 5 parameters. ,57
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByTypeDelegate,loadAll,Long Statement,The length of the statement "LOG.warn("Unable to find database label for entity " + type.getName() + " : no results will be returned. Make sure the class is registered` "+ "and not abstract without @NodeEntity annotation");" is 194.,57
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByTypeDelegate,loadAll,Long Statement,The length of the statement "DefaultGraphRowListModelRequest graphRowListModelRequest=new DefaultGraphRowListModelRequest(query.getStatement()`query.getParameters());" is 137.,57
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByTypeDelegate,loadAll,Long Statement,The length of the statement "return (Collection<T>)new GraphRowListModelMapper(session.metaData()`session.context()`session.getEntityInstantiator()).map(type`response);" is 139.,57
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByTypeDelegate,loadAll,Long Statement,The length of the statement "return (Collection<T>)new GraphRowModelMapper(session.metaData()`session.context()`session.getEntityInstantiator()).map(type`response);" is 135.,57
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByTypeDelegate,loadAll,Long Parameter List,The method has 5 parameters. ,150
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,DeleteDelegate,deleteAll,Long Statement,The length of the statement "session.warn("Unable to find database label for entity " + type.getName() + " : no results will be returned. Make sure the class is registered` "+ "and not abstract without @NodeEntity annotation");" is 198.,64
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,DeleteDelegate,deleteOneOrMoreObjects,Complex Method,Cyclomatic complexity of the method is 14,163
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,DeleteDelegate,deleteOneOrMoreObjects,Long Statement,The length of the statement "session.warn(String.format("Instance of class %s has to be reloaded to be deleted. This can happen if the session has " + "been cleared between loading and deleting or using an object from a different transaction."`object.getClass()));" is 235.,163
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,DeleteDelegate,deleteOneOrMoreObjects,Long Statement,The length of the statement "return classInfo.getPrimaryIndexOrIdReader().apply(object).map(primaryIndexOrId -> session.load(object.getClass()`(Serializable)primaryIndexOrId)).flatMap(reloadedObject -> mappingContext.optionalNativeId(reloadedObject)).orElse(-1L);" is 234.,163
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadOneDelegate,load,Long Statement,The length of the statement "throw new IllegalArgumentException("Supplied id must be of type Long (native graph id) when supplied class " + "does not have primary id " + type.getName());" is 157.,56
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadOneDelegate,load,Long Statement,The length of the statement "logger.warn("Unable to find database label for entity " + type.getName() + " : no results will be returned. Make sure the class is registered` "+ "and not abstract without @NodeEntity annotation");" is 197.,56
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegate,resolvePropertyAnnotations,Complex Method,Cyclomatic complexity of the method is 9,58
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SessionDelegate,sortClausesWithResolvedProperties,Long Identifier,The length of the identifier sortClausesWithResolvedProperties is 33.,158
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveDelegate,save,Long Statement,The length of the statement "throw new IllegalArgumentException("Class " + object.getClass() + " is not a valid entity class. "+ "Please check the entity mapping.");" is 136.,54
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveDelegate,addWriteProtection,Long Statement,The length of the statement "throw new IllegalStateException("Cannot register simple write protection for a mode on a custom strategy. Use #setWriteProtectionStrategy(null) to remove any custom strategy.");" is 177.,94
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveDelegate,removeWriteProtection,Long Identifier,The length of the identifier currentWriteProtectionStrategy is 30.,105
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveDelegate,removeWriteProtection,Long Statement,The length of the statement "if (this.writeProtectionStrategy == null || !(this.writeProtectionStrategy instanceof DefaultWriteProtectionStrategyImpl)) {" is 124.,105
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveDelegate,removeWriteProtection,Long Statement,The length of the statement "final DefaultWriteProtectionStrategyImpl currentWriteProtectionStrategy=(DefaultWriteProtectionStrategyImpl)this.writeProtectionStrategy;" is 137.,105
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,preSave,Complex Method,Cyclomatic complexity of the method is 8,71
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,postSave,Long Statement,The length of the statement "this.preSaved.entrySet().stream().map(e -> new PostSaveEvent(e.getKey()`e.getValue())).forEach(session::notifyListeners);" is 121.,108
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,addUnreachable,Long Statement,The length of the statement "logger.warn("Relationship to/from entity id={} deleted` but entity is not " + "in context - no events will be fired."`nodeId);" is 126.,161
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,dirty,Complex Conditional,The conditional expression isDeleted(previous) && (previous.getStartNodeId() == parentId || previous.getEndNodeId() == parentId) is complex.,175
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,dirty,Complex Method,Cyclomatic complexity of the method is 8,175
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,clearPreviousRelationships,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@21f49e1,235
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,deregisterIncomingRelationship,Complex Conditional,The conditional expression mappedRelationship.getEndNodeId() == id && mappedRelationship.getRelationshipType().equals(relationshipType) && endNodeType.equals(mappedRelationship.getStartNodeType()) is complex.,254
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,deregisterIncomingRelationship,Long Statement,The length of the statement "if (mappedRelationship.getEndNodeId() == id && mappedRelationship.getRelationshipType().equals(relationshipType) && endNodeType.equals(mappedRelationship.getStartNodeType())) {" is 176.,254
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,deregisterOutgoingRelationship,Complex Conditional,The conditional expression mappedRelationship.getStartNodeId() == id && mappedRelationship.getRelationshipType().equals(relationshipType) && endNodeType.equals(mappedRelationship.getEndNodeType()) is complex.,268
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,deregisterOutgoingRelationship,Long Statement,The length of the statement "if (mappedRelationship.getStartNodeId() == id && mappedRelationship.getRelationshipType().equals(relationshipType) && endNodeType.equals(mappedRelationship.getEndNodeType())) {" is 176.,268
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,mapInstance,Long Parameter List,The method has 5 parameters. ,332
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,mapInstance,Long Statement,The length of the statement "MappedRelationship edge=new MappedRelationship(startNodeId`type`endNodeId`optionalReferenceId.orElse(null)`startNodeInfo.getUnderlyingClass()`endNodeInfo.getUnderlyingClass());" is 176.,332
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,mapInstance,Long Statement,The length of the statement "MappedRelationship edge=new MappedRelationship(parentId`type`referenceId`null`parentInfo.getUnderlyingClass()`referenceInfo.getUnderlyingClass());" is 146.,332
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,SaveEventDelegate,mapInstance,Long Statement,The length of the statement "MappedRelationship edge=new MappedRelationship(referenceId`type`parentId`null`referenceInfo.getUnderlyingClass()`parentInfo.getUnderlyingClass());" is 146.,332
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByIdsDelegate,loadAll,Long Parameter List,The method has 5 parameters. ,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByIdsDelegate,loadAll,Long Statement,The length of the statement "LOG.warn("Unable to find database label for entity " + type.getName() + " : no results will be returned. Make sure the class is registered` "+ "and not abstract without @NodeEntity annotation");" is 194.,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByIdsDelegate,loadAll,Long Statement,The length of the statement "PagingAndSortingQuery qry=queryStatements.findAllByType(labelsOrType.get()`convertIfNeeded(classInfo`ids)`depth).setSortOrder(sortOrder).setPagination(pagination);" is 163.,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByIdsDelegate,loadAll,Long Statement,The length of the statement "Iterable<T> mapped=new GraphRowModelMapper(session.metaData()`session.context()`session.getEntityInstantiator()).map(type`response);" is 132.,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByInstancesDelegate,loadAll,Long Statement,The length of the statement "Set<Serializable> ids=objects.stream().map(primaryIndexOrIdReader::apply).filter(Optional::isPresent).map(Optional::get).map(Serializable.class::cast).collect(toCollection(LinkedHashSet::new));" is 193.,46
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,LoadByInstancesDelegate,findCommonClassInfo,Long Statement,The length of the statement "Set<ClassInfo> infos=objects.stream().map(Object::getClass).distinct().map(metaData::classInfo).map(LoadByInstancesDelegate::getRootClassInfo).collect(toSet());" is 160.,94
neo4j_neo4j-ogm,org.neo4j.ogm.session.delegates,ExecuteQueriesDelegateTest,parameters,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{"CREATE (a:Actor) RETURN a"`true}`{"create (a:Actor) return a"`true}`{"CREATE (a:Actor) RETURN a"`true}`{"create (a:Actor) return a"`true}`{"MERGE (a:Actor {id : 10}) ON CREATE SET a.created = timestamp() ON MATCH SET a.accessTime = timestamp()"`true}`{"merge (a:Actor {id : 10}) ON CREATE SET a.created = timestamp() ON MATCH SET a.accessTime = timestamp()"`true}`{"MATCH (a:Actor) SET a.age = 45"`true}`{"match (a:Actor) set a.age = 45"`true}`{"MATCH (a:Actor) DELETE a"`true}`{"match (a:Actor) delete a"`true}`{"MATCH (a:Actor) DETACH DELETE a"`true}`{"match (a:Actor) detach delete a"`true}`{"MATCH (a:Actor) REMOVE a.age"`true}`{"match (a:Actor) remove a.age"`true}`{"DROP USER test"`true}`{"call sp.doSomething()"`true}`{"CALL sp.doSomething()"`true}`{"MATCH (a:Actor) WITH a CALL sp.doSomething(a)"`true}`{"MATCH (a:Actor) WITH a CALL /*+ OGM_READ_ONLY */ sp.doSomething(a)"`true}`{"MATCH (a:Actor) WITH a CALL /*+ OGM_READ_ONLY */ sp.doSomething(a)"`true}`{"MATCH (a:Actor) WITH a CALL /*+ OGM READ ONLY */ sp.doSomething(a)"`true}`{"MATCH (a:Actor) WITH a CALL /*+ OGM READ _ONLY */ sp.doSomething(a)"`true}`{"MATCH (a:Actor) WITH a CALL /*+OGM READ_ONLY */ sp.doSomething(a)"`true}`{"MATCH (a:Actor) WITH a CALL /*+ OGM READ_ONLY*/ sp.doSomething(a)"`true}`{"MATCH (a:Actor) WITH a CALL /*+OGM READ_ONLY*/ sp.doSomething(a)"`true}`{"call sp.doSomething() yield x \nWITH x MATCH (f:Foo) \nWHERE f.x = x RETURN f "`true}`{"MATCH (a:Actor) RETURN a"`false}`{"match (a:Actor) return a"`false}`{"call /*+ OGM READ_ONLY */ sp.doSomething()"`false}`{"/*+ OGM READ_ONLY */ call sp.doSomething()"`false}`{"call sp.doSomething() /*+ OGM READ_ONLY */"`false}`{"MATCH (a:Actor) WITH a CALL /*+ OGM READ_ONLY */ sp.doSomething(a)"`false}`{"call sp.doSomething() /*+ OGM READ_ONLY */ yield x \nWITH x MATCH (f:Foo) \nWHERE f.x = x RETURN f "`false}`{"call sp.doSomething() yield x \nWITH x MATCH (f:Foo) \nWHERE f.x = x RETURN f /*+ OGM READ_ONLY */"`false}});" is 1993.,38
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassPathScannerTest,directoryShouldBeScanned,Long Statement,The length of the statement "assertThat(domainInfo.getClassInfoMap()).containsOnlyKeys("org.neo4j.ogm.domain.bike.Bike"`"org.neo4j.ogm.domain.bike.Frame"`"org.neo4j.ogm.domain.bike.Saddle"`"org.neo4j.ogm.domain.bike.Wheel"`"org.neo4j.ogm.domain.bike.WheelWithUUID");" is 237.,31
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassPathScannerTest,nestedDirectoryShouldBeScanned,Long Statement,The length of the statement "assertThat(domainInfo.getClassInfoMap()).containsOnlyKeys("org.neo4j.ogm.domain.convertible.bytes.Photo"`"org.neo4j.ogm.domain.convertible.bytes.PhotoWrapper"`"org.neo4j.ogm.domain.convertible.date.DateNumericStringConverter"`"org.neo4j.ogm.domain.convertible.date.Memo"`"org.neo4j.ogm.domain.convertible.date.Java8DatesMemo"`"org.neo4j.ogm.domain.convertible.enums.Algebra"`"org.neo4j.ogm.domain.convertible.enums.Education"`"org.neo4j.ogm.domain.convertible.enums.Gender"`"org.neo4j.ogm.domain.convertible.enums.NumberSystem"`"org.neo4j.ogm.domain.convertible.enums.NumberSystemDomainConverter"`"org.neo4j.ogm.domain.convertible.enums.Operation"`"org.neo4j.ogm.domain.convertible.enums.Person"`"org.neo4j.ogm.domain.convertible.enums.Tag"`"org.neo4j.ogm.domain.convertible.enums.TagEntity"`"org.neo4j.ogm.domain.convertible.enums.TagModel"`"org.neo4j.ogm.domain.convertible.numbers.Account"`"org.neo4j.ogm.domain.convertible.parametrized.JsonNode"`"org.neo4j.ogm.domain.convertible.parametrized.MapJson"`"org.neo4j.ogm.domain.convertible.parametrized.StringMapEntity"`"org.neo4j.ogm.domain.convertible.parametrized.StringMapConverter"`"org.neo4j.ogm.domain.convertible.numbers.AbstractListConverter"`"org.neo4j.ogm.domain.convertible.numbers.AbstractListConverter$AbstractIntegerListConverter"`"org.neo4j.ogm.domain.convertible.numbers.AbstractListConverter$Base36NumberConverter"`"org.neo4j.ogm.domain.convertible.numbers.AbstractListConverter$FoobarListConverter"`"org.neo4j.ogm.domain.convertible.numbers.Foobar"`"org.neo4j.ogm.domain.convertible.numbers.FoobarListConverter"`"org.neo4j.ogm.domain.convertible.numbers.FoobarConverter"`"org.neo4j.ogm.domain.convertible.numbers.HexadecimalNumberConverter");" is 1711.,43
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MergeWithPrimaryIndexTests,setUpTestDatabase,Long Statement,The length of the statement "mappingMetadata=new MetaData("org.neo4j.ogm.domain.autoindex.valid"`"org.neo4j.ogm.domain.cineasts.annotated"`"org.neo4j.ogm.domain.pizza");" is 140.,46
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MergeWithPrimaryIndexTests,newNodeUsesGraphIdWhenPrimaryIndexNotPresent,Long Statement,The length of the statement "assertThat(compiler.createNodesStatements().get(0).getStatement()).isEqualTo("UNWIND $rows as row CREATE (n:`Pizza`) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 189.,64
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MergeWithPrimaryIndexTests,newNodeUsesPrimaryIndexWhenPresent,Long Statement,The length of the statement "assertThat(compiler.createNodesStatements().get(0).getStatement()).isEqualTo("UNWIND $rows as row MERGE (n:`User`{login: row.props.login}) SET n=row.props RETURN row.nodeRef as ref` ID(n) as id` $type as type");" is 211.,74
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,setUp,Long Statement,The length of the statement "metaData=new MetaData("org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.pizza"`"org.neo4j.ogm.domain.metadata"`"org.neo4j.ogm.domain.canonical"`"org.neo4j.ogm.domain.hierarchy.domain"`"org.neo4j.ogm.domain.cineasts.partial"`"org.neo4j.ogm.domain.annotations.ids");" is 265.,53
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,invalidPropertyFieldsShouldGiveBetterError,Long Statement,The length of the statement "this.expectedException.expectMessage("'org.neo4j.ogm.domain.forum.LeadMembership#yearOfRegistration' is not persistable as property but has not been marked as transient.");" is 172.,105
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,testRelationshipFieldInfo,Magic Number,The method contains a magic number: 4,179
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,testRelationshipGetters,Magic Number,The method contains a magic number: 4,269
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,testPropertyGetters,Complex Method,Cyclomatic complexity of the method is 8,292
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,testPropertyGetters,Magic Number,The method contains a magic number: 6,292
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,testFindIterableFields,Magic Number,The method contains a magic number: 4,340
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,labelFieldOrNullThrowsMappingExceptionForInvalidType,Long Statement,The length of the statement ").isInstanceOf(MappingException.class).hasMessage("Field 'labels' in class 'org.neo4j.ogm.domain.metadata.LabelsAnnotationWithWrongType' " + "includes the @Labels annotation` however this field is not a type of collection.");" is 225.,384
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,testClassInfoForAbstractClassImplementingInterfaceName,Long Statement,The length of the statement "assertThat(metaData.classInfo("Membership").interfacesInfo().list().iterator().next().toString().contains("IMembership")).isTrue();" is 131.,399
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfoTest,testTypeParameterDescriptorForRelationships,Long Statement,The length of the statement "assertThat(classInfo.getTypeParameterDescriptorForRelationship("HAS_ACTIVITY"`Direction.OUTGOING)).isEqualTo(Activity.class);" is 125.,441
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,TransientObjectsTest,setUp,Long Statement,The length of the statement "metaData=new MetaData("org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.pizza"`"org.neo4j.ogm.domain.metadata"`"org.neo4j.ogm.domain.canonical"`"org.neo4j.ogm.domain.hierarchy.domain"`"org.neo4j.ogm.domain.cineasts.annotated");" is 228.,38
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,GenericsFieldsTest,parameterizedScalarFieldsInParentClassesShouldWork,Long Statement,The length of the statement "for ( String[] parameters : new String[][]{{"Country"`"org.neo4j.ogm.domain.gh704.CountryRevision"}`{"org.neo4j.ogm.domain.gh704.CountryRevision"`"org.neo4j.ogm.domain.gh704.CountryRevision"}`{"org.neo4j.ogm.domain.gh704.RevisionEntity"`"java.lang.Object"}}) {" is 260.,141
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,oneTimeSetUp,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.annotations.ids"`"org.neo4j.ogm.domain.annotations.invalid.ids");" is 133.,45
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,saveInternalIdWithAnnotation,Long Statement,The length of the statement "ValidAnnotations.InternalIdWithAnnotation loaded=session.load(ValidAnnotations.InternalIdWithAnnotation.class`entity.identifier);" is 129.,71
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,saveWithStringUuidGeneration,Long Statement,The length of the statement "final ValidAnnotations.IdAndGenerationType retrievedEntity=session2.load(ValidAnnotations.IdAndGenerationType.class`entity.identifier);" is 135.,86
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,saveWithUuidGeneration,Long Statement,The length of the statement "final ValidAnnotations.UuidIdAndGenerationType retrievedEntity=session2.load(ValidAnnotations.UuidIdAndGenerationType.class`entity.identifier);" is 143.,102
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,deleteByEntityShouldWorkWithUserTypedIdsInNewSession,Long Statement,The length of the statement "ValidAnnotations.UuidIdAndGenerationTypeWithoutIdAttribute entity=new ValidAnnotations.UuidIdAndGenerationTypeWithoutIdAttribute();" is 131.,119
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,deleteByEntityShouldWorkWithUserTypedIdsInClearedSession,Long Statement,The length of the statement "ValidAnnotations.UuidIdAndGenerationTypeWithoutIdAttribute entity=new ValidAnnotations.UuidIdAndGenerationTypeWithoutIdAttribute();" is 131.,139
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,deleteAndAssertDeletion,Long Statement,The length of the statement "String cypher="MATCH (e:`ValidAnnotations$UuidIdAndGenerationTypeWithoutIdAttribute` {identifier: $identifier}) RETURN count(e)";" is 129.,158
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,saveWithCustomStrategyGeneratesId,Long Statement,The length of the statement "ValidAnnotations.WithCustomIdStrategy loaded=session.load(ValidAnnotations.WithCustomIdStrategy.class`entity.identifier);" is 121.,176
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,saveWithContextIdStrategy,Long Statement,The length of the statement "ValidAnnotations.WithCustomInstanceIdStrategy loaded=session.load(ValidAnnotations.WithCustomInstanceIdStrategy.class`"test-custom-instance-id");" is 145.,191
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,saveRelationshipEntityWithId,Magic Number,The method contains a magic number: 100,218
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,shouldRejectSavingEntityWithoutId,Long Statement,The length of the statement "assertThatThrownBy(() -> session.save(new InvalidAnnotations.NeitherGraphIdOrId())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("is not a valid entity class");" is 181.,238
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,IdGenerationTest,shouldRejectDeletingEntityWithoutId,Long Statement,The length of the statement "assertThatThrownBy(() -> session.delete(new InvalidAnnotations.NeitherGraphIdOrId())).isInstanceOf(IllegalArgumentException.class).hasMessageContaining("is not a valid entity class");" is 183.,245
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfoTest,testInterfaceClassIMembership,Magic Number,The method contains a magic number: 5,45
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfoTest,shouldFindAllSubclasses,Long Statement,The length of the statement "assertThat(classInfo.allSubclasses()).containsExactlyInAnyOrder(domainInfo.getClassSimpleName("ConcreteElement")`domainInfo.getClassSimpleName("VeryConcreteElementA")`domainInfo.getClassSimpleName("VeryConcreteElementB")`domainInfo.getClassSimpleName("EvenMoreConcreteElement"));" is 279.,54
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfoTest,shouldFindAllImplementingClasses,Long Statement,The length of the statement "assertThat(classInfo.allSubclasses()).containsExactlyInAnyOrder(domainInfo.getClassSimpleName("IElementImpl1")`domainInfo.getClassSimpleName("IElementImpl1A"));" is 160.,68
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,oneTimeSetUp,Long Statement,The length of the statement "sessionFactory=new SessionFactory(getDriver()`"org.neo4j.ogm.domain.cineasts.annotated"`"org.neo4j.ogm.domain.annotations.ids"`"org.neo4j.ogm.domain.autoindex.valid");" is 167.,49
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,saveWithUuidGeneration,Long Statement,The length of the statement "final ValidAnnotations.UuidIdAndGenerationType retrievedEntity=session2.load(ValidAnnotations.UuidIdAndGenerationType.class`entity.identifier);" is 143.,106
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadAllUsesPrimaryIndexWhenPresent,Magic Number,The method contains a magic number: 2,135
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadAllUsesPrimaryIndexWhenPresent,Magic Number,The method contains a magic number: 2,135
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadAllUsesPrimaryIndexWhenPresent,Magic Number,The method contains a magic number: 2,135
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadUsesPrimaryIndexWhenPresentEvenIfTypeIsLong,Magic Number,The method contains a magic number: 223L,186
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadUsesPrimaryIndexWhenPresentEvenIfTypeIsLong,Magic Number,The method contains a magic number: 100000L,186
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadUsesPrimaryIndexWhenPresentEvenIfTypeIsLong,Magic Number,The method contains a magic number: 223L,186
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadShouldNotMixLongPrimaryIndexAndGraphId,Long Statement,The length of the statement "long graphId=session.query(Long.class`"MATCH (i:Invoice) WHERE i.invoice_number = $invoice_number RETURN id(i)"`Collections.singletonMap("invoice_number"`223L)).iterator().next();" is 179.,200
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadShouldNotMixLongPrimaryIndexAndGraphId,Magic Number,The method contains a magic number: 223L,200
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadShouldNotMixLongPrimaryIndexAndGraphId,Magic Number,The method contains a magic number: 100000L,200
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadShouldNotMixLongPrimaryIndexAndGraphId,Magic Number,The method contains a magic number: 223L,200
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,LookupByPrimaryIndexTests,loadShouldNotMixLongPrimaryIndexAndGraphId,Magic Number,The method contains a magic number: 100000L,200
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,setUp,Long Statement,The length of the statement "metaData=new MetaData("org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.pizza"`"org.neo4j.ogm.domain.canonical"`"org.neo4j.ogm.domain.hierarchy.domain");" is 154.,58
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,testInterfaceWithSingleImplTaxa,Long Statement,The length of the statement "assertThat(classInfo.name()).isEqualTo("org.neo4j.ogm.domain.hierarchy.domain.annotated.AnnotatedChildWithAnnotatedInterface");" is 127.,123
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,testOrderingOfTaxaIsUnimportant,Long Statement,The length of the statement "assertThat(metaData.resolve("Bronze"`"Membership"`"IMembership").name()).isEqualTo("org.neo4j.ogm.domain.forum.BronzeMembership");" is 130.,151
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,testOrderingOfTaxaIsUnimportant,Long Statement,The length of the statement "assertThat(metaData.resolve("Bronze"`"IMembership"`"Membership").name()).isEqualTo("org.neo4j.ogm.domain.forum.BronzeMembership");" is 130.,151
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,testOrderingOfTaxaIsUnimportant,Long Statement,The length of the statement "assertThat(metaData.resolve("Membership"`"IMembership"`"Bronze").name()).isEqualTo("org.neo4j.ogm.domain.forum.BronzeMembership");" is 130.,151
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,testOrderingOfTaxaIsUnimportant,Long Statement,The length of the statement "assertThat(metaData.resolve("Membership"`"Bronze"`"IMembership").name()).isEqualTo("org.neo4j.ogm.domain.forum.BronzeMembership");" is 130.,151
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,testOrderingOfTaxaIsUnimportant,Long Statement,The length of the statement "assertThat(metaData.resolve("IMembership"`"Bronze"`"Membership").name()).isEqualTo("org.neo4j.ogm.domain.forum.BronzeMembership");" is 130.,151
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,testOrderingOfTaxaIsUnimportant,Long Statement,The length of the statement "assertThat(metaData.resolve("IMembership"`"Membership"`"Bronze").name()).isEqualTo("org.neo4j.ogm.domain.forum.BronzeMembership");" is 130.,151
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,performanceSmokeTest,Long Identifier,The length of the identifier defaultDummyRelationshipEntity is 30.,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,performanceSmokeTest,Long Identifier,The length of the field RELATIONSHIP_ENTITY_DUMMY_TEMPLATE is 34.,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,performanceSmokeTest,Long Statement,The length of the statement "files.add(new CharSequenceJavaFileObject(domainPackageName + "." + defaultDummyNodeEntity+ i`NODE_ENTITY_DUMMY_TEMPLATE.replaceAll(defaultDummyNodeEntity`defaultDummyNodeEntity + i)));" is 184.,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,performanceSmokeTest,Long Statement,The length of the statement "files.add(new CharSequenceJavaFileObject(domainPackageName + "." + defaultDummyRelationshipEntity+ i`RELATIONSHIP_ENTITY_DUMMY_TEMPLATE.replaceAll(defaultDummyRelationshipEntity`defaultDummyRelationshipEntity + i).replaceAll("START"`defaultDummyNodeEntity + i).replaceAll("END"`defaultDummyNodeEntity + (i + 1))));" is 314.,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,performanceSmokeTest,Long Statement,The length of the statement "URLClassLoader urlClassLoader=new URLClassLoader(new URL[]{tmpDir.toUri().toURL()}`currentThread.getContextClassLoader());" is 122.,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,performanceSmokeTest,Magic Number,The method contains a magic number: 1_000,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaDataTest,performanceSmokeTest,Magic Number,The method contains a magic number: 2,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassValidatorTest,throwsExceptionWhenPropertyAndConvertTogether,Long Statement,The length of the statement "assertThat(e.getMessage().startsWith("'org.neo4j.ogm.domain.props.PropertyAndConvertTogether' has both @Convert and @Property annotations applied to the field 'location'")).isTrue();" is 182.,29
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DescriptorMappingsTest,shouldReturnNullWhenClassCannotBeLoaded,Long Statement,The length of the statement "assertThat(DescriptorMappings.getType("org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation")).isEqualTo(null);" is 121.,54
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,InvalidIdAnnotationTest,shouldRejectChildHasPrimaryIndexExtendsAndParentHasId,Long Statement,The length of the statement "metaData=new MetaData(ValidAnnotations.Basic.class.getName()`InvalidAnnotations.ChildHasPrimaryIndexExtendsAndParentHasId.class.getName());" is 139.,40
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldsInfo,FieldsInfo,Complex Conditional,The conditional expression !(field.isSynthetic() || Modifier.isTransient(modifiers) || Modifier.isStatic(modifiers)) is complex.,49
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldsInfo,FieldsInfo,Long Identifier,The length of the identifier allFieldsInfluencedByThisClass is 30.,49
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldsInfo,FieldsInfo,Long Statement,The length of the statement "fields.put(field.getName()`new FieldInfo(classInfo`delegateHolder`field`typeParameterDescriptor`objectAnnotations`typeSystem::supportsAsNativeType));" is 149.,49
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaData,MetaData,Long Statement,The length of the statement "LOGGER.warn("" + "You are trying to scan the root package. " + "This will take a long time and probably end with an error or "+ "classes being mapped that are not part of your domain. "+ "Please have a look at the configuration of your SessionFactory.");" is 254.,56
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaData,resolve,Complex Method,Cyclomatic complexity of the method is 13,146
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaData,findSingleImplementor,Complex Conditional,The conditional expression interfaceInfo != null && interfaceInfo.directImplementingClasses() != null && interfaceInfo.directImplementingClasses().size() == 1 is complex.,281
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MetaData,findSingleImplementor,Long Statement,The length of the statement "if (interfaceInfo != null && interfaceInfo.directImplementingClasses() != null && interfaceInfo.directImplementingClasses().size() == 1) {" is 138.,281
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,MethodsInfo,MethodsInfo,Long Statement,The length of the statement "Set<MethodInfo> methodInfoOfCurrentClass=Arrays.stream(currentClass.getDeclaredMethods()).filter(MethodsInfo::includeMethod).map(method -> MethodInfo.of(method`delegateHolder)).collect(toSet());" is 194.,41
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,create,Long Statement,The length of the statement "Predicate<Class<?>> classIsMappable=clazz -> !(clazz.isAnnotation() || clazz.isAnonymousClass() || clazz.equals(Object.class));" is 127.,81
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,useClassgraph,Long Statement,The length of the statement "try (ScanResult scanResult=new ClassGraph().ignoreClassVisibility().acceptPackages(packagesOrClasses).acceptClasses(packagesOrClasses).scan()){" is 143.,123
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,buildByLabelLookupMaps,Long Identifier,The length of the identifier temporaryRelationshipEntitiesByType is 35.,195
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,buildByLabelLookupMaps,Long Statement,The length of the statement "List<ClassInfo> classInfos=temporaryRelationshipEntitiesByType.computeIfAbsent(classInfo.neo4jName()`k -> new ArrayList());" is 123.,195
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,finish,Complex Method,Cyclomatic complexity of the method is 11,241
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,registerDefaultFieldConverters,Complex Method,Cyclomatic complexity of the method is 9,431
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,registerDefaultFieldConverters,Long Statement,The length of the statement "Function<AttributeConverters`Optional<AttributeConverter<?`?>>> selectAttributeConverter=ac -> DomainInfo.selectAttributeConverterFor(fieldInfo`ac);" is 148.,431
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,registerDefaultFieldConverters,Long Statement,The length of the statement "Optional<AttributeConverter<?`?>> registeredAttributeConverter=ConvertibleTypes.REGISTRY.entrySet().stream().filter(e -> typeDescriptor.contains(e.getKey())).sorted(comparingInt(( Map.Entry<String`?> e) -> e.getKey().length()).reversed()).findFirst().map(Map.Entry::getValue).flatMap(selectAttributeConverter);" is 310.,431
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,registerDefaultFieldConverters,Long Statement,The length of the statement "boolean isSupportedNativeType=typeSystem.supportsAsNativeType(DescriptorMappings.getType(fieldInfo.getTypeDescriptor()));" is 121.,431
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,registerDefaultFieldConverters,Long Statement,The length of the statement "throw new MappingException("Found annotation to convert a " + (entityAttributeType != null ? entityAttributeType.getName() : " null object ") + " on "+ classInfo.name()+ '.'+ fieldInfo.getName()+ " but no target graph property type or specific AttributeConverter have been specified.");" is 286.,431
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,registerDefaultFieldConverters,Long Statement,The length of the statement "fieldInfo.setPropertyConverter(new ProxyAttributeConverter(entityAttributeType`DescriptorMappings.getType(graphTypeDescriptor)`this.conversionCallbackRegistry));" is 161.,431
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,registerDefaultFieldConverters,Long Statement,The length of the statement "LOGGER.debug("Setting default enum converter for unscanned class " + classInfo.name() + "` field: "+ fieldInfo.getName());" is 122.,431
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,selectAttributeConverterFor,Long Statement,The length of the statement "AttributeConverters attributeConverters=Objects.requireNonNull(from`"Need the set of attribute converters for the given field info.");" is 134.,510
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DomainInfo,setEnumFieldConverter,Long Statement,The length of the statement "fieldInfo.setPropertyConverter(ConvertibleTypes.getEnumCollectionConverter(enumClass`fieldInfo.getCollectionClassname()));" is 122.,537
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,FieldInfo,Complex Method,Cyclomatic complexity of the method is 8,99
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,FieldInfo,Long Parameter List,The method has 6 parameters. ,99
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,FieldInfo,Long Statement,The length of the statement "throw new IllegalStateException(String.format("The converter for field %s is neither an instance of AttributeConverter or CompositeAttributeConverter"`this.name));" is 163.,99
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,FieldInfo,Long Statement,The length of the statement "MapCompositeConverter mapCompositeConverter=new MapCompositeConverter(Optional.ofNullable(propertiesAnnotation.prefix()).filter(isNotBlank).orElseGet(field::getName)`propertiesAnnotation.delimiter()`propertiesAnnotation.allowCast()`(ParameterizedType)fieldGenericType`isSupportedNativeType);" is 291.,99
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,FieldInfo,Long Statement,The length of the statement "mapCompositeConverter.setEnumKeysTransformation(propertiesAnnotation.transformEnumKeysWith().getDeclaredConstructor().newInstance());" is 133.,99
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,FieldInfo,Long Statement,The length of the statement "throw new IllegalArgumentException("Unsupported property key filter: " + propertiesAnnotation.transformEnumKeysWith()`e);" is 121.,99
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,persistableAsProperty,Long Statement,The length of the statement "return DescriptorMappings.describesPrimitve(descriptor) || isSupportedNativeType || DescriptorMappings.describesWrapper(getTypeDescriptor())|| propertyConverter != null || compositeConverter != null;" is 199.,225
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,setPropertyConverter,Complex Conditional,The conditional expression this.propertyConverter == null && this.compositeConverter == null && propertyConverter != null is complex.,238
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,setCompositeConverter,Complex Conditional,The conditional expression this.propertyConverter == null && this.compositeConverter == null && converter != null is complex.,252
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,computeConvertedType,Complex Method,Cyclomatic complexity of the method is 8,368
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,readProperty,Long Statement,The length of the statement "throw new IllegalStateException("The readComposite method should be used for fields with a CompositeAttributeConverter");" is 121.,500
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,readComposite,Long Statement,The length of the statement "throw new IllegalStateException("readComposite should only be used when a field is annotated with a CompositeAttributeConverter");" is 130.,512
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,FieldInfo,isInternalIdentity,Long Statement,The length of the statement "return this.getAnnotations().has(Id.class) && this.getAnnotations().has(GeneratedValue.class) && ((GeneratedValue)this.getAnnotations().get(GeneratedValue.class).getAnnotation()).strategy().equals(InternalIdStrategy.class);" is 223.,554
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,ClassInfo,Long Statement,The length of the statement "throw new MappingException(String.format("'%s' is a relationship entity. The @Labels annotation can't be applied to " + "relationship entities."`name()));" is 154.,126
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,ClassInfo,Long Statement,The length of the statement "throw new MappingException(String.format("'%s' has both @Convert and @Property annotations applied to the field '%s'"`name()`fieldInfo.getName()));" is 147.,126
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,addSubclass,Long Statement,The length of the statement "throw new RuntimeException(subclass.className + " has two superclasses: " + subclass.directSuperclass.className+ "` "+ this.className);" is 135.,190
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,identityField,Long Statement,The length of the statement "return getOrComputeIdentityField().orElseThrow(() -> new MetadataException("No internal identity field found for class: " + this.className));" is 141.,371
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getOrComputeIdentityField,Long Statement,The length of the statement "throw new MetadataException("Expected exactly one internal identity field (@Id with " + "InternalIdStrategy)` found " + identityFields.size() + " "+ identityFields);" is 165.,383
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getOrComputeIdentityField,Long Statement,The length of the statement "this.identityField=fieldsInfo.fields().stream().filter(f -> "id".equals(f.getName())).filter(f -> "java.lang.Long".equals(f.getTypeDescriptor())).findFirst();" is 158.,383
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,labelFieldOrNull,Long Statement,The length of the statement "throw new MappingException(String.format("Field '%s' in class '%s' includes the @Labels annotation` however this field is not a " + "type of collection."`fieldInfo.getName()`this.name()));" is 188.,422
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getOrComputePropertyFields,Complex Conditional,The conditional expression fieldInfo == optionalIdentityField || fieldInfo.isLabelField() || fieldInfo.hasAnnotation(StartNode.class) || fieldInfo.hasAnnotation(EndNode.class) is complex.,485
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getOrComputePropertyFields,Complex Method,Cyclomatic complexity of the method is 8,485
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getOrComputePropertyFields,Long Statement,The length of the statement "if (fieldInfo == optionalIdentityField || fieldInfo.isLabelField() || fieldInfo.hasAnnotation(StartNode.class) || fieldInfo.hasAnnotation(EndNode.class)) {" is 155.,485
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getField,Long Statement,The length of the statement "throw new RuntimeException("Field " + fieldInfo.getName() + " not found in class "+ name()+ " or any of its superclasses");" is 123.,648
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,findIterableFields,Long Statement,The length of the statement "boolean isMatchingArray=f.isArray() && (fieldType.equals(arrayOfTypeSignature) || f.isParameterisedTypeOf(iteratedType));" is 121.,721
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,isActualDirectionCompatibleWithDeclaredDirection,Long Statement,The length of the statement "return ((declared == Direction.INCOMING || declared == Direction.UNDIRECTED) && actual == Direction.INCOMING) || (declared != Direction.INCOMING && actual == Direction.OUTGOING);" is 178.,777
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getTypeParameterDescriptorForRelationship,Long Statement,The length of the statement "LOGGER.debug("Could not get {} class type for relationshipType {} and relationshipDirection {} "`className`relationshipType`relationshipDirection);" is 147.,825
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getIndexFields,Complex Conditional,The conditional expression isDeclaredField(declaredFields`fieldInfo.getName()) && (fieldInfo.hasAnnotation(Index.class) || fieldInfo.hasAnnotation(Id.class)) is complex.,865
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getIndexFields,Long Statement,The length of the statement "if (isDeclaredField(declaredFields`fieldInfo.getName()) && (fieldInfo.hasAnnotation(Index.class) || fieldInfo.hasAnnotation(Id.class))) {" is 137.,865
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getCompositeIndexes,Complex Method,Cyclomatic complexity of the method is 8,907
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getCompositeIndexes,Long Statement,The length of the statement "throw new MetadataException("Incorrect CompositeIndex definition on " + className + ". Property "+ property+ " does not exists.");" is 130.,907
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getOrComputePrimaryIndexField,Long Statement,The length of the statement "throw new MetadataException("Only one @Id / @Index(primary=true` unique=true) annotation is allowed in a class hierarchy. Please check annotations in the class " + name() + " or its parents");" is 192.,955
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,validateIdGenerationConfigFor,Long Statement,The length of the statement "throw new MetadataException("The type of " + selectedField.getName() + " in class "+ className+ " must be of type java.lang.UUID or java.lang.String because it has an UUID generation strategy.");" is 195.,991
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,isPrimaryIndexField,Long Statement,The length of the statement "boolean hasStrategyOtherThanInternal=!fieldInfo.hasAnnotation(GeneratedValue.class) || !((GeneratedValue)fieldInfo.getAnnotations().get(GeneratedValue.class).getAnnotation()).strategy().equals(InternalIdStrategy.class);" is 219.,1014
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,postLoadMethodOrNull,Long Statement,The length of the statement "Collection<MethodInfo> possiblePostLoadMethods=methodsInfo.findMethodInfoBy(methodInfo -> methodInfo.hasAnnotation(PostLoad.class));" is 132.,1043
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,postLoadMethodOrNull,Long Statement,The length of the statement "throw new MetadataException(String.format("Cannot have more than one post load method annotated with @PostLoad for class '%s'"`this.className));" is 144.,1043
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getEndNodeReader,Long Statement,The length of the statement "endNodeReader=fieldsInfo().fields().stream().filter(fieldInfo -> fieldInfo.getAnnotations().get(EndNode.class) != null).findFirst();" is 132.,1082
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ClassInfo,getStartNodeReader,Long Statement,The length of the statement "startNodeReader=fieldsInfo().fields().stream().filter(fieldInfo -> fieldInfo.getAnnotations().get(StartNode.class) != null).findFirst();" is 136.,1112
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ObjectAnnotations,of,Long Statement,The length of the statement "Map<String`AnnotationInfo> annotationInfo=Arrays.stream(annotations).map(AnnotationInfo::new).collect(toMap(AnnotationInfo::getName`Function.identity()));" is 154.,53
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ObjectAnnotations,getConverter,Complex Method,Cyclomatic complexity of the method is 10,77
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,ObjectAnnotations,getConverter,Long Statement,The length of the statement "return new InstantStringConverter(format`dateStringConverterInfo.get("zoneId")`isLenientConversion(dateStringConverterInfo));" is 125.,77
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,AnnotationInfo,AnnotationInfo,Complex Conditional,The conditional expression value != null && (!(value instanceof String) || !StringUtils.isBlank((String)value)) is complex.,66
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DescriptorMappings,getType,Long Statement,The length of the statement "Optional<Class<?>> optionalType=descriptorsToTypeMappingCache.computeIfAbsent(descriptor`k -> Optional.ofNullable(computeType(descriptor)));" is 140.,71
neo4j_neo4j-ogm,org.neo4j.ogm.metadata,DescriptorMappings,getType,Long Statement,The length of the statement "boolean needsRecomputation=optionalType.map(type -> type.getClassLoader() != null && !isLoadedInSameHierarchy(type)).orElse(false);" is 131.,71
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.schema,DomainInfoSchemaBuilder,createRelationship,Long Statement,The length of the statement "RelationshipImpl relationship=new RelationshipImpl(relFieldInfo.relationshipType()`relFieldInfo.relationshipDirection()`fromNode`toNode);" is 137.,109
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.schema,RelationshipImpl,direction,Complex Method,Cyclomatic complexity of the method is 8,50
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.schema,RelationshipImpl,direction,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@50fd7cc7,50
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.schema,RelationshipImpl,toString,Long Statement,The length of the statement "return "RelationshipImpl{" + "start=" + start + "` end="+ end+ "` type='"+ type+ '\''+ "` direction='"+ direction+ '\''+ '}';" is 125.,99
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,AnnotatedFieldAndNoSetterTest,shouldPreferAnnotatedFieldInAbsenceOfSetterForRelationshipEntity,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"REL_ENTITY_TYPE"`Relationship.Direction.INCOMING`relEntity);" is 134.,44
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,AnnotatedFieldWithNoSetterAndNonSetterTest,shouldPreferAnnotatedFieldOverNonSetterInAbsenceOfSetterForRelationshipEntity,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"REL_ENTITY_TYPE"`Relationship.Direction.INCOMING`relEntity);" is 134.,44
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV1,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWN_BY`Relationship.Direction.OUTGOING`relatedObject)).isNull();" is 127.,45
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV1,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWN_BY`Relationship.Direction.INCOMING`relatedObject);" is 133.,45
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV2,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,67
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV2,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,67
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV3,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,87
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV3,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,87
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV4,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject)).isNull();" is 124.,107
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV4,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject);" is 130.,107
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV5,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,127
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV5,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,127
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV6,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,147
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV7,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,163
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV7,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,163
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV8,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject)).isNull();" is 124.,183
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV8,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject);" is 130.,183
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV9,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.OUTGOING`relatedObjectOut);" is 133.,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV9,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.INCOMING`relatedObjectIn);" is 122.,203
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV10,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.OUTGOING`relatedObjectOut);" is 133.,227
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV10,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.INCOMING`relatedObjectIn);" is 122.,227
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV11,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.OUTGOING`relatedObjectOut);" is 133.,251
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV11,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.INCOMING`relatedObjectIn);" is 122.,251
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV12,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.OUTGOING`relatedObjectOut);" is 133.,275
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV12,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`LIKES`Relationship.Direction.INCOMING`relatedObjectIn);" is 122.,275
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV13,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,299
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV13,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,299
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV14,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,319
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV14,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,319
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV15,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObjectOut);" is 133.,339
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV15,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObjectIn);" is 122.,339
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV16,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObjectOut);" is 133.,365
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV16,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObjectIn);" is 122.,365
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV17,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject)).isNull();" is 124.,391
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV17,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject);" is 130.,391
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV18,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,410
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV18,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,410
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV19,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject)).isNull();" is 124.,430
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV19,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject);" is 130.,430
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject)).isNull();" is 124.,450
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject);" is 130.,450
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`otherRelatedObject)).isNull();" is 129.,450
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`otherRelatedObject);" is 125.,450
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,478
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,478
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`otherRelatedObject)).isNull();" is 129.,478
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`otherRelatedObject);" is 125.,478
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`relatedObject)).isNull();" is 124.,506
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`relatedObject);" is 130.,506
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "assertThat(EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.INCOMING`otherRelatedObject)).isNull();" is 129.,506
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`otherRelatedObject);" is 125.,506
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,AnnotatedFieldNonAnnotatedSetterAndNonSetterTest,shouldPreferAnnotatedFieldOverNonAnnotatedSetterAndNonSetter,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"REL_ENTITY_TYPE"`Relationship.Direction.INCOMING`relEntity);" is 134.,44
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityFactoryTest,shouldBeAbleToConstructObjectWithNonPublicZeroArgConstructor,Magic Number,The method contains a magic number: 163L,61
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityFactoryTest,shouldFailForGraphModelComponentWithNoTaxa,Magic Number,The method contains a magic number: 302L,68
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationshipWriterAnnotatedFieldsTest,shouldFindWriterForCollection,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"LIST"`Relationship.Direction.OUTGOING`new T());" is 121.,42
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationshipWriterAnnotatedFieldsTest,shouldFindWriterForScalar,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"SCALAR"`Relationship.Direction.OUTGOING`new T());" is 123.,55
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationshipWriterAnnotatedFieldsTest,shouldFindWriterForArray,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"ARRAY"`Relationship.Direction.OUTGOING`new T());" is 122.,68
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,AnnotatedFieldAndNonAnnotatedSetterTest,shouldPreferAnnotatedFieldWithNonAnnotatedSetterForRelationshipEntity,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"REL_ENTITY_TYPE"`Relationship.Direction.INCOMING`relEntity);" is 134.,44
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV1,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV1.class`KNOWN_BY`Relationship.Direction.OUTGOING)).isNull();" is 123.,49
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV1,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV1.class`KNOWN_BY`Relationship.Direction.INCOMING);" is 129.,49
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV2,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV2.class`KNOWS`Relationship.Direction.OUTGOING);" is 126.,71
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV3,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV3.class`KNOWS`Relationship.Direction.OUTGOING);" is 126.,92
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV3,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV3.class`KNOWS`Relationship.Direction.OUTGOING);" is 126.,92
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV4,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV4.class`KNOWS`Relationship.Direction.INCOMING);" is 126.,117
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV4,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV4.class`KNOWS`Relationship.Direction.INCOMING);" is 126.,117
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV5,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV5.class`KNOWS`Relationship.Direction.OUTGOING);" is 126.,142
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV5,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV5.class`KNOWS`Relationship.Direction.OUTGOING);" is 126.,142
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV6,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV6.class`KNOWS`Relationship.Direction.INCOMING);" is 126.,167
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV6,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV6.class`KNOWS`Relationship.Direction.INCOMING);" is 126.,167
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV7,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV7.class`KNOWS`Relationship.Direction.OUTGOING);" is 126.,190
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV7,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV7.class`KNOWS`Relationship.Direction.OUTGOING);" is 126.,190
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV8,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV8.class`KNOWS`Relationship.Direction.INCOMING);" is 126.,215
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV8,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV8.class`KNOWS`Relationship.Direction.INCOMING);" is 126.,215
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV9,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV9.class`LIKES`Relationship.Direction.OUTGOING);" is 126.,240
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV9,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV9.class`LIKES`Relationship.Direction.OUTGOING);" is 126.,240
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV10,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV10.class`LIKES`Relationship.Direction.OUTGOING);" is 127.,267
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV10,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV10.class`LIKES`Relationship.Direction.OUTGOING);" is 127.,267
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV11,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV11.class`LIKES`Relationship.Direction.OUTGOING);" is 127.,294
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV11,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV11.class`LIKES`Relationship.Direction.OUTGOING);" is 127.,294
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV12,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV12.class`LIKES`Relationship.Direction.OUTGOING);" is 127.,321
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV12,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV12.class`LIKES`Relationship.Direction.OUTGOING);" is 127.,321
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV13,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV13.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,348
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV13,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV13.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,348
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV13,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV13.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,348
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV13,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV13.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,348
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV14,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV14.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,373
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV14,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV14.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,373
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV14,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV14.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,373
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV14,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV14.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,373
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV15,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV15.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,398
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV15,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV15.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,398
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV16,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV16.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,427
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV16,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV16.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,427
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV17,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV17.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,456
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV17,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV17.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,456
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV17,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV17.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,456
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV17,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV17.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,456
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV18,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV18.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,480
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV18,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV18.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,480
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV18,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV18.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,480
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV18,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV18.class`KNOWS`Relationship.Direction.OUTGOING);" is 127.,480
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV19,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV19.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,505
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV19,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV19.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,505
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV19,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV19.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,505
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV19,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV19.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,505
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV20.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,530
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV20.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,530
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`PlainUser.class`KNOWS`Relationship.Direction.OUTGOING);" is 129.,530
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`PlainUser.class`KNOWS`Relationship.Direction.OUTGOING);" is 129.,530
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV20,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`otherRelatedObject);" is 125.,530
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV21.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,563
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV21.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,563
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV21.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,563
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV21,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV21.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,563
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV22.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,596
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV22.class`KNOWS`Relationship.Direction.INCOMING)).isNull();" is 121.,596
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`PlainUser.class`KNOWS`Relationship.Direction.OUTGOING);" is 129.,596
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`PlainUser.class`KNOWS`Relationship.Direction.OUTGOING);" is 129.,596
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV22,Long Statement,The length of the statement "relationalWriter=EntityAccessManager.getRelationalWriter(classInfo`KNOWS`Relationship.Direction.OUTGOING`otherRelatedObject);" is 125.,596
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV23,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV23.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,629
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV23,Long Statement,The length of the statement "assertThat(EntityAccessManager.getIterableField(classInfo`UserV23.class`KNOWS`Relationship.Direction.OUTGOING)).isNull();" is 121.,629
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV23,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`UserV23.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,629
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,IterableRelationalReaderWriterTest,testUserV23,Long Statement,The length of the statement "FieldInfo relationalWriter=EntityAccessManager.getIterableField(classInfo`UserV23.class`KNOWS`Relationship.Direction.INCOMING);" is 127.,629
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationshipWriterPlainFieldsTest,shouldFindWriterForCollection,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"LIST"`Relationship.Direction.OUTGOING`new T());" is 121.,39
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationshipWriterPlainFieldsTest,shouldFindWriterForScalar,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"SCALAR"`Relationship.Direction.OUTGOING`new T());" is 123.,51
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,RelationshipWriterPlainFieldsTest,shouldFindWriterForArray,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"ARRAY"`Relationship.Direction.OUTGOING`new T());" is 122.,63
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,setup,Long Statement,The length of the statement "domainInfo=DomainInfo.create("org.neo4j.ogm.domain.forum"`"org.neo4j.ogm.domain.satellites"`"org.neo4j.ogm.metadata.reflect");" is 126.,56
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldAccessViaFieldCorrespondingToPropertyIfNoAnnotationsOrAccessorMethodsArePresent,Long Identifier,The length of the field propertyWithoutAccessorMethods is 30.,95
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldAccessViaFieldCorrespondingToPropertyIfNoAnnotationsOrAccessorMethodsArePresent,Magic Number,The method contains a magic number: 9,95
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldAccessViaFieldCorrespondingToPropertyIfNoAnnotationsOrAccessorMethodsArePresent,Magic Number,The method contains a magic number: 27,95
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldAccessViaFieldCorrespondingToPropertyIfNoAnnotationsOrAccessorMethodsArePresent,Magic Number,The method contains a magic number: 27,95
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldRetrieveObjectAccessForWritingIterableObject,Long Statement,The length of the statement "FieldInfo iterableAccess=EntityAccessManager.getIterableField(classInfo`Satellite.class`"satellites"`Relationship.Direction.OUTGOING);" is 134.,115
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldPreferAnnotatedFieldToPlainSetterMatchingRelationshipTypeWhenSettingRelationshipObject,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"CONTAINS"`Relationship.Direction.OUTGOING`parameter);" is 127.,128
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldPreferAnnotatedFieldToPlainSetterMatchingRelationshipTypeWhenSettingRelationshipObject,Long Statement,The length of the statement "objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"REGISTERED"`Relationship.Direction.OUTGOING`otherMember);" is 121.,128
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldPreferFieldBasedOnRelationshipTypeToPlainSetterWithMatchingParameterType,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"FAVOURITE_TOPIC"`Relationship.Direction.OUTGOING`favouriteTopic);" is 139.,151
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldDefaultToFieldThatMatchesTheParameterTypeIfRelationshipTypeCannotBeMatchedAndNoSetterExists,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getRelationalWriter(classInfo`"UTTER_RUBBISH"`Relationship.Direction.OUTGOING`forumPost);" is 132.,167
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldPreferAnnotatedFieldToGetterWhenReadingFromAnObject,Long Identifier,The length of the field propertyWithDifferentAnnotatedGetter is 36.,193
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldPreferMethodBasedAccessToFieldAccessWhenReadingFromObjectsWithoutAnnotations,Magic Number,The method contains a magic number: 30.16,213
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldReadFromFieldMatchingRelationshipTypeInObjectWithoutAnnotationsOrAccessorMethods,Long Statement,The length of the statement "FieldInfo reader=EntityAccessManager.getRelationalReader(classInfo`"POST_WITHOUT_ACCESSOR_METHODS"`Relationship.Direction.OUTGOING);" is 132.,244
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldUseFieldAccessUnconditionallyForReadingIdentityProperty,Magic Number,The method contains a magic number: 593L,258
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldRetrieveAppropriateObjectAccessToAllRelationalAttributesForParticularClass,Long Statement,The length of the statement "assertThat(expectedRelationalReaders.containsKey(relType)).as("Relationship type " + relType + " wasn't expected").isTrue();" is 124.,271
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldRetrieveAppropriateObjectAccessToAllRelationalAttributesForParticularClass,Magic Number,The method contains a magic number: 7,271
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldReturnNullOnAttemptToAccessNonExistentEndNodeAttributeOnRelationshipEntity,Long Identifier,The length of the identifier classInfoOfNonRelationshipEntity is 32.,319
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldPreferAnnotatedFieldWithMatchingRelationshipTypeWhenGettingIterableWriter,Long Statement,The length of the statement "FieldInfo objectAccess=EntityAccessManager.getIterableField(classInfo`Satellite.class`"NATURAL"`Relationship.Direction.OUTGOING);" is 129.,325
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManagerTest,shouldPreferAnnotatedFieldWithMatchingRelationshipTypeWhenGettingIterableReader,Long Statement,The length of the statement "FieldInfo relationalReader=EntityAccessManager.getIterableField(classInfo`Satellite.class`"NATURAL"`Relationship.Direction.OUTGOING);" is 133.,344
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,GenericUtils,findFieldType,Complex Conditional,The conditional expression arguments == null || arguments.length == 0 || arguments[0] == Unknown.class is complex.,63
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,GenericUtils,resolveRawArguments,Complex Method,Cyclomatic complexity of the method is 8,84
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,GenericUtils,resolveRawArguments,Long Statement,The length of the statement "Class<?> fi=genericType instanceof ParameterizedType && ((ParameterizedType)genericType).getRawType() instanceof Class ? (Class<?>)((ParameterizedType)genericType).getRawType() : genericType instanceof Class ? (Class<?>)genericType : null;" is 239.,84
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,GenericUtils,populateTypeArgs,Complex Method,Cyclomatic complexity of the method is 12,212
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,merge,Long Statement,The length of the statement "boolean needsByteArray=targetIsArray && (collectionType.getComponentType() == byte.class || collectionType.getComponentType() == Byte.class);" is 141.,69
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,merge,Long Statement,The length of the statement "Collection newCollection=createTargetCollection(collectionType`mergeAndCoerce(elementType`(Iterable)newValues`currentValues));" is 126.,69
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,stringToCharacterIterable,Complex Conditional,The conditional expression value.getClass().isArray() && convertCharacters && value.getClass().getComponentType().equals(String.class) is complex.,188
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,stringToCharacterIterable,Complex Conditional,The conditional expression value.getClass().isArray() && (elementType == String.class || isEnum(elementType)) is complex.,188
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,stringToCharacterIterable,Complex Method,Cyclomatic complexity of the method is 9,188
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,boxPrimitiveArray,Complex Method,Cyclomatic complexity of the method is 14,232
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalWriter,Complex Conditional,The conditional expression fieldInfo.isTypeOf(objectType) || fieldInfo.isParameterisedTypeOf(objectType) || fieldInfo.isArrayOf(objectType) is complex.,308
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalWriter,Complex Conditional,The conditional expression fieldInfo.isTypeOf(objectType) || fieldInfo.isParameterisedTypeOf(objectType) || fieldInfo.isArrayOf(objectType) is complex.,308
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalWriter,Complex Conditional,The conditional expression fieldInfo.isTypeOf(objectType) || fieldInfo.isParameterisedTypeOf(objectType) || fieldInfo.isArrayOf(objectType) is complex.,308
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalWriter,Complex Method,Cyclomatic complexity of the method is 16,308
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalWriter,Long Statement,The length of the statement "final DirectedRelationshipForType directedRelationship=new DirectedRelationshipForType(relationshipType`relationshipDirection`objectType);" is 138.,308
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalWriter,Long Statement,The length of the statement "final Map<DirectedRelationshipForType`FieldInfo> typeFieldInfoMap=relationalWriterCache.computeIfAbsent(classInfo`key -> new ConcurrentHashMap<>());" is 148.,308
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalWriter,Long Statement,The length of the statement "final Set<FieldInfo> candidateRelationshipFields=classInfo.candidateRelationshipFields(relationshipType`relationshipDirection`INFERRED_MODE);" is 141.,308
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getRelationalReader,Long Statement,The length of the statement "final Map<DirectedRelationship`FieldInfo> relationshipFieldInfoMap=relationalReaderCache.computeIfAbsent(classInfo`key -> new ConcurrentHashMap<>());" is 149.,394
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableField,Long Statement,The length of the statement "final DirectedRelationshipForType directedRelationshipForType=new DirectedRelationshipForType(relationshipType`relationshipDirection`parameterType);" is 148.,444
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableField,Long Statement,The length of the statement "final Map<DirectedRelationshipForType`FieldInfo> typeFieldInfoMap=iterableWriterCache.computeIfAbsent(lookupClassInfo`key -> new ConcurrentHashMap<>());" is 152.,444
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableField,Long Statement,The length of the statement "cacheIterableFieldWriter(lookupClassInfo`parameterType`relationshipType`relationshipDirection`directedRelationshipForType`fieldInfo`fieldInfo);" is 143.,444
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableField,Long Statement,The length of the statement "cacheIterableFieldWriter(lookupClassInfo`parameterType`relationshipType`relationshipDirection`directedRelationshipForType`fieldInfo`fieldInfo);" is 143.,444
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableFieldInfo,Complex Conditional,The conditional expression relationshipDirection == Direction.INCOMING && candidateFieldInfo.relationshipDirectionOrDefault(Direction.OUTGOING) == Direction.INCOMING || candidateFieldInfo.relationshipDirectionOrDefault(Direction.OUTGOING) == Direction.UNDIRECTED is complex.,497
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableFieldInfo,Complex Method,Cyclomatic complexity of the method is 9,497
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableFieldInfo,Long Parameter List,The method has 5 parameters. ,497
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableFieldInfo,Long Statement,The length of the statement "if (relationshipDirection == Direction.INCOMING && candidateFieldInfo.relationshipDirectionOrDefault(Direction.OUTGOING) == Direction.INCOMING || candidateFieldInfo.relationshipDirectionOrDefault(Direction.OUTGOING) == Direction.UNDIRECTED) {" is 242.,497
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableFieldInfo,Long Statement,The length of the statement "if (relationshipDirection != Direction.INCOMING && candidateFieldInfo.relationshipDirectionOrDefault(Direction.OUTGOING) != Direction.INCOMING) {" is 145.,497
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,getIterableFieldInfo,Long Statement,The length of the statement "LOGGER.warn("Cannot map iterable of {} to instance of {}. More than one potential matching field found."`parameterType`classInfo.name());" is 137.,497
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,cacheIterableFieldWriter,Long Parameter List,The method has 7 parameters. ,535
neo4j_neo4j-ogm,org.neo4j.ogm.metadata.reflect,EntityAccessManager,cacheIterableFieldWriter,Long Statement,The length of the statement "directedRelationshipForType=new DirectedRelationshipForType(relationshipType`relationshipDirection`DescriptorMappings.getType(fieldInfo.getTypeDescriptor()));" is 158.,535
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ByteArrayConversionTest,getImageAndCheck,Magic Number,The method contains a magic number: 4,55
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,NumberConversionTest,assertAccountDepositConverterWorks,Magic Number,The method contains a magic number: 2,74
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,NumberConversionTest,assertAccountLoNAConverterWorks,Magic Number,The method contains a magic number: 123456,93
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,NumberConversionTest,assertAccountLoNAConverterWorks,Magic Number,The method contains a magic number: 567890,93
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,NumberConversionTest,assertAccountLoNAConverterWorks,Magic Number,The method contains a magic number: 2,93
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,NumberConversionTest,assertAccountLoNAConverterWorks,Magic Number,The method contains a magic number: 123456,93
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,NumberConversionTest,assertAccountLoNAConverterWorks,Magic Number,The method contains a magic number: 567890,93
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ByteArrayWrapperConversionTest,getImageAndCheck,Magic Number,The method contains a magic number: 4,52
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ByteArrayWrapperConversionTest,getImageAndCheck,Magic Number,The method contains a magic number: 2,52
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ByteArrayWrapperConversionTest,getImageAndCheck,Magic Number,The method contains a magic number: 3,52
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,GenericArrayConversionTest,integerSampleTest,Long Statement,The length of the statement "assertThat(integerUser.getGenericValue()).isInstanceOf(Integer[].class).containsExactly(Integer.MIN_VALUE`Integer.MAX_VALUE);" is 125.,99
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertFieldCustomTypeConversion,Magic Number,The method contains a magic number: 1234567890123L,75
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertArrayFieldDateConversionToISO8601FormatByDefault,Long Statement,The length of the statement "assertThat(converted[0].equals(simpleDateISO8601format.format(new Date(20000))) || converted[1].equals(simpleDateISO8601format.format(new Date(20000)))).isTrue();" is 162.,99
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertArrayFieldDateConversionToISO8601FormatByDefault,Magic Number,The method contains a magic number: 20000,99
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertArrayFieldDateConversionToISO8601FormatByDefault,Magic Number,The method contains a magic number: 20000,99
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertArrayFieldDateConversionToISO8601FormatByDefault,Magic Number,The method contains a magic number: 20000,99
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertCollectionFieldDateConversionToISO8601FormatByDefault,Long Statement,The length of the statement "assertThat(converted[0].equals(simpleDateISO8601format.format(new Date(20000))) || converted[1].equals(simpleDateISO8601format.format(new Date(20000)))).isTrue();" is 162.,130
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertCollectionFieldDateConversionToISO8601FormatByDefault,Magic Number,The method contains a magic number: 20000,130
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertCollectionFieldDateConversionToISO8601FormatByDefault,Magic Number,The method contains a magic number: 20000,130
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateConversionTest,assertCollectionFieldDateConversionToISO8601FormatByDefault,Magic Number,The method contains a magic number: 20000,130
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Long Statement,The length of the statement "final Date latestReleases=session.queryForObject(Date.class`"MATCH (n:`l'album`) RETURN MAX(n.releasedAt)"`new HashMap<>());" is 124.,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 1972,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 11,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 30,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 1973,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 7,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 13,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 1973,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 8,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 1974,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 3,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,convertibleReturnTypesShouldBeHandled,Magic Number,The method contains a magic number: 8,81
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,savedTimestampAsParameterToBatchedCreateIsReadBackAsIs,Long Statement,The length of the statement "Result result=session.query("UNWIND $rows AS row CREATE (n:`Data`) SET n=row.props RETURN row.nodeRef AS ref` id(n) AS id` $type AS type"`parameters);" is 150.,122
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,dataStoredInNotRealIsoFormatShouldStillBeParsed,Long Statement,The length of the statement "OffsetDateTime someTime3=DateTimeFormatter.ISO_OFFSET_DATE_TIME.parse("2024-05-01T21:18:15.650+07:00"`OffsetDateTime::from);" is 124.,149
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,dataStoredInNotRealIsoFormatShouldStillBeParsed,Long Statement,The length of the statement "OffsetDateTime someTime4=DateTimeFormatter.ISO_OFFSET_DATE_TIME.parse("2024-05-01T21:18:15.65+07:00"`OffsetDateTime::from);" is 123.,149
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,savedTimestampAsParameterToSimpleCreateIsReadBackAsIs,Long Statement,The length of the statement "TimeHolder timeHolder=session.queryForObject(TimeHolder.class`"CREATE (d:Data {someTime: $someTime` someLocalDateTime: $someLocalDateTime` someLocalDate: $someLocalDate}) RETURN d"`props);" is 188.,169
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,converterShouldBeAppliedBothWaysCorrectly,Long Statement,The length of the statement "Iterable<Map<String`Object>> result=localSession.query("" + "MATCH (a:Account) WHERE id(a) = $id " + "RETURN a.valueA AS va` a.valueB as vb` a.listOfFoobars as listOfFoobars` a.anotherListOfFoobars as anotherListOfFoobars` a.foobar as foobar` a.notConverter as notConverter"`Collections.singletonMap("id"`account.getId()));" is 323.,237
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,converterShouldBeAppliedBothWaysCorrectly,Magic Number,The method contains a magic number: 23,237
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,converterShouldBeAppliedBothWaysCorrectly,Magic Number,The method contains a magic number: 23,237
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,converterShouldBeAppliedBothWaysCorrectly,Magic Number,The method contains a magic number: 4711,237
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,converterShouldBeAppliedBothWaysCorrectly,Magic Number,The method contains a magic number: 4711L,237
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,converterShouldBeAppliedBothWaysCorrectly,Magic Number,The method contains a magic number: 23,237
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,TypeConversionIntegrationTest,converterShouldBeAppliedBothWaysCorrectly,Magic Number,The method contains a magic number: 23,237
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,EnumStringConverter,toEntityAttribute,Complex Conditional,The conditional expression value == null || (lenient && StringUtils.isBlank(value)) is complex.,59
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,NumberStringConverter,toEntityAttribute,Complex Conditional,The conditional expression value == null || (lenient && StringUtils.isBlank(value)) is complex.,56
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,DateStringConverter,toEntityAttribute,Complex Conditional,The conditional expression value == null || (lenient && StringUtils.isBlank(value)) is complex.,65
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ConverterBasedCollectionConverter,toEntityAttribute,Long Statement,The length of the statement "throw new MappingException("Could not map array of values " + Arrays.toString(values) + " to collection of type "+ collectionClass`e);" is 134.,60
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,InstantStringConverter,InstantStringConverter,Long Statement,The length of the statement "this.formatter=DateString.ISO_8601.equals(userDefinedFormat) ? DateTimeFormatter.ISO_INSTANT : DateTimeFormatter.ofPattern(userDefinedFormat).withZone(ZoneId.of(zoneId));" is 170.,49
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,InstantStringConverter,toEntityAttribute,Complex Conditional,The conditional expression value == null || (lenient && StringUtils.isBlank(value)) is complex.,65
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,MapCompositeConverter,MapCompositeConverter,Long Parameter List,The method has 5 parameters. ,74
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,MapCompositeConverter,addMapToProperties,Complex Conditional,The conditional expression isCypherType(entryValue) || (allowCast && canCastType(entryValue)) is complex.,108
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,MapCompositeConverter,addMapToProperties,Long Statement,The length of the statement "@SuppressWarnings("unchecked") EnumStringConverter enumStringConverter=converterCache.computeIfAbsent((Class<? extends Enum<?>>)entryValue.getClass()`EnumStringConverter::new);" is 176.,108
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,MapCompositeConverter,addMapToProperties,Long Statement,The length of the statement "throw new MappingException("Could not map key=" + entryPrefix + entry.getKey()+ "` "+ "value="+ entryValue+ " (type = "+ entryValue.getClass()+ ") "+ "because it is not a supported type.");" is 189.,108
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,MapCompositeConverter,toEntityAttribute,Long Statement,The length of the statement "Set<? extends Map.Entry<String`?>> prefixedProperties=value.entrySet().stream().filter(entry -> entry.getKey().startsWith(propertyLookup)).collect(toSet());" is 156.,142
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,MapCompositeConverter,putToMap,Long Statement,The length of the statement "@SuppressWarnings("unchecked") EnumStringConverter enumStringConverter=converterCache.computeIfAbsent((Class<? extends Enum<?>>)valueType`EnumStringConverter::new);" is 164.,158
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,MapCompositeConverter,keyInstanceFromString,Long Statement,The length of the statement "@SuppressWarnings({"unchecked"`"rawtypes"}) Enum key=Enum.valueOf(((Class<Enum>)keyType)`enumKeysTransformation.apply(Phase.TO_ENTITY`propertyKey));" is 148.,220
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ConvertibleTypes,buildRegistry,Long Statement,The length of the statement "registry.put(DATE_SIGNATURE`AttributeConverters.Builder.forScalar(getDateConverter()).array(getDateArrayConverter()).andIterable(ct -> getDateCollectionConverter(ct)));" is 168.,154
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ConvertibleTypes,buildRegistry,Long Statement,The length of the statement "registry.put(BIG_INTEGER_SIGNATURE`AttributeConverters.Builder.forScalar(getBigIntegerConverter()).array(getBigIntegerArrayConverter()).andIterable(ct -> getBigIntegerCollectionConverter(ct)));" is 193.,154
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ConvertibleTypes,buildRegistry,Long Statement,The length of the statement "registry.put(BIG_DECIMAL_SIGNATURE`AttributeConverters.Builder.forScalar(getBigDecimalConverter()).array(getBigDecimalArrayConverter()).andIterable(ct -> getBigDecimalCollectionConverter(ct)));" is 193.,154
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ConvertibleTypes,buildRegistry,Long Statement,The length of the statement "registry.put(OFFSET_DATE_TIME_SIGNATURE`AttributeConverters.Builder.forScalar(getOffsetDateTimeConverter()).andIterable(ct -> getConverterBasedCollectionConverter(getOffsetDateTimeConverter()`ct)));" is 198.,154
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ConvertibleTypes,buildRegistry,Long Statement,The length of the statement "registry.put(LOCAL_DATE_TIME_SIGNATURE`AttributeConverters.Builder.forScalar(getLocalDateTimeConverter()).andIterable(ct -> getConverterBasedCollectionConverter(getLocalDateTimeConverter()`ct)));" is 195.,154
neo4j_neo4j-ogm,org.neo4j.ogm.typeconversion,ConvertibleTypes,buildRegistry,Long Statement,The length of the statement "registry.put(LOCAL_DATE_SIGNATURE`AttributeConverters.Builder.forScalar(getLocalDateConverter()).andIterable(ct -> getConverterBasedCollectionConverter(getLocalDateConverter()`ct)));" is 182.,154
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.function,PropertyComparison,expression,Long Statement,The length of the statement "return String.format("%s.`%s` %s $`%s` "`nodeIdentifier`filteredProperty`operator.getValue()`createUniqueParameterName.apply(PARAMETER_NAME));" is 142.,56
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.function,PropertyComparison,parameters,Long Statement,The length of the statement "return Collections.singletonMap(createUniqueParameterName.apply(PARAMETER_NAME)`valueTransformer.andThen(this.operator.getPropertyValueTransformer()).transformPropertyValue(this.value));" is 186.,72
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.function,NativeDistanceComparison,expression,Long Statement,The length of the statement "return String.format("point.distance($%s`%s) %s $%s "`OGM_POINT_PARAMETER`pointPropertyOfEntity`comparisonOperator`DISTANCE_VALUE_PARAMETER);" is 141.,59
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.function,DistanceComparison,expression,Long Statement,The length of the statement "return String.format("point.distance(point({latitude: %s` longitude: %s})`point({latitude: $lat` longitude: $lon})) " + "%s $distance "`latitude`longitude`operator.getValue());" is 176.,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.function,ContainsAnyComparison,expression,Long Statement,The length of the statement "return String.format("ANY(collectionFields IN $`%s` WHERE collectionFields in %s.`%s`) "`createUniqueParameterName.apply(PARAMETER_NAME)`nodeIdentifier`filteredProperty);" is 170.,57
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.function,ContainsAnyComparison,parameters,Long Statement,The length of the statement "return Collections.singletonMap(createUniqueParameterName.apply(PARAMETER_NAME)`propertyValueTransformer.transformPropertyValue(this.value));" is 141.,65
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,NewRelationshipStatementBuilder,build,Complex Method,Cyclomatic complexity of the method is 8,51
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,NewRelationshipStatementBuilder,build,Long Statement,The length of the statement "queryBuilder.append("UNWIND $rows as row ").append("MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode ").append("MATCH (endNode) WHERE ID(endNode) = row.endNodeId ");" is 191.,51
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,NewRelationshipStatementBuilder,build,Long Statement,The length of the statement "queryBuilder.append(" {`").append(firstEdge.getPrimaryIdName()).append("`: row.props.`").append(firstEdge.getPrimaryIdName()).append("`}");" is 139.,51
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,ExistingRelationshipStatementBuilder,build,Complex Method,Cyclomatic complexity of the method is 8,55
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,ExistingRelationshipStatementBuilder,build,Long Statement,The length of the statement "queryBuilder.append(OptimisticLockingUtils.getFragmentForExistingNodesAndRelationships(firstEdge`"r"`dirtyEdges ? 1 : 0));" is 122.,55
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,ExistingRelationshipStatementBuilder,build,Long Statement,The length of the statement "OptimisticLockingConfig olConfig=new OptimisticLockingConfig(rows.size()`new String[]{firstEdge.getType()}`firstEdge.getVersion().getKey());" is 140.,55
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,DeletedRelationshipStatementBuilder,build,Long Statement,The length of the statement "queryBuilder.append("UNWIND $rows as row ").append("MATCH (startNode) WHERE ID(startNode) = row.startNodeId WITH row`startNode ").append("MATCH (endNode) WHERE ID(endNode) = row.endNodeId ").append("MATCH (startNode)-[rel:`").append(firstEdge.getType()).append("`]->(endNode) ").append("DELETE rel");" is 300.,48
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,DeletedRelationshipEntityStatementBuilder,build,Long Statement,The length of the statement "OptimisticLockingConfig olConfig=new OptimisticLockingConfig(rows.size()`new String[]{firstEdge.getType()}`firstEdge.getVersion().getKey());" is 140.,50
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,OptimisticLockingUtils,getFragmentForExistingNodesAndRelationships,Long Identifier,The length of the field VERSION_PROPERTY_CHECK_FOR_EXISTING_NODES_AND_RELATIONSHIPS is 59.,69
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,OptimisticLockingUtils,getFragmentForNewOrExistingNodes,Long Identifier,The length of the field VERSION_PROPERTY_CHECK_FOR_NEW_OR_EXISTING_NODES is 48.,80
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,NewNodeStatementBuilder,build,Long Statement,The length of the statement "String propertiesToMergeOn=Arrays.stream(firstNode.getPrimaryIndex().split(PROPERTY_SEPARATOR)).map(p -> p + ": row.props." + p).collect(joining("`"`"{"`"}"));" is 159.,53
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,NewNodeStatementBuilder,build,Long Statement,The length of the statement "OptimisticLockingConfig olConfig=new OptimisticLockingConfig(rows.size()`firstNode.getLabels()`firstNode.getVersion().getKey());" is 128.,53
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.compiler.builders.statement,ExistingNodeStatementBuilder,build,Long Statement,The length of the statement "OptimisticLockingConfig olConfig=new OptimisticLockingConfig(rows.size()`firstNode.getLabels()`firstNode.getVersion().getKey());" is 128.,50
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.query,PagingAndSortingQuery,PagingAndSortingQuery,Long Parameter List,The method has 5 parameters. ,45
neo4j_neo4j-ogm,org.neo4j.ogm.cypher.query,PagingAndSortingQuery,PagingAndSortingQuery,Long Parameter List,The method has 6 parameters. ,51
neo4j_neo4j-ogm,org.neo4j.ogm.exception.core,InvalidPropertyFieldException,InvalidPropertyFieldException,Long Statement,The length of the statement "super(String.format("'%s#%s' is not persistable as property but has not been marked as transient."`invalidField.containingClassInfo().name()`invalidField.getName()));" is 166.,34
neo4j_neo4j-ogm,org.neo4j.ogm.exception.core,InvalidRelationshipTargetException,InvalidRelationshipTargetException,Long Statement,The length of the statement "super("The relationship '" + relationshipType + "' from '"+ startNodeType.getName()+ "' to '"+ endNodeType.getName()+ "' stored on '#"+ attributeName+ "' contains 'null'` which is an invalid target for this relationship.'");" is 224.,38
neo4j_neo4j-ogm,org.neo4j.ogm.session.transaction,DefaultTransactionManager,canCommit,Complex Conditional,The conditional expression tx.status() == Transaction.Status.COMMIT_PENDING || tx.status() == Transaction.Status.OPEN || tx.status() == Transaction.Status.PENDING is complex.,139
neo4j_neo4j-ogm,org.neo4j.ogm.session.transaction,DefaultTransactionManager,canCommit,Long Statement,The length of the statement "if (tx.status() == Transaction.Status.COMMIT_PENDING || tx.status() == Transaction.Status.OPEN || tx.status() == Transaction.Status.PENDING) {" is 142.,139
neo4j_neo4j-ogm,org.neo4j.ogm.session.transaction,DefaultTransactionManager,canRollback,Complex Conditional,The conditional expression tx.status() == Transaction.Status.ROLLBACK_PENDING || tx.status() == Transaction.Status.COMMIT_PENDING || tx.status() == Transaction.Status.OPEN || tx.status() == Transaction.Status.PENDING is complex.,156
neo4j_neo4j-ogm,org.neo4j.ogm.session.transaction,DefaultTransactionManager,canRollback,Long Statement,The length of the statement "if (tx.status() == Transaction.Status.ROLLBACK_PENDING || tx.status() == Transaction.Status.COMMIT_PENDING || tx.status() == Transaction.Status.OPEN || tx.status() == Transaction.Status.PENDING) {" is 196.,156
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,OptimisticLockingChecker,checkResultsCount,Complex Method,Cyclomatic complexity of the method is 15,44
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,OptimisticLockingChecker,checkResultsCount,Long Statement,The length of the statement "OptimisticLockingConfig olConfig=request.optimisticLockingConfig().orElseThrow(() -> new IllegalArgumentException("Statement " + request + " doesn't require results count check"));" is 180.,44
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,OptimisticLockingChecker,checkResultsCount,Long Statement,The length of the statement "message.append("Entity with type='").append(Arrays.toString(olConfig.getTypes())).append("' and id='").append(nodeId).append("' had incorrect version ").append(node.getValue());" is 177.,44
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,validateNestedFilters,Long Statement,The length of the statement "List<Filter> other=StreamSupport.stream(filters::spliterator`Spliterator.ORDERED`false).filter(byIsNested.negate()).collect(Collectors.toList());" is 145.,47
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,validateNestedFilters,Long Statement,The length of the statement "Map<String`List<Filter>> groupedFilters=StreamSupport.stream(filters::spliterator`Spliterator.ORDERED`false).filter(byIsNested).collect(Collectors.groupingBy(filter -> {" is 169.,47
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,validateNestedFilters,Long Statement,The length of the statement "throwException=other.stream().anyMatch(hasOrOperator) || groupedFilters.values().stream().map(groupedFilter -> groupedFilter.get(0)).anyMatch(hasOrOperator);" is 157.,47
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,validateNestedFilters,Long Statement,The length of the statement "throw new UnsupportedOperationException("Filters containing nested paths cannot be combined via the logical OR operator.");" is 123.,47
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,constructRelationshipQuery,Complex Method,Cyclomatic complexity of the method is 14,129
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,constructRelationshipQuery,Long Statement,The length of the statement "NodeQueryBuilder nqb=new NodeQueryBuilder(outgoingDeepNestedFilters.startNodeLabel`outgoingDeepNestedFilters.content`"n");" is 122.,129
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,constructRelationshipQuery,Long Statement,The length of the statement "NodeQueryBuilder nqb=new NodeQueryBuilder(incomingDeepNestedFilters.startNodeLabel`incomingDeepNestedFilters.content`outgoingDeepNested ? "m" : "n");" is 149.,129
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,FilteredQueryBuilder,createRelationSubquery,Long Parameter List,The method has 5 parameters. ,251
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NestedPathMatchClause,append,Long Identifier,The length of the identifier wasPreviousSegmentRelationshipEntity is 36.,43
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NestedPathMatchClause,append,Long Statement,The length of the statement "clause.append(String.format("-[%s:`%s`]-"`nestedRelationshipEntity && isLastSegment(filter`segment) ? "r" + index : ""`segment.getRelationshipType()));" is 151.,43
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,RequestExecutor,executeSave,Long Statement,The length of the statement "boolean forceTx=compiler.updateNodesStatements().stream().anyMatch(st -> st.optimisticLockingConfig().isPresent()) || compiler.updateRelationshipStatements().stream().anyMatch(st -> st.optimisticLockingConfig().isPresent());" is 224.,60
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,RequestExecutor,registerEntityIds,Complex Method,Cyclomatic complexity of the method is 10,137
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,RequestExecutor,updateRelationships,Long Identifier,The length of the identifier registeredTransientRelationshipIndex is 36.,257
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,RequestExecutor,updateRelationships,Long Statement,The length of the statement "final Map<Long`TransientRelationship> registeredTransientRelationshipIndex=buildRegisteredTransientRelationshipIndex(context);" is 126.,257
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,RequestExecutor,updateRelationships,Long Statement,The length of the statement "MappedRelationship mappedRelationship=new MappedRelationship(context.getId(transientRelationship.getSrc())`transientRelationship.getRel()`context.getId(transientRelationship.getTgt())`isRelationshipEntity ? referenceMapping.id : null`transientRelationship.getSrcClass()`transientRelationship.getTgtClass());" is 307.,257
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NodeQueryBuilder,build,Long Statement,The length of the statement "throw new MissingOperatorException("BooleanOperator missing for filter with property name " + filter.getPropertyName() + ". Only the first filter may not specify the BooleanOperator.");" is 185.,62
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NodeQueryBuilder,appendNestedFilter,Long Statement,The length of the statement "MatchClause clause=findExistingNestedClause(RelationshipPropertyMatchClause.class`c -> c.getRelationshipType().equals(filter.getRelationshipType()));" is 149.,88
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NodeQueryBuilder,appendNestedFilter,Long Statement,The length of the statement "MatchClause clause=findExistingNestedClause(RelatedNodePropertyMatchClause.class`c -> c.getLabel().equals(filter.getNestedEntityTypeLabel()) && c.getProperty().equals(filter.getNestedPropertyName()));" is 200.,88
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NodeQueryBuilder,appendNestedFilter,Long Statement,The length of the statement "clause=new RelatedNodePropertyMatchClause(filter.getNestedEntityTypeLabel()`filter.getNestedPropertyName()`matchClauseId);" is 122.,88
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NodeQueryBuilder,appendDeepNestedFilter,Long Statement,The length of the statement "clause=findExistingNestedClause(NestedPropertyPathMatchClause.class`c -> c.getLabel().equals(lastPathSegment.getRelationshipType()));" is 133.,110
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NodeQueryBuilder,appendDeepNestedFilter,Long Statement,The length of the statement "clause=findExistingNestedClause(NestedPropertyPathMatchClause.class`c -> c.getLabel().equals(lastPathSegment.getNestedEntityTypeLabel()) && c.getProperty().equals(lastPathSegment.getPropertyName()));" is 199.,110
neo4j_neo4j-ogm,org.neo4j.ogm.session.request,NodeQueryBuilder,appendDeepNestedFilter,Long Statement,The length of the statement "clause=new NestedPropertyPathMatchClause(matchClauseId`lastPathSegment.getNestedEntityTypeLabel()`lastPathSegment.getPropertyName()`lastPathSegment.isNestedRelationshipEntity());" is 178.,110
neo4j_neo4j-ogm,org.neo4j.ogm.driver,TypeSystem,supportsAsNativeType,Long Statement,The length of the statement "return clazz == null ? false : AbstractConfigurableDriver.DEFAULT_SUPPORTED_TYPES.stream().filter(st -> st.isAssignableFrom(clazz)).findAny().isPresent();" is 154.,31
neo4j_neo4j-ogm,org.neo4j.ogm.driver,NativeTypesNotAvailableException,NativeTypesNotAvailableException,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4bf2f5dc,34
neo4j_neo4j-ogm,org.neo4j.ogm.driver,TypeAdapterLookupDelegate,hasAdapterFor,Long Statement,The length of the statement "return this.registeredTypeAdapter.containsKey(clazz) || registeredTypeAdapter.keySet().stream().anyMatch(c -> c.isAssignableFrom(clazz));" is 137.,54
neo4j_neo4j-ogm,org.neo4j.ogm.driver,TypeAdapterLookupDelegate,findAdapterFor,Long Statement,The length of the statement "f=registeredTypeAdapter.entrySet().stream().filter(e -> e.getKey().isAssignableFrom(c)).findFirst().map(Map.Entry::getValue).orElseGet(Function::identity);" is 155.,60
neo4j_neo4j-ogm,org.neo4j.ogm.driver,AbstractConfigurableDriver,loadNativeTypes,Long Statement,The length of the statement "Class<TypeSystem> nativeTypesClass=(Class<TypeSystem>)Class.forName(nativeTypesImplementation`true`Configuration.getDefaultClassLoader());" is 138.,145
neo4j_neo4j-ogm,org.neo4j.ogm.driver,AbstractConfigurableDriver,loadCypherModifications,Long Identifier,The length of the field cypherModificationProviderLoader is 32.,210
neo4j_neo4j-ogm,org.neo4j.ogm.driver,AbstractConfigurableDriver,loadCypherModifications,Long Statement,The length of the statement "return StreamSupport.stream(currentProviderLoader.spliterator()`false).sorted(Comparator.comparing(CypherModificationProvider::getOrder)).map(provider -> provider.getCypherModification(configurationProperties)).reduce(Function.identity()`Function::andThen`Function::andThen);" is 275.,210
neo4j_neo4j-ogm,org.neo4j.ogm.compiler,SrcTargetKey,hashCode,Magic Number,The method contains a magic number: 32,59
neo4j_neo4j-ogm,org.neo4j.ogm.compiler,SrcTargetKey,hashCode,Magic Number,The method contains a magic number: 31,59
neo4j_neo4j-ogm,org.neo4j.ogm.compiler,SrcTargetKey,hashCode,Magic Number,The method contains a magic number: 32,59
neo4j_neo4j-ogm,org.neo4j.ogm.result.adapter,GraphModelAdapter,adaptInternal,Long Parameter List,The method has 5 parameters. ,69
neo4j_neo4j-ogm,org.neo4j.ogm.result.adapter,GraphModelAdapter,buildPath,Long Parameter List,The method has 5 parameters. ,85
neo4j_neo4j-ogm,org.neo4j.ogm.result.adapter,BaseAdapter,convertArrayPropertiesToCollection,Long Statement,The length of the statement "return properties.entrySet().stream().filter(e -> e.getValue() != null).collect(toMap(Map.Entry::getKey`BaseAdapter::convertOrReturnSelf));" is 139.,33
neo4j_neo4j-ogm,org.neo4j.ogm.result.adapter,RowModelAdapter,adapt,Complex Conditional,The conditional expression isPath(value) || isNode(value) || isRelationship(value) is complex.,41
neo4j_neo4j-ogm,org.neo4j.ogm.result.adapter,GraphRowModelAdapter,adapt,Long Parameter List,The method has 7 parameters. ,84
neo4j_neo4j-ogm,org.neo4j.ogm.result.adapter,GraphRowModelAdapter,adapt,Long Parameter List,The method has 6 parameters. ,103
neo4j_neo4j-ogm,org.neo4j.ogm.model,PropertyContainer,setPreviousDynamicCompositeProperties,Long Identifier,The length of the parameter previousDynamicCompositeProperties is 34.,40
neo4j_neo4j-ogm,org.neo4j.ogm.model,PropertyContainer,addCurrentDynamicCompositeProperties,Long Identifier,The length of the parameter additionalDynamicCompositeProperties is 36.,42
neo4j_neo4j-ogm,org.neo4j.ogm.types.adapter,TemporalAmountAdapter,apply,Long Identifier,The length of the parameter internalTemporalAmountRepresentation is 36.,72
neo4j_neo4j-ogm,org.neo4j.ogm.types.spatial,GeographicPoint3d,GeographicPoint3d,Magic Number,The method contains a magic number: 4979,30
neo4j_neo4j-ogm,org.neo4j.ogm.types.spatial,GeographicPoint3d,toString,Long Statement,The length of the statement "return "GeographicPoint3d{" + "longitude=" + getLongitude() + "` latitude="+ getLatitude()+ "` height="+ getHeight()+ "` srid="+ getSrid()+ '}';" is 144.,46
neo4j_neo4j-ogm,org.neo4j.ogm.types.spatial,GeographicPoint2d,GeographicPoint2d,Magic Number,The method contains a magic number: 4326,30
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,AbstractPropertyContainer,addCurrentDynamicCompositeProperties,Long Identifier,The length of the parameter additionalDynamicCompositeProperties is 36.,45
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,AbstractPropertyContainer,addCurrentDynamicCompositeProperties,Long Identifier,The length of the field currentDynamicCompositeProperties is 33.,45
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,AbstractPropertyContainer,setPreviousDynamicCompositeProperties,Long Identifier,The length of the parameter previousDynamicCompositeProperties is 34.,50
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,AbstractPropertyContainer,setPreviousDynamicCompositeProperties,Long Identifier,The length of the field previousDynamicCompositeProperties is 34.,50
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,AbstractPropertyContainer,createPropertyRemovalFragment,Long Identifier,The length of the field previousDynamicCompositeProperties is 34.,55
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,AbstractPropertyContainer,createPropertyRemovalFragment,Long Identifier,The length of the field currentDynamicCompositeProperties is 33.,55
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,AbstractPropertyContainer,createPropertyRemovalFragment,Long Statement,The length of the statement "return propertiesToBeRemoved.stream().map(s -> String.format("%s.`%s`"`variable`s)).collect(Collectors.joining("`"`" REMOVE "`" "));" is 132.,55
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,NodeModel,labelSignature,Long Statement,The length of the statement "return Stream.concat(Arrays.stream(labels)`Optional.ofNullable(previousDynamicLabels).orElseGet(HashSet::new).stream()).distinct().collect(joining("`"));" is 153.,136
neo4j_neo4j-ogm,org.neo4j.ogm.response.model,PropertyModel,hashCode,Magic Number,The method contains a magic number: 31,91
neo4j_neo4j-ogm,org.neo4j.ogm.types,GeographicPoint3dTest,constructorShouldSetCorrectFields,Magic Number,The method contains a magic number: 48.793889,30
neo4j_neo4j-ogm,org.neo4j.ogm.types,GeographicPoint3dTest,constructorShouldSetCorrectFields,Magic Number,The method contains a magic number: 9.226944,30
neo4j_neo4j-ogm,org.neo4j.ogm.types,GeographicPoint3dTest,constructorShouldSetCorrectFields,Magic Number,The method contains a magic number: 300.0,30
neo4j_neo4j-ogm,org.neo4j.ogm.types,GeographicPoint2dTest,constructorShouldSetCorrectFields,Magic Number,The method contains a magic number: 48.793889,30
neo4j_neo4j-ogm,org.neo4j.ogm.types,GeographicPoint2dTest,constructorShouldSetCorrectFields,Magic Number,The method contains a magic number: 9.226944,30

Project Name,Package Name,Type Name,Testability Smell,Cause of the Smell
CaptainBern_Reflection,com.captainbern.minecraft.conversion,BukkitUnwrapper,Law of Demeter violation,The tool detected the smell in this method (getFieldUnwrapper) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor
CaptainBern_Reflection,com.captainbern.minecraft.conversion,BukkitUnwrapper,Law of Demeter violation,The tool detected the smell in this method (getMethodUnwrapper) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeMethod; com.captainbern.reflection.SafeMethod.getAccessor
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: UNKNOWN_PACKET; SET_PROTOCOL; KEEP_ALIVE; CHAT; USE_ENTITY; FLYING; POSITION; LOOK; POSITION_LOOK; BLOCK_DIG; BLOCK_PLACE; HELDITEM; ANIMATION; ENTITY_ACTION; STEER_VEHICLE; CLOSE_WINDOW; WINDOW_CLICK; TRANSACTION; SET_CREATIVE_SLOT; ENCHANT_ITEM; UPDATE_SIGN; ABILITIES; TAB_COMPLETE; CLIENT_SETTINGS; CLIENT_COMMAND; CUSTOM_PAYLOAD; SPECTATE; RESOURCE_PACK_STATUS; KEEP_ALIVE; LOGIN; CHAT; UPDATE_TIME; ENTITY_EQUIPMENT; SPAWN_POSITION; UPDATE_HEALTH; RESPAWN; POSITION; HELD_ITEM_SLOT; BED; ANIMATION; NAMED_ENTITY_SPAWN; COLLECT; SPAWN_ENTITY; SPAWN_ENTITY_LIVING; SPAWN_ENTITY_PAINTING; SPAWN_ENTITY_EXPERIENCE_ORB; ENTITY_VELOCITY; ENTITY_DESTROY; ENTITY; REL_ENTITY_MOVE; REL_ENTITY_LOOK; REL_ENTITY_MOVE_LOOK; ENTITY_TELEPORT; ENTITY_HEAD_ROTATION; ETITY_STATUS; ATTACH_ENTITY; ENTITY_METADATA; ENTITY_EFFECT; REMOVE_ENTITY_EFFECT; SET_EXPERIENCE; UPDATE_ATTRIBUTES; MAP_CHUNK; MULTI_BLOCK_CHANGE; BLOCK_CHANGE; BLOCK_ACTION; BLOCK_BREAK_ANIMATION; MAP_CHUNK_BULK; EXPLOSION; WORLD_EVENT; NAMED_SOUND_EFFECT; WORLD_PARTICLES; CHANGE_GAMESTATE; SPAWN_ENTITY_WEATHER; OPEN_WINDOW; CLOSE_WINDOW; SET_SLOT; WINDOW_ITEMS; CRAFT_PROGRESS_BAR; TRANSACTION; UPDATE_SIGN; MAP; OPEN_TILE_ENTITY_DATA; OPEN_SIGN_EDITOR; STATISTIC; PLAYER_INFO; PLAYER_ABILITIES; TAB_COMPLETE; SCOREBOARD_OBJECTIVE; SCOREBOARD_SCORE; SCOREBOARD_DISPLAY_SCORE; SCOREBOARD_TEAM; CUSTOM_PAYLOAD; KICK_DISCONNECT; SERVER_DIFFICULTY; COMBAT_EVENT; CAMERA; WORLD_BORDER; TITLE; SET_COMPRESSION; PLAYER_LIST_HEADER_FOOTER; RESOURCE_PACK_SEND; UPDATE_ENTITY_NBT; START; PING; SERVER_INFO; PONG; LOGIN_START; ENCRYPTION_BEGIN; DISCONNECT; ENCRYPTION_BEGIN; ENCRYPTION_SUCCESS; SET_COMPRESSION
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.HandShaking,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.HandShaking,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: SET_PROTOCOL
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: SET_PROTOCOL
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Server,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Play,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Play,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: KEEP_ALIVE; CHAT; USE_ENTITY; FLYING; POSITION; LOOK; POSITION_LOOK; BLOCK_DIG; BLOCK_PLACE; HELDITEM; ANIMATION; ENTITY_ACTION; STEER_VEHICLE; CLOSE_WINDOW; WINDOW_CLICK; TRANSACTION; SET_CREATIVE_SLOT; ENCHANT_ITEM; UPDATE_SIGN; ABILITIES; TAB_COMPLETE; CLIENT_SETTINGS; CLIENT_COMMAND; CUSTOM_PAYLOAD; SPECTATE; RESOURCE_PACK_STATUS; KEEP_ALIVE; LOGIN; CHAT; UPDATE_TIME; ENTITY_EQUIPMENT; SPAWN_POSITION; UPDATE_HEALTH; RESPAWN; POSITION; HELD_ITEM_SLOT; BED; ANIMATION; NAMED_ENTITY_SPAWN; COLLECT; SPAWN_ENTITY; SPAWN_ENTITY_LIVING; SPAWN_ENTITY_PAINTING; SPAWN_ENTITY_EXPERIENCE_ORB; ENTITY_VELOCITY; ENTITY_DESTROY; ENTITY; REL_ENTITY_MOVE; REL_ENTITY_LOOK; REL_ENTITY_MOVE_LOOK; ENTITY_TELEPORT; ENTITY_HEAD_ROTATION; ETITY_STATUS; ATTACH_ENTITY; ENTITY_METADATA; ENTITY_EFFECT; REMOVE_ENTITY_EFFECT; SET_EXPERIENCE; UPDATE_ATTRIBUTES; MAP_CHUNK; MULTI_BLOCK_CHANGE; BLOCK_CHANGE; BLOCK_ACTION; BLOCK_BREAK_ANIMATION; MAP_CHUNK_BULK; EXPLOSION; WORLD_EVENT; NAMED_SOUND_EFFECT; WORLD_PARTICLES; CHANGE_GAMESTATE; SPAWN_ENTITY_WEATHER; OPEN_WINDOW; CLOSE_WINDOW; SET_SLOT; WINDOW_ITEMS; CRAFT_PROGRESS_BAR; TRANSACTION; UPDATE_SIGN; MAP; OPEN_TILE_ENTITY_DATA; OPEN_SIGN_EDITOR; STATISTIC; PLAYER_INFO; PLAYER_ABILITIES; TAB_COMPLETE; SCOREBOARD_OBJECTIVE; SCOREBOARD_SCORE; SCOREBOARD_DISPLAY_SCORE; SCOREBOARD_TEAM; CUSTOM_PAYLOAD; KICK_DISCONNECT; SERVER_DIFFICULTY; COMBAT_EVENT; CAMERA; WORLD_BORDER; TITLE; SET_COMPRESSION; PLAYER_LIST_HEADER_FOOTER; RESOURCE_PACK_SEND; UPDATE_ENTITY_NBT
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: KEEP_ALIVE; CHAT; USE_ENTITY; FLYING; POSITION; LOOK; POSITION_LOOK; BLOCK_DIG; BLOCK_PLACE; HELDITEM; ANIMATION; ENTITY_ACTION; STEER_VEHICLE; CLOSE_WINDOW; WINDOW_CLICK; TRANSACTION; SET_CREATIVE_SLOT; ENCHANT_ITEM; UPDATE_SIGN; ABILITIES; TAB_COMPLETE; CLIENT_SETTINGS; CLIENT_COMMAND; CUSTOM_PAYLOAD; SPECTATE; RESOURCE_PACK_STATUS
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Server,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Server,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: KEEP_ALIVE; LOGIN; CHAT; UPDATE_TIME; ENTITY_EQUIPMENT; SPAWN_POSITION; UPDATE_HEALTH; RESPAWN; POSITION; HELD_ITEM_SLOT; BED; ANIMATION; NAMED_ENTITY_SPAWN; COLLECT; SPAWN_ENTITY; SPAWN_ENTITY_LIVING; SPAWN_ENTITY_PAINTING; SPAWN_ENTITY_EXPERIENCE_ORB; ENTITY_VELOCITY; ENTITY_DESTROY; ENTITY; REL_ENTITY_MOVE; REL_ENTITY_LOOK; REL_ENTITY_MOVE_LOOK; ENTITY_TELEPORT; ENTITY_HEAD_ROTATION; ETITY_STATUS; ATTACH_ENTITY; ENTITY_METADATA; ENTITY_EFFECT; REMOVE_ENTITY_EFFECT; SET_EXPERIENCE; UPDATE_ATTRIBUTES; MAP_CHUNK; MULTI_BLOCK_CHANGE; BLOCK_CHANGE; BLOCK_ACTION; BLOCK_BREAK_ANIMATION; MAP_CHUNK_BULK; EXPLOSION; WORLD_EVENT; NAMED_SOUND_EFFECT; WORLD_PARTICLES; CHANGE_GAMESTATE; SPAWN_ENTITY_WEATHER; OPEN_WINDOW; CLOSE_WINDOW; SET_SLOT; WINDOW_ITEMS; CRAFT_PROGRESS_BAR; TRANSACTION; UPDATE_SIGN; MAP; OPEN_TILE_ENTITY_DATA; OPEN_SIGN_EDITOR; STATISTIC; PLAYER_INFO; PLAYER_ABILITIES; TAB_COMPLETE; SCOREBOARD_OBJECTIVE; SCOREBOARD_SCORE; SCOREBOARD_DISPLAY_SCORE; SCOREBOARD_TEAM; CUSTOM_PAYLOAD; KICK_DISCONNECT; SERVER_DIFFICULTY; COMBAT_EVENT; CAMERA; WORLD_BORDER; TITLE; SET_COMPRESSION; PLAYER_LIST_HEADER_FOOTER; RESOURCE_PACK_SEND; UPDATE_ENTITY_NBT
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Status,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Status,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: START; PING; SERVER_INFO; PONG
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: START; PING
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Server,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Server,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: SERVER_INFO; PONG
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Login,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Login,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: LOGIN_START; ENCRYPTION_BEGIN; DISCONNECT; ENCRYPTION_BEGIN; ENCRYPTION_SUCCESS; SET_COMPRESSION
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Client,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: LOGIN_START; ENCRYPTION_BEGIN
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Server,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketType.Server,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: DISCONNECT; ENCRYPTION_BEGIN; ENCRYPTION_SUCCESS; SET_COMPRESSION
CaptainBern_Reflection,com.captainbern.minecraft.protocol,PacketRegistry,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 9
CaptainBern_Reflection,com.captainbern.minecraft.reflection,MinecraftVersion,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: BOUNTIFUL_UPDATE; SKIN_UPDATE; WORLD_UPDATE; HORSE_UPDATE; REDSTONE_UPDATE; SCARY_UPDATE
CaptainBern_Reflection,com.captainbern.minecraft.reflection,ReflectionConfiguration.Builder,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.reflection,MinecraftReflection,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 8
CaptainBern_Reflection,com.captainbern.minecraft.reflection,MinecraftReflection,Law of Demeter violation,The tool detected the smell in this method (toBukkitEntity) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeMethod; com.captainbern.reflection.SafeMethod.getAccessor
CaptainBern_Reflection,com.captainbern.minecraft.reflection.utils,Accessor,Hard-wired Dependency,The tool detected the smell in this class because the class creates objects of concrete classes and uses them. Following concrete classes are instantiated and used: com.captainbern.reflection.Reflection
CaptainBern_Reflection,com.captainbern.minecraft.reflection.utils,ClassCache,Law of Demeter violation,The tool detected the smell in this method (getClass) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.ReflectionProvider.loadClass
CaptainBern_Reflection,com.captainbern.minecraft.reflection.providers.remapper,RemapperException.Reason,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.reflection.providers.remapper,RemappedReflectionProvider,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 8
CaptainBern_Reflection,com.captainbern.minecraft.reflection.providers.remapper,RemappedReflectionProvider,Law of Demeter violation,The tool detected the smell in this method (init) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor; com.captainbern.reflection.accessor.FieldAccessor.get
CaptainBern_Reflection,com.captainbern.minecraft.reflection.providers.remapper,RemappedReflectionProvider,Law of Demeter violation,The tool detected the smell in this method (init) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor; com.captainbern.reflection.accessor.FieldAccessor.get
CaptainBern_Reflection,com.captainbern.minecraft.reflection.providers.remapper,RemappedReflectionProvider,Law of Demeter violation,The tool detected the smell in this method (init) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor; com.captainbern.reflection.accessor.FieldAccessor.get
CaptainBern_Reflection,com.captainbern.minecraft.reflection.providers.remapper,RemappedReflectionProvider,Law of Demeter violation,The tool detected the smell in this method (init) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor; com.captainbern.reflection.accessor.FieldAccessor.get
CaptainBern_Reflection,com.captainbern.minecraft.wrapper,EnumWrappers.EntityUseAction,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.wrapper,EnumWrappers.EnumConverter,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.wrapper,WrappedDataWatcher,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 10
CaptainBern_Reflection,com.captainbern.minecraft.wrapper.nbt,NbtFactory,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 16
CaptainBern_Reflection,com.captainbern.minecraft.wrapper.nbt,WrappedNbtElement,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 9
CaptainBern_Reflection,com.captainbern.minecraft.wrapper.nbt,WrappedNbtElement,Law of Demeter violation,The tool detected the smell in this method (getValue) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.minecraft.wrapper.nbt.WrappedNbtElement.getAccessor; com.captainbern.reflection.accessor.FieldAccessor.get
CaptainBern_Reflection,com.captainbern.minecraft.wrapper.nbt,WrappedNbtElement,Law of Demeter violation,The tool detected the smell in this method (setValue) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.minecraft.wrapper.nbt.WrappedNbtElement.getAccessor; com.captainbern.reflection.accessor.FieldAccessor.set
CaptainBern_Reflection,com.captainbern.minecraft.wrapper.nbt,WrappedNbtTagCompound,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 8
CaptainBern_Reflection,com.captainbern.minecraft.wrapper.nbt.io,NbtSerializer,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 8
CaptainBern_Reflection,com.captainbern.minecraft.error,Report.ReportBuilder,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.minecraft.error,PrettyPrinter,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: MAX_RECURSION_DEPTH
CaptainBern_Reflection,com.captainbern.reflection,ReflectionUtils,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: INCLUDE_OBJECT
CaptainBern_Reflection,com.captainbern.reflection,AbstractAccess,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: INCLUDE_OBJECT
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.ReflectionProvider.getClassProvider; com.captainbern.reflection.provider.type.ClassProvider.asClassTemplate
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.type.ClassProvider.asClassTemplate
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.ReflectionProvider.getConstructorProvider; com.captainbern.reflection.provider.type.ConstructorProvider.asSafeConstructor
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.type.ConstructorProvider.asSafeConstructor
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.ReflectionProvider.getFieldProvider; com.captainbern.reflection.provider.type.FieldProvider.asSafeField
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.ReflectionProvider.getFieldProvider; com.captainbern.reflection.provider.type.FieldProvider.asSafeField
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.ReflectionProvider.getMethodProvider; com.captainbern.reflection.provider.type.MethodProvider.asSafeMethod
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (reflect) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.type.MethodProvider.asSafeMethod
CaptainBern_Reflection,com.captainbern.reflection,Reflection,Law of Demeter violation,The tool detected the smell in this method (newEnumModifier) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.getReflectionProvider; com.captainbern.reflection.provider.ReflectionProvider.createNewEnumModifier
CaptainBern_Reflection,com.captainbern.reflection.matcher.type,MethodMatcher.Builder,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.reflection.matcher.type,FieldMatcher.Builder,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.reflection.matcher.type,MemberMatcher.Builder,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.reflection.matcher.type,ClassMatcher.Builder,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.reflection.matcher.type,ConstructorMatcher.Builder,Global State,The tool detected the smell in this class because the class can be accessed as a `global` state.
CaptainBern_Reflection,com.captainbern.reflection.asm.accessor,FieldAccessorBuilder,Hard-wired Dependency,The tool detected the smell in this class because the class creates objects of concrete classes and uses them. Following concrete classes are instantiated and used: com.captainbern.reflection.asm.Boxer
CaptainBern_Reflection,com.captainbern.reflection.impl,SafeMethodImpl,Law of Demeter violation,The tool detected the smell in this method (setModifiers) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor
CaptainBern_Reflection,com.captainbern.reflection.impl,SafeConstructorImpl,Law of Demeter violation,The tool detected the smell in this method (setModifiers) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Hard-wired Dependency,The tool detected the smell in this class because the class creates objects of concrete classes and uses them. Following concrete classes are instantiated and used: com.captainbern.reflection.Reflection
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (initializeFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (initializeFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (initializeFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeMethod; com.captainbern.reflection.SafeMethod.getAccessor
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (initializeFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeMethod; com.captainbern.reflection.SafeMethod.getAccessor
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (fixFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.accessor.FieldAccessor.getField; com.captainbern.reflection.SafeMember.getModifiers
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (fixFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.accessor.FieldAccessor.getField; com.captainbern.reflection.SafeMember.setModifiers
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (fixFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.accessor.FieldAccessor.getField; com.captainbern.reflection.SafeMember.getModifiers
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (fixFields) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.accessor.FieldAccessor.getField; com.captainbern.reflection.SafeMember.setModifiers
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (initializeValuesField) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Reflection.reflect; com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (initializeValuesField) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.accessor.FieldAccessor.getField; com.captainbern.reflection.SafeMember.getModifiers
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (initializeValuesField) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.accessor.FieldAccessor.getField; com.captainbern.reflection.SafeMember.setModifiers
CaptainBern_Reflection,com.captainbern.reflection.impl,EnumModifierImpl,Law of Demeter violation,The tool detected the smell in this method (addEnumValue) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.accessor.FieldAccessor.getField; com.captainbern.reflection.SafeMember.setModifiers
CaptainBern_Reflection,com.captainbern.reflection.impl,SafeFieldImpl,Law of Demeter violation,The tool detected the smell in this method (setModifiers) because the method voilates the law of Demeter. The long chain of method invocations is : com.captainbern.reflection.Access.getSafeFieldByName; com.captainbern.reflection.SafeField.getAccessor
CaptainBern_Reflection,com.captainbern.jbel.commons.attribute.annotation.elementvalue,ElementValue,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: TYPE_STRING; TYPE_ENUM; TYPE_CLASS; TYPE_ANNOTATION; TYPE_BYTE; TYPE_CHAR; TYPE_DOUBLE; TYPE_FLOAT; TYPE_INT; TYPE_LONG; TYPE_SHORT; TYPE_BOOLEAN; TYPE_ARRAY
CaptainBern_Reflection,com.captainbern.jbel,Opcode,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: JBEL_1; JAVA_MAGIC; JDK_1_1; JDK_1_2; JDK_1_3; JDK_1_4; JDK_5; JDK_6; JDK_7; JDK_8; NOP; ACONST_NULL; ICONST_M1; ICONST_0; ICONST_1; ICONST_2; ICONST_3; ICONST_4; ICONST_5; LCONST_0; LCONST_1; FCONST_0; FCONST_1; FCONST_2; DCONST_0; DCONST_1; BIPUSH; SIPUSH; LDC; LDC_W; LDC2_W; ILOAD; LLOAD; FLOAD; DLOAD; ALOAD; ILOAD_0; ILOAD_1; ILOAD_2; ILOAD_3; LLOAD_0; LLOAD_1; LLOAD_2; LLOAD_3; FLOAD_0; FLOAD_1; FLOAD_2; FLOAD_3; DLOAD_0; DLOAD_1; DLOAD_2; DLOAD_3; ALOAD_0; ALOAD_1; ALOAD_2; ALOAD_3; IALOAD; LALOAD; FALOAD; DALOAD; AALOAD; BALOAD; CALOAD; SALOAD; ISTORE; LSTORE; FSTORE; DSTORE; ASTORE; ISTORE_0; ISTORE_1; ISTORE_2; ISTORE_3; LSTORE_0; LSTORE_1; LSTORE_2; LSTORE_3; FSTORE_0; FSTORE_1; FSTORE_2; FSTORE_3; DSTORE_0; DSTORE_1; DSTORE_2; DSTORE_3; ASTORE_0; ASTORE_1; ASTORE_2; ASTORE_3; IASTORE; LASTORE; FASTORE; DASTORE; AASTORE; BASTORE; CASTORE; SASTORE; POP; POP2; DUP; DUP_X1; DUP_X2; DUP2; DUP2_X1; DUP2_X2; SWAP; IADD; LADD; FADD; DADD; ISUB; LSUB; FSUB; DSUB; IMUL; LMUL; FMUL; DMUL; IDIV; LDIV; FDIV; DDIV; IREM; LREM; FREM; DREM; INEG; LNEG; FNEG; DNEG; ISHL; LSHL; ISHR; LSHR; IUSHR; LUSHR; IAND; LAND; IOR; LOR; IXOR; LXOR; IINC; I2L; I2F; I2D; L2I; L2F; L2D; F2I; F2L; F2D; D2I; D2L; D2F; I2B; I2C; I2S; LCMP; FCMPL; FCMPG; DCMPL; DCMPG; IFEQ; IFNE; IFLT; IFGE; IFGT; IFLE; IF_ICMPEQ; IF_ICMPNE; IF_ICMPLT; IF_ICMPGE; IF_ICMPGT; IF_ICMPLE; IF_ACMPEQ; IF_ACMPNE; GOTO; JSR; RET; TABLESWITCH; LOOKUPSWITCH; IRETURN; LRETURN; FRETURN; DRETURN; ARETURN; RETURN; GETSTATIC; PUTSTATIC; GETFIELD; PUTFIELD; INVOKEVIRTUAL; INVOKESPECIAL; INVOKESTATIC; INVOKEINTERFACE; INVOKEDYNAMIC; NEW; NEWARRAY; ANEWARRAY; ARRAYLENGTH; ATHROW; CHECKCAST; INSTANCEOF; MONITORENTER; MONITOREXIT; WIDE; MULTIANEWARRAY; IFNULL; IFNONNULL; GOTO_W; JSR_W; BREAKPOINT; IMPDEP1; IMPDEP2; T_BOOLEAN; T_CHAR; T_FLOAT; T_DOUBLE; T_BYTE; T_SHORT; T_INT; T_LONG; T_VOID; T_ARRAY; T_OBJECT; T_REFERENCE; T_UNKNOWN; T_ADDRESS; CONSTANT_Utf8; CONSTANT_Integer; CONSTANT_Float; CONSTANT_Long; CONSTANT_Double; CONSTANT_Class; CONSTANT_String; CONSTANT_Fieldref; CONSTANT_Methodref; CONSTANT_InterfaceMethodref; CONSTANT_NameAndType; CONSTANT_MethodHandle; CONSTANT_MethodType; CONSTANT_InvokeDynamic; CONSTANT_NAMES; ATTR_SOURCE_FILE; ATTR_SOURCE_DEBUG_EXTENSION; ATTR_CONSTANT_VALUE; ATTR_CODE; ATTR_EXCEPTIONS; ATTR_LINE_NUMBER_TABLE; ATTR_LOCAL_VARIABLE_TABLE; ATTR_INNER_CLASSES; ATTR_SYNTHETIC; ATTR_DEPRECATED; ATTR_SIGNATURE; ATTR_STACK_MAP; ATTR_RUNTIME_VISIBLE_ANNOTATIONS; ATTR_RUNTIME_INVISIBLE_ANNOTATIONS; ATTR_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS; ATTR_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS; ATTR_ANNOTATION_DEFAULT; ATTR_LOCAL_VARIABLE_TYPE_TABLE; ATTR_ENCLOSING_METHOD; ATTR_BOOTSTRAP_METHODS; ATTR_STACK_MAP_TABLE; ATTR_METHOD_PARAMETERS; ITEM_Top; ITEM_Integer; ITEM_Float; ITEM_Double; ITEM_Long; ITEM_Null; ITEM_UninitializedThis; ITEM_Object; ITEM_Uninitialized; SAME_FRAME; SAME_FRAME_MAX; SAME_LOCALS_1_STACK_ITEM; SAME_LOCALS_1_STACK_ITEM_MAX; SAME_LOCALS_1_STACK_ITEM_EXTENDED; CHOP_FRAME; CHOP_FRAME_MAX; SAME_FRAME_EXTENDED; APPEND_FRAME; APPEND_FRAME_MAX; FULL_FRAME; H_GETFIELD; H_GETSTATIC; H_PUTFIELD; H_PUTSTATIC; H_INVOKEVIRTUAL; H_INVOKESTATIC; H_INVOKESPECIAL; H_NEWINVOKESPECIAL; H_INVOKEINTERFACE; STACK_GROWTH
CaptainBern_Reflection,com.captainbern.jbel,ByteVector,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: DEFAULT_SIZE
CaptainBern_Reflection,com.captainbern.jbel,Access,Global State,The tool detected the smell in this class because the class declares global variables. The detected global variables are: ACC_PUBLIC; ACC_PRIVATE; ACC_PROTECTED; ACC_STATIC; ACC_FINAL; ACC_SUPER; ACC_SYNCHRONIZED; ACC_VOLATILE; ACC_BRIDGE; ACC_VARARGS; ACC_TRANSIENT; ACC_NATIVE; ACC_INTERFACE; ACC_ABSTRACT; ACC_STRICT; ACC_SYNTHETIC; ACC_ANNOTATION; ACC_ENUM
CaptainBern_Reflection,com.captainbern.jbel.visitor,AttributeVisitor,Excessive Dependency,The tool detected the smell in this class because the class depends on too many dependencies. The total number of dependencies is: 22

Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,BatchSPIManager,registerDatabaseConfigurationBean,Long Identifier,The length of the field databaseConfigurationCompleteLock is 33.,171
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,BatchSPIManager,registerDatabaseConfigurationBean,Long Statement,The length of the statement "throw new DatabaseAlreadyInitializedException("Tried to set database configuration but it's too late` since configuration has already been hardened.");" is 151.,171
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,BatchSPIManager,getFinalDatabaseConfiguration,Long Identifier,The length of the field databaseConfigurationCompleteLock is 33.,189
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getAllServicePropertyNames,Long Identifier,The length of the field CONTAINER_ARTIFACT_FACTORY_SERVICE is 34.,80
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getAllServicePropertyNames,Long Identifier,The length of the field DELEGATING_ARTIFACT_FACTORY_SERVICE is 35.,80
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getAllServicePropertyNames,Long Identifier,The length of the field DELEGATING_JOBXML_LOADER_SERVICE is 32.,80
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Complex Method,Cyclomatic complexity of the method is 9,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Identifier,The length of the field CONTAINER_ARTIFACT_FACTORY_SERVICE is 34.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Identifier,The length of the field DELEGATING_ARTIFACT_FACTORY_DEFAULT is 35.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Identifier,The length of the field DELEGATING_ARTIFACT_FACTORY_SERVICE is 35.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Identifier,The length of the field DELEGATING_JOBXML_LOADER_SERVICE is 32.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Identifier,The length of the field DELEGATING_JOBXML_LOADER_DEFAULT is 32.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Statement,The length of the statement "return new ServiceInfo(ServicePropertyNames.BATCH_THREADPOOL_SERVICE`ServiceImplClassNames.BATCH_THREADPOOL_DEFAULT`ServiceInterfaceNames.BATCH_THREADPOOL);" is 156.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Statement,The length of the statement "return new ServiceInfo(ServicePropertyNames.CONTAINER_ARTIFACT_FACTORY_SERVICE`ServiceImplClassNames.DELEGATING_ARTIFACT_FACTORY_DEFAULT`ServiceInterfaceNames.CONTAINER_ARTIFACT_FACTORY);" is 187.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Statement,The length of the statement "return new ServiceInfo(ServicePropertyNames.DELEGATING_ARTIFACT_FACTORY_SERVICE`ServiceImplClassNames.DELEGATING_ARTIFACT_FACTORY_DEFAULT`ServiceInterfaceNames.CONTAINER_ARTIFACT_FACTORY);" is 188.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Statement,The length of the statement "return new ServiceInfo(ServicePropertyNames.DELEGATING_JOBXML_LOADER_SERVICE`ServiceImplClassNames.DELEGATING_JOBXML_LOADER_DEFAULT`ServiceInterfaceNames.JOBXML_LOADER);" is 169.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Statement,The length of the statement "return new ServiceInfo(ServicePropertyNames.JOBXML_LOADER_SERVICE`ServiceImplClassNames.DELEGATING_JOBXML_LOADER_DEFAULT`ServiceInterfaceNames.JOBXML_LOADER);" is 158.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceRegistry,getServiceInfo,Long Statement,The length of the statement "return new ServiceInfo(ServicePropertyNames.TRANSACTION_SERVICE`ServiceImplClassNames.TRANSACTION_DEFAULT`ServiceInterfaceNames.TRANSACTION);" is 141.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceInfo,ServiceInfo,Long Identifier,The length of the parameter defaultImplementationClassName is 30.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceInfo,ServiceInfo,Long Identifier,The length of the field defaultImplementationClassName is 30.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceInfo,getDefaultImplementationClassName,Long Identifier,The length of the field defaultImplementationClassName is 30.,46
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceInfo,setDefaultImplementationClassName,Long Identifier,The length of the parameter defaultImplementationClassName is 30.,49
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.spi,ServiceInfo,setDefaultImplementationClassName,Long Identifier,The length of the field defaultImplementationClassName is 30.,49
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Property,toString,Magic Number,The method contains a magic number: 40,92
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Batchlet,toString,Magic Number,The method contains a magic number: 100,95
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Decision,toString,Magic Number,The method contains a magic number: 100,181
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Chunk,toString,Magic Number,The method contains a magic number: 250,372
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Next,toString,Magic Number,The method contains a magic number: 40,98
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,JSLJob,toString,Magic Number,The method contains a magic number: 100,243
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,End,toString,Magic Number,The method contains a magic number: 40,97
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Step,toString,Magic Number,The method contains a magic number: 100,345
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Split,toString,Magic Number,The method contains a magic number: 100,171
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Stop,toString,Magic Number,The method contains a magic number: 40,124
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Fail,toString,Magic Number,The method contains a magic number: 40,97
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,JSLProperties,toString,Magic Number,The method contains a magic number: 140,104
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.model,Flow,toString,Magic Number,The method contains a magic number: 100,201
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.context.impl,StepContextImpl,getStepExecutionId,Long Identifier,The length of the field TOP_LEVEL_STEP_EXECUTION_ID_PROP is 32.,162
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.servicesmanager,ServicesManagerImpl,readConfigFromPropertiesFiles,Complex Method,Cyclomatic complexity of the method is 9,126
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.servicesmanager,ServicesManagerImpl,readConfigFromPropertiesFiles,Long Identifier,The length of the identifier batchAdminConfigListInputStream is 31.,126
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.servicesmanager,ServicesManagerImpl,readConfigFromPropertiesFiles,Long Statement,The length of the statement "InputStream batchServicesListInputStream=this.getClass().getResourceAsStream("/META-INF/services/" + BATCH_INTEGRATOR_CONFIG_FILE);" is 131.,126
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.servicesmanager,ServicesManagerImpl,readConfigFromPropertiesFiles,Long Statement,The length of the statement "logger.warning("Found property named: " + keyStr + " with value: "+ serviceIntegratorProps.get(keyStr)+ " in "+ BATCH_INTEGRATOR_CONFIG_FILE+ " ` but did not find a corresponding service type "+ "in the internal table of service types.\n Ignoring this property then. Maybe this should have been set in batch-config.properties instead.");" is 337.,126
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.servicesmanager,ServicesManagerImpl,readConfigFromPropertiesFiles,Long Statement,The length of the statement "InputStream batchAdminConfigListInputStream=this.getClass().getResourceAsStream("/META-INF/services/" + BATCH_ADMIN_CONFIG_FILE);" is 129.,126
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.servicesmanager,ServicesManagerImpl,readConfigFromPropertiesFiles,Long Statement,The length of the statement "logger.warning("Found property named: " + keyStr + " with value: "+ adminProps.get(keyStr)+ " in "+ BATCH_ADMIN_CONFIG_FILE+ " ` but this is a batch runtime service configuration.\n"+ "Ignoring this property then` since this should have been set in batch-services.properties instead.");" is 286.,126
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.servicesmanager,ServicesManagerImpl,initServiceImplOverrides,Long Statement,The length of the statement "logger.config("Overriding serviceType: " + serviceType + "` replacing default impl classname: "+ defaultServiceImplClassName+ " with override impl class name: "+ value.trim());" is 176.,237
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.callback,JobEndCallbackManagerImpl,getCallbackOnTermination,Long Statement,The length of the statement "throw new IllegalStateException("Still didn't see a result for executionId: " + execID + ". Perhaps try increasing timeout. Or` something else may have gone wrong.");" is 166.,99
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.status,StepStatus,getPersistentUserData,Long Identifier,The length of the identifier persistentByteArrayInputStream is 30.,95
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.status,SplitExecutionStatus,couldMoreThanOneFlowHaveTerminatedJob,Long Identifier,The length of the field couldMoreThanOneFlowHaveTerminatedJob is 37.,31
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.status,SplitExecutionStatus,setCouldMoreThanOneFlowHaveTerminatedJob,Long Identifier,The length of the field couldMoreThanOneFlowHaveTerminatedJob is 37.,35
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.status,SplitExecutionStatus,toString,Long Identifier,The length of the field couldMoreThanOneFlowHaveTerminatedJob is 37.,47
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.status,ExecutionStatus,toString,Long Statement,The length of the statement "return "BatchStatusOnly?: " + batchStatusOnly + "` extendedBatchStatus = "+ extendedBatchStatus.name()+ "` exitStatus = "+ exitStatus+ "` restartOn = "+ restartOn;" is 163.,72
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.navigator,AbstractNavigatorImpl,getNextTransition,Complex Method,Cyclomatic complexity of the method is 12,84
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.navigator,AbstractNavigatorImpl,matchSpecifiedExitStatus,Long Statement,The length of the statement "logger.finer("matchSpecifiedExitStatus` matching current exitStatus " + currentStepExitStatus + " against pattern: "+ exitStatusPattern);" is 137.,182
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.navigator,AbstractNavigatorImpl,getNextExecutionElemFromAttribute,Long Statement,The length of the statement "logger.fine("From currentElem = " + currentElem + " ` return @next attribute execution element: "+ nextExecutionElement);" is 121.,222
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.navigator,AbstractNavigatorImpl,validateElementType,Complex Conditional,The conditional expression !((elem instanceof Decision) || (elem instanceof Flow) || (elem instanceof Split)|| (elem instanceof Step)) is complex.,250
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.navigator,AbstractNavigatorImpl,validateElementType,Long Statement,The length of the statement "throw new IllegalArgumentException("Unknown execution element found` elem = " + elem + "` found with type: "+ elem.getClass().getCanonicalName()+ " ` which is not an instance of Decision` Flow` Split` or Step.");" is 212.,250
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.util,PartitionsBuilderConfig,PartitionsBuilderConfig,Long Parameter List,The method has 5 parameters. ,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.util,BatchWorkUnit,run,Complex Method,Cyclomatic complexity of the method is 8,65
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.util,BatchWorkUnit,run,Long Statement,The length of the statement "logger.fine("Invoking executeJob on JobController; " + "JobInstance id=" + getJobExecutionImpl().getInstanceId() + "` executionId="+ getJobExecutionImpl().getExecutionId());" is 173.,65
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.util,BatchWorkUnit,run,Long Statement,The length of the statement "logger.fine("Done invoking executeJob on JobController; " + "JobInstance id=" + getJobExecutionImpl().getInstanceId() + "` executionId="+ getJobExecutionImpl().getExecutionId());" is 178.,65
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.util,BatchWorkUnit,run,Long Statement,The length of the statement "logger.fine("Exception when invoking executeJob on JobController; " + "JobInstance id=" + getJobExecutionImpl().getInstanceId() + "` executionId="+ getJobExecutionImpl().getExecutionId());" is 188.,65
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,CDIBatchArtifactFactoryImpl,load,Long Statement,The length of the statement "logger.exiting(CLASSNAME`methodName`"For batch artifact id = " + batchId + "` loaded artifact instance: "+ loadedArtifact+ " of type: "+ loadedArtifact.getClass().getCanonicalName());" is 183.,43
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,BoundedThreadPoolServiceImpl,init,Long Statement,The length of the statement "String maxThreadPoolSizeStr=batchConfig.getConfigProperties().getProperty(BOUNDED_THREADPOOL_MAX_POOL_SIZE`defaultMaxThreadPoolSize);" is 133.,44
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,BoundedThreadPoolServiceImpl,init,Long Statement,The length of the statement "logger.fine("Glassfish thread pool settings: (" + minThreadPoolSize + "`"+ maxThreadPoolSize+ "`"+ idleThreadTimeout+ "`"+ TimeUnit.SECONDS+ "`"+ maxQueueSize+ ")");" is 165.,44
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,init,Long Statement,The length of the statement "throw new BatchContainerServiceException("JNDI name is not defined` which was the last way to initialize a DataSource.");" is 121.,95
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,init,Long Statement,The length of the statement "logger.severe("Lookup failed for JNDI name: " + jndiName + ". One cause of this could be that the batch runtime is incorrectly configured to EE mode when it should be in SE mode.");" is 181.,95
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,getConnectionToDefaultSchema,Long Statement,The length of the statement "logException("FAILED GETTING DATABASE CONNECTION. FOR EMBEDDED DERBY CHECK FOR OTHER USER LOCKING THE CURRENT DATABASE (Try using a different database instance)."`e);" is 166.,341
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,insertCheckpointData,Magic Number,The method contains a magic number: 2,456
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateCheckpointData,Magic Number,The method contains a magic number: 2,507
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,cleanupConnection,Long Statement,The length of the statement "logger.logp(Level.FINEST`CLASSNAME`"cleanupConnection"`"Entering"`new Object[]{conn`rs == null ? "<null>" : rs`statement == null ? "<null>" : statement});" is 154.,561
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetJobInstanceCount,Long Statement,The length of the statement "statement=conn.prepareStatement("select count(jobinstanceid) as jobinstancecount from jobinstancedata where name = ? and apptag = ?");" is 134.,639
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetJobInstanceCount,Magic Number,The method contains a magic number: 2,639
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetJobInstanceIds,Long Statement,The length of the statement "statement=conn.prepareStatement("select jobinstanceid from jobinstancedata where name = ? and apptag = ? order by jobinstanceid desc");" is 135.,691
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetJobInstanceIds,Magic Number,The method contains a magic number: 2,691
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorQueryJobExecutionTimestamp,Long Statement,The length of the statement "statement=conn.prepareStatement("select createtime` endtime` updatetime` starttime from executioninstancedata where jobexecid = ?");" is 132.,795
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorQueryJobExecutionTimestamp,Magic Number,The method contains a magic number: 2,795
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorQueryJobExecutionTimestamp,Magic Number,The method contains a magic number: 3,795
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorQueryJobExecutionTimestamp,Magic Number,The method contains a magic number: 4,795
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,getMostRecentStepExecutionsForJobInstance,Long Statement,The length of the statement "statement=conn.prepareStatement("select A.* from stepexecutioninstancedata A inner join executioninstancedata B on A.jobexecid = B.jobexecid where B.jobinstanceid = ? order by A.stepexecid desc");" is 196.,966
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,getStepExecutionsForJobExecution,Long Statement,The length of the statement "logger.fine("BatchStatus: " + batchstatus + " | StepName: "+ stepname+ " | JobExecID: "+ jobexecid+ " | StepExecID: "+ stepexecid);" is 131.,1059
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateBatchStatusOnly,Magic Number,The method contains a magic number: 2,1236
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateBatchStatusOnly,Magic Number,The method contains a magic number: 3,1236
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalExecutionStatusesAndTimestamps,Long Statement,The length of the statement "statement=conn.prepareStatement("update executioninstancedata set batchstatus = ?` exitstatus = ?` endtime = ?` updatetime = ? where jobexecid = ?");" is 149.,1273
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalExecutionStatusesAndTimestamps,Magic Number,The method contains a magic number: 2,1273
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalExecutionStatusesAndTimestamps,Magic Number,The method contains a magic number: 3,1273
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalExecutionStatusesAndTimestamps,Magic Number,The method contains a magic number: 4,1273
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalExecutionStatusesAndTimestamps,Magic Number,The method contains a magic number: 5,1273
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,markJobStarted,Long Statement,The length of the statement "statement=conn.prepareStatement("update executioninstancedata set batchstatus = ?` starttime = ?` updatetime = ? where jobexecid = ?");" is 135.,1317
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,markJobStarted,Magic Number,The method contains a magic number: 2,1317
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,markJobStarted,Magic Number,The method contains a magic number: 3,1317
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,markJobStarted,Magic Number,The method contains a magic number: 4,1317
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetJobExecution,Long Statement,The length of the statement "statement=conn.prepareStatement("select A.jobexecid` A.createtime` A.starttime` A.endtime` A.updatetime` A.parameters` A.jobinstanceid` A.batchstatus` A.exitstatus` B.name from executioninstancedata A inner join jobinstancedata B on A.jobinstanceid = B.jobinstanceid where jobexecid = ?");" is 289.,1356
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetJobExecutions,Long Statement,The length of the statement "statement=conn.prepareStatement("select A.jobexecid` A.jobinstanceid` A.createtime` A.starttime` A.endtime` A.updatetime` A.parameters` A.batchstatus` A.exitstatus` B.name from executioninstancedata A inner join jobinstancedata B ON A.jobinstanceid = B.jobinstanceid where A.jobinstanceid = ?");" is 295.,1390
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetRunningExecutions,Long Statement,The length of the statement "statement=conn.prepareStatement("SELECT A.jobexecid FROM executioninstancedata A INNER JOIN jobinstancedata B ON A.jobinstanceid = B.jobinstanceid WHERE A.batchstatus IN (?`?`?) AND B.name = ?");" is 195.,1447
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetRunningExecutions,Magic Number,The method contains a magic number: 2,1447
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetRunningExecutions,Magic Number,The method contains a magic number: 3,1447
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,jobOperatorGetRunningExecutions,Magic Number,The method contains a magic number: 4,1447
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,purge,Long Statement,The length of the statement "String deleteJobExecutions="DELETE FROM executioninstancedata " + "WHERE jobexecid IN (" + "SELECT B.jobexecid FROM jobinstancedata A INNER JOIN executioninstancedata B "+ "ON A.jobinstanceid = B.jobinstanceid "+ "WHERE A.apptag = ?)";" is 235.,1499
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,purge,Long Statement,The length of the statement "String deleteStepExecutions="DELETE FROM stepexecutioninstancedata " + "WHERE stepexecid IN (" + "SELECT C.stepexecid FROM jobinstancedata A INNER JOIN executioninstancedata B "+ "ON A.jobinstanceid = B.jobinstanceid INNER JOIN stepexecutioninstancedata C "+ "ON B.jobexecid = C.jobexecid "+ "WHERE A.apptag = ?)";" is 314.,1499
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,getJobStatusFromExecution,Long Statement,The length of the statement "statement=conn.prepareStatement("select A.obj from jobstatus A inner join " + "executioninstancedata B on A.id = B.jobinstanceid where B.jobexecid = ?");" is 153.,1542
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createSubJobInstance,Long Statement,The length of the statement "statement=conn.prepareStatement("INSERT INTO jobinstancedata (name` apptag) VALUES(?` ?)"`new String[]{"JOBINSTANCEID"});" is 121.,1641
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createSubJobInstance,Magic Number,The method contains a magic number: 2,1641
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createJobInstance,Long Statement,The length of the statement "statement=conn.prepareStatement("INSERT INTO jobinstancedata (name` apptag) VALUES(?` ?)"`new String[]{"JOBINSTANCEID"});" is 121.,1671
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createJobInstance,Magic Number,The method contains a magic number: 2,1671
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createRuntimeJobExecutionEntry,Long Statement,The length of the statement "statement=conn.prepareStatement("INSERT INTO executioninstancedata (jobinstanceid` createtime` updatetime` batchstatus` parameters) VALUES(?` ?` ?` ?` ?)"`new String[]{"JOBEXECID"});" is 182.,1712
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createRuntimeJobExecutionEntry,Magic Number,The method contains a magic number: 2,1712
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createRuntimeJobExecutionEntry,Magic Number,The method contains a magic number: 3,1712
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createRuntimeJobExecutionEntry,Magic Number,The method contains a magic number: 4,1712
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createRuntimeJobExecutionEntry,Magic Number,The method contains a magic number: 5,1712
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Complex Method,Cyclomatic complexity of the method is 11,1754
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Long Statement,The length of the statement "String batchStatus=stepContext.getBatchStatus() == null ? BatchStatus.STARTING.name() : stepContext.getBatchStatus().name();" is 124.,1754
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Long Statement,The length of the statement "stepExecution=createStepExecution(rootJobExecId`batchStatus`exitStatus`stepName`readCount`writeCount`commitCount`rollbackCount`readSkipCount`processSkipCount`filterCount`writeSkipCount`startTime`endTime`persistentData);" is 219.,1754
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Long Parameter List,The method has 15 parameters. ,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Long Statement,The length of the statement "logger.entering(CLASSNAME`"createStepExecution"`new Object[]{rootJobExecId`batchStatus`exitStatus == null ? "<null>" : exitStatus`stepName`readCount`writeCount`commitCount`rollbackCount`readSkipCount`processSkipCount`filterCount`writeSkipCount`startTime == null ? "<null>" : startTime`endTime == null ? "<null>" : endTime`persistentData == null ? "<null>" : persistentData});" is 375.,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Long Statement,The length of the statement "String query="INSERT INTO stepexecutioninstancedata (jobexecid` batchstatus` exitstatus` stepname` readcount`" + "writecount` commitcount` rollbackcount` readskipcount` processskipcount` filtercount` writeskipcount` starttime`" + "endtime` persistentdata) VALUES(?` ?` ?` ?` ?` ?` ?` ?` ?` ?` ?` ?` ?` ?` ?)";" is 309.,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 2,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 3,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 4,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 5,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 6,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 7,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 8,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 9,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 10,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 11,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 12,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 13,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 14,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepExecution,Magic Number,The method contains a magic number: 15,1804
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecution,Complex Method,Cyclomatic complexity of the method is 10,1863
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecution,Long Statement,The length of the statement "updateStepExecutionWithMetrics(stepContext`readCount`writeCount`commitCount`rollbackCount`readSkipCount`processSkipCount`filterCount`writeSkipCount);" is 149.,1863
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalPartitionAggregateStepExecution,Long Statement,The length of the statement "statement=conn.prepareStatement("select SUM(STEPEX.readcount) readcount` SUM(STEPEX.writecount) writecount` SUM(STEPEX.commitcount) commitcount` SUM(STEPEX.rollbackcount) rollbackcount`" + " SUM(STEPEX.readskipcount) readskipcount` SUM(STEPEX.processskipcount) processskipcount` SUM(STEPEX.filtercount) filtercount` SUM(STEPEX.writeSkipCount) writeSkipCount" + " from stepexecutioninstancedata STEPEX inner join executioninstancedata JOBEX"+ " on STEPEX.jobexecid = JOBEX.jobexecid"+ " where JOBEX.jobinstanceid IN"+ " (select jobinstanceid from JOBINSTANCEDATA where name like ? and jobinstanceid >= ?)");" is 606.,1974
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalPartitionAggregateStepExecution,Long Statement,The length of the statement "updateStepExecutionWithMetrics(stepContext`readCount`writeCount`commitCount`rollbackCount`readSkipCount`processSkipCount`filterCount`writeSkipCount);" is 149.,1974
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateWithFinalPartitionAggregateStepExecution,Magic Number,The method contains a magic number: 2,1974
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Long Parameter List,The method has 9 parameters. ,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Long Statement,The length of the statement "String batchStatus=stepContext.getBatchStatus() == null ? BatchStatus.STARTING.name() : stepContext.getBatchStatus().name();" is 124.,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Long Statement,The length of the statement "logger.fine("batchStatus: " + batchStatus + " | stepName: "+ stepName+ " | stepExecID: "+ stepContext.getStepExecutionId());" is 124.,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Long Statement,The length of the statement "logger.log(Level.FINER`"About to update StepExecution with: "`new Object[]{stepExecutionId`batchStatus`exitStatus == null ? "<null>" : exitStatus`stepName`readCount`writeCount`commitCount`rollbackCount`readSkipCount`processSkipCount`filterCount`writeSkipCount`startTime == null ? "<null>" : startTime`endTime == null ? "<null>" : endTime`persistentData == null ? "<null>" : persistentData});" is 391.,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Long Statement,The length of the statement "String query="UPDATE stepexecutioninstancedata SET batchstatus = ?` exitstatus = ?` stepname = ?` readcount = ?`" + "writecount = ?` commitcount = ?` rollbackcount = ?` readskipcount = ?` processskipcount = ?` filtercount = ?` writeskipcount = ?`" + " starttime = ?` endtime = ?` persistentdata = ? WHERE stepexecid = ?";" is 321.,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 2,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 3,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 4,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 5,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 6,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 7,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 8,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 9,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 10,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 11,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 12,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 13,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 14,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepExecutionWithMetrics,Magic Number,The method contains a magic number: 15,2027
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createJobStatus,Magic Number,The method contains a magic number: 2,2087
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateJobStatus,Magic Number,The method contains a magic number: 2,2148
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,createStepStatus,Magic Number,The method contains a magic number: 2,2175
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,getStepStatus,Long Statement,The length of the statement "String query="SELECT obj FROM stepstatus WHERE id IN (" + "SELECT B.stepexecid FROM executioninstancedata A INNER JOIN stepexecutioninstancedata B ON A.jobexecid = B.jobexecid " + "WHERE A.jobinstanceid = ? and B.stepname = ?)";" is 228.,2201
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,getStepStatus,Magic Number,The method contains a magic number: 2,2201
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,updateStepStatus,Magic Number,The method contains a magic number: 2,2238
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,JDBCPersistenceManagerImpl,getTagName,Long Statement,The length of the statement "String query="SELECT A.apptag FROM jobinstancedata A INNER JOIN executioninstancedata B ON A.jobinstanceid = B.jobinstanceid" + " WHERE B.jobexecid = ?";" is 153.,2266
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,DelegatingJobXMLLoaderServiceImpl,loadJSL,Complex Method,Cyclomatic complexity of the method is 9,42
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,DelegatingJobXMLLoaderServiceImpl,loadJobFromBatchJobs,Long Statement,The length of the statement "throw new BatchContainerRuntimeException(new FileNotFoundException("Cannot find an XML file under " + PREFIX + " with the following name "+ id+ ".xml"));" is 153.,90
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,DelegatingJobXMLLoaderServiceImpl,readJobXML,Magic Number,The method contains a magic number: 4096,108
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,DelegatingBatchArtifactFactoryImpl,load,Complex Method,Cyclomatic complexity of the method is 12,53
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,DelegatingBatchArtifactFactoryImpl,load,Long Statement,The length of the statement "logger.exiting(CLASSNAME`methodName`"For batch artifact id = " + batchId + "` loaded artifact instance: "+ loadedArtifact+ " of type: "+ loadedArtifact.getClass().getCanonicalName());" is 183.,53
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,DelegatingBatchArtifactFactoryImpl,populateArtifactMapFromStream,Complex Method,Cyclomatic complexity of the method is 8,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.services.impl,DelegatingBatchArtifactFactoryImpl,populateArtifactMapFromStream,Long Statement,The length of the statement "throw new IllegalStateException("Expecting document with root element QName: " + BATCH_ROOT_ELEM + "` but found root element with QName: "+ rootQName);" is 151.,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Complex Conditional,The conditional expression flowBatchStatus.equals(ExtendedBatchStatus.JSL_END) || flowBatchStatus.equals(ExtendedBatchStatus.JSL_STOP) || flowBatchStatus.equals(ExtendedBatchStatus.JSL_FAIL)|| flowBatchStatus.equals(ExtendedBatchStatus.EXCEPTION_THROWN) is complex.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Complex Method,Cyclomatic complexity of the method is 8,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "logger.fine("Aggregating possible terminating status for flow ending with status: " + flowStatus + "` restartOn = "+ restartOn);" is 128.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "if (flowBatchStatus.equals(ExtendedBatchStatus.JSL_END) || flowBatchStatus.equals(ExtendedBatchStatus.JSL_STOP) || flowBatchStatus.equals(ExtendedBatchStatus.JSL_FAIL)|| flowBatchStatus.equals(ExtendedBatchStatus.EXCEPTION_THROWN)) {" is 233.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "logger.fine("A flow detected as ended because of a terminating condition: " + flowBatchStatus.name() + ". First flow detected in terminating state. Setting exitStatus if non-null.");" is 182.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "logger.warning("Current flow's batch and exit status will take precedence over and override earlier one from <end> transition element. " + "Overriding` setting exit status if non-null and preparing to end job.");" is 212.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "logger.warning("Current flow's batch and exit status will take precedence over and override earlier one from <stop> transition element. " + "Overriding` setting exit status if non-null and preparing to end job.");" is 213.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "logger.fine("End does not override stop. The flow with <end> will effectively be ignored with respect to terminating the job.");" is 128.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "else if (aggregateStatus.equals(ExtendedBatchStatus.JSL_FAIL) || aggregateStatus.equals(ExtendedBatchStatus.EXCEPTION_THROWN)) {" is 128.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "if (flowBatchStatus.equals(ExtendedBatchStatus.JSL_FAIL) || flowBatchStatus.equals(ExtendedBatchStatus.EXCEPTION_THROWN)) {" is 123.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "logger.warning("Current flow's batch and exit status will take precedence over and override earlier one from <fail> transition element or exception thrown. " + "Overriding` setting exit status if non-null and preparing to end job.");" is 233.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SplitControllerImpl,aggregateTerminatingStatusFromSingleFlow,Long Statement,The length of the statement "logger.fine("End and stop do not override exception thrown or <fail>. The flow with <end> or <stop> will effectively be ignored with respect to terminating the job.");" is 167.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,generatePartitionPlan,Complex Method,Cyclomatic complexity of the method is 14,129
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,generatePartitionPlan,Long Statement,The length of the statement "final List<Property> propertyList=partitionMapper.getProperties() == null ? null : partitionMapper.getProperties().getPropertyList();" is 133.,129
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,generatePartitionPlan,Long Statement,The length of the statement "throw new IllegalArgumentException("Could not parse partition instances value in stepId: " + step.getId() + "` with instances="+ partitionsAttr`e);" is 147.,129
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,generatePartitionPlan,Long Statement,The length of the statement "throw new IllegalArgumentException("Partition instances value must be 1 or greater in stepId: " + step.getId() + "` with instances="+ partitionsAttr);" is 150.,129
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,generatePartitionPlan,Long Statement,The length of the statement "throw new IllegalArgumentException("Could not parse partition threads value in stepId: " + step.getId() + "` with threads="+ threadsAttr`e);" is 140.,129
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,generatePartitionPlan,Long Statement,The length of the statement "throw new IllegalArgumentException("Threads value must be 0 or greater in stepId: " + step.getId() + "` with threads="+ threadsAttr);" is 133.,129
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,generatePartitionPlan,Long Statement,The length of the statement "throw new BatchContainerRuntimeException("There are only " + numPartitions + " partition instances` but there are "+ jslProperties.size()+ " partition properties lists defined. Remember that partition indexing is 0 based like Java arrays."`e);" is 243.,129
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,validateNumberOfPartitions,Long Statement,The length of the statement "String msg="On a normal restart` the plan on restart specified: " + currentPlanSize + " # of partitions` but the previous "+ "executions' plan specified a different number: "+ previousPlanSize+ " # of partitions. Failing job.";" is 227.,281
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,invokeCoreStep,Long Statement,The length of the statement "logger.fine("Number of partitions in step: " + partitions + " in step "+ step.getId()+ "; Subjob properties defined by partition mapper: "+ partitionProperties);" is 161.,300
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,buildSubJobBatchWorkUnits,Long Statement,The length of the statement "PartitionsBuilderConfig config=new PartitionsBuilderConfig(subJobs`partitionProperties`analyzerStatusQueue`finishedWorkQueue`jobExecutionImpl.getExecutionId());" is 160.,345
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Complex Method,Cyclomatic complexity of the method is 15,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Long Identifier,The length of the identifier exceptionThrownAnalyzingCollectorData is 37.,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Long Identifier,The length of the identifier exceptionThrownAnalyzingStatus is 30.,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Long Method,The method has 101 lines of code.,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Long Statement,The length of the statement "logger.fine("Calculated that " + numPreviouslyCompleted + " partitions are already complete out of total # = "+ partitions+ "` with # remaining ="+ numTotalForThisExecution);" is 174.,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Long Statement,The length of the statement "logger.warning("Caught exception calling analyzeStatus()` catching and continuing. Will even continue starting new partitions if there are more to run.");" is 154.,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Long Statement,The length of the statement "logger.fine("Analyze status called for completed partition: batchStatus= " + dataWrapper.getBatchstatus() + "` exitStatus = "+ dataWrapper.getExitStatus());" is 156.,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,executeAndWaitForCompletion,Long Statement,The length of the statement "logger.fine("Ready to submit another (if there is another left to submit); numCurrentCompleted = " + numCurrentCompleted);" is 122.,374
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,PartitionedStepControllerImpl,setupStepArtifacts,Long Statement,The length of the statement "final List<Property> propList=partitionReducer.getProperties() == null ? null : partitionReducer.getProperties().getPropertyList();" is 131.,532
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SingleThreadedStepControllerImpl,SingleThreadedStepControllerImpl,Long Parameter List,The method has 5 parameters. ,57
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SingleThreadedStepControllerImpl,sendStatusFromPartitionToAnalyzerIfPresent,Long Statement,The length of the statement "logger.fine("Send status from partition for analyzeStatus with batchStatus = " + stepStatus.getBatchStatus() + "` exitStatus = "+ stepStatus.getExitStatus());" is 158.,134
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkHelper,getItemCount,Magic Number,The method contains a magic number: 10,23
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkHelper,isCustomCheckpointPolicy,Long Statement,The length of the statement "throw new IllegalArgumentException("The only supported attributed values for 'checkpoint-policy' are 'item' and 'custom'.");" is 124.,47
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionElementControllerFactory,getStepController,Complex Method,Cyclomatic complexity of the method is 13,40
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionElementControllerFactory,getStepController,Long Parameter List,The method has 5 parameters. ,40
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,RetryHandler,initialize,Complex Method,Cyclomatic complexity of the method is 20,113
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,RetryHandler,initialize,Long Statement,The length of the statement "logger.logp(Level.FINE`className`mName`"added include exception " + includeEx + "; added exclude exception "+ excludeEx);" is 121.,113
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,RetryHandler,initialize,Long Statement,The length of the statement "logger.logp(Level.FINE`className`mName`"added include no rollback exception " + includeExNoRB + "; added exclude no rollback exception "+ excludeExNoRB);" is 153.,113
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,RetryHandler,handleExceptionRead,Long Statement,The length of the statement "if (logger.isLoggable(Level.FINER)) logger.logp(Level.FINE`className`mName`e.getClass().getName() + "; " + this.toString());" is 124.,218
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,RetryHandler,handleExceptionProcess,Long Statement,The length of the statement "if (logger.isLoggable(Level.FINER)) logger.logp(Level.FINE`className`mName`e.getClass().getName() + "; " + this.toString());" is 124.,256
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,RetryHandler,handleExceptionWrite,Long Statement,The length of the statement "if (logger.isLoggable(Level.FINER)) logger.logp(Level.FINE`className`mName`e.getClass().getName() + "; " + this.toString());" is 124.,289
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BatchKernelImpl,jobExecutionDone,Long Statement,The length of the statement "logger.fine("JobExecution done with batchStatus: " + jobExecution.getBatchStatus() + " ` getting ready to invoke callbacks for JobExecution: "+ jobExecution.getExecutionId());" is 175.,199
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BatchKernelImpl,buildOnRestartParallelPartitions,Long Statement,The length of the statement "String errorMsg="Caught NoSuchJobExecutionException but this is an internal JobExecution so this shouldn't have happened: execId =" + execId;" is 141.,304
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BatchKernelImpl,buildOnRestartFlowInSplitWorkUnit,Long Statement,The length of the statement "String errorMsg="Caught NoSuchJobExecutionException but this is an internal JobExecution so this shouldn't have happened: execId =" + execId;" is 141.,405
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,ChunkStepControllerImpl,Long Parameter List,The method has 5 parameters. ,118
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,readAndProcess,Complex Method,Cyclomatic complexity of the method is 10,237
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,readItem,Complex Method,Cyclomatic complexity of the method is 12,303
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,processItem,Complex Method,Cyclomatic complexity of the method is 13,387
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,writeChunk,Complex Method,Cyclomatic complexity of the method is 12,465
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,invokeChunk,Complex Method,Cyclomatic complexity of the method is 9,588
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,updateNormalMetrics,Complex Conditional,The conditional expression readCount < 0 || filterCount < 0 || writeCount < 0 is complex.,692
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,updateNormalMetrics,Long Statement,The length of the statement "throw new IllegalStateException("Somehow one of the metrics was zero. Read count: " + readCount + "` Filter count: "+ filterCount+ "` Write count: "+ writeCount);" is 162.,692
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeCheckpointManager,Long Identifier,The length of the field stepPropertyTranTimeoutSeconds is 30.,766
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeCheckpointManager,Long Statement,The length of the statement "logger.fine("Initialize checkpoint manager with item-count=" + checkpointAtThisItemCount + "` and time limit = "+ timeLimitSeconds+ " seconds.");" is 145.,766
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeCheckpointManager,Long Statement,The length of the statement "throw new IllegalArgumentException("Configured checkpoint-policy of 'custom' but without a corresponding <checkpoint-algorithm> element.");" is 139.,766
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeCheckpointManager,Long Statement,The length of the statement "List<Property> propList=(chunk.getCheckpointAlgorithm().getProperties() == null) ? null : chunk.getCheckpointAlgorithm().getProperties().getPropertyList();" is 155.,766
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeCheckpointManager,Long Statement,The length of the statement "checkpointAlgorithm=ProxyFactory.createCheckpointAlgorithmProxy(chunk.getCheckpointAlgorithm().getRef()`injectionRef`stepContext);" is 130.,766
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeCheckpointManager,Long Statement,The length of the statement "throw new BatchContainerServiceException("Cannot create the CheckpointAlgorithm for policy [" + chunk.getCheckpointPolicy() + "]"`e);" is 133.,766
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeCheckpointManager,Long Statement,The length of the statement "checkpointManager=new CheckpointManager(readerProxy`writerProxy`checkpointAlgorithm`jobExecutionImpl.getExecutionId()`jobExecutionImpl.getJobInstance().getInstanceId()`step.getId());" is 182.,766
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeChunkArtifacts,Complex Method,Cyclomatic complexity of the method is 8,820
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeChunkArtifacts,Long Statement,The length of the statement "List<Property> itemProcessorProps=itemProcessor.getProperties() == null ? null : itemProcessor.getProperties().getPropertyList();" is 129.,820
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeChunkArtifacts,Long Statement,The length of the statement "InjectionReferences injectionRef=new InjectionReferences(jobExecutionImpl.getJobContext()`stepContext`itemProcessorProps);" is 122.,820
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initializeChunkArtifacts,Long Statement,The length of the statement "this.retryProcessListeners=jobExecutionImpl.getListenerFactory().getRetryProcessListeners(step`injectionRef`stepContext);" is 121.,820
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,setNextChunkTransactionTimeout,Long Identifier,The length of the field stepPropertyTranTimeoutSeconds is 30.,1064
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ChunkStepControllerImpl,initStepTransactionTimeout,Magic Number,The method contains a magic number: 10,1080
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,BaseStepControllerImpl,Long Parameter List,The method has 5 parameters. ,101
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,execute,Long Statement,The length of the statement "rethrowWithSevere("ERROR. PERSISTING BATCH STATUS FAILED. STEP EXECUTION STATUS TABLES MIGHT HAVE CONSISTENCY ISSUES" + "AND/OR UNEXPECTED ENTRIES."`t);" is 152.,120
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,execute,Long Statement,The length of the statement "logger.finer("Returning step batchStatus: " + stepStatus.getBatchStatus() + "` exitStatus: "+ stepStatus.getExitStatus());" is 122.,120
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,shouldStepBeExecutedOnRestart,Long Statement,The length of the statement "logger.fine("Step: " + step.getId() + " already has batch status of COMPLETED` so won't be run again since it does not allow start if complete.");" is 146.,328
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,shouldStepBeExecutedOnRestart,Long Statement,The length of the statement "logger.fine("Step: " + step.getId() + " already has batch status of COMPLETED` and allow-start-if-complete is set to 'true'");" is 126.,328
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,shouldStepBeExecutedOnRestart,Long Statement,The length of the statement "throw new IllegalArgumentException("Could not parse start limit value. Received NumberFormatException for start-limit value: " + startLimitString + " for stepId: "+ step.getId()+ "` with start-limit="+ step.getStartLimit());" is 224.,328
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,shouldStepBeExecutedOnRestart,Long Statement,The length of the statement "throw new IllegalStateException("For stepId: " + step.getId() + "` tried to start step for the "+ newStepStartCount+ " time` but startLimit = "+ startLimit);" is 157.,328
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BaseStepControllerImpl,shouldStepBeExecutedOnRestart,Long Statement,The length of the statement "logger.fine("Starting (possibly restarting) step: " + step.getId() + "` since newStepStartCount = "+ newStepStartCount+ " and startLimit="+ startLimit);" is 152.,328
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,endOfJob,Long Statement,The length of the statement "logger.fine("Job complete for job id=" + jobExecution.getJobInstance().getJobName() + "` executionId="+ jobExecution.getExecutionId()+ "` batchStatus="+ jobContext.getBatchStatus()+ "` exitStatus="+ jobContext.getExitStatus());" is 227.,174
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,persistJobBatchAndExitStatus,Complex Conditional,The conditional expression batchStatus.equals(BatchStatus.COMPLETED) || batchStatus.equals(BatchStatus.STOPPED) || batchStatus.equals(BatchStatus.FAILED) is complex.,204
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,persistJobBatchAndExitStatus,Long Statement,The length of the statement "jobStatusService.updateJobExecutionStatus(jobExecution.getInstanceId()`jobContext.getBatchStatus()`jobContext.getExitStatus());" is 127.,204
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,persistJobBatchAndExitStatus,Long Statement,The length of the statement "if (batchStatus.equals(BatchStatus.COMPLETED) || batchStatus.equals(BatchStatus.STOPPED) || batchStatus.equals(BatchStatus.FAILED)) {" is 133.,204
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,persistJobBatchAndExitStatus,Long Statement,The length of the statement "persistenceService.updateWithFinalExecutionStatusesAndTimestamps(jobExecution.getExecutionId()`batchStatus`jobContext.getExitStatus()`timestamp);" is 145.,204
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,persistJobBatchAndExitStatus,Long Statement,The length of the statement "throw new IllegalStateException("Not expected to encounter batchStatus of " + batchStatus + " at this point. Aborting.");" is 121.,204
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,stop,Long Statement,The length of the statement "if (jobContext.getBatchStatus().equals(BatchStatus.STARTED) || jobContext.getBatchStatus().equals(BatchStatus.STARTING)) {" is 122.,281
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,jobListenersBeforeJob,Long Statement,The length of the statement "logger.fine("Invoking beforeJob() on jobListener: " + listenerProxy.getDelegate() + " of type: "+ listenerProxy.getDelegate().getClass());" is 138.,299
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,JobThreadRootControllerImpl,jobListenersAfterJob,Long Statement,The length of the statement "logger.fine(" Invoking afterJob() on jobListener: " + listenerProxy.getDelegate() + " of type: "+ listenerProxy.getDelegate().getClass());" is 138.,310
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,doExecutionLoop,Complex Method,Cyclomatic complexity of the method is 11,84
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,doExecutionLoop,Long Identifier,The length of the field currentStoppableElementController is 33.,84
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,doExecutionLoop,Long Statement,The length of the statement "String errorMsg="Sub-execution returned its own BatchStatus of FAILED. Deal with this by throwing exception to the next layer.";" is 128.,84
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,doExecutionLoop,Long Statement,The length of the statement "logger.fine(methodName + "No next execution element` and no transition element found either. Looks like we're done and ready for COMPLETED state.");" is 148.,84
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,getNextElementController,Long Statement,The length of the statement "elementController=ExecutionElementControllerFactory.getStepController(jobExecution`step`stepContext`rootJobExecutionId`analyzerQueue);" is 134.,190
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,handleTerminatingTransitionElement,Complex Method,Cyclomatic complexity of the method is 8,214
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,handleTerminatingTransitionElement,Long Statement,The length of the statement "logger.fine("Next transition element is a <stop> : " + transitionElement + " with restartOn="+ restartOn+ " ` and JSL exit status = "+ exitStatusFromJSL);" is 154.,214
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,handleTerminatingTransitionElement,Long Statement,The length of the statement "logger.fine("Next transition element is an <end> : " + transitionElement + " with JSL exit status = "+ exitStatusFromJSL);" is 122.,214
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,handleTerminatingTransitionElement,Long Statement,The length of the statement "logger.fine("Next transition element is a <fail> : " + transitionElement + " with JSL exit status = "+ exitStatusFromJSL);" is 122.,214
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,ExecutionTransitioner,getCurrentStoppableElementController,Long Identifier,The length of the field currentStoppableElementController is 33.,266
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BatchletStepControllerImpl,BatchletStepControllerImpl,Long Parameter List,The method has 5 parameters. ,47
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,BatchletStepControllerImpl,stop,Long Statement,The length of the statement "if (BatchStatus.STARTING.equals(stepContext.getBatchStatus()) || BatchStatus.STARTED.equals(stepContext.getBatchStatus())) {" is 124.,115
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SkipHandler,initialize,Complex Method,Cyclomatic complexity of the method is 14,97
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SkipHandler,initialize,Long Statement,The length of the statement "if (logger.isLoggable(Level.FINE)) logger.logp(Level.FINE`className`mName`"added include exception " + includeEx + "; added exclude exception "+ excludeEx);" is 156.,97
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SkipHandler,handleExceptionRead,Long Statement,The length of the statement "if (logger.isLoggable(Level.FINER)) logger.logp(Level.FINE`className`mName`e.getClass().getName() + "; " + this.toString());" is 124.,172
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SkipHandler,handleExceptionWithRecordProcess,Long Statement,The length of the statement "if (logger.isLoggable(Level.FINER)) logger.logp(Level.FINE`className`mName`e.getClass().getName() + "; " + this.toString());" is 124.,208
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.impl,SkipHandler,handleExceptionWithRecordListWrite,Long Statement,The length of the statement "if (logger.isLoggable(Level.FINER)) logger.logp(Level.FINE`className`mName`e.getClass().getName() + "; " + this.toString());" is 124.,237
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobExecutionHelper,startJob,Long Statement,The length of the statement "RuntimeJobExecution executionHelper=_persistenceManagementService.createJobExecution(jobInstance`jobParameters`jobContext.getBatchStatus());" is 140.,111
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobExecutionHelper,startFlowInSplit,Long Statement,The length of the statement "RuntimeFlowInSplitExecution executionHelper=_persistenceManagementService.createFlowInSplitExecution(jobInstance`jobContext.getBatchStatus());" is 142.,135
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobExecutionHelper,startPartition,Long Statement,The length of the statement "RuntimeJobExecution executionHelper=_persistenceManagementService.createJobExecution(jobInstance`jobParameters`jobContext.getBatchStatus());" is 140.,155
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobExecutionHelper,restartFlowInSplit,Long Statement,The length of the statement "RuntimeFlowInSplitExecution executionHelper=_persistenceManagementService.createFlowInSplitExecution(jobInstance`jobContext.getBatchStatus());" is 142.,213
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobExecutionHelper,restartExecution,Long Parameter List,The method has 5 parameters. ,246
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobExecutionHelper,restartExecution,Long Statement,The length of the statement "logger.fine("On restartJob with jobInstance Id = " + jobInstanceId + " ` found JobStatus: "+ jobStatus+ "` batchStatus = "+ jobStatus.getBatchStatus().name());" is 159.,246
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobExecutionHelper,restartExecution,Long Statement,The length of the statement "executionHelper=_persistenceManagementService.createJobExecution(jobInstance`restartJobParameters`jobContext.getBatchStatus());" is 127.,246
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobInstanceImpl,toString,Magic Number,The method contains a magic number: 300,64
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobInstanceImpl,toString,Magic Number,The method contains a magic number: 300,64
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,JobOperatorJobExecution,getLastUpdatedTime,Long Statement,The length of the statement "this.updateTime=_persistenceManagementService.jobOperatorQueryJobExecutionTimestamp(executionID`TimestampType.LAST_UPDATED);" is 124.,152
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,StepExecutionImpl,getMetrics,Magic Number,The method contains a magic number: 8,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,StepExecutionImpl,getMetrics,Magic Number,The method contains a magic number: 2,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,StepExecutionImpl,getMetrics,Magic Number,The method contains a magic number: 3,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,StepExecutionImpl,getMetrics,Magic Number,The method contains a magic number: 4,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,StepExecutionImpl,getMetrics,Magic Number,The method contains a magic number: 5,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,StepExecutionImpl,getMetrics,Magic Number,The method contains a magic number: 6,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jobinstance,StepExecutionImpl,getMetrics,Magic Number,The method contains a magic number: 7,140
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.transaction.impl,DefaultNonTransactionalManager,commit,Magic Number,The method contains a magic number: 3,51
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.transaction.impl,DefaultNonTransactionalManager,rollback,Magic Number,The method contains a magic number: 4,62
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.transaction.impl,DefaultNonTransactionalManager,setRollbackOnly,Magic Number,The method contains a magic number: 9,83
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,TransitionImpl,setNoTransitionElementMatchAfterException,Long Identifier,The length of the field noTransitionElementMatchedAfterException is 40.,65
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,TransitionImpl,noTransitionElementMatchedAfterException,Long Identifier,The length of the field noTransitionElementMatchedAfterException is 40.,70
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,UnmarshalledJSLComparator,equals,Long Statement,The length of the statement "stillEqual=stillEqual && equals(job1.getListeners()`job2.getListeners()) && equals(job1.getProperties()`job2.getProperties())&& true;" is 133.,29
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,UnmarshalledJSLComparator,equals,Long Statement,The length of the statement "stillEqual=stillEqual && nullSafeEquals(listener1.getRef()`listener2.getRef()) && equals(listener1.getProperties()`listener2.getProperties());" is 142.,103
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,UnmarshalledJSLComparator,equals,Long Statement,The length of the statement "return equals(step1.getChunk()`step2.getChunk()) && equals(step1.getListeners()`step2.getListeners()) && equals(step1.getProperties()`step2.getProperties())&& nullSafeEquals(step1.getAllowStartIfComplete()`step2.getAllowStartIfComplete())&& nullSafeEquals(step1.getNextFromAttribute()`step2.getNextFromAttribute());" is 315.,114
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,UnmarshalledJSLComparator,equals,Long Statement,The length of the statement "return nullSafeEquals(chunk1.getCheckpointPolicy()`chunk2.getCheckpointPolicy()) && nullSafeEquals(chunk1.getItemCount()`chunk2.getItemCount()) && nullSafeEquals(chunk1.getTimeLimit()`chunk2.getTimeLimit())&& nullSafeEquals(chunk1.getProcessor()`chunk2.getProcessor())&& nullSafeEquals(chunk1.getReader()`chunk2.getReader())&& nullSafeEquals(chunk1.getRetryLimit()`chunk2.getRetryLimit())&& nullSafeEquals(chunk1.getSkipLimit()`chunk2.getSkipLimit())&& nullSafeEquals(chunk1.getWriter()`chunk2.getWriter());" is 507.,126
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,matchWithoutBackslashEscape,Complex Conditional,The conditional expression (pattern == null) || (pattern.length() == 0) || (toMatch == null)|| (toMatch.length() == 0) is complex.,30
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,matchWithoutBackslashEscape,Long Statement,The length of the statement "logger.entering(GlobPatternMatcherImpl.class.getName()`"match"`"Trying to match string: " + toMatch + " against un-normalized pattern: "+ pattern);" is 147.,30
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,matchWithoutBackslashEscape,Long Statement,The length of the statement "throw new IllegalArgumentException("Pattern = " + pattern + "and string to match = "+ toMatch+ "` but both pattern and to-match String are required to be non-null Strings with length >=1 ");" is 190.,30
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Complex Method,Cyclomatic complexity of the method is 37,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Long Method,The method has 133 lines of code.,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Long Statement,The length of the statement "logger.finest("Returning false` not enough chars in remaining string " + remainingToMatch + " to match against end of pattern: "+ endPattern);" is 142.,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Long Statement,The length of the statement "logger.finest("Returning false` remaining string: " + remainingToMatch + " is shorter than non-asterisk middle pattern: "+ middlePattern);" is 138.,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Long Statement,The length of the statement "logger.finest("Returning true` matched candidate: " + matchCandidate + " against non-asterisk middle pattern: "+ middlePattern);" is 128.,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Long Statement,The length of the statement "logger.finest("Returning false` no match found within string: " + remainingToMatch + " against non-asterisk middle pattern: "+ middlePattern);" is 142.,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Long Statement,The length of the statement "logger.finest("Begin looping looking to match pattern between first and second asterisk; pattern = " + patternBetweenAsterisk1and2);" is 132.,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,recursiveMatch,Long Statement,The length of the statement "logger.finest("Returning false` no matches of pattern: " + patternBetweenAsterisk1and2 + " in remainingToMatch = "+ remainingToMatch);" is 134.,69
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,matchNoAsterisk,Complex Method,Cyclomatic complexity of the method is 11,243
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,matchNoAsterisk,Long Statement,The length of the statement "logger.severe("FAIL: in matchNoAsterisk: Shouldn't have encountered a '*' in matchNoAsterisk` toMatch = " + toMatch + "` subPattern = "+ subpattern);" is 149.,243
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,matchNoAsterisk,Long Statement,The length of the statement "throw new IllegalStateException("Shouldn't have encountered a '*' in matchNoAsterisk` toMatch = " + toMatch + "` subPattern = "+ subpattern);" is 141.,243
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.jsl.impl,GlobPatternMatcherImpl,matchNoAsterisk,Long Statement,The length of the statement "logger.finest("FAIL: in matchNoAsterisk: mismatch at index: " + i + ". The char subpattern.charAt(i)= "+ subpattern.charAt(i)+ " != toMatch.charAt(i) = "+ toMatch.charAt(i));" is 174.,243
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.api.impl,JobOperatorImplDelegate,startInternal,Magic Number,The method contains a magic number: 200,97
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.api.impl,JobOperatorImplDelegate,startInternal,Magic Number,The method contains a magic number: 200,97
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.api.impl,JobOperatorImplDelegate,getRunningExecutions,Long Statement,The length of the statement "logger.finer("Found executionId: " + id + " with a BatchStatus indicating running` but kernel doesn't currently have an entry for this execution in the kernel's in-memory map.");" is 178.,314
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.api.impl,JobOperatorImplDelegate,restartInternal,Long Statement,The length of the statement "logger.fine("Restarted job with instanceID: " + execution.getInstanceId() + "` new executionId: "+ newExecutionId+ "` and old executionID: "+ oldExecutionId);" is 158.,405
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.persistence,CheckpointManager,CheckpointManager,Long Parameter List,The method has 6 parameters. ,50
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.persistence,ItemCheckpointAlgorithm,isReadyToCheckpointItem,Magic Number,The method contains a magic number: 1000,46
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.persistence,ItemCheckpointAlgorithm,isReadyToCheckpointTime,Long Statement,The length of the statement "logger.finer("Num of itemsReadAndProcessed=" + itemsRead + " at a rate="+ itemsRead / diff + " itemsReadAndProcessed/sec");" is 123.,68
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.persistence,ItemCheckpointAlgorithm,isReadyToCheckpointTime,Magic Number,The method contains a magic number: 1000,68
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.persistence,CheckpointData,CheckpointData,Long Statement,The length of the statement "throw new RuntimeException("Invalid parameters to CheckpointData jobInstanceId: " + _jobInstanceId + " BDS: "+ batchDataStreamName+ " stepName: "+ stepname);" is 157.,34
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.persistence,CheckpointData,toString,Long Statement,The length of the statement "return " jobInstanceId: " + _jobInstanceId + " stepId: "+ this._stepName+ " bdsName: "+ this._batchDataStreamName+ " restartToken: [UTF8-bytes: "+ restartString;" is 161.,85
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.cdi,BatchCDIInjectionExtension,beforeBeanDiscovery,Long Statement,The length of the statement "logger.log(Level.FINE`"BatchCDIInjectionExtension.beforeBeanDiscovery() added annotated type: " + BatchProducerBean.class.getName());" is 133.,35
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.cdi,BatchCDIInjectionExtension,processBean,Long Statement,The length of the statement "logger.log(Level.FINE`"BatchCDIInjectionExtension.processBean() Found JobOperator of class: " + processBeanEvent.getBean().getBeanClass());" is 139.,47
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.cdi,BatchXMLMapper,populateArtifactMapFromStream,Complex Method,Cyclomatic complexity of the method is 8,91
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.cdi,BatchXMLMapper,populateArtifactMapFromStream,Long Statement,The length of the statement "throw new IllegalStateException("Expecting document with root element QName: " + BATCH_ROOT_ELEM + " or "+ BATCH_ROOT_ELEM_2+ "` but found root element with QName: "+ rootQName);" is 178.,91
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.cdi,BatchProducerBean,getStringProperty,Complex Method,Cyclomatic complexity of the method is 8,96
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,PartitionPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createPartitionMapperPropertyResolver(this.isPartitionedStep).substituteProperties(partition.getMapper()`submittedProps`parentProps);" is 157.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,PartitionPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createPartitionPlanPropertyResolver(this.isPartitionedStep).substituteProperties(partition.getPlan()`submittedProps`parentProps);" is 153.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,PartitionPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createCollectorPropertyResolver(this.isPartitionedStep).substituteProperties(partition.getCollector()`submittedProps`parentProps);" is 154.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,PartitionPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createAnalyzerPropertyResolver(this.isPartitionedStep).substituteProperties(partition.getAnalyzer()`submittedProps`parentProps);" is 152.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,PartitionPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createPartitionReducerPropertyResolver(this.isPartitionedStep).substituteProperties(partition.getReducer()`submittedProps`parentProps);" is 159.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,FlowPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createStepPropertyResolver(this.isPartitionedStep).substituteProperties((Step)next`submittedProps`currentProps);" is 136.,35
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,FlowPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createDecisionPropertyResolver(this.isPartitionedStep).substituteProperties((Decision)next`submittedProps`currentProps);" is 144.,35
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,FlowPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createFlowPropertyResolver(this.isPartitionedStep).substituteProperties((Flow)next`submittedProps`currentProps);" is 136.,35
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,FlowPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createSplitPropertyResolver(this.isPartitionedStep).substituteProperties((Split)next`submittedProps`currentProps);" is 138.,35
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Complex Method,Cyclomatic complexity of the method is 8,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createReaderPropertyResolver(this.isPartitionedStep).substituteProperties(chunk.getReader()`submittedProps`parentProps);" is 144.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createProcessorPropertyResolver(this.isPartitionedStep).substituteProperties(chunk.getProcessor()`submittedProps`parentProps);" is 150.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createWriterPropertyResolver(this.isPartitionedStep).substituteProperties(chunk.getWriter()`submittedProps`parentProps);" is 144.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createCheckpointAlgorithmPropertyResolver(this.isPartitionedStep).substituteProperties(chunk.getCheckpointAlgorithm()`submittedProps`parentProps);" is 170.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createSkippableExceptionClassesPropertyResolver(this.isPartitionedStep).substituteProperties(chunk.getSkippableExceptionClasses()`submittedProps`parentProps);" is 182.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createRetryableExceptionClassesPropertyResolver(this.isPartitionedStep).substituteProperties(chunk.getRetryableExceptionClasses()`submittedProps`parentProps);" is 182.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ChunkPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createNoRollbackExceptionClassesPropertyResolver(this.isPartitionedStep).substituteProperties(chunk.getNoRollbackExceptionClasses()`submittedProps`parentProps);" is 184.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ControlElementPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "((End)controlElement).setExitStatus(this.replaceAllProperties(((End)controlElement).getExitStatus()`submittedProps`parentProps));" is 129.,34
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ControlElementPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "((Fail)controlElement).setExitStatus(this.replaceAllProperties(((Fail)controlElement).getExitStatus()`submittedProps`parentProps));" is 131.,34
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ControlElementPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "((Stop)controlElement).setExitStatus(this.replaceAllProperties(((Stop)controlElement).getExitStatus()`submittedProps`parentProps));" is 131.,34
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,ControlElementPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "((Stop)controlElement).setRestart(this.replaceAllProperties(((Stop)controlElement).getRestart()`submittedProps`parentProps));" is 125.,34
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,DecisionPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createTransitionElementPropertyResolver(this.isPartitionedStep).substituteProperties(transitionElement`submittedProps`currentProps);" is 156.,32
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,JobPropertyResolverImpl,substituteProperties,Complex Method,Cyclomatic complexity of the method is 9,38
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,JobPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createListenerPropertyResolver(this.isPartitionedStep).substituteProperties(listener`submittedProps`currentProps);" is 138.,38
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,JobPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createStepPropertyResolver(this.isPartitionedStep).substituteProperties((Step)next`submittedProps`currentProps);" is 136.,38
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,JobPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createDecisionPropertyResolver(this.isPartitionedStep).substituteProperties((Decision)next`submittedProps`currentProps);" is 144.,38
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,JobPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createSplitPropertyResolver(this.isPartitionedStep).substituteProperties((Split)next`submittedProps`currentProps);" is 138.,38
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,JobPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createFlowPropertyResolver(this.isPartitionedStep).substituteProperties((Flow)next`submittedProps`currentProps);" is 136.,38
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,SplitPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createFlowPropertyResolver(this.isPartitionedStep).substituteProperties(flow`submittedProps`currentProps);" is 130.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,PartitionMapperPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "currentProps=this.resolveElementProperties(partitionMapper.getProperties().getPropertyList()`submittedProps`parentProps);" is 121.,31
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,AbstractPropertyResolver,replaceAllProperties,Complex Method,Cyclomatic complexity of the method is 8,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,AbstractPropertyResolver,replaceAllProperties,Long Statement,The length of the statement "str=str.replace("#{jobParameters['" + nextProp.propName + "']}"+ nextProp.getDefaultValExprWithDelimitersIfExists()`nextPropValue);" is 131.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,AbstractPropertyResolver,replaceAllProperties,Long Statement,The length of the statement "str=str.replace("#{jobProperties['" + nextProp.propName + "']}"+ nextProp.getDefaultValExprWithDelimitersIfExists()`nextPropValue);" is 131.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,AbstractPropertyResolver,replaceAllProperties,Long Statement,The length of the statement "str=str.replace("#{systemProperties['" + nextProp.propName + "']}"+ nextProp.getDefaultValExprWithDelimitersIfExists()`nextPropValue);" is 134.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,AbstractPropertyResolver,replaceAllProperties,Long Statement,The length of the statement "str=str.replace("#{partitionPlan['" + nextProp.propName + "']}"+ nextProp.getDefaultValExprWithDelimitersIfExists()`nextPropValue);" is 131.,100
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,AbstractPropertyResolver,resolvePropertyValue,Complex Method,Cyclomatic complexity of the method is 12,168
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,AbstractPropertyResolver,findNextProperty,Complex Method,Cyclomatic complexity of the method is 15,292
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,StepPropertyResolverImpl,substituteProperties,Complex Method,Cyclomatic complexity of the method is 9,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,StepPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createPartitionPropertyResolver(this.isPartitionedStep).substituteProperties(step.getPartition()`submittedProps`currentProps);" is 150.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,StepPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createListenerPropertyResolver(this.isPartitionedStep).substituteProperties(listener`submittedProps`currentProps);" is 138.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,StepPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createTransitionElementPropertyResolver(this.isPartitionedStep).substituteProperties(controlElement`submittedProps`currentProps);" is 153.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,StepPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createBatchletPropertyResolver(this.isPartitionedStep).substituteProperties(step.getBatchlet()`submittedProps`currentProps);" is 148.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.container.modelresolver.impl,StepPropertyResolverImpl,substituteProperties,Long Statement,The length of the statement "PropertyResolverFactory.createChunkPropertyResolver(this.isPartitionedStep).substituteProperties(step.getChunk()`submittedProps`currentProps);" is 142.,33
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.util,PropertiesToStringHelper,getString,Magic Number,The method contains a magic number: 150,28
WASdev_standards.jsr352.jbatch,com.ibm.jbatch.jsl.util,JSLValidationEventHandler,handleEvent,Magic Number,The method contains a magic number: 150,32
WASdev_standards.jsr352.jbatch,test.artifacts,LongRunningBatchlet,delayPartition,Magic Number,The method contains a magic number: 500000000,41
WASdev_standards.jsr352.jbatch,test.artifacts,LongRunningBatchlet,delayPartition,Magic Number,The method contains a magic number: 1000,41
WASdev_standards.jsr352.jbatch,test.artifacts,LongRunningBatchlet,delayPartition,Magic Number,The method contains a magic number: 100,41
WASdev_standards.jsr352.jbatch,test.artifacts,MyPropertyMapper,mapPartitions,Magic Number,The method contains a magic number: 4,37
WASdev_standards.jsr352.jbatch,test.artifacts,MyPropertyMapper,mapPartitions,Magic Number,The method contains a magic number: 4,37
WASdev_standards.jsr352.jbatch,test.artifacts,MyPropertyMapper,mapPartitions,Magic Number,The method contains a magic number: 2,37
WASdev_standards.jsr352.jbatch,test.artifacts,MyPropertyMapper,mapPartitions,Magic Number,The method contains a magic number: 3,37
WASdev_standards.jsr352.jbatch,test.integration,WeldIT,beforeClass,Long Statement,The length of the statement "System.setProperty(PROP_PREFIX + "." + ServicePropertyNames.CONTAINER_ARTIFACT_FACTORY_SERVICE`ServiceImplClassNames.CONTAINER_ARTIFACT_FACTORY_WELD_SE);" is 153.,32
WASdev_standards.jsr352.jbatch,test.integration,WeldIT,beforeClass,Long Statement,The length of the statement "System.setProperty(PROP_PREFIX + "." + ServicePropertyNames.BATCH_THREADPOOL_SERVICE`ServiceImplClassNames.BATCH_THREADPOOL_GROWABLE);" is 134.,32
WASdev_standards.jsr352.jbatch,test.integration,WeldIT,awaitJob,Magic Number,The method contains a magic number: 100,48
WASdev_standards.jsr352.jbatch,test.integration,ConfigWithSPIandSystemPropertyOverrideIT,testConfigWithSPIandSystemPropertyOverride,Long Statement,The length of the statement "System.setProperty(PROP_PREFIX + "." + ServicePropertyNames.BATCH_THREADPOOL_SERVICE`ServiceImplClassNames.BATCH_THREADPOOL_JNDI_DELEGATING);" is 141.,36
WASdev_standards.jsr352.jbatch,test.integration,ConfigWithSystemPropertyOverrideIT,testConfigWithSystemPropertyOverride,Long Statement,The length of the statement "System.setProperty(PROP_PREFIX + "." + ServicePropertyNames.BATCH_THREADPOOL_SERVICE`ServiceImplClassNames.BATCH_THREADPOOL_JNDI_DELEGATING);" is 141.,32
WASdev_standards.jsr352.jbatch,test.junit,TestsWithSecurityHelper,getJobInstancesAndGetJobInstanceCount,Long Statement,The length of the statement "List<JobInstance> jobInstances=jobOp.getJobInstances("runtimejunit.alwaysFails1"`COUNT * NUM_HELPERS`adminInstanceCount);" is 121.,59
WASdev_standards.jsr352.jbatch,test.junit,TestsWithSecurityHelper,getJobInstancesAndGetJobInstanceCount,Long Statement,The length of the statement "List<JobInstance> jobInstances=jobOp.getJobInstances("runtimejunit.alwaysFails1"`COUNT * NUM_HELPERS`adminInstanceCount + 1);" is 125.,59
WASdev_standards.jsr352.jbatch,test.junit,TestsWithSecurityHelper,getJobInstancesAndGetJobInstanceCount,Magic Number,The method contains a magic number: 5,59
WASdev_standards.jsr352.jbatch,test.junit,TestsWithSecurityHelper,getJobInstancesAndGetJobInstanceCount,Magic Number,The method contains a magic number: 2000,59
WASdev_standards.jsr352.jbatch,test.junit,SplitFlowAggregateFailureTest,testFailureAfterOnlyOneFlowFails,Magic Number,The method contains a magic number: 2,47
WASdev_standards.jsr352.jbatch,test.junit,ChunkStopTest,testChunkStop,Magic Number,The method contains a magic number: 2,46
WASdev_standards.jsr352.jbatch,test.junit,ChunkStopTest,testChunkStop,Magic Number,The method contains a magic number: 2,46
WASdev_standards.jsr352.jbatch,test.junit,StepFailureTest,testEndNormallyExecuteBoth,Magic Number,The method contains a magic number: 2,66
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Long Statement,The length of the statement "assertEquals("Didn't complete successfully"`BatchStatus.COMPLETED`jobOp.getJobExecution(restartExecId).getBatchStatus());" is 121.,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 9,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 12,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 30,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 18,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 18,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 30,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 75,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testMetricsRestartAfterComplete,Magic Number,The method contains a magic number: 45,87
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,testPartitionedRollbackMetric,Magic Number,The method contains a magic number: 3,143
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 12,190
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 18,190
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 45,190
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 27,190
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 15,190
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 24,190
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 60,190
WASdev_standards.jsr352.jbatch,test.junit,PartitionMetricsTest,validatePartitionedMetrics,Magic Number,The method contains a magic number: 36,190
WASdev_standards.jsr352.jbatch,test.junit,ParallelContextPropagationTest,testSplitFlowContextPropagation,Magic Number,The method contains a magic number: 2,99
WASdev_standards.jsr352.jbatch,test.junit,PartitionPropertyResolverTest,testMapperPropertyResolver,Magic Number,The method contains a magic number: 2,92
WASdev_standards.jsr352.jbatch,test.junit,ImplSpecificJobOperatorTest,test19928,Magic Number,The method contains a magic number: 200,74
WASdev_standards.jsr352.jbatch,test.junit,ImplSpecificJobOperatorTest,testRestartWhileStillRunning,Magic Number,The method contains a magic number: 1500,96
WASdev_standards.jsr352.jbatch,test.junit,ImplSpecificJobOperatorTest,testRestartWhileStillRunning,Magic Number,The method contains a magic number: 1500,96
WASdev_standards.jsr352.jbatch,test.junit,ImplSpecificJobOperatorTest,testStepExecution,Magic Number,The method contains a magic number: 6269,142

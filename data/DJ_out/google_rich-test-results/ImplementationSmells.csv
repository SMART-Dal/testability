Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
google_rich-test-results,com.google.testing.results,AntXmlParser,parse,Complex Method,Cyclomatic complexity of the method is 8,73
google_rich-test-results,com.google.testing.results,AntXmlParser,parse,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@176996c3,73
google_rich-test-results,com.google.testing.results,AntXmlParser,parseSuites,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@411c6d44,114
google_rich-test-results,com.google.testing.results,AntXmlParser,parseSuite,Complex Method,Cyclomatic complexity of the method is 15,137
google_rich-test-results,com.google.testing.results,AntXmlParser,parseSuite,Magic Number,The method contains a magic number: 1000,137
google_rich-test-results,com.google.testing.results,AntXmlParser,parseSuite,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@748d2277,137
google_rich-test-results,com.google.testing.results,AntXmlParser,parseProperties,Complex Method,Cyclomatic complexity of the method is 9,193
google_rich-test-results,com.google.testing.results,AntXmlParser,parseTestCase,Complex Method,Cyclomatic complexity of the method is 13,225
google_rich-test-results,com.google.testing.results,AntXmlParser,parseTestCase,Magic Number,The method contains a magic number: 1000,225
google_rich-test-results,com.google.testing.results,AntXmlParser,parseTestCase,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2f897dab,225
google_rich-test-results,com.google.testing.results,AntXmlParser,parseLine,Complex Conditional,The conditional expression !line.startsWith(JAVA_STACK_FRAME_PREFIX) || openParen < 0 || closeParen < 0 is complex.,346
google_rich-test-results,com.google.testing.results,AntXmlParser,parseLine,Long Statement,The length of the statement "stackTraceBuilder.addStackContentBuilder().getCodeReferenceBuilder().setText(fileAndLine).setPath(path).setLineNumber(lineNumber);" is 130.,346
google_rich-test-results,com.google.testing.results,DirectoryBasedOutputsCollectorTest,testReadsOutputsFromJenkinsGCSUploadPlugin,Long Statement,The length of the statement "write(root.resolve("build-log.txt")`asList("Started"`"Building in workspace /jenkins/workspace/myjob"`"Cloning the remote Git repository"`"Cloning repository https://code.google.com/id/jVx4k3S3An2")`UTF_8);" is 206.,57
google_rich-test-results,com.google.testing.results,DirectoryBasedOutputsCollectorTest,testReadsOutputsFromJenkinsGCSUploadPlugin,Long Statement,The length of the statement "TestResults expected=TestResults.newBuilder().setBuildLog("/012345/build-log.txt").addTestSuite(TestSuite.newBuilder().setName("MyTest")).build();" is 146.,57
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXml,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("com.google.errorprone.matchers.ConstructorOfClassTest").setTotalCount(8).setFailureCount(1).setErrorCount(2).setSkippedCount(4).setElapsedTimeMillis(68L).addProperty(Property.newBuilder().setName("java.runtime.name").setValue("Java(TM) SE Runtime Environment")).addProperty(Property.newBuilder().setName("sun.cpu.isalist").setValue("")).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(17L).setStatus(TestStatus.PASSED).setClassName("com.google.errorprone.matchers.ConstructorOfClassTest").setName("shouldMatchSingleConstructor")).build();" is 597.,56
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXml,Magic Number,The method contains a magic number: 8,56
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXml,Magic Number,The method contains a magic number: 2,56
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXml,Magic Number,The method contains a magic number: 4,56
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXml,Magic Number,The method contains a magic number: 68L,56
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXml,Magic Number,The method contains a magic number: 17L,56
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSkippedTest,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("com.google.errorprone.matchers.ConstructorOfClassTest").setTotalCount(8).setFailureCount(1).setErrorCount(2).setSkippedCount(4).setElapsedTimeMillis(1068L).addProperty(Property.newBuilder().setName("java.runtime.name").setValue("Java(TM) SE Runtime Environment")).addProperty(Property.newBuilder().setName("sun.cpu.isalist").setValue("")).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(0L).setStatus(TestStatus.SKIPPED).setSkippedMessage("the test is skipped.").setClassName("com.google.errorprone.matchers.ConstructorOfClassTest").setName("shouldMatchSingleConstructor")).build();" is 641.,80
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSkippedTest,Magic Number,The method contains a magic number: 8,80
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSkippedTest,Magic Number,The method contains a magic number: 2,80
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSkippedTest,Magic Number,The method contains a magic number: 4,80
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSkippedTest,Magic Number,The method contains a magic number: 1068L,80
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseMultipleTestSuites,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("com.google.errorprone.matchers.ConstructorOfClassTest").setTotalCount(8).setFailureCount(1).setErrorCount(2).setSkippedCount(4).setElapsedTimeMillis(68L).addProperty(Property.newBuilder().setName("java.runtime.name").setValue("Java(TM) SE Runtime Environment")).addProperty(Property.newBuilder().setName("sun.cpu.isalist").setValue("")).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(17L).setStatus(TestStatus.PASSED).setClassName("com.google.errorprone.matchers.ConstructorOfClassTest").setName("shouldMatchSingleConstructor")).build();" is 597.,105
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseMultipleTestSuites,Magic Number,The method contains a magic number: 8,105
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseMultipleTestSuites,Magic Number,The method contains a magic number: 2,105
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseMultipleTestSuites,Magic Number,The method contains a magic number: 4,105
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseMultipleTestSuites,Magic Number,The method contains a magic number: 68L,105
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseMultipleTestSuites,Magic Number,The method contains a magic number: 17L,105
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Long Statement,The length of the statement "return TestSuite.newBuilder().setName("com.google.SimpleTest").setTotalCount(2).setFailureCount(1).setErrorCount(0).setSkippedCount(0).setElapsedTimeMillis(6L).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(6L).setStatus(TestStatus.FAILED).setClassName("com.google.SimpleTest").setName("testThatFails").addFailure(StackTrace.newBuilder().setExceptionMessage("expected:<1> but was:<2>").setExceptionType("java.lang.AssertionError").setContent("java.lang.AssertionError: expected:<1> but was:<2>\n" + "\tat org.junit.Assert.fail(Assert.java:88)\n" + "\tat org.junit.Assert.failNotEquals(Assert.java:743)\n"+ "\tat org.junit.Assert.assertEquals(Assert.java:118)\n"+ "\tat org.junit.Assert.assertEquals(Assert.java:555)\n"+ "\tat org.junit.Assert.assertEquals(Assert.java:542)\n"+ "\tat com.google.SimpleTest.testThatFails(SimpleTest.java:11)\n"+ "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n").addStackContent(text("java.lang.AssertionError: expected:<1> but was:<2>\n" + "\tat org.junit.Assert.fail(")).addStackContent(codeRef("Assert.java:88"`"org/junit/Assert.java"`88)).addStackContent(text(")\n" + "\tat org.junit.Assert.failNotEquals(")).addStackContent(codeRef("Assert.java:743"`"org/junit/Assert.java"`743)).addStackContent(text(")\n" + "\tat org.junit.Assert.assertEquals(")).addStackContent(codeRef("Assert.java:118"`"org/junit/Assert.java"`118)).addStackContent(text(")\n" + "\tat org.junit.Assert.assertEquals(")).addStackContent(codeRef("Assert.java:555"`"org/junit/Assert.java"`555)).addStackContent(text(")\n" + "\tat org.junit.Assert.assertEquals(")).addStackContent(codeRef("Assert.java:542"`"org/junit/Assert.java"`542)).addStackContent(text(")\n" + "\tat com.google.SimpleTest.testThatFails(")).addStackContent(codeRef("SimpleTest.java:11"`"com/google/SimpleTest.java"`11)).addStackContent(text(")\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n")))).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(0L).setStatus(TestStatus.PASSED).setClassName("com.google.SimpleTest").setName("testThatPasses")).build();" is 2083.,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 2,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 6L,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 6L,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 88,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 743,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 118,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 555,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 542,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,getExpectedFailTestSuite,Magic Number,The method contains a magic number: 11,136
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("com.google.ExceptionThrownTest").setTotalCount(1).setFailureCount(0).setErrorCount(1).setSkippedCount(0).setElapsedTimeMillis(7L).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(7L).setStatus(TestStatus.ERROR).setClassName("com.google.ExceptionThrownTest").setName("testDivision").setError(StackTrace.newBuilder().setExceptionMessage("/ by zero").setExceptionType("java.lang.ArithmeticException").setContent("java.lang.ArithmeticException: / by zero\n" + "\tat com.google.ExceptionThrownTest.testDivision(ExceptionThrownTest.java:11)\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n"+ "\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n"+ "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"+ "\tat java.lang.reflect.Method.invoke(Method.java:606)\n"+ "\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n").addStackContent(text("java.lang.ArithmeticException: / by zero\n" + "\tat com.google.ExceptionThrownTest.testDivision(")).addStackContent(codeRef("ExceptionThrownTest.java:11"`"com/google/ExceptionThrownTest.java"`11)).addStackContent(text(")\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke(")).addStackContent(codeRef("NativeMethodAccessorImpl.java:57"`"sun/reflect/NativeMethodAccessorImpl.java"`57)).addStackContent(text(")\n" + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(")).addStackContent(codeRef("DelegatingMethodAccessorImpl.java:43"`"sun/reflect/DelegatingMethodAccessorImpl.java"`43)).addStackContent(text(")\n" + "\tat java.lang.reflect.Method.invoke(")).addStackContent(codeRef("Method.java:606"`"java/lang/reflect/Method.java"`606)).addStackContent(text(")\n" + "\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(")).addStackContent(codeRef("FrameworkMethod.java:47"`"org/junit/runners/model/FrameworkMethod.java"`47)).addStackContent(text(")\n")))).build();" is 2081.,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Magic Number,The method contains a magic number: 7L,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Magic Number,The method contains a magic number: 7L,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Magic Number,The method contains a magic number: 11,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Magic Number,The method contains a magic number: 57,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Magic Number,The method contains a magic number: 43,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Magic Number,The method contains a magic number: 606,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestError,Magic Number,The method contains a magic number: 47,195
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Long Statement,The length of the statement "StackTrace.Builder expectedError=StackTrace.newBuilder().setExceptionMessage("Division operation failed").setExceptionType("java.lang.RuntimeException").setContent("java.lang.RuntimeException: Division operation failed\n" + "\tat com.google.NestedExceptionThrownTest.testDivision(NestedExceptionThrownTest.java:14)\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n"+ "\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n"+ "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"+ "\tat java.lang.reflect.Method.invoke(Method.java:606)\n"+ "Caused by: java.lang.ArithmeticException: / by zero\n"+ "\tat com.google.NestedExceptionThrownTest.testDivision(NestedExceptionThrownTest.java:12)\n"+ "\t... 4 more\n").addStackContent(text("java.lang.RuntimeException: Division operation failed\n" + "\tat com.google.NestedExceptionThrownTest.testDivision(")).addStackContent(codeRef("NestedExceptionThrownTest.java:14"`"com/google/NestedExceptionThrownTest.java"`14)).addStackContent(text(")\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke(")).addStackContent(codeRef("NativeMethodAccessorImpl.java:57"`"sun/reflect/NativeMethodAccessorImpl.java"`57)).addStackContent(text(")\n" + "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(")).addStackContent(codeRef("DelegatingMethodAccessorImpl.java:43"`"sun/reflect/DelegatingMethodAccessorImpl.java"`43)).addStackContent(text(")\n" + "\tat java.lang.reflect.Method.invoke(")).addStackContent(codeRef("Method.java:606"`"java/lang/reflect/Method.java"`606)).addStackContent(text(")\n" + "Caused by: java.lang.ArithmeticException: / by zero\n" + "\tat com.google.NestedExceptionThrownTest.testDivision(")).addStackContent(codeRef("NestedExceptionThrownTest.java:12"`"com/google/NestedExceptionThrownTest.java"`12)).addStackContent(text(")\n" + "\t... 4 more\n"));" is 1973.,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Long Statement,The length of the statement "TestSuite expected=TestSuite.newBuilder().setName("com.google.NestedExceptionThrownTest").setTotalCount(1).setFailureCount(0).setErrorCount(1).setSkippedCount(0).setElapsedTimeMillis(7L).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(7L).setStatus(TestStatus.ERROR).setClassName("com.google.NestedExceptionThrownTest").setName("testDivision").setError(expectedError)).build();" is 384.,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Magic Number,The method contains a magic number: 14,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Magic Number,The method contains a magic number: 57,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Magic Number,The method contains a magic number: 43,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Magic Number,The method contains a magic number: 606,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Magic Number,The method contains a magic number: 12,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Magic Number,The method contains a magic number: 7L,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestErrorCauseChain,Magic Number,The method contains a magic number: 7L,251
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Long Statement,The length of the statement "StackTrace.Builder expectedError=StackTrace.newBuilder().setExceptionMessage(("Guice creation errors:\n" + "\n" + "1) No implementation for java.lang.Integer annotated with @com.google.GuiceExceptionTest$A() was bound.\n"+ " at com.google.GuiceExceptionTest$MyModule.provideA(GuiceExceptionTest.java:44)\n"+ "\n"+ "2) No implementation for java.lang.Integer annotated with @com.google.GuiceExceptionTest$B() was bound.\n"+ " at com.google.GuiceExceptionTest$MyModule.provideB(GuiceExceptionTest.java:49)\n"+ "\n"+ "2 errors").replaceAll("\n"`" ")).setExceptionType("com.google.inject.CreationException").setContent("com.google.inject.CreationException: Guice creation errors:\n" + "\n" + "1) No implementation for java.lang.Integer annotated with @com.google.GuiceExceptionTest$A() was bound.\n"+ " at com.google.GuiceExceptionTest$MyModule.provideA(GuiceExceptionTest.java:44)\n"+ "\n"+ "2) No implementation for java.lang.Integer annotated with @com.google.GuiceExceptionTest$B() was bound.\n"+ " at com.google.GuiceExceptionTest$MyModule.provideB(GuiceExceptionTest.java:49)\n"+ "\n"+ "2 errors\n"+ "\tat com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:435)\n"+ "\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(InternalInjectorCreator.java:154)\n"+ "\tat com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:106)\n"+ "\tat com.google.inject.Guice.createInjector(Guice.java:95)\n"+ "\tat com.google.inject.Guice.createInjector(Guice.java:72)\n"+ "\tat com.google.inject.Guice.createInjector(Guice.java:62)\n"+ "\tat com.google.GuiceExceptionTest.testGuiceException(GuiceExceptionTest.java:21)").addStackContent(text("com.google.inject.CreationException: Guice creation errors:\n" + "\n" + "1) No implementation for java.lang.Integer annotated with @com.google.GuiceExceptionTest$A() was bound.\n"+ " at com.google.GuiceExceptionTest$MyModule.provideA(")).addStackContent(codeRef("GuiceExceptionTest.java:44"`"com/google/GuiceExceptionTest.java"`44)).addStackContent(text(")\n" + "\n" + "2) No implementation for java.lang.Integer annotated with @com.google.GuiceExceptionTest$B() was bound.\n"+ " at com.google.GuiceExceptionTest$MyModule.provideB(")).addStackContent(codeRef("GuiceExceptionTest.java:49"`"com/google/GuiceExceptionTest.java"`49)).addStackContent(text(")\n" + "\n" + "2 errors\n"+ "\tat com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(")).addStackContent(codeRef("Errors.java:435"`"com/google/inject/internal/Errors.java"`435)).addStackContent(text(")\n" + "\tat com.google.inject.internal.InternalInjectorCreator.initializeStatically(")).addStackContent(codeRef("InternalInjectorCreator.java:154"`"com/google/inject/internal/InternalInjectorCreator.java"`154)).addStackContent(text(")\n" + "\tat com.google.inject.internal.InternalInjectorCreator.build(")).addStackContent(codeRef("InternalInjectorCreator.java:106"`"com/google/inject/internal/InternalInjectorCreator.java"`106)).addStackContent(text(")\n" + "\tat com.google.inject.Guice.createInjector(")).addStackContent(codeRef("Guice.java:95"`"com/google/inject/Guice.java"`95)).addStackContent(text(")\n" + "\tat com.google.inject.Guice.createInjector(")).addStackContent(codeRef("Guice.java:72"`"com/google/inject/Guice.java"`72)).addStackContent(text(")\n" + "\tat com.google.inject.Guice.createInjector(")).addStackContent(codeRef("Guice.java:62"`"com/google/inject/Guice.java"`62)).addStackContent(text(")\n" + "\tat com.google.GuiceExceptionTest.testGuiceException(")).addStackContent(codeRef("GuiceExceptionTest.java:21"`"com/google/GuiceExceptionTest.java"`21)).addStackContent(text(")\n"));" is 3691.,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("com.google.GuiceExceptionTest").setTotalCount(1).setFailureCount(0).setErrorCount(1).setSkippedCount(0).setElapsedTimeMillis(152L).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(152L).setStatus(TestStatus.ERROR).setClassName("com.google.GuiceExceptionTest").setName("testGuiceException").setError(expectedError)).build();" is 381.,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 44,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 49,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 435,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 154,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 106,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 95,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 72,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 62,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 21,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 152L,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseTestGuiceError,Magic Number,The method contains a magic number: 152L,308
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseInvalidXml,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("com.google.ExceptionThrownTest").setTotalCount(1).setFailureCount(0).setErrorCount(1).setSkippedCount(0).setElapsedTimeMillis(7L).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(7L).setStatus(TestStatus.ERROR).setClassName("com.google.ExceptionThrownTest").setName("testDivision").setError(StackTrace.newBuilder().setExceptionMessage("/ by zero").setExceptionType("java.lang.ArithmeticException").setContent("java.lang.ArithmeticException: / by zero\n" + "\tat java.lang.reflect.Method.invoke\n" + "\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n").addStackContent(text("java.lang.ArithmeticException: / by zero\n" + "\tat java.lang.reflect.Method.invoke\n" + "\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(")).addStackContent(codeRef("FrameworkMethod.java:47"`"org/junit/runners/model/FrameworkMethod.java"`47)).addStackContent(text(")\n")))).build();" is 974.,396
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseInvalidXml,Magic Number,The method contains a magic number: 7L,396
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseInvalidXml,Magic Number,The method contains a magic number: 7L,396
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseInvalidXml,Magic Number,The method contains a magic number: 47,396
google_rich-test-results,com.google.testing.results,AntXmlParserTest,codeRef,Long Statement,The length of the statement "return StackContent.newBuilder().setCodeReference(CodeReference.newBuilder().setText(text).setPath(path).setLineNumber(lineNumber)).build();" is 140.,429
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXmlWithComments,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("com.google.errorprone.matchers.ConstructorOfClassTest").setTotalCount(8).setFailureCount(1).setErrorCount(2).setSkippedCount(4).setElapsedTimeMillis(68L).addProperty(Property.newBuilder().setName("java.runtime.name").setValue("Java(TM) SE Runtime Environment")).addProperty(Property.newBuilder().setName("sun.cpu.isalist").setValue("")).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(17L).setStatus(TestStatus.PASSED).setClassName("com.google.errorprone.matchers.ConstructorOfClassTest").setName("shouldMatchSingleConstructor")).build();" is 597.,438
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXmlWithComments,Magic Number,The method contains a magic number: 8,438
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXmlWithComments,Magic Number,The method contains a magic number: 2,438
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXmlWithComments,Magic Number,The method contains a magic number: 4,438
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXmlWithComments,Magic Number,The method contains a magic number: 68L,438
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseSimpleXmlWithComments,Magic Number,The method contains a magic number: 17L,438
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithoutPackageName,Long Statement,The length of the statement "TestSuite testSuite=TestSuite.newBuilder().setName("").setTotalCount(1).setFailureCount(1).setErrorCount(0).setSkippedCount(0).setElapsedTimeMillis(27L).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(0L).setStatus(TestStatus.FAILED).setClassName("ApplicationTest").setName("testSomeCoolTesting").addFailure(StackTrace.newBuilder().setContent("java.lang.NullPointerException: Attempt to invoke virtual method " + "'void android.app.Instrumentation.setInTouchMode(boolean)' " + "on a null object reference\n"+ "\tat android.test.ActivityInstrumentationTestCase2.getActivity"+ "(ActivityInstrumentationTestCase2.java:100)\n"+ "\tat ApplicationTest.testSomeCoolTesting(ApplicationTest.java:25)\n").addStackContent(text("java.lang.NullPointerException: Attempt to invoke virtual " + "method 'void android.app.Instrumentation.setInTouchMode(boolean)' on " + "a null object reference\n\tat "+ "android.test.ActivityInstrumentationTestCase2.getActivity(")).addStackContent(codeRef("ActivityInstrumentationTestCase2.java:100"`"android/test/ActivityInstrumentationTestCase2.java"`100)).addStackContent(text(")\n\tat ApplicationTest.testSomeCoolTesting(")).addStackContent(codeRef("ApplicationTest.java:25"`"ApplicationTest.java"`25)).addStackContent(text(")\n")))).build();" is 1271.,495
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithoutPackageName,Magic Number,The method contains a magic number: 27L,495
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithoutPackageName,Magic Number,The method contains a magic number: 100,495
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithoutPackageName,Magic Number,The method contains a magic number: 25,495
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithLink,Long Statement,The length of the statement "StackTrace.Builder expectedFailure=StackTrace.newBuilder().setContent("Not true that <null> is equal to <\"null\">\n" + "\tat com.google.example.SomeTest.testCase(SomeTest.kt:33)\n" + "\tat [[Reflective call: 2 frames collapsed (https://goo.gl/aH3UyP)]].(:0)\n"+ "\tat [[Testing framework: 31 frames collapsed (https://goo.gl/aH3UyP)]].(:0)\n"+ "\tat android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)\n"+ "\tat android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:375)\n"+ "\tat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1853)\n").addStackContent(text("Not true that <null> is equal to <\"null\">\n" + "\tat com.google.example.SomeTest.testCase(")).addStackContent(codeRef("SomeTest.kt:33"`"com/google/example/SomeTest.kt"`33)).addStackContent(text(")\n" + "\tat [[Reflective call: 2 frames collapsed (https://goo.gl/aH3UyP)]].(:0)\n" + "\tat [[Testing framework: 31 frames collapsed (https://goo.gl/aH3UyP)]].(:0)\n"+ "\tat android.support.test.internal.runner.TestExecutor.execute(")).addStackContent(codeRef("TestExecutor.java:58"`"android/support/test/internal/runner/TestExecutor.java"`58)).addStackContent(text(")\n\tat android.support.test.runner.AndroidJUnitRunner.onStart(")).addStackContent(codeRef("AndroidJUnitRunner.java:375"`"android/support/test/runner/AndroidJUnitRunner.java"`375)).addStackContent(text(")\n\tat android.app.Instrumentation$InstrumentationThread.run(")).addStackContent(codeRef("Instrumentation.java:1853"`"android/app/Instrumentation.java"`1853)).addStackContent(text(")\n"));" is 1599.,536
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithLink,Long Statement,The length of the statement "TestSuite expected=TestSuite.newBuilder().setName("").setTotalCount(1).setFailureCount(1).setErrorCount(0).setSkippedCount(0).setElapsedTimeMillis(65).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(0).setStatus(TestStatus.FAILED).setClassName("com.google.example.SomeTest").addFailure(expectedFailure).setName("testCase")).build();" is 339.,536
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithLink,Magic Number,The method contains a magic number: 33,536
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithLink,Magic Number,The method contains a magic number: 58,536
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithLink,Magic Number,The method contains a magic number: 375,536
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithLink,Magic Number,The method contains a magic number: 1853,536
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldParseStackTraceWithLink,Magic Number,The method contains a magic number: 65,536
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldNotCrashWithMavenArtifactInsteadOfClassName,Long Statement,The length of the statement "TestSuite expected=TestSuite.newBuilder().setName("").setTotalCount(1).setFailureCount(1).setErrorCount(0).setSkippedCount(0).setElapsedTimeMillis(65).addTestCase(TestCase.newBuilder().setElapsedTimeMillis(0).setStatus(TestStatus.FAILED).setClassName("com.google.example.SomeTest").addFailure(StackTrace.newBuilder().setContent("Not true that <null> is equal to <\"null\">\n" + "\tat com.google.example.SomeTest.testCase(SomeTest.kt:33)\n" + "\tat a.b.c(com.example.app:example-auth@@13.0.1:55)\n"+ "\tat u.v.w$a.a(com.google.android.gms:play-services-base@@17.5.0:47)\n").addStackContent(text("Not true that <null> is equal to <\"null\">\n" + "\tat com.google.example.SomeTest.testCase(")).addStackContent(codeRef("SomeTest.kt:33"`"com/google/example/SomeTest.kt"`33)).addStackContent(text(")\n" + "\tat a.b.c(com.example.app:example-auth@@13.0.1:55)\n" + "\tat u.v.w$a.a(com.google.android.gms:play-services-base@@17.5.0:47)\n")).build()).setName("testCase")).build();" is 970.,597
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldNotCrashWithMavenArtifactInsteadOfClassName,Magic Number,The method contains a magic number: 65,597
google_rich-test-results,com.google.testing.results,AntXmlParserTest,shouldNotCrashWithMavenArtifactInsteadOfClassName,Magic Number,The method contains a magic number: 33,597

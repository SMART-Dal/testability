Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,TextDiffView,renderOn,Long Statement,The length of the statement "html.render(DocType.HTML5).html(lang("en")).render(new Header()).body().div(class_("container-fluid")).div(class_("row")).render(new MenuBar())._div().div(class_("row")).div(class_("col")).h3().write("Raw edit script ").small().content(String.format("%s -> %s"`srcFile.getName()`dstFile.getName()))._h3().pre(class_("border p-2")).content(ActionsIoUtils.toText(diff.src`diff.editScript`diff.mappings).toString())._div()._div()._div()._body()._html();" is 450.,46
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,DirectoryDiffView,renderOn,Long Statement,The length of the statement "html.render(DocType.HTML5).html(lang("en")).render(new Header()).body().div(class_("container-fluid")).div(class_("row")).render(new MenuBar())._div().div(class_("row mt-3 mb-3")).div(class_("col")).div(class_("card")).div(class_("card-header")).h4(class_("card-title mb-0")).write("Modified files ").span(class_("badge badge-secondary")).content(comparator.getModifiedFiles().size())._h4()._div().render_if(new ModifiedFiles(comparator.getModifiedFiles())`comparator.getModifiedFiles().size() > 0)._div()._div()._div().div(class_("row mb-3")).div(class_("col")).div(class_("card")).div(class_("card-header bg-danger")).h4(class_("card-title mb-0")).write("Deleted files ").span(class_("badge badge-secondary")).content(comparator.getDeletedFiles().size())._h4()._div().render_if(new AddedOrDeletedFiles(comparator.getDeletedFiles()`comparator.getSrc())`comparator.getDeletedFiles().size() > 0)._div()._div().div(class_("col")).div(class_("card")).div(class_("card-header bg-success")).h4(class_("card-title mb-0")).write("Added files ").span(class_("badge badge-secondary")).content(comparator.getAddedFiles().size())._h4()._div().render_if(new AddedOrDeletedFiles(comparator.getAddedFiles()`comparator.getDst())`comparator.getAddedFiles().size() > 0)._div()._div()._div()._div()._body()._html();" is 1297.,45
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,VanillaDiffHtmlBuilder,produce,Complex Method,Cyclomatic complexity of the method is 13,64
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,VanillaDiffHtmlBuilder,produce,Magic Number,The method contains a magic number: 2,64
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,VanillaDiffHtmlBuilder,produce,Magic Number,The method contains a magic number: 3,64
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,MonacoNativeDiffView,renderOn,Long Statement,The length of the statement "html.render(DocType.HTML5).html(lang("en")).render(new Header()).body().div(class_("container-fluid")).div(class_("row")).render(new MenuBar())._div().div(class_("row")).div(class_("col")).h5().content(srcFile.getName() + " -> " + dstFile.getName()).div(id("container").style("width:100%;height:600px;border:1px solid grey"))._div()._div()._div()._div().macros().script("config = { left: " + getLeftJsConfig() + "` right: "+ getRightJsConfig()+ "};").macros().javascript("/monaco/min/vs/loader.js").macros().javascript("/dist/monaco-native.js")._body()._html();" is 561.,43
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,MonacoDiffView,renderOn,Long Statement,The length of the statement "html.render(DocType.HTML5).html(lang("en").class_("h-100")).render(new Header()).body(class_("h-100").style("overflow: hidden;")).div(class_("container-fluid h-100")).div(class_("row")).render(new MenuBar())._div().div(class_("row h-100")).div(class_("col-6 h-100")).h5().content(srcFile.getName()).div(id("left-container").style("height: calc(100% - 80px); border:1px solid grey;"))._div()._div().div(class_("col-6 h-100")).h5().content(dstFile.getName()).div(id("right-container").style("height: calc(100% - 80px); border:1px solid grey;"))._div()._div()._div()._div().macros().script("config = { file: \"" + srcFile.getName() + "\"` left: "+ getLeftJsConfig()+ "` right: "+ getRightJsConfig()+ "` mappings: "+ getMappingsJsConfig()+ "};").macros().javascript("/monaco/min/vs/loader.js").macros().javascript("/dist/monaco.js").macros().javascript("/dist/shortcuts.js")._body()._html();" is 887.,49
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,MonacoDiffView,appendRange,Long Statement,The length of the statement "b.append("{").append("from: ").append(t.getPos()).append("`").append("to: ").append(t.getEndPos()).append("`").append("index: ").append(t.getMetrics().depth).append("`").append("kind: ").append("\"" + kind + "\"").append("`").append("tooltip: ").append("\"" + tooltip(t) + "\"").append("`").append("}").append("`");" is 315.,133
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,VanillaDiffView,renderOn,Long Statement,The length of the statement "html.render(DocType.HTML5).html(lang("en")).render(new Header(dump)).body().div(class_("container-fluid")).div(class_("row")).render(new MenuBar())._div().div(class_("row")).div(class_("col-6")).h5().content(srcFile.getName()).pre(class_("pre-scrollable")).content(rawHtmlDiff.getSrcDiff()`false)._div().div(class_("col-6")).h5().content(dstFile.getName()).pre(class_("pre-scrollable")).content(rawHtmlDiff.getDstDiff()`false)._div()._div()._div()._body()._html();" is 464.,56
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.webdiff,MergelyDiffView,renderOn,Long Statement,The length of the statement "html.render(DocType.HTML5).html(lang("en")).render(new Header()).body().div(class_("mergely-full-screen-8")).div(class_("mergely-resizer")).div(id("mergely"))._div()._div()._div().macros().script("lhs_url = \"/left/" + id + "\";").macros().script("rhs_url = \"/right/" + id + "\";").macros().javascript("/dist/launch-mergely.js")._body()._html();" is 346.,39
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,TextDiff,TextDiff,Long Statement,The length of the statement "if (!Files.isRegularFile(Paths.get(opts.srcPath))) throw new Option.OptionException("Source must be a file: " + opts.srcPath`opts);" is 131.,40
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,TextDiff,TextDiff,Long Statement,The length of the statement "if (!Files.isRegularFile(Paths.get(opts.dstPath))) throw new Option.OptionException("Destination must be a file: " + opts.dstPath`opts);" is 136.,40
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,AbstractDiffClient,AbstractDiffClient,Abstract Function Call From Constructor,The constructor AbstractDiffClient calls a virtual method newOptions.,98
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,AbstractDiffClient,AbstractDiffClient,Long Statement,The length of the statement "if (opts.matcherId != null && Matchers.getInstance().findById(opts.matcherId) == null) throw new Option.OptionException("Error loading matcher: " + opts.matcherId);" is 164.,98
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,AbstractDiffClient,AbstractDiffClient,Long Statement,The length of the statement "if (opts.treeGeneratorId != null && TreeGenerators.getInstance().findById(opts.treeGeneratorId) == null) throw new Option.OptionException("Error loading tree generator: " + opts.treeGeneratorId);" is 195.,98
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,AbstractDiffClient,AbstractDiffClient,Long Statement,The length of the statement "if (!Files.exists(Paths.get(opts.srcPath))) throw new Option.OptionException("Error loading file or folder: " + opts.srcPath);" is 126.,98
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,AbstractDiffClient,AbstractDiffClient,Long Statement,The length of the statement "if (!Files.exists(Paths.get(opts.dstPath))) throw new Option.OptionException("Error loading file or folder: " + opts.dstPath);" is 126.,98
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff,AbstractDiffClient,AbstractDiffClient,Magic Number,The method contains a magic number: 2,98
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,DirectoryPanel,DirectoryPanel,Magic Number,The method contains a magic number: 3,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,DirectoryPanel,DirectoryPanel,Magic Number,The method contains a magic number: 255,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,DirectoryPanel,DirectoryPanel,Magic Number,The method contains a magic number: 128,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,DirectoryPanel,DirectoryPanel,Magic Number,The method contains a magic number: 255,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,DirectoryPanel,DirectoryPanel,Magic Number,The method contains a magic number: 128,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,DirectoryPanel,DirectoryPanel,Magic Number,The method contains a magic number: 1024,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,DirectoryPanel,DirectoryPanel,Magic Number,The method contains a magic number: 768,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,TreePanel,TreePanel,Long Statement,The length of the statement "@Override public String convertValueToText( Object value` boolean selected` boolean expanded` boolean leaf` int row` boolean hasFocus){" is 135.,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,TreePanel,TreePanel,Magic Number,The method contains a magic number: 100,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,TreePanel,TreePanel,Magic Number,The method contains a magic number: 50,41
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,TreePanel,convertValueToText,Long Parameter List,The method has 6 parameters. ,55
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,MappingsPanel,Magic Number,The method contains a magic number: 2,76
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,MappingsPanel,Magic Number,The method contains a magic number: 2,76
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,MappingsPanel,Magic Number,The method contains a magic number: 384,76
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,MappingsPanel,Magic Number,The method contains a magic number: 1024,76
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,MappingsPanel,Magic Number,The method contains a magic number: 768,76
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,configureEditor,Complex Method,Cyclomatic complexity of the method is 10,148
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,highlight,Long Statement,The length of the statement "txtSrc.getHighlighter().addHighlight(t.getPos()`t.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(TEXT_DEL_COLOR));" is 126.,217
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,highlight,Long Statement,The length of the statement "txtSrc.getHighlighter().addHighlight(t.getPos()`t.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(TEXT_UPD_COLOR));" is 126.,217
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,highlight,Long Statement,The length of the statement "txtSrc.getHighlighter().addHighlight(t.getPos()`t.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(TEXT_MV_COLOR));" is 125.,217
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,highlight,Long Statement,The length of the statement "txtDst.getHighlighter().addHighlight(t.getPos()`t.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(TEXT_ADD_COLOR));" is 126.,217
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,highlight,Long Statement,The length of the statement "txtDst.getHighlighter().addHighlight(t.getPos()`t.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(TEXT_UPD_COLOR));" is 126.,217
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,highlight,Long Statement,The length of the statement "txtDst.getHighlighter().addHighlight(t.getPos()`t.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(TEXT_MV_COLOR));" is 125.,217
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,selectAndhighlightNodes,Long Parameter List,The method has 6 parameters. ,244
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,selectAndhighlightNodes,Long Statement,The length of the statement "Object selTag=selJTextArea.getHighlighter().addHighlight(sel.getPos()`sel.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(color));" is 141.,244
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.swingdiff,MappingsPanel,selectAndhighlightNodes,Long Statement,The length of the statement "Object matchTag=matchJTextArea.getHighlighter().addHighlight(match.getPos()`match.getEndPos()`new DefaultHighlighter.DefaultHighlightPainter(color));" is 149.,244
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.dotdiff,DotDiff,run,Long Statement,The length of the statement "for ( Mapping m : diff.mappings) writer.write(String.format("\t%s -> %s [style=dashed];\n"`getDotId(diff.src`m.first)`getDotId(diff.dst`m.second)));" is 148.,52
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.dotdiff,DotDiff,writeTree,Long Statement,The length of the statement "if (tree.getParent() != null) writer.write(String.format("\t\t%s -> %s;\n"`getDotId(context`tree.getParent())`getDotId(context`tree)));" is 135.,70
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.dotdiff,DotDiff,getDotLabel,Long Statement,The length of the statement "if (label.contains("\"") || label.contains("\\s")) label=label.replaceAll("\""`"").replaceAll("\\s"`"").replaceAll("\\\\"`"");" is 126.,99
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.dotdiff,DotDiff,getDotLabel,Magic Number,The method contains a magic number: 30,99
GumTreeDiff_gumtree,com.github.gumtreediff.client.diff.dotdiff,DotDiff,getDotLabel,Magic Number,The method contains a magic number: 20,99
GumTreeDiff_gumtree,com.github.gumtreediff.gen.python,TestPythonTreeGenerator,testSimple,Magic Number,The method contains a magic number: 9,35
GumTreeDiff_gumtree,com.github.gumtreediff.gen.ruby,TestRubyGenerator,testFileParsing,Long Statement,The length of the statement "Tree tree=new RubyTreeGenerator().generateFrom().charset("UTF-8").stream(getClass().getResourceAsStream("/sample.rb")).getRoot();" is 129.,37
GumTreeDiff_gumtree,com.github.gumtreediff.gen.ruby,TestRubyGenerator,testFileParsing,Magic Number,The method contains a magic number: 1726,37
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,JavaParserVisitor,process,Complex Method,Cyclomatic complexity of the method is 8,65
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,JavaParserVisitor,pushNode,Empty catch clause,The method has an empty catch block.,86
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,provideStringAndExpectedLength,Long Statement,The length of the statement "return Stream.of(arguments(COMPILATION_UNIT`12`"package foo.bar; public class Foo { public int foo; }")`arguments(COMPILATION_UNIT`37`"public class Foo<A> { public List<A> foo; public void foo() " + "{ for (A f : foo) { System.out.println(f); } } }")`arguments(COMPILATION_UNIT`23`"public class Foo {\n" + "\tpublic void foo() {\n" + "\t\tnew ArrayList<Object>().stream().forEach(a -> {});\n"+ "\t}\n"+ "}"));" is 409.,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,provideStringAndExpectedLength,Magic Number,The method contains a magic number: 12,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,provideStringAndExpectedLength,Magic Number,The method contains a magic number: 37,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,provideStringAndExpectedLength,Magic Number,The method contains a magic number: 23,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,testRange,Magic Number,The method contains a magic number: 19,62
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,testRange,Magic Number,The method contains a magic number: 6,62
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,testRange,Magic Number,The method contains a magic number: 13,62
GumTreeDiff_gumtree,com.github.gumtreediff.gen.javaparser,TestJavaParserGenerator,testRange,Magic Number,The method contains a magic number: 3,62
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,main,Magic Number,The method contains a magic number: 2,47
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,main,Magic Number,The method contains a magic number: 100,47
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,handleCase,Long Statement,The length of the statement "for ( MatcherConfig config : configurations) handleMatcher(src.getAbsolutePath().substring(ROOT_FOLDER.length() + 1)`config.name`config.matcherFactory.get()`srcT`dstT);" is 168.,81
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,handleMatcher,Long Parameter List,The method has 5 parameters. ,89
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,handleMatcher,Long Statement,The length of the statement "OUTPUT.append(String.format("%s;%s;%d;%d;%d;%d;%d;%d\n"`file`matcher`times[0]`times[1]`times[2]`times[3]`times[4]`size));" is 121.,89
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,handleMatcher,Magic Number,The method contains a magic number: 2,89
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,handleMatcher,Magic Number,The method contains a magic number: 3,89
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,handleMatcher,Magic Number,The method contains a magic number: 4,89
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,displayBar,Magic Number,The method contains a magic number: 2,117
GumTreeDiff_gumtree,com.github.gumtree.benchmark,RunOnDataset,displayBar,Magic Number,The method contains a magic number: 50,117
GumTreeDiff_gumtree,com.github.gumtreediff.gen.antlr3.r,TestRGenerator,provideStringAndExpectedLength,Magic Number,The method contains a magic number: 8,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen,ExternalProcessTreeGenerator,dumpReaderInTempFile,Magic Number,The method contains a magic number: 8192,54
GumTreeDiff_gumtree,com.github.gumtreediff.utils,HungarianAlgorithm,executePhase,Complex Method,Cyclomatic complexity of the method is 12,147
GumTreeDiff_gumtree,com.github.gumtreediff.utils,HungarianAlgorithm,greedyMatch,Complex Conditional,The conditional expression matchJobByWorker[w] == -1 && matchWorkerByJob[j] == -1 && costMatrix[w][j] - labelByWorker[w] - labelByJob[j] == 0 is complex.,224
GumTreeDiff_gumtree,com.github.gumtreediff.utils,HungarianAlgorithm,greedyMatch,Long Statement,The length of the statement "if (matchJobByWorker[w] == -1 && matchWorkerByJob[j] == -1 && costMatrix[w][j] - labelByWorker[w] - labelByJob[j] == 0) {" is 121.,224
GumTreeDiff_gumtree,com.github.gumtreediff.utils,HungarianAlgorithm,reduce,Complex Method,Cyclomatic complexity of the method is 11,267
GumTreeDiff_gumtree,com.github.gumtreediff.utils,Pair,hashCode,Magic Number,The method contains a magic number: 33,58
GumTreeDiff_gumtree,com.github.gumtreediff.utils,SequenceAlgorithms,longestCommonSubsequence,Long Statement,The length of the statement "for (int i=0; i < s0.length(); i++) for (int j=0; j < s1.length(); j++) if (s0.charAt(i) == (s1.charAt(j))) lengths[i + 1][j + 1]=lengths[i][j] + 1;" is 148.,32
GumTreeDiff_gumtree,com.github.gumtreediff.utils,SequenceAlgorithms,longestCommonSubsequenceWithTypeAndLabel,Long Statement,The length of the statement "for (int i=0; i < s0.size(); i++) for (int j=0; j < s1.size(); j++) if (s0.get(i).hasSameTypeAndLabel(s1.get(j))) lengths[i + 1][j + 1]=lengths[i][j] + 1;" is 154.,103
GumTreeDiff_gumtree,com.github.gumtreediff.utils,SequenceAlgorithms,longestCommonSubsequenceWithType,Long Statement,The length of the statement "for (int i=0; i < s0.size(); i++) for (int j=0; j < s1.size(); j++) if (s0.get(i).hasSameType(s1.get(j))) lengths[i + 1][j + 1]=lengths[i][j] + 1;" is 146.,123
GumTreeDiff_gumtree,com.github.gumtreediff.utils,SequenceAlgorithms,longestCommonSubsequenceWithIsomorphism,Long Statement,The length of the statement "for (int i=0; i < s0.size(); i++) for (int j=0; j < s1.size(); j++) if (s0.get(i).isIsomorphicTo(s1.get(j))) lengths[i + 1][j + 1]=lengths[i][j] + 1;" is 149.,143
GumTreeDiff_gumtree,com.github.gumtreediff.utils,SequenceAlgorithms,longestCommonSubsequenceWithIsostructure,Long Statement,The length of the statement "for (int i=0; i < s0.size(); i++) for (int j=0; j < s1.size(); j++) if (s0.get(i).isIsoStructuralTo(s1.get(j))) lengths[i + 1][j + 1]=lengths[i][j] + 1;" is 152.,163
GumTreeDiff_gumtree,com.github.gumtreediff.utils,Registry,defaultFactory,Long Statement,The length of the statement "throw new RuntimeException(String.format("This is a static bug. Constructor %s(%s) not found"`clazz.getName()`Arrays.toString(signature))`e);" is 141.,122
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeMetrics,TreeMetrics,Long Parameter List,The method has 6 parameters. ,60
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeMetricComputer,endInnerNode,Long Statement,The length of the statement "tree.setMetrics(new TreeMetrics(sumSize + 1`maxHeight + 1`innerNodeHash(tree`2 * sumSize + 1`currentHash)`innerNodeStructureHash(tree`2 * sumSize + 1`currentStructureHash)`currentDepth`currentPosition));" is 203.,44
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeMetricComputer,endInnerNode,Magic Number,The method contains a magic number: 2,44
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeMetricComputer,endInnerNode,Magic Number,The method contains a magic number: 2,44
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeMetricComputer,endInnerNode,Magic Number,The method contains a magic number: 2,44
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeMetricComputer,innerNodeHash,Long Statement,The length of the statement "return Objects.hash(tree.getType()`tree.getLabel()`ENTER) + middleHash + Objects.hash(tree.getType()`tree.getLabel()`LEAVE) * hashFactor(size);" is 143.,88
GumTreeDiff_gumtree,com.github.gumtreediff.tree,ImmutableTree,ImmutableTree,Long Statement,The length of the statement "children=Collections.unmodifiableList(t.getChildren().stream().map(c -> new ImmutableTree(c`this)).collect(Collectors.toList()));" is 129.,40
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeValidator,validate,Complex Method,Cyclomatic complexity of the method is 9,46
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeValidator,validate,Long Statement,The length of the statement "if (!t.getLabel().equals(Tree.NO_LABEL)) throw new TreeException(String.format("%s : %s\n%s"`"Inner node with label"`t.toString()`t.toTreeString()));" is 149.,46
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeValidator,validate,Long Statement,The length of the statement "if (t.getChildren().get(0).getPos() < t.getPos()) throw new TreeException(String.format("%s : %s\n%s"`"Children begin position before node begin position"`t.getChildren().get(0).toString()`t.toTreeString()));" is 208.,46
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeValidator,validate,Long Statement,The length of the statement "if (t.getChildren().get(t.getChildren().size() - 1).getEndPos() > t.getEndPos()) throw new TreeException(String.format("%s : %s\n%s"`"Children end position after node end position"`t.getChildren().get(t.getChildren().size() - 1).toString()`t.toTreeString()));" is 259.,46
GumTreeDiff_gumtree,com.github.gumtreediff.tree,TreeValidator,validate,Long Statement,The length of the statement "if (c.getPos() < b.getEndPos()) throw new TreeException(String.format("%s : %s\n%s"`"Sibling begin position before node end position"`c.toString()`t.toTreeString()));" is 166.,46
GumTreeDiff_gumtree,com.github.gumtreediff.tree,Tree,searchSubtree,Long Statement,The length of the statement "if (candidate.getMetrics().hash == subtree.getMetrics().hash) if (candidate.isIsomorphicTo(subtree)) results.add(candidate);" is 124.,137
GumTreeDiff_gumtree,com.github.gumtreediff.io,IndentingXMLStreamWriter,beforeMarkup,Complex Conditional,The conditional expression (soFar & WROTE_DATA) == 0 && (depth > 0 || soFar != 0) is complex.,270
GumTreeDiff_gumtree,com.github.gumtreediff.io,IndentingXMLStreamWriter,beforeStartElement,Magic Number,The method contains a magic number: 2,296
GumTreeDiff_gumtree,com.github.gumtreediff.io,IndentingXMLStreamWriter,writeNewLine,Magic Number,The method contains a magic number: 2,344
GumTreeDiff_gumtree,com.github.gumtreediff.io,TreeIoUtils,toXml,Long Statement,The length of the statement "@Override protected TreeFormatter newFormatter( TreeContext ctx` MetadataSerializers serializers` Writer writer) throws XMLStreamException {" is 140.,74
GumTreeDiff_gumtree,com.github.gumtreediff.io,TreeIoUtils,toAnnotatedXml,Long Statement,The length of the statement "@Override protected TreeFormatter newFormatter( TreeContext ctx` MetadataSerializers serializers` Writer writer) throws XMLStreamException {" is 140.,88
GumTreeDiff_gumtree,com.github.gumtreediff.io,TreeIoUtils,toCompactXml,Long Statement,The length of the statement "@Override protected TreeFormatter newFormatter( TreeContext ctx` MetadataSerializers serializers` Writer writer) throws Exception {" is 131.,102
GumTreeDiff_gumtree,com.github.gumtreediff.io,DirectoryComparator,DirectoryComparator,Complex Conditional,The conditional expression (Files.isDirectory(this.src) && Files.isRegularFile(this.dst)) || (Files.isRegularFile(this.src) && Files.isDirectory(this.dst)) is complex.,47
GumTreeDiff_gumtree,com.github.gumtreediff.io,DirectoryComparator,DirectoryComparator,Long Statement,The length of the statement "if ((Files.isDirectory(this.src) && Files.isRegularFile(this.dst)) || (Files.isRegularFile(this.src) && Files.isDirectory(this.dst))) throw new IllegalArgumentException("File " + this.src + " and "+ this.dst+ "are not of the same type (file and folder).");" is 256.,47
GumTreeDiff_gumtree,com.github.gumtreediff.io,DirectoryComparator,compare,Long Statement,The length of the statement "for ( String file : commonFiles) if (hasChanged(file`file)) modifiedFiles.add(new Pair<>(toSrcFile(file)`toDstFile(file)));" is 123.,73
GumTreeDiff_gumtree,com.github.gumtreediff.io,DirectoryComparator,hasChanged,Long Statement,The length of the statement "try (InputStream dis1=new BufferedInputStream(new FileInputStream(f1));InputStream dis2=new BufferedInputStream(new FileInputStream(f2))){" is 138.,139
GumTreeDiff_gumtree,com.github.gumtreediff.matchers,SimilarityMetrics,diceSimilarity,Long Statement,The length of the statement "return diceCoefficient(numberOfMappedDescendants(src`dst`mappings)`src.getDescendants().size()`dst.getDescendants().size());" is 124.,40
GumTreeDiff_gumtree,com.github.gumtreediff.matchers,SimilarityMetrics,jaccardSimilarity,Long Statement,The length of the statement "return jaccardIndex(numberOfMappedDescendants(src`dst`mappings)`src.getDescendants().size()`dst.getDescendants().size());" is 121.,45
GumTreeDiff_gumtree,com.github.gumtreediff.matchers,SimilarityMetrics,diceCoefficient,Magic Number,The method contains a magic number: 2D,50
GumTreeDiff_gumtree,com.github.gumtreediff.matchers,GumtreeProperties,toString,Long Statement,The length of the statement "return properties.keySet().stream().map(key -> key + "=" + properties.get(key)).collect(Collectors.joining("` "`"{"`"}"));" is 122.,103
GumTreeDiff_gumtree,com.github.gumtreediff.matchers,Configurable,setOption,Long Statement,The length of the statement "if (!getApplicableOptions().contains(option)) throw new IllegalArgumentException("Option " + option.name() + " is not allowed. Applicable options are: "+ getApplicableOptions());" is 178.,51
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,init,Magic Number,The method contains a magic number: 3,121
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,init,Magic Number,The method contains a magic number: 3,121
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeOptimalStrategy,Complex Method,Cyclomatic complexity of the method is 9,170
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeOptimalStrategy,Magic Number,The method contains a magic number: 2,170
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeOptimalStrategy,Magic Number,The method contains a magic number: 6,170
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Complex Method,Cyclomatic complexity of the method is 25,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Magic Number,The method contains a magic number: 3,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Magic Number,The method contains a magic number: 3,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Magic Number,The method contains a magic number: 3,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Magic Number,The method contains a magic number: 3,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Magic Number,The method contains a magic number: 3,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Magic Number,The method contains a magic number: 3,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeDistUsingStrArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3bf5fcd6,274
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,spfL,Long Statement,The length of the statement "return it1.isSwitched() ? delta[gPostorder][fPostorder] + deltaBit[gPostorder][fPostorder] * costMatch : delta[fPostorder][gPostorder] + deltaBit[fPostorder][gPostorder] * costMatch;" is 182.,424
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDist,Long Statement,The length of the statement "if ((it1.info[POST2_LLD][i1 + ioff] == it1.info[POST2_LLD][i]) && (it2.info[POST2_LLD][j1 + joff] == it2.info[POST2_LLD][j])) {" is 127.,452
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDist,Long Statement,The length of the statement "dc=forestdist[it1.info[POST2_LLD][i1 + ioff] - 1 - ioff][it2.info[POST2_LLD][j1 + joff] - 1 - joff] + (switched ? delta[j1 + joff][i1 + ioff] : delta[i1 + ioff][j1 + joff]) + u;" is 177.,452
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDist,Magic Number,The method contains a magic number: 2,452
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDist,Magic Number,The method contains a magic number: 2,452
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,spfR,Long Statement,The length of the statement "if (minRKR > -1) for (int j=minRKR; rkr[j] < gReversedPostorder; j++) treeEditDistRev(it1`it2`fReversedPostorder`rkr[j]);" is 121.,486
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,spfR,Long Statement,The length of the statement "return it1.isSwitched() ? delta[it2.getCurrentNode()][it1.getCurrentNode()] + deltaBit[it2.getCurrentNode()][it1.getCurrentNode()] * costMatch : delta[it1.getCurrentNode()][it2.getCurrentNode()] + deltaBit[it1.getCurrentNode()][it2.getCurrentNode()] * costMatch;" is 262.,486
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDistRev,Long Statement,The length of the statement "if ((it1.info[RPOST2_RLD][i1 + ioff] == it1.info[RPOST2_RLD][i]) && (it2.info[RPOST2_RLD][j1 + joff] == it2.info[RPOST2_RLD][j])) {" is 131.,512
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDistRev,Long Statement,The length of the statement "if (it1.info[POST2_LABEL][it1.info[RPOST2_POST][i1 + ioff]] != it2.info[POST2_LABEL][it2.info[RPOST2_POST][j1 + joff]]) u=costMatch;" is 132.,512
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDistRev,Long Statement,The length of the statement "setDeltaBitValue(it1.info[RPOST2_POST][i1 + ioff]`it2.info[RPOST2_POST][j1 + joff]`(byte)((forestdist[i1][j1] - forestdist[i1 - 1][j1 - 1] > 0) ? 1 : 0)`switched);" is 163.,512
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDistRev,Long Statement,The length of the statement "u=switched ? deltaBit[it2.info[RPOST2_POST][j1 + joff]][it1.info[RPOST2_POST][i1 + ioff]] * costMatch : deltaBit[it1.info[RPOST2_POST][i1 + ioff]][it2.info[RPOST2_POST][j1 + joff]] * costMatch;" is 193.,512
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDistRev,Long Statement,The length of the statement "dc=forestdist[it1.info[RPOST2_RLD][i1 + ioff] - 1 - ioff][it2.info[RPOST2_RLD][j1 + joff] - 1 - joff] + (switched ? delta[it2.info[RPOST2_POST][j1 + joff]][it1.info[RPOST2_POST][i1 + ioff]] : delta[it1.info[RPOST2_POST][i1 + ioff]][it2.info[RPOST2_POST][j1 + joff]]) + u;" is 271.,512
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDistRev,Magic Number,The method contains a magic number: 2,512
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,treeEditDistRev,Magic Number,The method contains a magic number: 2,512
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,spfH,Complex Method,Cyclomatic complexity of the method is 12,565
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Complex Method,Cyclomatic complexity of the method is 23,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Method,The method has 144 lines of code.,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Parameter List,The method has 5 parameters. ,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Statement,The length of the statement "fForestPreorderKPrime=aStrategy == LEFT ? vpPreorder + (k - kPrime) : it1.info[POST2_PRE][fTreeSize - 1 - (vpRevPreorder + (k - kPrime))];" is 138.,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Statement,The length of the statement "match+=switched ? delta[it2.info[PRE2_POST][gijForestPreorder]][it1.info[PRE2_POST][fForestPreorderKPrime]] : delta[it1.info[PRE2_POST][fForestPreorderKPrime]][it2.info[PRE2_POST][gijForestPreorder]];" is 200.,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Statement,The length of the statement "s[kPrime - 1][j]=(deleteFromLeft < deleteFromRight) ? ((deleteFromLeft < match) ? deleteFromLeft : match) : ((deleteFromRight < match) ? deleteFromRight : match);" is 162.,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Statement,The length of the statement "gijOfIMinus1Preorder=aStrategy == LEFT ? it2.info[POST2_PRE][gTreeSize - 1 - (gRevPreorder + (i - 1))] : gPreorder + (i - 1);" is 125.,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Statement,The length of the statement "setDeltaValue(it1.info[PRE2_POST][vpPreorder]`it2.info[PRE2_POST][gijOfIMinus1Preorder]`tCOPY[previousI][i + jOfIminus1 - previousI]`switched);" is 143.,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computePeriod,Long Statement,The length of the statement "setDeltaValue(it1.info[PRE2_POST][vpPreorder]`it2.info[PRE2_POST][gijOfIMinus1Preorder]`s[k - 1 - 1][jOfIminus1]`switched);" is 123.,641
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeIJTable,Complex Method,Cyclomatic complexity of the method is 10,915
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeIJTable,Long Parameter List,The method has 6 parameters. ,915
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,jOfI,Long Parameter List,The method has 7 parameters. ,967
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,jOfI,Long Statement,The length of the statement "return aStrategy == LEFT ? aSubtreeWeight - aI - it.info[POST2_SIZE][treeSize - 1 - (aSubtreeRevPre + aI)] : aSubtreeWeight - aI - it.info[POST2_SIZE][it.info[RPOST2_POST][treeSize - 1 - (aSubtreePre + aI)]];" is 208.,967
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,setCustomStrategy,Magic Number,The method contains a magic number: 4,1015
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeEditMapping,Complex Method,Cyclomatic complexity of the method is 11,1031
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,computeEditMapping,Long Statement,The length of the statement "if ((it1.getInfo(POST2_LLD`row - 1) == it1.getInfo(POST2_LLD`lastRow - 1)) && (it2.getInfo(POST2_LLD`col - 1) == it2.getInfo(POST2_LLD`lastCol - 1))) {" is 151.,1031
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,forestDist,Long Parameter List,The method has 6 parameters. ,1131
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,forestDist,Long Statement,The length of the statement "forestdist[di][ted2.getInfo(POST2_LLD`j - 1) + 1 - 1]=forestdist[di - 1][ted2.getInfo(POST2_LLD`j - 1) + 1 - 1] + costDel;" is 122.,1131
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,forestDist,Long Statement,The length of the statement "forestdist[ted1.getInfo(POST2_LLD`i - 1) + 1 - 1][dj]=forestdist[ted1.getInfo(POST2_LLD`i - 1) + 1 - 1][dj - 1] + costIns;" is 122.,1131
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,forestDist,Long Statement,The length of the statement "if ((ted1.getInfo(POST2_LLD`di - 1) == ted1.getInfo(POST2_LLD`i - 1)) && (ted2.getInfo(POST2_LLD`dj - 1) == ted2.getInfo(POST2_LLD`j - 1))) {" is 141.,1131
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,forestDist,Long Statement,The length of the statement "forestdist[di][dj]=Math.min(Math.min(forestdist[di - 1][dj] + costDel`forestdist[di][dj - 1] + costIns)`forestdist[di - 1][dj - 1] + costRen);" is 142.,1131
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,RtedAlgorithm,forestDist,Long Statement,The length of the statement "forestdist[di][dj]=Math.min(Math.min(forestdist[di - 1][dj] + costDel`forestdist[di][dj - 1] + costIns)`forestdist[ted1.getInfo(POST2_LLD`di - 1) + 1 - 1][ted2.getInfo(POST2_LLD`dj - 1) + 1 - 1] + treedist[di][dj]);" is 215.,1131
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,InfoTree,Magic Number,The method contains a magic number: 16,90
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,InfoTree,Magic Number,The method contains a magic number: 3,90
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,InfoTree,Magic Number,The method contains a magic number: 3,90
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,InfoTree,Magic Number,The method contains a magic number: 3,90
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,gatherInfo,Complex Method,Cyclomatic complexity of the method is 16,195
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,gatherInfo,Magic Number,The method contains a magic number: 3,195
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,gatherInfo,Magic Number,The method contains a magic number: 2,195
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.rted,InfoTree,postTraversalProcessing,Complex Method,Cyclomatic complexity of the method is 11,345
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.zs,ZsMatcher,forestDist,Long Statement,The length of the statement "forestDist[di][dj]=Math.min(Math.min(forestDist[di - 1][dj] + costDel`forestDist[di][dj - 1] + costIns)`forestDist[di - 1][dj - 1] + costUpd);" is 142.,72
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.zs,ZsMatcher,forestDist,Long Statement,The length of the statement "forestDist[di][dj]=Math.min(Math.min(forestDist[di - 1][dj] + costDel`forestDist[di][dj - 1] + costIns)`forestDist[zsSrc.lld(di) - 1][zsDst.lld(dj) - 1] + treeDist[di][dj]);" is 173.,72
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal.zs,ZsMatcher,match,Complex Method,Cyclomatic complexity of the method is 8,96
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal,TopDownMatcher,recursiveMatch,Long Statement,The length of the statement "if (!src.hasSameType(dst)) throw new RuntimeException(String.format("Top down matching aborted due to a type difference between %s and %s"`src`dst));" is 149.,33
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimal,TopDownMatcher,recursiveMatch,Long Statement,The length of the statement "if (src.getChildren().size() != dst.getChildren().size()) throw new RuntimeException(String.format("Top down matching aborted due to a children difference between %s and %s"`src.toTreeString()`dst.toTreeString()));" is 214.,33
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,thetaE,Complex Conditional,The conditional expression !entry.first.getLabel().equals(entry.second.getLabel()) && entry.first.isLeaf() && entry.second.isLeaf() is complex.,68
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,thetaE,Complex Conditional,The conditional expression !entry.first.getLabel().equals(entry.second.getLabel()) && entry.first.isLeaf() && entry.second.isLeaf() is complex.,68
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,thetaE,Complex Method,Cyclomatic complexity of the method is 18,68
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Complex Conditional,The conditional expression (count == 1 && foundDstNode != null) || foundPosDstNode != null is complex.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Complex Conditional,The conditional expression child.isLeaf() && !mappings.isDstMapped(child) && child.getType() == pair.second.getType() && child.getLabel().equals(pair.second.getLabel()) is complex.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Complex Conditional,The conditional expression (count == 1 && foundSrcNode != null) || foundPosSrcNode != null is complex.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Complex Conditional,The conditional expression foundDst != null && foundSrcNode != null && !foundDst.getLabel().equals(foundSrcNode.getLabel()) is complex.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Complex Conditional,The conditional expression child.isLeaf() && !mappings.isSrcMapped(child) && child.getType() == pair.first.getType() && child.getLabel().equals(pair.first.getLabel()) is complex.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Complex Method,Cyclomatic complexity of the method is 36,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Long Method,The method has 123 lines of code.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Long Statement,The length of the statement "if (child.isLeaf() && !mappings.isDstMapped(child) && child.getType() == pair.second.getType() && child.getLabel().equals(pair.second.getLabel())) {" is 148.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LeafMoveMatcherThetaE,reevaluateLeaves,Long Statement,The length of the statement "if (child.isLeaf() && !mappings.isSrcMapped(child) && child.getType() == pair.first.getType() && child.getLabel().equals(pair.first.getLabel())) {" is 146.,140
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,CrossMoveMatcherThetaF,thetaF,Complex Conditional,The conditional expression pair.first.getLabel().equals(childNewOther.getLabel()) && childOldOther.getLabel().equals(pair.second.getLabel()) || !(pair.first.getLabel().equals(pair.second.getLabel()) || childOldOther.getLabel().equals(childNewOther.getLabel())) is complex.,52
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,CrossMoveMatcherThetaF,thetaF,Complex Conditional,The conditional expression pair.first.getLabel().equals(childNewOther.getLabel()) && childOldOther.getLabel().equals(pair.second.getLabel()) || !(pair.first.getLabel().equals(pair.second.getLabel()) || childOldOther.getLabel().equals(childNewOther.getLabel())) is complex.,52
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,CrossMoveMatcherThetaF,thetaF,Complex Method,Cyclomatic complexity of the method is 16,52
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,CrossMoveMatcherThetaF,thetaF,Long Statement,The length of the statement "if (pair.first.getLabel().equals(childNewOther.getLabel()) && childOldOther.getLabel().equals(pair.second.getLabel()) || !(pair.first.getLabel().equals(pair.second.getLabel()) || childOldOther.getLabel().equals(childNewOther.getLabel()))) {" is 240.,52
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,CrossMoveMatcherThetaF,thetaF,Long Statement,The length of the statement "if (pair.first.getLabel().equals(childNewOther.getLabel()) && childOldOther.getLabel().equals(pair.second.getLabel()) || !(pair.first.getLabel().equals(pair.second.getLabel()) || childOldOther.getLabel().equals(childNewOther.getLabel()))) {" is 240.,52
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LcsOptMatcherThetaB,advancedLcsMatching,Complex Method,Cyclomatic complexity of the method is 15,54
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,LcsOptMatcherThetaB,backtrack,Long Parameter List,The method has 8 parameters. ,116
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,UnmappedLeavesMatcherThetaC,thetaC,Complex Method,Cyclomatic complexity of the method is 52,49
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,UnmappedLeavesMatcherThetaC,thetaC,Long Method,The method has 196 lines of code.,49
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,InnerNodesMatcherThetaD,thetaD,Complex Method,Cyclomatic complexity of the method is 20,73
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,InnerNodesMatcherThetaD,thetaD,Magic Number,The method contains a magic number: 2,73
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,IdenticalSubtreeMatcherThetaA,newUnchangedMatching,Complex Conditional,The conditional expression oldList.size() == 1 && newList != null && newList.size() == 1 is complex.,78
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.optimizations,IdenticalSubtreeMatcherThetaA,newUnchangedMatching,Complex Method,Cyclomatic complexity of the method is 10,78
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic,XyBottomUpMatcher,lastChanceMatch,Complex Conditional,The conditional expression srcTypes.get(type).size() == 1 && dstTypes.get(type) != null && dstTypes.get(type).size() == 1 is complex.,105
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic,XyBottomUpMatcher,lastChanceMatch,Long Statement,The length of the statement "for ( var type : srcTypes.keySet()) if (srcTypes.get(type).size() == 1 && dstTypes.get(type) != null && dstTypes.get(type).size() == 1) mappings.addMapping(srcTypes.get(type).get(0)`dstTypes.get(type).get(0));" is 209.,105
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic,IdMatcher,match,Complex Conditional,The conditional expression srcCandidateMappings.get(id).size() == 1 && dstCandidateMappings.containsKey(id) && dstCandidateMappings.get(id).size() == 1 is complex.,33
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic,IdMatcher,match,Complex Method,Cyclomatic complexity of the method is 9,33
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic,IdMatcher,match,Long Statement,The length of the statement "if (srcCandidateMappings.get(id).size() == 1 && dstCandidateMappings.containsKey(id) && dstCandidateMappings.get(id).size() == 1) mappings.addMapping(srcCandidateMappings.get(id).iterator().next()`dstCandidateMappings.get(id).iterator().next());" is 245.,33
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.cd,ChangeDistillerParallelLeavesMatcher,match,Magic Number,The method contains a magic number: 10,63
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.cd,ChangeDistillerBottomUpMatcher,configure,Long Identifier,The length of the field DEFAULT_STRUCT_SIM_THRESHOLD_1 is 30.,48
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.cd,ChangeDistillerBottomUpMatcher,configure,Long Identifier,The length of the field DEFAULT_STRUCT_SIM_THRESHOLD_2 is 30.,48
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.cd,ChangeDistillerBottomUpMatcher,match,Complex Conditional,The conditional expression mappings.isMappingAllowed(currentSrcTree`currentDstTree) && !(currentSrcTree.isLeaf() || currentDstTree.isLeaf()) is complex.,60
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.cd,ChangeDistillerBottomUpMatcher,match,Complex Conditional,The conditional expression (numberOfLeaves > maxNumberOfLeaves && similarity >= structSimThreshold1) || (numberOfLeaves <= maxNumberOfLeaves && similarity >= structSimThreshold2) is complex.,60
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.cd,ChangeDistillerBottomUpMatcher,match,Long Statement,The length of the statement "if ((numberOfLeaves > maxNumberOfLeaves && similarity >= structSimThreshold1) || (numberOfLeaves <= maxNumberOfLeaves && similarity >= structSimThreshold2)) {" is 158.,60
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.cd,ChangeDistillerBottomUpMatcher,getApplicableOptions,Long Statement,The length of the statement "return Sets.newHashSet(ConfigurationOptions.cd_structsim1`ConfigurationOptions.cd_structsim2`ConfigurationOptions.cd_maxleaves);" is 128.,113
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,CompleteBottomUpMatcher,match,Complex Method,Cyclomatic complexity of the method is 8,39
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,match,Complex Conditional,The conditional expression mappings.isSrcMapped(t) && mappings.hasUnmappedSrcChildren(t) && mappings.hasUnmappedDstChildren(mappings.getDstForSrc(t)) is complex.,42
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,match,Complex Method,Cyclomatic complexity of the method is 8,42
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,match,Long Statement,The length of the statement "else if (mappings.isSrcMapped(t) && mappings.hasUnmappedSrcChildren(t) && mappings.hasUnmappedDstChildren(mappings.getDstForSrc(t))) lastChanceMatch(mappings`t`mappings.getDstForSrc(t));" is 186.,42
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,getDstCandidates,Complex Conditional,The conditional expression parent.getType() == src.getType() && !mappings.isDstMapped(parent) && !parent.isRoot() is complex.,77
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,lastChanceMatch,Long Statement,The length of the statement "if (src.getMetrics().size < sizeThreshold || dst.getMetrics().size < sizeThreshold) optimalLastChanceMatch(mappings`src`dst);" is 125.,101
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,simpleLastChanceMatch,Long Statement,The length of the statement "else if (!(src.isRoot() || dst.isRoot())) if (src.getParent().getType() == dst.getParent().getType()) histogramMatching(mappings`src`dst);" is 138.,119
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,lcsEqualMatching,Long Statement,The length of the statement "if (mappings.areSrcsUnmapped(TreeUtils.preOrder(t1)) && mappings.areDstsUnmapped(TreeUtils.preOrder(t2))) mappings.addMappingRecursively(t1`t2);" is 144.,129
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,lcsStructureMatching,Long Statement,The length of the statement "if (mappings.areSrcsUnmapped(TreeUtils.preOrder(t1)) && mappings.areDstsUnmapped(TreeUtils.preOrder(t2))) mappings.addMappingRecursively(t1`t2);" is 144.,142
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,histogramMatching,Complex Conditional,The conditional expression dstHistogram.containsKey(t) && srcHistogram.get(t).size() == 1 && dstHistogram.get(t).size() == 1 is complex.,155
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HybridBottomUpMatcher,histogramMatching,Complex Method,Cyclomatic complexity of the method is 8,155
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,AbstractSubtreeMatcher,configure,Long Statement,The length of the statement "this.priorityCalculator=PriorityTreeQueue.getPriorityCalculator(properties.tryConfigure(ConfigurationOptions.st_priocalc`DEFAULT_PRIORITY_CALCULATOR));" is 151.,46
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,AbstractSubtreeMatcher,match,Long Statement,The length of the statement "localHashMappings.unique().forEach((pair) -> mappings.addMappingRecursively(pair.first.stream().findAny().get()`pair.second.stream().findAny().get()));" is 151.,53
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,GreedySubtreeMatcher,handleAmbiguousMappings,Long Statement,The length of the statement "if (mappings.areBothUnmapped(mapping.first`mapping.second)) mappings.addMappingRecursively(mapping.first`mapping.second);" is 121.,33
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,SimpleBottomUpMatcher,match,Complex Conditional,The conditional expression mappings.isSrcMapped(t) && mappings.hasUnmappedSrcChildren(t) && mappings.hasUnmappedDstChildren(mappings.getDstForSrc(t)) is complex.,40
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,SimpleBottomUpMatcher,match,Complex Method,Cyclomatic complexity of the method is 8,40
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,SimpleBottomUpMatcher,match,Long Statement,The length of the statement "else if (mappings.isSrcMapped(t) && mappings.hasUnmappedSrcChildren(t) && mappings.hasUnmappedDstChildren(mappings.getDstForSrc(t))) lastChanceMatch(mappings`t`mappings.getDstForSrc(t));" is 186.,40
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,SimpleBottomUpMatcher,getDstCandidates,Complex Conditional,The conditional expression parent.getType() == src.getType() && !mappings.isDstMapped(parent) && !parent.isRoot() is complex.,75
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,SimpleBottomUpMatcher,lcsEqualMatching,Long Statement,The length of the statement "if (mappings.areSrcsUnmapped(TreeUtils.preOrder(t1)) && mappings.areDstsUnmapped(TreeUtils.preOrder(t2))) mappings.addMappingRecursively(t1`t2);" is 144.,105
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,SimpleBottomUpMatcher,lcsStructureMatching,Long Statement,The length of the statement "if (mappings.areSrcsUnmapped(TreeUtils.preOrder(t1)) && mappings.areDstsUnmapped(TreeUtils.preOrder(t2))) mappings.addMappingRecursively(t1`t2);" is 144.,127
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,SimpleBottomUpMatcher,histogramMatching,Complex Conditional,The conditional expression dstHistogram.containsKey(t) && srcHistogram.get(t).size() == 1 && dstHistogram.get(t).size() == 1 is complex.,149
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,AbstractBottomUpMatcher,getDstCandidates,Complex Conditional,The conditional expression parent.getType() == src.getType() && !(mappings.isDstMapped(parent) || parent.isRoot()) is complex.,53
GumTreeDiff_gumtree,com.github.gumtreediff.matchers.heuristic.gt,HashBasedMapper,ambiguous,Long Statement,The length of the statement "return mappings.values().stream().filter((value) -> (value.first.size() > 1 && value.second.size() >= 1) || (value.first.size() >= 1 && value.second.size() > 1));" is 162.,64
GumTreeDiff_gumtree,com.github.gumtreediff.actions,AllNodesClassifier,classify,Complex Method,Cyclomatic complexity of the method is 8,37
GumTreeDiff_gumtree,com.github.gumtreediff.actions,Diff,compute,Long Parameter List,The method has 5 parameters. ,67
GumTreeDiff_gumtree,com.github.gumtreediff.actions,Diff,computeWithCommand,Long Parameter List,The method has 5 parameters. ,88
GumTreeDiff_gumtree,com.github.gumtreediff.actions,ActionClusterFinder,ActionClusterFinder,Complex Conditional,The conditional expression embeddedInserts(a1`a2) || sameValueUpdates(a1`a2) || sameParentMoves(a1`a2)|| embeddedDeletes(a1`a2) is complex.,35
GumTreeDiff_gumtree,com.github.gumtreediff.actions,ActionClusterFinder,ActionClusterFinder,Long Statement,The length of the statement "if (embeddedInserts(a1`a2) || sameValueUpdates(a1`a2) || sameParentMoves(a1`a2)|| embeddedDeletes(a1`a2)) graph.addEdge(a1`a2);" is 127.,35
GumTreeDiff_gumtree,com.github.gumtreediff.actions,ActionClusterFinder,getClusterLabel,Complex Method,Cyclomatic complexity of the method is 10,98
GumTreeDiff_gumtree,com.github.gumtreediff.actions,SimplifiedChawatheScriptGenerator,simplify,Complex Method,Cyclomatic complexity of the method is 10,42
GumTreeDiff_gumtree,com.github.gumtreediff.actions,SimplifiedChawatheScriptGenerator,simplify,Long Statement,The length of the statement "if (addedTrees.keySet().contains(t.getParent()) && addedTrees.keySet().containsAll(t.getParent().getDescendants())) actions.remove(addedTrees.get(t));" is 150.,42
GumTreeDiff_gumtree,com.github.gumtreediff.actions,SimplifiedChawatheScriptGenerator,simplify,Long Statement,The length of the statement "if (deletedTrees.keySet().contains(t.getParent()) && deletedTrees.keySet().containsAll(t.getParent().getDescendants())) actions.remove(deletedTrees.get(t));" is 156.,42
GumTreeDiff_gumtree,com.github.gumtreediff.actions,AbstractITreeClassifier,AbstractITreeClassifier,Abstract Function Call From Constructor,The constructor AbstractITreeClassifier calls a virtual method classify.,43
GumTreeDiff_gumtree,com.github.gumtreediff.actions,OnlyRootsClassifier,classify,Complex Method,Cyclomatic complexity of the method is 14,38
GumTreeDiff_gumtree,com.github.gumtreediff.actions,OnlyRootsClassifier,classify,Long Statement,The length of the statement "if (!(deletedSrcs.containsAll(a.getNode().getDescendants()) && deletedSrcs.contains(a.getNode().getParent()))) srcDelTrees.add(a.getNode());" is 140.,38
GumTreeDiff_gumtree,com.github.gumtreediff.actions,OnlyRootsClassifier,classify,Long Statement,The length of the statement "if (!(insertedDsts.containsAll(a.getNode().getDescendants()) && insertedDsts.contains(a.getNode().getParent()))) dstAddTrees.add(a.getNode());" is 142.,38
GumTreeDiff_gumtree,com.github.gumtreediff.actions,ChawatheScriptGenerator,generate,Complex Method,Cyclomatic complexity of the method is 8,82
GumTreeDiff_gumtree,com.github.gumtreediff.actions,ChawatheScriptGenerator,alignChildren,Complex Method,Cyclomatic complexity of the method is 12,142
GumTreeDiff_gumtree,com.github.gumtreediff.actions,ChawatheScriptGenerator,alignChildren,Long Statement,The length of the statement "for ( Tree c : w.getChildren()) if (cpyMappings.isSrcMapped(c)) if (x.getChildren().contains(cpyMappings.getDstForSrc(c))) s1.add(c);" is 133.,142
GumTreeDiff_gumtree,com.github.gumtreediff.actions,ChawatheScriptGenerator,alignChildren,Long Statement,The length of the statement "for ( Tree c : x.getChildren()) if (cpyMappings.isDstMapped(c)) if (w.getChildren().contains(cpyMappings.getSrcForDst(c))) s2.add(c);" is 133.,142
GumTreeDiff_gumtree,com.github.gumtreediff.actions.model,Addition,toString,Long Statement,The length of the statement "return String.format("===\n%s\n---\n%s\nto\n%s\nat %d"`getName()`node.toString()`(parent != null) ? parent.toString() : "root"`pos);" is 132.,44
GumTreeDiff_gumtree,com.github.gumtreediff.actions.model,TreeAddition,toString,Long Statement,The length of the statement "return String.format("===\n%s\n---\n%s\nto\n%s\nat %d"`getName()`node.toTreeString()`(parent != null) ? parent.toString() : "root"`pos);" is 136.,43
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testSearchSubtree,Magic Number,The method contains a magic number: 2,33
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testTreesBetweenPositions,Magic Number,The method contains a magic number: 100,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testTreesBetweenPositions,Magic Number,The method contains a magic number: 200,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testTreesBetweenPositions,Magic Number,The method contains a magic number: 100,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testTreesBetweenPositions,Magic Number,The method contains a magic number: 5,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testTreesBetweenPositions,Magic Number,The method contains a magic number: 10,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testTreesBetweenPositions,Magic Number,The method contains a magic number: 2,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testGetParents,Magic Number,The method contains a magic number: 2,97
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testGetDescendants,Magic Number,The method contains a magic number: 2,109
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testChildManipulation,Magic Number,The method contains a magic number: 2,120
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testChildManipulation,Magic Number,The method contains a magic number: 2,120
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testImmutable,Magic Number,The method contains a magic number: 12,218
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testImmutable,Magic Number,The method contains a magic number: 12,218
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTree,testToString,Magic Number,The method contains a magic number: 2,277
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestAlgorithms,testLcss,Magic Number,The method contains a magic number: 3,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestAlgorithms,testHungarianAlgorithm,Magic Number,The method contains a magic number: 3,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestAlgorithms,testHungarianAlgorithm,Magic Number,The method contains a magic number: 2,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestAlgorithms,testHungarianAlgorithm,Magic Number,The method contains a magic number: 2,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestAlgorithms,testHungarianAlgorithm,Magic Number,The method contains a magic number: 2,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestClassicGumtreeStability,testStability,Magic Number,The method contains a magic number: 20,38
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestZsMatcher,testWithCustomExample,Magic Number,The method contains a magic number: 6,35
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestZsMatcher,testWithSlideExample,Magic Number,The method contains a magic number: 5,50
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestZsMatcher,testWithSlideExample,Magic Number,The method contains a magic number: 2,50
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDirectoryComparator,testDirectoryComparatorOnTwoFolders,Magic Number,The method contains a magic number: 2,38
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDirectoryComparator,testDirectoryComparatorOnTwoFolders,Magic Number,The method contains a magic number: 2,38
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testBottomUpMatcher,Magic Number,The method contains a magic number: 0.5,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testBottomUpMatcher,Magic Number,The method contains a magic number: 0.888888,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testChangeDistillerBottomUpMatcher,Magic Number,The method contains a magic number: 0.9999,73
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testChangeDistillerBottomUpMatcher,Magic Number,The method contains a magic number: 1111,73
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testChangeDistillerBottomUpMatcher,Magic Number,The method contains a magic number: 3,73
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testChangeDistillerLeavesMatcher,Magic Number,The method contains a magic number: 0.99999,107
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testAbstractBottomUpMatcher,Magic Number,The method contains a magic number: 0.99,122
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testAbstractBottomUpMatcher,Magic Number,The method contains a magic number: 1000,122
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testAbstractBottomUpMatcher,Magic Number,The method contains a magic number: 2,122
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testAbstractSubtreeMatcher,Magic Number,The method contains a magic number: 10,143
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testAbstractSubtreeMatcher,Magic Number,The method contains a magic number: 2,143
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testCompositeMatcher,Long Identifier,The length of the identifier optionsFromGreedyBottomUpMatcher is 32.,159
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testCompositeMatcher,Magic Number,The method contains a magic number: 99999,159
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testCompositeMatcher,Magic Number,The method contains a magic number: 989898,159
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testCompositeMatcher,Magic Number,The method contains a magic number: 2,159
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeProperties,testCompositeMatcher,Magic Number,The method contains a magic number: 2,159
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestOptimizedMatchers,testRtedThetaMatcher,Magic Number,The method contains a magic number: 5,35
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestOptimizedMatchers,testRtedThetaMatcher,Magic Number,The method contains a magic number: 2,35
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestOptimizedMatchers,testChangeDistillerThetaParMatcher,Magic Number,The method contains a magic number: 5,49
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestOptimizedMatchers,testChangeDistillerThetaParMatcher,Magic Number,The method contains a magic number: 2,49
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestOptimizedMatchers,testClassicGumtreeThetaMatcher,Magic Number,The method contains a magic number: 5,63
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestOptimizedMatchers,testClassicGumtreeThetaMatcher,Magic Number,The method contains a magic number: 2,63
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestSimilarityMetrics,testDiceSimilarity,Magic Number,The method contains a magic number: 2D,32
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestSimilarityMetrics,testDiceSimilarity,Magic Number,The method contains a magic number: 3D,32
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestSimilarityMetrics,testJaccardSimilarity,Magic Number,The method contains a magic number: 0.5D,38
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestSimilarityMetrics,testChawatheSimilarity,Magic Number,The method contains a magic number: 0.6D,44
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestSimilarityMetrics,testOverlapSimilarity,Magic Number,The method contains a magic number: 0.75D,50
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestSequenceAlgorithms,testITreeLcss,Long Statement,The length of the statement "List<Tree> l1=Arrays.asList(new DefaultTree[]{new DefaultTree(TypeSet.type("a"))`new DefaultTree(TypeSet.type("b"))`new DefaultTree(TypeSet.type("c"))`new DefaultTree(TypeSet.type("d"))`new DefaultTree(TypeSet.type("e"))`new DefaultTree(TypeSet.type("f"))`new DefaultTree(TypeSet.type("g"))});" is 293.,46
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestSequenceAlgorithms,testITreeLcss,Long Statement,The length of the statement "List<Tree> l2=Arrays.asList(new DefaultTree[]{new DefaultTree(TypeSet.type("a"))`new DefaultTree(TypeSet.type("g"))`new DefaultTree(TypeSet.type("c"))`new DefaultTree(TypeSet.type("e"))`new DefaultTree(TypeSet.type("f"))`new DefaultTree(TypeSet.type("d"))});" is 258.,46
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestRegistries,testTreeGenerators,Long Statement,The length of the statement "generators.install(FooTreeGenerator.class`FooTreeGenerator.class.getAnnotation(com.github.gumtreediff.gen.Register.class));" is 123.,42
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestRegistries,testTreeGenerators,Long Statement,The length of the statement "generators.install(BarTreeGenerator.class`BarTreeGenerator.class.getAnnotation(com.github.gumtreediff.gen.Register.class));" is 123.,42
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingComparators,testTwinMappings,Long Statement,The length of the statement "MappingComparators.SiblingsSimilarityMappingComparator sc=new MappingComparators.SiblingsSimilarityMappingComparator(ms);" is 121.,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingComparators,testTwinMappings,Long Statement,The length of the statement "MappingComparators.PositionInParentsSimilarityMappingComparator ppc=new MappingComparators.PositionInParentsSimilarityMappingComparator();" is 138.,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingComparators,testTwinMappings,Long Statement,The length of the statement "MappingComparators.TextualPositionDistanceMappingComparator tc=new MappingComparators.TextualPositionDistanceMappingComparator();" is 129.,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingComparators,testTwinMappings,Long Statement,The length of the statement "MappingComparators.AbsolutePositionDistanceMappingComparator ac=new MappingComparators.AbsolutePositionDistanceMappingComparator();" is 131.,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingComparators,testTwinMappings,Magic Number,The method contains a magic number: 3,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingComparators,testTwinMappings,Magic Number,The method contains a magic number: 3,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingComparators,testTwinMappings,Magic Number,The method contains a magic number: 3,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithHeight,Magic Number,The method contains a magic number: 2,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithHeight,Magic Number,The method contains a magic number: 3,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithSize,Magic Number,The method contains a magic number: 5,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithSize,Magic Number,The method contains a magic number: 3,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithSize,Magic Number,The method contains a magic number: 3,51
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithSizeAndMinPriority,Magic Number,The method contains a magic number: 2,68
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithSizeAndMinPriority,Magic Number,The method contains a magic number: 5,68
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testPopOpenWithSizeAndMinPriority,Magic Number,The method contains a magic number: 3,68
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestDefaultPriorityTreeQueue,testSynchronize,Magic Number,The method contains a magic number: 2,82
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestCdMatcher,testLeafMatcher,Magic Number,The method contains a magic number: 2,35
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testSerializeTree,Long Statement,The length of the statement "assertEquals("<?xml version=\"1.0\" ?>\n" + "<root>\n" + " <context></context>\n"+ " <tree type=\"TYPE_0\" pos=\"0\" length=\"1000\">\n"+ " <tree type=\"TYPE_1\" pos=\"1\" length=\"50\">\n"+ " <tree type=\"TYPE_3\" label=\"a\" pos=\"11\" length=\"10\"></tree>\n"+ " <tree type=\"TYPE_3\" label=\"b\" pos=\"21\" length=\"10\"></tree>\n"+ " </tree>\n"+ " <tree type=\"TYPE_2\" pos=\"51\" length=\"900\"></tree>\n"+ " </tree>\n"+ "</root>\n"`bos.toString());" is 455.,43
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testSerializeTree,Magic Number,The method contains a magic number: 1000,43
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testSerializeTree,Magic Number,The method contains a magic number: 50,43
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testSerializeTree,Magic Number,The method contains a magic number: 51,43
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testSerializeTree,Magic Number,The method contains a magic number: 900,43
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 4,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 2,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 8,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 3,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 5,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 4,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 8,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 2,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 6,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testLineReader,Magic Number,The method contains a magic number: 9,70
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testPrintTextTree,Long Statement,The length of the statement "assertEquals("TYPE_0 [0`1000]\n" + " TYPE_1 [1`51]\n" + " TYPE_3: a [11`21]\n"+ " TYPE_3: b [21`31]\n"+ " TYPE_2 [51`951]"`tc.toString());" is 138.,93
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testPrintTextTree,Long Statement,The length of the statement "assertEquals("TYPE_0 [0`1000]\n" + " TYPE_1 [1`51]\n" + " TYPE_3: a [11`21]\n"+ " TYPE_3: b [21`31]\n"+ " TYPE_2 [51`951]"`tc.getRoot().toTreeString());" is 152.,93
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,testDotFormatter,Long Statement,The length of the statement "assertEquals("digraph G {\n" + "\tid_0 [label=\"TYPE_0 [0`1000]\"];\n" + "\tid_1 [label=\"TYPE_1 [1`51]\"];\n"+ "\tid_0 -> id_1;\n"+ "\tid_2 [label=\"TYPE_3: a [11`21]\"];\n"+ "\tid_1 -> id_2;\n"+ "\tid_3 [label=\"TYPE_3: b [21`31]\"];\n"+ "\tid_1 -> id_3;\n"+ "\tid_4 [label=\"TYPE_2 [51`951]\"];\n"+ "\tid_0 -> id_4;\n"+ "}"`TreeIoUtils.toDot(tc).toString());" is 361.,111
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 1000,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 50,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 11,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 10,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 21,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 10,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 51,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeIoUtils,getTreeContext,Magic Number,The method contains a magic number: 900,127
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testMinHeightThreshold,Magic Number,The method contains a magic number: 4,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testMinHeightThreshold,Magic Number,The method contains a magic number: 2,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testMinHeightThreshold,Magic Number,The method contains a magic number: 2,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testMinHeightThreshold,Magic Number,The method contains a magic number: 3,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testSimAndSizeThreshold,Magic Number,The method contains a magic number: 5,132
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testSimAndSizeThreshold,Magic Number,The method contains a magic number: 0.5,132
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testSimAndSizeThreshold,Magic Number,The method contains a magic number: 7,132
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testSimAndSizeThreshold,Magic Number,The method contains a magic number: 0.5,132
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testSimAndSizeThreshold,Magic Number,The method contains a magic number: 10,132
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestGumtreeMatcher,testSimAndSizeThreshold,Magic Number,The method contains a magic number: 9,132
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestRtedMatcher,testRtedMatcher,Magic Number,The method contains a magic number: 5,35
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestRtedMatcher,testRtedMatcher,Magic Number,The method contains a magic number: 2,35
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestRtedMatcher,testRtedMatcher,Magic Number,The method contains a magic number: 2,35
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionIo,setUp,Magic Number,The method contains a magic number: 4,44
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionIo,setUp,Magic Number,The method contains a magic number: 3,44
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestIdMatcher,testIdMatcher,Magic Number,The method contains a magic number: 2,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestIdMatcher,testIdMatcher,Magic Number,The method contains a magic number: 2,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 4,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 3,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 9,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 2,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 3,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 2,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 3,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 4,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 5,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 6,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 7,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExample,Magic Number,The method contains a magic number: 8,40
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithUnmappedRoot,Magic Number,The method contains a magic number: 2,116
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExampleNoMove,Magic Number,The method contains a magic number: 4,125
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExampleNoMove,Magic Number,The method contains a magic number: 3,125
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExampleNoMove,Magic Number,The method contains a magic number: 4,125
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExampleNoMove,Magic Number,The method contains a magic number: 3,125
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithActionExampleNoMove,Magic Number,The method contains a magic number: 12,125
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithZsCustomExample,Long Statement,The length of the statement "assertThat(actions`hasItems(new Insert(dst`null`0)`new Move(src`dst`0)`new Insert(dst.getChild("0.1.1")`src.getChild("1")`1)`new Update(src.getChild("1.3")`"r2")`new Delete(src.getChild("1.1"))));" is 196.,145
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithZsCustomExample,Long Statement,The length of the statement "assertThat(actions`hasItems(new Insert(dst`null`0)`new Move(src`dst`0)`new Insert(dst.getChild("0.1.1")`src.getChild("1")`1)`new Update(src.getChild("1.3")`"r2")`new Delete(src.getChild("1.1"))));" is 196.,145
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithZsCustomExample,Long Statement,The length of the statement "assertThat(actions`hasItems(new Insert(dst`null`0)`new TreeDelete(src)`new TreeInsert(dst.getChild(0)`dst`0)`new Insert(dst.getChild("0.1.1")`src.getChild("1")`1)`new Delete(src.getChild("1.1"))`new Delete(src.getChild("1.3"))`new Insert(dst.getChild("0.1.1")`src.getChild(1)`1)));" is 281.,145
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithZsCustomExample,Magic Number,The method contains a magic number: 5,145
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithZsCustomExample,Magic Number,The method contains a magic number: 5,145
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestActionGenerator,testWithZsCustomExample,Magic Number,The method contains a magic number: 7,145
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingStore,testMappingStore,Magic Number,The method contains a magic number: 2,36
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingStore,testMultiMappingStore,Magic Number,The method contains a magic number: 2,73
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingStore,testMultiMappingStore,Magic Number,The method contains a magic number: 3,73
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestMappingStore,testMultiMappingStore,Magic Number,The method contains a magic number: 2,73
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testAllNodesClassifier,Long Statement,The length of the statement "assertThat(c.getInsertedDsts()`hasItems(dst.getChild("2")`dst.getChild("3.0")`dst.getChild("1")`dst.getChild("2.0")`dst.getChild("3.0.0")));" is 140.,37
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testAllNodesClassifier,Magic Number,The method contains a magic number: 4,37
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testAllNodesClassifier,Magic Number,The method contains a magic number: 3,37
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testAllNodesClassifier,Magic Number,The method contains a magic number: 3,37
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testAllNodesClassifier,Magic Number,The method contains a magic number: 3,37
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testAllNodesClassifier,Magic Number,The method contains a magic number: 5,37
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testAllNodesClassifier,Magic Number,The method contains a magic number: 3,37
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testOnlyRootsClassifier,Magic Number,The method contains a magic number: 4,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testOnlyRootsClassifier,Magic Number,The method contains a magic number: 3,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testOnlyRootsClassifier,Magic Number,The method contains a magic number: 2,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testOnlyRootsClassifier,Magic Number,The method contains a magic number: 2,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testOnlyRootsClassifier,Magic Number,The method contains a magic number: 4,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeClassifier,testOnlyRootsClassifier,Magic Number,The method contains a magic number: 2,74
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testPostOrderNumbering,Magic Number,The method contains a magic number: 4,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testPostOrderNumbering,Magic Number,The method contains a magic number: 2,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testPostOrderNumbering,Magic Number,The method contains a magic number: 3,34
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testDepth,Magic Number,The method contains a magic number: 2,44
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testDepth,Magic Number,The method contains a magic number: 2,44
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testSize,Magic Number,The method contains a magic number: 5,55
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testSize,Magic Number,The method contains a magic number: 3,55
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testHash,Long Statement,The length of the statement "assertEquals(H_AO + BASE * H_BO + BASE * BASE * H_CO + BASE * BASE * BASE* H_CL + BASE * BASE * BASE* BASE* H_DO + BASE * BASE * BASE* BASE* BASE* H_DL + BASE * BASE * BASE* BASE* BASE* BASE* H_BL + BASE * BASE * BASE* BASE* BASE* BASE* BASE* H_EO + BASE * BASE * BASE* BASE* BASE* BASE* BASE* BASE* H_EL + BASE * BASE * BASE* BASE* BASE* BASE* BASE* BASE* BASE* H_AL`root.getMetrics().hash);" is 392.,81
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testHash,Long Statement,The length of the statement "assertEquals(H_BO + BASE * H_CO + BASE * BASE * H_CL + BASE * BASE * BASE* H_DO + BASE * BASE * BASE* BASE* H_DL + BASE * BASE * BASE* BASE* BASE* H_BL`root.getChild(0).getMetrics().hash);" is 188.,81
GumTreeDiff_gumtree,com.github.gumtreediff.test,TestTreeUtils,testHeight,Magic Number,The method contains a magic number: 2,126
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jsacorn,JsAcornTreeGeneratorTest,testStatement,Magic Number,The method contains a magic number: 7,32
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jsacorn,JsAcornTreeGeneratorTest,testLambda,Magic Number,The method contains a magic number: 10,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jsacorn,JsAcornTreeGeneratorTest,testComment,Magic Number,The method contains a magic number: 7,46
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jsacorn,JsAcornTreeGeneratorTest,testJson,Magic Number,The method contains a magic number: 6,53
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,AbstractSrcmlTreeGenerator,getTreeContext,Complex Method,Cyclomatic complexity of the method is 10,71
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlCsGenerator,testSimple,Long Statement,The length of the statement "String input="using System;\n" + "public class HelloWorld\n" + "{\n"+ "public static void Main()\n"+ "{\n"+ "Console.WriteLine(\"Hello world !\");\n"+ "Console.ReadLine();\n"+ "}\n"+ "}";" is 187.,31
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlCsGenerator,testSimple,Magic Number,The method contains a magic number: 35,31
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlJavaGenerator,testSimple,Long Statement,The length of the statement "String input="public class HelloWorld {\n" + "public static void main(String[] args) {\n" + "System.out.println(\"Hello` World\");\n"+ "}\n"+ "}";" is 146.,31
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlJavaGenerator,testSimple,Magic Number,The method contains a magic number: 34,31
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlJavaGenerator,testPosition,Long Statement,The length of the statement "String input="public class HelloWorld {\n" + "public static void main(String[] args) {\n" + "System.out.println(\"Hello` World\");\n"+ "}\n"+ "}";" is 146.,44
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlJavaGenerator,testPosition,Magic Number,The method contains a magic number: 6,44
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlJavaGenerator,testPosition,Magic Number,The method contains a magic number: 34,44
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlCppGenerator,testSimple,Long Statement,The length of the statement "String input="\n" + "namespace R {\n" + "template <typename T>\n"+ "static inline void print_array(T *__recv){\n"+ " int len = LEN(__recv);\n"+ " fprintf(stdout` \"%d:%d [\"` TYPE(__recv)` len);\n"+ " for(int i = 0; i < len; i++)\n"+ " print_item(__recv` i);\n"+ " fprintf(stdout` \" ]\\n\");\n"+ "}\n"+ "\n"+ "template <typename T>\n"+ "static inline void print_item(T *__recv` int idx){\n"+ " fprintf(stdout` \" %x\"` GET(__recv` idx));\n"+ "}\n"+ "}";" is 454.,31
GumTreeDiff_gumtree,com.github.gumtreediff.gen.srcml,TestSrcmlCppGenerator,testSimple,Magic Number,The method contains a magic number: 151,31
GumTreeDiff_gumtree,com.github.gumtreediff.gen.c,TestCGenerator,testSimpleSyntax,Magic Number,The method contains a magic number: 18,32
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,AbstractJdtVisitor,push,Long Parameter List,The method has 5 parameters. ,63
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,AbstractJdtVisitor,getId,Long Statement,The length of the statement "for ( SingleVariableDeclaration v : (List<SingleVariableDeclaration>)d.parameters()) b.append(" " + v.getType().toString());" is 124.,95
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,AbstractJdtTreeGenerator,readerToCharArray,Magic Number,The method contains a magic number: 10,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,AbstractJdtTreeGenerator,readerToCharArray,Magic Number,The method contains a magic number: 1024,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,JdtVisitor,visit,Long Statement,The length of the statement "int length=((ASTNode)i.arguments().get(i.arguments().size() - 1)).getStartPosition() + ((ASTNode)i.arguments().get(i.arguments().size() - 1)).getLength() - startPos;" is 165.,60
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,JdtVisitor,getLabel,Complex Method,Cyclomatic complexity of the method is 9,83
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,JdtVisitor,visit,Long Statement,The length of the statement "pushNode(d.getType()`type("VARARGS_TYPE")`d.getStartPosition()`d.getName().getStartPosition() - 1 - d.getStartPosition());" is 122.,119
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,JdtVisitor,handlePostVisit,Magic Number,The method contains a magic number: 2,153
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,JdtVisitor,searchTypeDeclarationKindPosition,Complex Conditional,The conditional expression (token == ITerminalSymbols.TokenNameclass || token == ITerminalSymbols.TokenNameinterface) && prevToken != ITerminalSymbols.TokenNameDOT is complex.,310
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,JdtVisitor,searchTypeDeclarationKindPosition,Long Statement,The length of the statement "if ((token == ITerminalSymbols.TokenNameclass || token == ITerminalSymbols.TokenNameinterface) && prevToken != ITerminalSymbols.TokenNameDOT) {" is 143.,310
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtGenerator,testSimpleSyntax,Magic Number,The method contains a magic number: 10,35
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtGenerator,testJava5Syntax,Long Statement,The length of the statement "String input="public class Foo<A> { public List<A> foo; public void foo() " + "{ for (A f : foo) { System.out.println(f); } } }";" is 129.,43
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtGenerator,testJava5Syntax,Magic Number,The method contains a magic number: 35,43
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtGenerator,testVarargs,Magic Number,The method contains a magic number: 4,69
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtGenerator,testJava8Syntax,Magic Number,The method contains a magic number: 28,89
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassic_Configured_1_0007d191fec7fe2d6a0c4e87594cb286a553f92c,Long Statement,The length of the statement "Tree typeDeclaration=leftContext.getRoot().getChildren().stream().filter(e -> e.getType().name.equals("TypeDeclaration")).findFirst().get();" is 140.,87
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassic_Configured_1_0007d191fec7fe2d6a0c4e87594cb286a553f92c,Long Statement,The length of the statement "Tree oneImportDeclaration=leftContext.getRoot().getChildren().stream().filter(e -> e.getType().name.equals("ImportDeclaration")).findFirst().get();" is 147.,87
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassic_Configured4Passing_1_0007d191fec7fe2d6a0c4e87594cb286a553f92c,Long Statement,The length of the statement "Tree typeDeclaration=leftContext.getRoot().getChildren().stream().filter(e -> e.getType().name.equals("TypeDeclaration")).findFirst().get();" is 140.,145
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassic_Configured4Passing_1_0007d191fec7fe2d6a0c4e87594cb286a553f92c,Long Statement,The length of the statement "Tree oneImportDeclaration=leftContext.getRoot().getChildren().stream().filter(e -> e.getType().name.equals("ImportDeclaration")).findFirst().get();" is 147.,145
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassic_Configured4Passing_1_0007d191fec7fe2d6a0c4e87594cb286a553f92c,Magic Number,The method contains a magic number: 3000,145
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicDefault,Magic Number,The method contains a magic number: 2,291
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicDefault,Magic Number,The method contains a magic number: 2,291
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicDefault,Magic Number,The method contains a magic number: 2,291
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicDefault,Magic Number,The method contains a magic number: 4,291
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicDefault,Magic Number,The method contains a magic number: 3,291
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicDefault,Magic Number,The method contains a magic number: 2,291
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicConfiguredGreedyBottomUpMatcher,Magic Number,The method contains a magic number: 1002,339
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicConfiguredGreedySubtreeMatcher,Magic Number,The method contains a magic number: 2,375
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicConfiguredGreedySubtreeMatcher,Magic Number,The method contains a magic number: 2,375
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicConfiguredGreedySubtreeMatcher,Magic Number,The method contains a magic number: 2,375
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicConfiguredGreedySubtreeMatcher,Magic Number,The method contains a magic number: 2,375
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testSpurious1WithClassicConfiguredGreedySubtreeMatcher,Magic Number,The method contains a magic number: 2,375
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testCase_1_20391Classic,Long Statement,The length of the statement "URL resourceSource=getClass().getClassLoader().getResource(caseDir + "/1_203910661b72775d1a983bf98c25ddde2d2898b9_Producto_s.javaa");" is 133.,443
GumTreeDiff_gumtree,com.github.gumtreediff.gen.jdt,TestJdtMatching,testCase_1_20391Classic,Long Statement,The length of the statement "URL resourceTarget=getClass().getClassLoader().getResource(caseDir + "/1_203910661b72775d1a983bf98c25ddde2d2898b9_Producto_t.javaa");" is 133.,443
GumTreeDiff_gumtree,com.github.gumtreediff.gen.css,CssTreeGenerator,generate,Long Statement,The length of the statement "CascadingStyleSheet sheet=CSSHandler.readCascadingStyleSheetFromNode(ECSSVersion.LATEST`CSSReader.getDefaultInterpretErrorHandler()`true`p.styleSheet());" is 153.,39
GumTreeDiff_gumtree,com.github.gumtreediff.gen.css,TestCssTreeGenerator,testSimple,Long Statement,The length of the statement "Reader r=new StringReader("@import url(\"bluish.css\") projection` tv;\n" + "body {\n" + "\tfont-size: 11pt;\n"+ "}\n"+ "ul li {\n"+ "\tbackground-color: black;\n"+ "}");" is 170.,32
GumTreeDiff_gumtree,com.github.gumtreediff.gen.css,TestCssTreeGenerator,testSimple,Magic Number,The method contains a magic number: 10,32
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,AbstractTreeSitterGenerator,generate,Long Statement,The length of the statement "for ( Tree t : context.getRoot().preOrder()) if (t.getType().name.equals("ERROR")) throw new SyntaxException(this`r`new IllegalArgumentException("Syntax error at pos: " + t.getPos()));" is 184.,35
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,TreeSitterTreeGeneratorsTest,testC,Magic Number,The method contains a magic number: 15,35
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,TreeSitterTreeGeneratorsTest,testR,Magic Number,The method contains a magic number: 16,53
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,TreeSitterTreeGeneratorsTest,testJs,Magic Number,The method contains a magic number: 18,69
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,TreeSitterTreeGeneratorsTest,testTs,Magic Number,The method contains a magic number: 12,85
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,TreeSitterTreeGeneratorsTest,testJava,Magic Number,The method contains a magic number: 35,101
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,TreeSitterTreeGeneratorsTest,testOcaml,Magic Number,The method contains a magic number: 7,117
GumTreeDiff_gumtree,com.github.gumtreediff.gen.treesitter,TreeSitterTreeGeneratorsTest,testPython,Magic Number,The method contains a magic number: 13,133
GumTreeDiff_gumtree,com.github.gumtreediff.gen.antlr3.json,TestJsonParsing,testJsonParsing,Long Statement,The length of the statement "TreeContext tc=new AntlrJsonTreeGenerator().generateFrom().charset("UTF-8").stream(getClass().getResourceAsStream("/sample.json"));" is 131.,32
GumTreeDiff_gumtree,com.github.gumtreediff.gen.antlr3.json,TestJsonParsing,testJsonParsing,Magic Number,The method contains a magic number: 37,32
GumTreeDiff_gumtree,com.github.gumtreediff.gen.js,TestJsGenerator,testStatement,Magic Number,The method contains a magic number: 7,34
GumTreeDiff_gumtree,com.github.gumtreediff.gen.js,TestJsGenerator,testLambda,Magic Number,The method contains a magic number: 12,41
GumTreeDiff_gumtree,com.github.gumtreediff.gen.js,TestJsGenerator,testComment,Magic Number,The method contains a magic number: 8,48

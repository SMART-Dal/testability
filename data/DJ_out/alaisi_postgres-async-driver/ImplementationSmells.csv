Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
alaisi_postgres-async-driver,com.pgasync,QueryExecutor,completeScript,Long Statement,The length of the statement "results.add(new PgResultSet(assembly.columnsByName != null ? assembly.columnsByName : Map.of()`assembly.orderedColumns != null ? List.of(assembly.orderedColumns) : List.of()`assembly.rows != null ? assembly.rows : List.of()`affected));" is 235.,26
alaisi_postgres-async-driver,com.pgasync,QueryExecutor,completeQuery,Long Statement,The length of the statement "`row -> assembly.rows.add(row)`sql`params).thenApply(affected -> new PgResultSet(assembly.columnsByName != null ? assembly.columnsByName : Map.of()`assembly.orderedColumns != null ? List.of(assembly.orderedColumns) : List.of()`assembly.rows != null ? assembly.rows : List.of()`affected));" is 288.,86
alaisi_postgres-async-driver,com.pgasync,NettyConnectibleBuilder,newProtocolStream,Long Statement,The length of the statement "return new NettyProtocolStream(group`new InetSocketAddress(properties.getHostname()`properties.getPort())`properties.getUseSsl()`Charset.forName(properties.getEncoding())`futuresExecutor);" is 188.,46
alaisi_postgres-async-driver,com.github.pgasync,PgProtocolStream,respondWithMessage,Complex Method,Cyclomatic complexity of the method is 16,162
alaisi_postgres-async-driver,com.github.pgasync,PgProtocolStream,offerRoundTrip,Long Statement,The length of the statement "futuresExecutor.execute(() -> uponResponse.completeExceptionally(new IllegalStateException("Postgres messages stream simultaneous use detected")));" is 147.,220
alaisi_postgres-async-driver,com.github.pgasync,PgDatabase,getConnection,Long Statement,The length of the statement "return new PgConnection(toStream.apply(futuresExecutor)`dataConverter`encoding).connect(username`password`database).thenApply(connection -> {" is 141.,16
alaisi_postgres-async-driver,com.github.pgasync,PgDatabase,getConnection,Long Statement,The length of the statement "return connection.close().thenApply(v -> CompletableFuture.<Connection>failedFuture(th)).thenCompose(Function.identity());" is 122.,16
alaisi_postgres-async-driver,com.github.pgasync,PgConnection,connect,Long Statement,The length of the statement "return stream.connect(new StartupMessage(username`database)).thenApply(authentication -> authenticate(username`password`authentication)).thenCompose(Function.identity()).thenApply(authenticationOk -> PgConnection.this);" is 219.,144
alaisi_postgres-async-driver,com.github.pgasync,PgConnection,authenticate,Long Statement,The length of the statement "return message instanceof Authentication && !((Authentication)message).isAuthenticationOk() ? stream.authenticate(new PasswordMessage(username`password`((Authentication)message).getMd5Salt()`encoding)) : CompletableFuture.completedFuture(message);" is 247.,151
alaisi_postgres-async-driver,com.github.pgasync,PgConnection,preparedStatementOf,Long Statement,The length of the statement "return stream.send(new Parse(sql`statementName`parametersTypes)).thenApply(parseComplete -> new PgPreparedStatement(statementName));" is 132.,166
alaisi_postgres-async-driver,com.github.pgasync,PgConnection,query,Long Statement,The length of the statement "return prepareStatement(sql`dataConverter.assumeTypes(params)).thenApply(ps -> ps.fetch(onColumns`onRow`params).handle((affected`th) -> ps.close().thenApply(v -> {" is 163.,198
alaisi_postgres-async-driver,com.github.pgasync,PgConnectionPool,getConnection,Long Statement,The length of the statement "new PooledPgConnection(new PgConnection(toStream.apply(futuresExecutor)`dataConverter`encoding)).connect(username`password`database).thenApply(pooledConnection -> {" is 164.,284
alaisi_postgres-async-driver,com.github.pgasync,PgConnectionPool,getConnection,Long Statement,The length of the statement "return ((PooledPgConnection)pooledConnection).delegate.close().thenApply(v -> CompletableFuture.<Connection>failedFuture(th)).thenCompose(Function.identity());" is 159.,284
alaisi_postgres-async-driver,com.github.pgasync,PgConnectionPool,getConnection,Long Statement,The length of the statement ").thenCompose(Function.identity()).thenAccept(pooledConnection -> uponAvailable.completeAsync(() -> pooledConnection`futuresExecutor)).exceptionally(th -> {" is 156.,284
alaisi_postgres-async-driver,com.github.pgasync,PgConnectible,script,Long Statement,The length of the statement "return getConnection().thenApply(connection -> connection.script(onColumns`onRow`onAffected`sql).handle((message`th) -> connection.close().thenApply(v -> {" is 155.,48
alaisi_postgres-async-driver,com.github.pgasync,PgConnectible,query,Long Statement,The length of the statement "return getConnection().thenApply(connection -> connection.query(onColumns`onRow`sql`params).handle((affected`th) -> connection.close().thenApply(v -> {" is 151.,66
alaisi_postgres-async-driver,com.github.pgasync,ConnectionPoolingTest,shouldRunAllQueuedCallbacks,Magic Number,The method contains a magic number: 1000,58
alaisi_postgres-async-driver,com.github.pgasync,ConnectionPoolingTest,shouldRunAllQueuedCallbacks,Magic Number,The method contains a magic number: 20,58
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldReturnResultSetSize,Magic Number,The method contains a magic number: 2,54
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldReturnResultSetSize,Magic Number,The method contains a magic number: 2,54
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldReturnResultSetSize,Magic Number,The method contains a magic number: 2L,54
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldReturnUpdatedRowsCount,Magic Number,The method contains a magic number: 3,72
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldReturnUpdatedRowsCount,Magic Number,The method contains a magic number: 3,72
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldStreamResultRows,Long Statement,The length of the statement "List<Integer> series=dbr.pool().completeQuery("select generate_series(1` 5)").thenApply(rs -> StreamSupport.stream(rs.spliterator()`false).map(r -> r.getInt(0)).collect(Collectors.toList())).get();" is 197.,91
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldStreamResultRows,Magic Number,The method contains a magic number: 2,91
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldStreamResultRows,Magic Number,The method contains a magic number: 3,91
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldStreamResultRows,Magic Number,The method contains a magic number: 4,91
alaisi_postgres-async-driver,com.github.pgasync,QueryResultTest,shouldStreamResultRows,Magic Number,The method contains a magic number: 5,91
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt8ToLong,Magic Number,The method contains a magic number: 5000L,78
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt4ToLong,Magic Number,The method contains a magic number: 4000L,83
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt2ToLong,Magic Number,The method contains a magic number: 4000L,88
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt4ToInteger,Magic Number,The method contains a magic number: 5000,93
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt2ToInteger,Magic Number,The method contains a magic number: 4000,98
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt2ToShort,Magic Number,The method contains a magic number: 3000,103
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt2ToShortWithName,Magic Number,The method contains a magic number: 128,108
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertCharToByte,Magic Number,The method contains a magic number: 65,113
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertCharToByteWithName,Magic Number,The method contains a magic number: 65,118
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertInt8ToBigInteger,Long Statement,The length of the statement "assertEquals(new BigInteger("9223372036854775807")`dbr.query("select 9223372036854775807::INT8").at(0).getBigInteger(0));" is 121.,123
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertFloat4ToDouble,Magic Number,The method contains a magic number: 1223420.0,149
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertNumericToDouble,Magic Number,The method contains a magic number: 1223423.01,154
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertDateToDateWithName,Long Statement,The length of the statement "assertEquals(Date.valueOf(LocalDate.parse("2014-02-21"))`dbr.query("select '2014-02-21'::DATE as D").at(0).getDate("d"));" is 121.,165
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertZonedTimeToTime,Long Statement,The length of the statement "assertEquals(Time.valueOf(OffsetTime.parse("23:59:59.999Z").toLocalTime())`dbr.query("select '23:59:59.999Z'::TIMETZ as zoned").at(0).getTime("zoned"));" is 152.,177
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertTimestampToTimestamp,Long Statement,The length of the statement "assertEquals(Timestamp.valueOf(LocalDateTime.parse("2014-02-21T23:59:59.999"))`dbr.query("select '2014-02-21 23:59:59.999'::TIMESTAMP as ts").at(0).getTimestamp("ts"));" is 168.,183
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertTimestampWithShortMillisToTimestamp,Long Statement,The length of the statement "assertEquals(Timestamp.valueOf(LocalDateTime.parse("2014-02-21T23:59:59.990"))`dbr.query("select '2014-02-21 23:59:59.99'::TIMESTAMP as ts").at(0).getTimestamp("ts"));" is 167.,189
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertTimestampWithNoMillisToTimestamp,Long Statement,The length of the statement "assertEquals(Timestamp.valueOf(LocalDateTime.parse("2014-02-21T23:59:59"))`dbr.query("select '2014-02-21 23:59:59'::TIMESTAMP as ts").at(0).getTimestamp("ts"));" is 160.,195
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertZonedTimestampToTimestamp,Long Statement,The length of the statement "assertEquals(Timestamp.from(Instant.from(ZonedDateTime.parse("2014-02-21T23:59:59.999Z")))`dbr.query("select '2014-02-21 23:59:59.999Z'::TIMESTAMPTZ as ts").at(0).getTimestamp("ts"));" is 183.,201
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertZonedTimestampWithNanosToTimestamp,Long Statement,The length of the statement "assertEquals(Timestamp.valueOf("2014-02-21 23:59:59.000999")`dbr.query("select '2014-02-21 23:59:59.000999'::TIMESTAMPTZ as ts").at(0).getTimestamp("ts"));" is 155.,207
alaisi_postgres-async-driver,com.github.pgasync,TypeConverterTest,shouldConvertBoolean,Long Statement,The length of the statement "assertArrayEquals(new Boolean[]{true`false}`dbr.query("select '{true` false}'::BOOL[]").at(0).getArray(0`Boolean[].class));" is 123.,224
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitSelectInTransaction,Magic Number,The method contains a magic number: 5,52
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitInsertInTransaction,Long Statement,The length of the statement "dbr.pool().begin().thenApply(transaction -> transaction.completeQuery("INSERT INTO TX_TEST(ID) VALUES(10)").thenApply(result -> {" is 129.,74
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitInsertInTransaction,Magic Number,The method contains a magic number: 5,74
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitInsertInTransaction,Magic Number,The method contains a magic number: 10L,74
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitParameterizedInsertInTransaction,Long Statement,The length of the statement "long id=dbr.pool().begin().thenApply(transaction -> transaction.completeQuery("INSERT INTO TX_TEST (ID) VALUES ($1) RETURNING ID"`35).thenApply(rs -> rs.at(0)).thenApply(row -> {" is 178.,99
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitParameterizedInsertInTransaction,Magic Number,The method contains a magic number: 35,99
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitParameterizedInsertInTransaction,Magic Number,The method contains a magic number: 5,99
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldCommitParameterizedInsertInTransaction,Magic Number,The method contains a magic number: 35L,99
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackTransaction,Long Statement,The length of the statement "dbr.pool().begin().thenApply(transaction -> transaction.completeQuery("INSERT INTO TX_TEST(ID) VALUES(9)").thenApply(result -> {" is 128.,126
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackTransaction,Magic Number,The method contains a magic number: 5,126
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackTransactionOnBackendError,Long Statement,The length of the statement "dbr.pool().begin().thenApply(transaction -> transaction.completeQuery("INSERT INTO TX_TEST(ID) VALUES(11)").thenApply(result -> {" is 129.,152
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackTransactionOnBackendError,Magic Number,The method contains a magic number: 5,152
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackTransactionAfterBackendError,Long Statement,The length of the statement "dbr.pool().begin().thenApply(transaction -> transaction.completeQuery("INSERT INTO TX_TEST(ID) VALUES(22)").thenApply(result -> {" is 129.,184
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackTransactionAfterBackendError,Long Statement,The length of the statement "return transaction.completeQuery("INSERT INTO TX_TEST(ID) VALUES(22)").thenApply(rs -> CompletableFuture.<ResultSet>failedFuture(new IllegalStateException("The transaction should fail"))).exceptionally(th -> transaction.completeQuery("SELECT 1")).thenCompose(Function.identity());" is 280.,184
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackTransactionAfterBackendError,Magic Number,The method contains a magic number: 5,184
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldSupportNestedTransactions,Long Statement,The length of the statement "dbr.pool().begin().thenApply(transaction -> transaction.begin().thenApply(nested -> nested.completeQuery("INSERT INTO TX_TEST(ID) VALUES(19)").thenApply(result -> {" is 164.,211
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldSupportNestedTransactions,Long Statement,The length of the statement ").thenCompose(Function.identity()).thenApply(v -> transaction.commit()).thenCompose(Function.identity())).thenCompose(Function.identity()).handle((v`th) -> transaction.getConnection().close().thenAccept(_v -> {" is 210.,211
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldSupportNestedTransactions,Magic Number,The method contains a magic number: 5,211
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackNestedTransaction,Long Statement,The length of the statement "dbr.pool().begin().thenApply(transaction -> transaction.completeQuery("INSERT INTO TX_TEST(ID) VALUES(24)").thenApply(result -> {" is 129.,241
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackNestedTransaction,Long Statement,The length of the statement "return transaction.begin().thenApply(nested -> nested.completeQuery("INSERT INTO TX_TEST(ID) VALUES(23)").thenApply(res2 -> {" is 125.,241
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackNestedTransaction,Long Statement,The length of the statement ").thenCompose(Function.identity())).thenCompose(Function.identity()).thenApply(v -> transaction.commit()).thenCompose(Function.identity());" is 139.,241
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackNestedTransaction,Magic Number,The method contains a magic number: 5,241
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackNestedTransactionOnBackendError,Long Statement,The length of the statement "dbr.pool().begin().thenApply(transaction -> transaction.completeQuery("INSERT INTO TX_TEST(ID) VALUES(25)").thenApply(result -> {" is 129.,277
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackNestedTransactionOnBackendError,Long Statement,The length of the statement "return transaction.begin().thenApply(nested -> nested.completeQuery("INSERT INTO TX_TEST(ID) VALUES(26)").thenAccept(res2 -> Assert.assertEquals(1`res2.affectedRows())).thenApply(v -> nested.completeQuery("INSERT INTO TX_TEST(ID) VALUES(26)")).thenCompose(Function.identity()).thenApply(rs -> CompletableFuture.<Void>failedFuture(new IllegalStateException("The query should fail"))).exceptionally(th -> transaction.commit()).thenCompose(Function.identity())).thenCompose(Function.identity());" is 492.,277
alaisi_postgres-async-driver,com.github.pgasync,TransactionTest,shouldRollbackNestedTransactionOnBackendError,Magic Number,The method contains a magic number: 5,277
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,create,Long Statement,The length of the statement "dbr.query("CREATE TABLE PS_TEST(" + "LONG INT8`INT INT4`SHORT INT2` BYTE INT2`" + "CHAR CHAR(1)` STRING VARCHAR(255)` CLOB TEXT`"+ "TIME TIME` DATE DATE` TS TIMESTAMP`"+ "BYTEA BYTEA` BOOLEAN BOOLEAN)");" is 203.,44
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindLong,Long Statement,The length of the statement "assertEquals(Long.MIN_VALUE`dbr.query("SELECT LONG FROM PS_TEST WHERE LONG = $1"`List.of(Long.MIN_VALUE)).at(0).getLong(0).longValue());" is 136.,59
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindInt,Long Statement,The length of the statement "assertEquals(Integer.MAX_VALUE`dbr.query("SELECT INT FROM PS_TEST WHERE INT = $1"`List.of(Integer.MAX_VALUE)).at(0).getInt(0).intValue());" is 138.,66
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindShort,Long Statement,The length of the statement "assertEquals(Short.MIN_VALUE`dbr.query("SELECT SHORT FROM PS_TEST WHERE SHORT = $1"`List.of(Short.MIN_VALUE)).at(0).getLong(0).shortValue());" is 141.,73
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindByte,Long Statement,The length of the statement "assertEquals((byte)0x41`dbr.query("SELECT BYTE FROM PS_TEST WHERE BYTE = $1"`List.of(0x41)).at(0).getByte(0).byteValue());" is 122.,80
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindByte,Magic Number,The method contains a magic number: 0x41,80
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindByte,Magic Number,The method contains a magic number: 0x41,80
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindByte,Magic Number,The method contains a magic number: 0x41,80
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindClob,Magic Number,The method contains a magic number: 10000,101
alaisi_postgres-async-driver,com.github.pgasync,ParametersBindingTest,shouldBindBoolean,Long Statement,The length of the statement "assertTrue((Boolean)((PgRow)dbr.query("SELECT BOOLEAN FROM PS_TEST WHERE BOOLEAN = $1"`List.of(true)).at(0)).get("boolean"));" is 125.,140
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,connectionPoolPipelinesQueries,Long Statement,The length of the statement "pool.completeQuery("select " + i + "` pg_sleep("+ sleep+ ")").thenAccept(r -> results.add(currentTimeMillis())).exceptionally(th -> {" is 133.,66
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,connectionPoolPipelinesQueries,Magic Number,The method contains a magic number: 5,66
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,connectionPoolPipelinesQueries,Magic Number,The method contains a magic number: 0.5,66
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,connectionPoolPipelinesQueries,Magic Number,The method contains a magic number: 2,66
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,connectionPoolPipelinesQueries,Magic Number,The method contains a magic number: 999,66
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,messageStreamEnsuresSequentialAccess,Long Statement,The length of the statement "CompletableFuture.allOf((CompletableFuture<?>[])IntStream.range(0`10).mapToObj(i -> connection.completeQuery("select " + i + "` pg_sleep("+ 10+ ")").exceptionally(th -> {" is 170.,97
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,messageStreamEnsuresSequentialAccess,Magic Number,The method contains a magic number: 10,97
alaisi_postgres-async-driver,com.github.pgasync,PipelineTest,messageStreamEnsuresSequentialAccess,Magic Number,The method contains a magic number: 10,97
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Long Statement,The length of the statement "List<ResultSet> results=new ArrayList<>(dbr.script("" + "INSERT INTO SCRIPT_TEST (ID) VALUES (1)`(2);" + "SELECT SCRIPT_TEST.ID first_id FROM SCRIPT_TEST WHERE ID <= 2 ORDER BY ID;"+ "INSERT INTO SCRIPT_TEST (ID) VALUES (3)`(4)`(5);"+ "SELECT SCRIPT_TEST.ID second_id FROM SCRIPT_TEST WHERE ID > 2 ORDER BY ID;"+ ""));" is 318.,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 4,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 2,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 2,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 2,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 2,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 3,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 3,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 3,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 3,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 4,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 5,49
alaisi_postgres-async-driver,com.github.pgasync,ScriptResultsTest,shouldReturnMultipleResultSets,Magic Number,The method contains a magic number: 2,49
alaisi_postgres-async-driver,com.github.pgasync,PerformanceTest,data,Magic Number,The method contains a magic number: 8,49
alaisi_postgres-async-driver,com.github.pgasync,PerformanceTest,data,Magic Number,The method contains a magic number: 2,49
alaisi_postgres-async-driver,com.github.pgasync,PerformanceTest,data,Magic Number,The method contains a magic number: 8,49
alaisi_postgres-async-driver,com.github.pgasync,PerformanceTest,data,Magic Number,The method contains a magic number: 2,49
alaisi_postgres-async-driver,com.github.pgasync,PerformanceTest,setup,Long Statement,The length of the statement "List<Connection> connections=IntStream.range(0`poolSize).mapToObj(i -> pool.getConnection().join()).collect(Collectors.toList());" is 129.,75
alaisi_postgres-async-driver,com.github.pgasync,PerformanceTest,printResults,Magic Number,The method contains a magic number: 1000,206
alaisi_postgres-async-driver,com.github.pgasync,PlainConnectionTest,create,Long Statement,The length of the statement "plain.completeScript("" + "DROP TABLE IF EXISTS PC_TEST_1;" + "DROP TABLE IF EXISTS PC_TEST_2;"+ "CREATE TABLE PC_TEST_1 (ID VARCHAR(255) PRIMARY KEY);"+ "CREATE TABLE PC_TEST_2 (ID VARCHAR(255) PRIMARY KEY);").join();" is 218.,38
alaisi_postgres-async-driver,com.github.pgasync,PlainConnectionTest,shouldRunAllQueries,Long Statement,The length of the statement "IntStream.range(0`count).mapToObj(value -> "" + value).forEach(value -> plain.completeQuery("INSERT INTO PC_TEST_1 VALUES($1)"`value).join());" is 142.,58
alaisi_postgres-async-driver,com.github.pgasync,PlainConnectionTest,shouldRunAllQueries,Magic Number,The method contains a magic number: 100,58
alaisi_postgres-async-driver,com.github.pgasync,PlainConnectionTest,shouldRunScript,Long Statement,The length of the statement "IntStream.range(0`count).forEach(value -> plain.completeScript("" + "INSERT INTO PC_TEST_2 VALUES('" + value + "');"+ "INSERT INTO PC_TEST_2 VALUES('_"+ value+ "');"+ "INSERT INTO PC_TEST_2 VALUES('__"+ value+ "');"+ "INSERT INTO PC_TEST_2 VALUES('___"+ value+ "');").join());" is 276.,68
alaisi_postgres-async-driver,com.github.pgasync,PlainConnectionTest,shouldRunScript,Magic Number,The method contains a magic number: 25,68
alaisi_postgres-async-driver,com.github.pgasync,PlainConnectionTest,shouldRunScript,Magic Number,The method contains a magic number: 4,68
alaisi_postgres-async-driver,com.github.pgasync,ListenNotifyTest,shouldReceiveNotificationsOnListenedChannel,Magic Number,The method contains a magic number: 5,37
alaisi_postgres-async-driver,com.github.pgasync,ListenNotifyTest,shouldReceiveNotificationsOnListenedChannel,Magic Number,The method contains a magic number: 2,37
alaisi_postgres-async-driver,com.github.pgasync,ListenNotifyTest,shouldReceiveNotificationsOnListenedChannel,Magic Number,The method contains a magic number: 2,37
alaisi_postgres-async-driver,com.github.pgasync,ListenNotifyTest,shouldReceiveNotificationsOnListenedChannel,Magic Number,The method contains a magic number: 2,37
alaisi_postgres-async-driver,com.github.pgasync,ListenNotifyTest,shouldReceiveNotificationsOnListenedChannel,Magic Number,The method contains a magic number: 2,37
alaisi_postgres-async-driver,com.github.pgasync,ListenNotifyTest,shouldReceiveNotificationsOnListenedChannel,Magic Number,The method contains a magic number: 2,37
alaisi_postgres-async-driver,com.github.pgasync,DatabaseRule,DatabaseRule,Long Statement,The length of the statement "PostgresConfig config=new PostgresConfig(Version.V11_1`new AbstractPostgresConfig.Net()`new AbstractPostgresConfig.Storage("async-pg")`new AbstractPostgresConfig.Timeout()`new AbstractPostgresConfig.Credentials("async-pg"`"async-pg"));" is 235.,37
alaisi_postgres-async-driver,com.github.pgasync,DatabaseRule,block,Magic Number,The method contains a magic number: 5_0000000,95
alaisi_postgres-async-driver,com.github.pgasync,DatabaseRule,createPoolBuilder,Complex Conditional,The conditional expression db == null && user == null && pass == null is complex.,126
alaisi_postgres-async-driver,com.github.pgasync,DatabaseRule,createPoolBuilder,Long Statement,The length of the statement "return new EmbeddedConnectionPoolBuilder().database(envOrDefault("PG_DATABASE"`"postgres")).username(envOrDefault("PG_USERNAME"`"postgres")).password(envOrDefault("PG_PASSWORD"`"postgres")).ssl(true).maxConnections(size);" is 221.,126
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,create,Long Statement,The length of the statement "dbr.query("CREATE TABLE CA_TEST (" + "TEXTA TEXT[]` SHORTA INT2[]` INTA INT4[]` LONGA INT8[]` FLOATA FLOAT4[]` TIMESTAMPA TIMESTAMP[]` BYTEAA BYTEA[])");" is 153.,22
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,selectIntsMulti,Long Statement,The length of the statement "assertArrayEquals(new Integer[][][]{new Integer[][]{new Integer[]{0}`new Integer[]{1}}`new Integer[][]{new Integer[]{2}`new Integer[]{3}}}`getRow().getArray("inta"`Integer[][].class));" is 184.,70
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,selectTextMulti,Long Statement,The length of the statement "assertArrayEquals(new String[][]{new String[]{"f"`"o"`null}`new String[]{"b"`null`"r"}`new String[]{null`"a"`"z"}}`getRow().getArray("texta"`String[][].class));" is 160.,90
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,selectFloat,Long Statement,The length of the statement "assertArrayEquals(new BigDecimal[]{new BigDecimal("177.7")`new BigDecimal("0")`null`new BigDecimal("-2.012")}`getRow().getArray("floata"`BigDecimal[].class));" is 158.,103
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,selectTimestamp,Long Statement,The length of the statement "assertArrayEquals(new Timestamp[]{Timestamp.valueOf(LocalDateTime.parse("1999-05-16T00:00:00.591"))`Timestamp.valueOf(LocalDateTime.parse("1970-02-04T01:02:33.01"))`null}`getRow().getArray("timestampa"`Timestamp[].class));" is 222.,117
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,selectNestedInt,Long Statement,The length of the statement "assertArrayEquals(a`dbr.query("SELECT INTA FROM CA_TEST WHERE INTA = $1"`List.of(new Object[]{a})).at(0).getArray("inta"`Integer[].class));" is 139.,138
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,selectUTF8,Long Statement,The length of the statement "assertArrayEquals(a`dbr.query("SELECT TEXTA FROM CA_TEST WHERE TEXTA = $1"`List.of(new Object[]{a})).at(0).getArray("texta"`String[].class));" is 141.,152
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,shouldRoundTripTimestamp,Magic Number,The method contains a magic number: 12345679,181
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,shouldRoundTripTimestamp,Magic Number,The method contains a magic number: 12345678,181
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,shouldBindArrayOfByteA,Long Statement,The length of the statement "byte[][] readbb=dbr.query("SELECT BYTEAA FROM CA_TEST WHERE BYTEAA = $1"`Collections.singletonList(bb)).at(0).getArray(0`byte[][].class);" is 137.,222
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,shouldBindArrayOfByteA,Magic Number,The method contains a magic number: 3,222
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,shouldBindArrayOfByteA,Magic Number,The method contains a magic number: 2,222
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,shouldBindArrayOfByteA,Magic Number,The method contains a magic number: 2,222
alaisi_postgres-async-driver,com.github.pgasync,ArrayConversionsTest,shouldBindArrayOfByteA,Magic Number,The method contains a magic number: 2,222
alaisi_postgres-async-driver,com.github.pgasync.conversion,TemporalConversions,toDate,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4db00a8c,45
alaisi_postgres-async-driver,com.github.pgasync.conversion,TemporalConversions,toTime,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4be7f34b,59
alaisi_postgres-async-driver,com.github.pgasync.conversion,TemporalConversions,toTimestamp,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@58468259,75
alaisi_postgres-async-driver,com.github.pgasync.conversion,StringConversions,toString,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@344666ff,11
alaisi_postgres-async-driver,com.github.pgasync.conversion,StringConversions,toChar,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@79efee91,25
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,toBytes,Magic Number,The method contains a magic number: 2,89
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,toBytes,Magic Number,The method contains a magic number: 2,89
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,toArray,Complex Method,Cyclomatic complexity of the method is 19,97
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,toArray,Magic Number,The method contains a magic number: 2,97
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,toArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@d66374c,97
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,fromObject,Complex Conditional,The conditional expression o instanceof String || o instanceof Number || o instanceof Character|| o instanceof UUID is complex.,153
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,fromObject,Complex Method,Cyclomatic complexity of the method is 9,153
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,toObject,Complex Method,Cyclomatic complexity of the method is 35,204
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,toObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@61de38f3,204
alaisi_postgres-async-driver,com.github.pgasync.conversion,DataConverter,assumeTypes,Complex Method,Cyclomatic complexity of the method is 32,264
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Complex Conditional,The conditional expression c == 'N' && text.length > i + 4 && text[i + 1] == 'U' && text[i + 2] == 'L' && text[i + 3] == 'L' && (text[i + 4] == '`' || text[i + 4] == '}' || Character.isWhitespace(text[i + 4])) is complex.,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Long Statement,The length of the statement "else if (c == 'N' && text.length > i + 4 && text[i + 1] == 'U' && text[i + 2] == 'L' && text[i + 3] == 'L' && (text[i + 4] == '`' || text[i + 4] == '}' || Character.isWhitespace(text[i + 4]))) {" is 194.,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Magic Number,The method contains a magic number: 4,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Magic Number,The method contains a magic number: 2,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Magic Number,The method contains a magic number: 3,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Magic Number,The method contains a magic number: 4,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Magic Number,The method contains a magic number: 4,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readArray,Magic Number,The method contains a magic number: 4,90
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readValue,Complex Conditional,The conditional expression c == '`' || c == '}' || Character.isWhitespace(c) is complex.,113
alaisi_postgres-async-driver,com.github.pgasync.conversion,ArrayConversions,readNull,Magic Number,The method contains a magic number: 4,125
alaisi_postgres-async-driver,com.github.pgasync.conversion,BlobConversions,toBytes,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@66a8dba9,14
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toLong,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@60352a8b,14
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toInteger,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5c55ad96,26
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toShort,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4cdc0f4f,37
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toByte,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6c89e0ee,47
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toBigInteger,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2521fe86,57
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toBigDecimal,Complex Method,Cyclomatic complexity of the method is 8,69
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toBigDecimal,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5469cea9,69
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toDouble,Complex Method,Cyclomatic complexity of the method is 8,84
alaisi_postgres-async-driver,com.github.pgasync.conversion,NumericConversions,toDouble,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7863051c,84
alaisi_postgres-async-driver,com.github.pgasync.conversion,BooleanConversions,toBoolean,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5bce146e,14
alaisi_postgres-async-driver,com.github.pgasync.io,IO,getCString,Magic Number,The method contains a magic number: 255,28
alaisi_postgres-async-driver,com.github.pgasync.io.frontend,ExtendedQueryEncoder,write,Magic Number,The method contains a magic number: 4,10
alaisi_postgres-async-driver,com.github.pgasync.io.frontend,StartupMessageEncoder,write,Long Statement,The length of the statement "for ( String s : new String[]{"user"`msg.getUsername()`"database"`msg.getDatabase()`"client_encoding"`encoding.name()}) {" is 121.,57
alaisi_postgres-async-driver,com.github.pgasync.io.frontend,SSLRequestEncoder,write,Magic Number,The method contains a magic number: 8,19
alaisi_postgres-async-driver,com.github.pgasync.io.frontend,SSLRequestEncoder,write,Magic Number,The method contains a magic number: 80877103,19
alaisi_postgres-async-driver,com.github.pgasync.io.frontend,FIndicatorsEncoder,write,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@71b1045f,43
alaisi_postgres-async-driver,com.github.pgasync.io.frontend,FIndicatorsEncoder,sync,Magic Number,The method contains a magic number: 4,54
alaisi_postgres-async-driver,com.github.pgasync.io.backend,AuthenticationDecoder,read,Magic Number,The method contains a magic number: 4,59
alaisi_postgres-async-driver,com.github.pgasync.io.backend,AuthenticationDecoder,read,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6b378046,59
alaisi_postgres-async-driver,com.github.pgasync.io.backend,RowDescriptionDecoder,read,Magic Number,The method contains a magic number: 6,62
alaisi_postgres-async-driver,com.github.pgasync.io.backend,RowDescriptionDecoder,read,Magic Number,The method contains a magic number: 8,62
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyMessageEncoder,encode,Magic Number,The method contains a magic number: 4,70
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyMessageDecoder,decode,Magic Number,The method contains a magic number: 4,72
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,NettyProtocolStream,Long Parameter List,The method has 5 parameters. ,60
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,connect,Long Statement,The length of the statement "return offerRoundTrip(() -> channelPipeline.connect(address).addListener(outboundErrorListener)`false).thenApply(this::send).thenCompose(Function.identity()).thenApply(message -> {" is 180.,68
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,newProtocolInitializer,Magic Number,The method contains a magic number: 4,118
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,newProtocolInitializer,Magic Number,The method contains a magic number: 4,118
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,initChannel,Magic Number,The method contains a magic number: 4,120
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,initChannel,Magic Number,The method contains a magic number: 4,120
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,newSslInitiator,Long Statement,The length of the statement "ctx.pipeline().addFirst(SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).build().newHandler(ctx.alloc()));" is 138.,133
alaisi_postgres-async-driver,com.github.pgasync.netty,NettyProtocolStream,decode,Long Statement,The length of the statement "ctx.pipeline().addFirst(SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).build().newHandler(ctx.alloc()));" is 138.,135
alaisi_postgres-async-driver,com.github.pgasync.message.frontend,PasswordMessage,md5,Magic Number,The method contains a magic number: 3,46
alaisi_postgres-async-driver,com.github.pgasync.message.frontend,PasswordMessage,md5,Magic Number,The method contains a magic number: 2,46
alaisi_postgres-async-driver,com.github.pgasync.message.frontend,PasswordMessage,md5,Magic Number,The method contains a magic number: 3,46
alaisi_postgres-async-driver,com.github.pgasync.message.backend,CommandComplete,CommandComplete,Complex Conditional,The conditional expression tag.contains("INSERT") || tag.contains("UPDATE") || tag.contains("DELETE") is complex.,26

Project Name,Package Name,Architecture Smell,Cause of the Smell
jparyani_wave,com.google.wave.api,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 74
jparyani_wave,com.google.wave.api,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: com.google.wave.api; com.google.wave.api.impl
jparyani_wave,com.google.wave.api,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: com.google.wave.api; com.google.wave.api.impl; com.google.wave.api.event
jparyani_wave,com.google.wave.api,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): com.google.wave.api.impl; org.waveprotocol.wave.media.model
jparyani_wave,com.google.wave.api,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [BlipThread; Blip; Util; Restriction; BlipContentRefs; Plaintext; WaveService; Range; OperationQueue; Element; ApiIdSerializer; Wavelet; ElementType; BlipIterator; BlipIterator.SingleshotIterator; BlipIterator.TextIterator; BlipIterator.ElementIterator; Annotations; BlipContent; SearchResult; Gadget; RobotSerializer; FormElement; Installer; FormElementRobotTest; AnnotationsRobotTest; ImageRobotTest; TagsRobotTest; AttachmentRobotTest; BlipIteratorRobotTest; GadgetRobotTest; UtilRobotTest; ElementRobotTest; WaveletRobotTest; BlipRobotTest; OperationQueueRobotTest; AbstractRobotTest; DataDocuments; Tags; Context; AbstractRobotTest.MockRobot; OperationType; Image; BlipData; Annotation; Line; AnnotationRobotTest; InvalidRequestException; OperationRequest; Markup; AbstractRobot; ParticipantProfile; Attachment; ProtocolVersion; JsonRpcResponse; Participants; FetchProfilesRequest]; [Tags.TagsIterator]; [OperationRequest.Parameter]; [Participants.Role]; [JsonRpcConstant]; [JsonRpcConstant.RequestProperty]; [JsonRpcConstant.ResponseProperty]; [JsonRpcConstant.ParamsProperty]; [WaveService.HttpFetcher]; [WaveService.HttpResponse]; [WaveService.ConsumerData]; [FetchProfilesResult]; [Annotations.AnnotationIterator]; [Function; Function.BlipContentFunction; Function.MapFunction]; [SearchResult.Digest]; [AbstractRobotTest.MockWriter]. LCC (Lack of Component Cohesion) = 0.22
jparyani_wave,<All packages>,Dense Structure, The tool detected the smell because all the analyzed components exhibit excessive and dense dependencies among themselves. Average degree = 12.83. All the dependencies among components: from: com.google.wave.api to: org.waveprotocol.wave.model.id; from: com.google.wave.api to: com.google.wave.api.impl; from: com.google.wave.api to: com.google.wave.api.event; from: com.google.wave.api to: org.waveprotocol.wave.media.model; from: com.google.wave.api.event to: com.google.wave.api; from: com.google.wave.api.event to: com.google.wave.api.impl; from: com.google.wave.api.data to: com.google.wave.api; from: com.google.wave.api.data to: org.waveprotocol.wave.model.document; from: com.google.wave.api.data to: org.waveprotocol.wave.model.document.util; from: com.google.wave.api.data to: org.waveprotocol.wave.model.id; from: com.google.wave.api.data to: org.waveprotocol.wave.model.conversation; from: com.google.wave.api.data to: org.waveprotocol.wave.model.util; from: com.google.wave.api.data to: org.waveprotocol.wave.model.testing; from: com.google.wave.api.data to: org.waveprotocol.wave.model.document.indexed; from: com.google.wave.api.data to: org.waveprotocol.wave.model.document.operation; from: com.google.wave.api.data.converter to: com.google.wave.api; from: com.google.wave.api.data.converter to: org.waveprotocol.wave.model.conversation; from: com.google.wave.api.data.converter to: com.google.wave.api.impl; from: com.google.wave.api.data.converter to: com.google.wave.api.data.converter.v21; from: com.google.wave.api.data.converter to: org.waveprotocol.wave.model.wave; from: com.google.wave.api.data.converter to: org.waveprotocol.wave.model.id; from: com.google.wave.api.data.converter to: org.waveprotocol.wave.model.wave.opbased; from: com.google.wave.api.data.converter to: org.waveprotocol.wave.model.testing; from: com.google.wave.api.data.converter.v22 to: com.google.wave.api; from: com.google.wave.api.data.converter.v22 to: org.waveprotocol.wave.model.conversation; from: com.google.wave.api.data.converter.v22 to: com.google.wave.api.impl; from: com.google.wave.api.data.converter.v22 to: com.google.wave.api.data; from: com.google.wave.api.data.converter.v22 to: org.waveprotocol.wave.model.id; from: com.google.wave.api.data.converter.v22 to: org.waveprotocol.wave.model.wave.opbased; from: com.google.wave.api.data.converter.v22 to: org.waveprotocol.wave.model.document; from: com.google.wave.api.data.converter.v22 to: org.waveprotocol.wave.model.testing; from: com.google.wave.api.data.converter.v21 to: com.google.wave.api; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.conversation; from: com.google.wave.api.data.converter.v21 to: com.google.wave.api.impl; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.document; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.account; from: com.google.wave.api.data.converter.v21 to: com.google.wave.api.data; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.id; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.document.util; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.wave; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.wave.opbased; from: com.google.wave.api.data.converter.v21 to: org.waveprotocol.wave.model.testing; from: com.google.wave.api.oauth to: com.google.wave.api; from: com.google.wave.api.oauth.impl to: com.google.wave.api; from: com.google.wave.api.oauth.impl to: com.google.wave.api.event; from: com.google.wave.api.oauth.impl to: com.google.wave.api.oauth; from: com.google.wave.api.impl to: com.google.wave.api; from: com.google.wave.api.impl to: com.google.wave.api.event; from: com.google.wave.api.impl to: org.waveprotocol.wave.model.id; from: com.google.wave.api.v2 to: com.google.wave.api; from: com.google.wave.api.v2 to: com.google.wave.api.impl; from: com.google.wave.api.robot to: com.google.wave.api.event; from: com.google.wave.api.robot to: com.google.wave.api; from: org.waveprotocol.examples.robots.echoey to: com.google.wave.api.event; from: org.waveprotocol.examples.robots.echoey to: com.google.wave.api; from: org.waveprotocol.examples.robots.dataapi to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.concurrencycontrol.server to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.concurrencycontrol.server to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.concurrencycontrol.server to: org.waveprotocol.wave.concurrencycontrol.common; from: org.waveprotocol.wave.concurrencycontrol.server to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.concurrencycontrol.testing to: org.waveprotocol.wave.concurrencycontrol.channel; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.concurrencycontrol.common; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.concurrencycontrol.channel; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.concurrencycontrol.testing; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.concurrencycontrol.wave to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.concurrencycontrol.common to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.concurrencycontrol.common to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.concurrencycontrol.common to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.concurrencycontrol.common to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.concurrencycontrol.common; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.concurrencycontrol.client to: org.waveprotocol.wave.concurrencycontrol.server; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.concurrencycontrol.common; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.concurrencycontrol.client; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.concurrencycontrol.channel to: org.waveprotocol.wave.concurrencycontrol.testing; from: org.waveprotocol.wave.util.escapers.jvm to: org.waveprotocol.wave.util.escapers; from: org.waveprotocol.wave.util.escapers.jvm to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.wave.util.escapers.jvm to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.util.escapers to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.client.state; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.parser; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.model.document to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.document.operation to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.model.document.operation.util to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.operation.util to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.operation.util to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.operation.impl to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.operation.impl to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.operation.impl to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.document.operation.impl to: org.waveprotocol.wave.model.document.parser; from: org.waveprotocol.wave.model.document.operation.impl to: org.waveprotocol.wave.model.document.operation.util; from: org.waveprotocol.wave.model.document.operation.impl to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.document.operation.impl to: org.waveprotocol.wave.model.document.bootstrap; from: org.waveprotocol.wave.model.document.operation.automaton to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.operation.automaton to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.operation.automaton to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.operation.algorithm to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.operation.algorithm to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.operation.algorithm to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.document.operation.algorithm to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.operation.algorithm to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.document.parser to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.parser to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.parser to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.document.parser to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document.raw; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.undo; from: org.waveprotocol.wave.model.document.util to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.document.raw to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.document.raw to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.raw to: org.waveprotocol.wave.model.document.parser; from: org.waveprotocol.wave.model.document.raw.impl to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.document.raw.impl to: org.waveprotocol.wave.model.document.raw; from: org.waveprotocol.wave.model.document.raw.impl to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.raw.impl to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.document.raw.impl to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.bootstrap to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.bootstrap to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.bootstrap to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.document.bootstrap to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.raw; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.bootstrap; from: org.waveprotocol.wave.model.document.indexed to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.model.schema to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.schema to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.schema to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.schema.conversation to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.schema.conversation to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.schema.conversation to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.schema.conversation to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.model.schema.conversation to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.schema.account to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.schema.account to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.schema.account to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.schema.account to: org.waveprotocol.wave.model.account; from: org.waveprotocol.wave.model.schema.supplement to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.schema.supplement to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.schema.supplement to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.schema.supplement to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.model.schema.supplement to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.undo to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.undo to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.undo to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.document.bootstrap; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.testing to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.wave to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.wave to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.wave to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.wave to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.wave to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.model.wave to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.wave to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.operation.core; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.undo; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.wave.undo to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.wave.data to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.wave.data.core; from: org.waveprotocol.wave.model.wave.data.impl to: org.waveprotocol.wave.model.wave.data.core.impl; from: org.waveprotocol.wave.model.wave.data.core to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.wave.data.core to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.wave.data.core to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.wave.data.core.impl to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.wave.data.core.impl to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.wave.data.core.impl to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.wave.data.core.impl to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.wave.data.core.impl to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.wave.opbased to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.model.operation to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.operation to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.operation to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.operation to: org.waveprotocol.wave.model.document.bootstrap; from: org.waveprotocol.wave.model.operation to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.operation.core; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.operation.wave to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.wave.data.core; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.operation.core to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.adt to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.adt; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.adt.docbased to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.adt.docbased; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.adt; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.conversation.testing; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.conversation to: org.waveprotocol.wave.model.schema.conversation; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.conversation.testing to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.util to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.util to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.util to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.util to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.util to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.util to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.util to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.model.waveref to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.waveref to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.id to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.id to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.document.raw; from: org.waveprotocol.wave.model.richtext to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.model.experimental.schema to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.experimental.schema to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.experimental.schema to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.model.gadget to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.adt; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.adt.docbased; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.schema.account; from: org.waveprotocol.wave.model.account to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.adt; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.adt.docbased; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.conversation.testing; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.model.supplement to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.version to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.model.version to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wave; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.concurrencycontrol; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.state; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.render; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.impl.diff; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.impl.reader; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.concurrencycontrol.common; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.impl.edit; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.impl.toolbar; from: org.waveprotocol.wave.client to: org.waveprotocol.box.stat; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.impl; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.impl.focus; from: org.waveprotocol.wave.client to: org.waveprotocol.wave.client.wavepanel.impl.collapse; from: org.waveprotocol.wave.client.state to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.state to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.state to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.client.state to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.state to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.state to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.render to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.render to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.render to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.render to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.render to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.render to: org.waveprotocol.wave.model.conversation.testing; from: org.waveprotocol.wave.client.render to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.client; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.common.bootstrap; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.client.doodad.attachment; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.client.util; from: org.waveprotocol.wave.client.testing to: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.wave to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.wave.client.common.scrub to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.common.util to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.common.util to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.scheduler to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.scheduler to: org.waveprotocol.box.stat; from: org.waveprotocol.wave.client.scheduler to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.wave.client.scheduler.knobs to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.scheduler.knobs to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.client.wave; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.concurrencycontrol.channel; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.concurrencycontrol.wave; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.wave.client.concurrencycontrol to: org.waveprotocol.wave.concurrencycontrol.common; from: org.waveprotocol.wave.client.uibuilder to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.uibuilder to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.util to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.util to: org.waveprotocol.wave.common.bootstrap; from: org.waveprotocol.wave.client.debug.logger to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.debug.logger to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.clipboard to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.clipboard to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.clipboard to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.clipboard to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.clipboard to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.paging to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.paging to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.widget.menu; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client.gadget.renderer to: org.waveprotocol.wave.client.gadget; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.model.gadget; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.client.gadget.renderer; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.gadget to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.account to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.account.impl to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.account.impl to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.account.impl to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.media.model; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.communication.gwt; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.doodad.attachment.render; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.doodad.attachment to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.doodad.attachment; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.media.model; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.widget.progress; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.widget.button; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.common.webdriver; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.attachment.render to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.doodad.attachment.testing to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.widget.button; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.editor.sugg; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.doodad.link; from: org.waveprotocol.wave.client.doodad.suggestion to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.doodad.suggestion.misc to: org.waveprotocol.wave.client.gadget; from: org.waveprotocol.wave.client.doodad.suggestion.misc to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.doodad.suggestion.misc to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.suggestion.plugins.video to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.suggestion.plugins.video to: org.waveprotocol.wave.client.editor.sugg; from: org.waveprotocol.wave.client.doodad.suggestion.plugins.video to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.suggestion.plugins.video to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.suggestion.plugins.video to: org.waveprotocol.wave.client.gadget; from: org.waveprotocol.wave.client.doodad.suggestion.plugins.video to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.doodad.suggestion.plugins.video to: org.waveprotocol.wave.client.doodad.link; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.experimental.htmltemplate to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.client.doodad.suggestion; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.util.escapers; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.doodad.link to: org.waveprotocol.wave.util.escapers.jvm; from: org.waveprotocol.wave.client.doodad.form.input to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.form.input to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.form.input to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.form.input to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.doodad.form.input to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.doodad.form.check to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.form.check to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.form.check to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.form.check to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.doodad.form.check to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.doodad.form to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.form to: org.waveprotocol.wave.client.doodad.form.events; from: org.waveprotocol.wave.client.doodad.form to: org.waveprotocol.wave.client.doodad.form.button; from: org.waveprotocol.wave.client.doodad.form to: org.waveprotocol.wave.client.doodad.form.input; from: org.waveprotocol.wave.client.doodad.form to: org.waveprotocol.wave.client.doodad.form.check; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.client.widget.button; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.client.widget.button.text; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.client.doodad.form.events; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.doodad.form.button to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.doodad.form.events to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.form.events to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.form.events to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.form.events to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.doodad.diff to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.diff to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.diff to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.doodad.diff to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.diff to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.title to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.title to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.title to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.account.impl; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.wave.client.doodad.selection to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.events to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.wave.client.events to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.event to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.event to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.event to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.wave; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.wavepanel.view.impl; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.state; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.uibuilder; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.render; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.client.wavepanel.view.fake; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.wavepanel.render to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.impl.edit.i18n; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.event; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.widget.profile; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.events; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.impl.focus; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wave; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.util.escapers; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.editor.keys; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.doodad.selection; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.impl; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.impl.toolbar; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.scroll; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.client.wavepanel.view.impl; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.client.wavepanel.impl.edit to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.wavepanel.impl.menu to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.menu to: org.waveprotocol.wave.client.wavepanel.impl.edit; from: org.waveprotocol.wave.client.wavepanel.impl.menu to: org.waveprotocol.wave.client.wavepanel.impl.menu.i18n; from: org.waveprotocol.wave.client.wavepanel.impl.menu to: org.waveprotocol.wave.client.wavepanel; from: org.waveprotocol.wave.client.wavepanel.impl.menu to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.menu to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.scroll; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.wavepanel; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.wavepanel.event; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.wavepanel.impl.reader; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.client.wavepanel.view.fake; from: org.waveprotocol.wave.client.wavepanel.impl.focus to: org.waveprotocol.wave.model.conversation.testing; from: org.waveprotocol.wave.client.wavepanel.impl.collapse to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.collapse to: org.waveprotocol.wave.client.wavepanel.impl; from: org.waveprotocol.wave.client.wavepanel.impl.collapse to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.collapse to: org.waveprotocol.wave.client.wavepanel; from: org.waveprotocol.wave.client.wavepanel.impl.collapse to: org.waveprotocol.wave.client.wavepanel.event; from: org.waveprotocol.wave.client.wavepanel.impl.collapse to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.wavepanel.impl.indicator to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.indicator to: org.waveprotocol.wave.client.wavepanel.impl.edit; from: org.waveprotocol.wave.client.wavepanel.impl.indicator to: org.waveprotocol.wave.client.wavepanel; from: org.waveprotocol.wave.client.wavepanel.impl.indicator to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.indicator to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.impl.indicator to: org.waveprotocol.wave.client.uibuilder; from: org.waveprotocol.wave.client.wavepanel.impl.indicator to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color to: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color.i18n; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color to: org.waveprotocol.wave.client.widget.toolbar.buttons; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.attachment to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.attachment to: org.waveprotocol.wave.media.model; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.impl.toolbar.i18n; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.doodad.link; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.widget.toolbar; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.impl.focus; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.impl.reader; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.widget.toolbar.buttons; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.impl.edit; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.media.model; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.editor.toolbar; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.impl.toolbar.gadget; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.doodad.attachment.render; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.wavepanel.impl.toolbar.color; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.gadget; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.util.escapers; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar to: org.waveprotocol.wave.client.doodad.attachment; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.gadget to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.gadget to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.gadget to: org.waveprotocol.wave.client.wavepanel.impl.toolbar.gadget.i18n; from: org.waveprotocol.wave.client.wavepanel.impl.toolbar.gadget to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.wavepanel.impl.reader to: org.waveprotocol.wave.client.wave; from: org.waveprotocol.wave.client.wavepanel.impl.reader to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.reader to: org.waveprotocol.wave.client.wavepanel.impl.focus; from: org.waveprotocol.wave.client.wavepanel.impl.reader to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.reader to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.client.wave; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.client.wavepanel.impl.edit; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.diff to: org.waveprotocol.wave.model.conversation.testing; from: org.waveprotocol.wave.client.wavepanel.impl to: org.waveprotocol.wave.client.wavepanel.event; from: org.waveprotocol.wave.client.wavepanel.impl to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.impl to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.impl.title to: org.waveprotocol.wave.client.wavepanel.impl.edit; from: org.waveprotocol.wave.client.wavepanel.impl.title to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.wave.client.wavepanel.impl.title to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.impl.title to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.impl.title to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.wavepanel.impl.title to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.impl.title to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.wavepanel.view to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.view to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wavepanel.view to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.view to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.view to: org.waveprotocol.wave.media.model; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.wavepanel.view.impl; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.scroll; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.uibuilder; from: org.waveprotocol.wave.client.wavepanel.view.dom to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.uibuilder; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.wavepanel.view.dom.full.i18n; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.widget.dialog; from: org.waveprotocol.wave.client.wavepanel.view.dom.full to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.wavepanel.view.fake to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.wavepanel.view.fake to: org.waveprotocol.wave.client.render; from: org.waveprotocol.wave.client.wavepanel.view.fake to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.view.fake to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.view.fake to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wavepanel.view.impl to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.view.impl to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.view.impl to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.client.wavepanel.block.pojo to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.block.pojo to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.block.pojo to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.block.pojo to: org.waveprotocol.wave.client.render; from: org.waveprotocol.wave.client.wavepanel.block.js to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.block.js to: org.waveprotocol.wave.client.wavepanel.block; from: org.waveprotocol.wave.client.wavepanel.block.js to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.block.js to: org.waveprotocol.wave.client.wavepanel.block.pojo; from: org.waveprotocol.wave.client.wavepanel.block to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.wavepanel.block to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.block to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.block to: org.waveprotocol.wave.model.conversation.testing; from: org.waveprotocol.wave.client.wavepanel.block to: org.waveprotocol.wave.client.render; from: org.waveprotocol.wave.client.wavepanel.block.xml to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.wavepanel.block.xml to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.wavepanel.block.xml to: org.waveprotocol.wave.client.render; from: org.waveprotocol.wave.client.wavepanel.block.xml to: org.waveprotocol.wave.client.wavepanel.block; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor.testtools; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.doodad.attachment.testing; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.doodad.attachment.render; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.doodad.attachment; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.doodad.form; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.doodad.link; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.doodad.suggestion; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.doodad.diff; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor.keys; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.model.schema.conversation; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.widget.popup.simple; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor.webdriver; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.harness to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.editor.examples.img to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.examples.img to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.examples.img to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.examples.img to: org.waveprotocol.wave.client.editor.harness; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.extract; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.sugg; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.keys; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.constants; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.model.undo; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.debug; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.webdriver; from: org.waveprotocol.wave.client.editor to: org.waveprotocol.wave.client.editor.content.img; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.editor.constants; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.wave.client.editor.event to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.model.schema.conversation; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.widget.popup.simple; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.keys; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.constants; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.extract; from: org.waveprotocol.wave.client.editor.testing to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.editor.operation to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.sugg to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.clipboard; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.richtext; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.widget.popup.simple; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.schema.conversation; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.extract to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.client.widget.toolbar.buttons; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.toolbar to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.util to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.debug to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.editor.impl to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.impl to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.impl to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.impl to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.impl to: org.waveprotocol.wave.client.editor.extract; from: org.waveprotocol.wave.client.editor.impl to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor.impl to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.extract; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.operation; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.document.raw; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor.content to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.client.widget.popup.simple; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.client.editor.keys; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.content.img to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.common.scrub; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.editor.extract; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.client.editor.selection.content; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.content.misc to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.editor.extract; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.editor.util; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.client.editor.content.paragraph to: org.waveprotocol.wave.model.schema.conversation; from: org.waveprotocol.wave.client.editor.webdriver to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.editor.webdriver to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.webdriver to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.webdriver to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.webdriver to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.webdriver to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.keys to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.keys to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.keys to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.editor.keys to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.keys to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.testtools to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.testtools to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.selection.html to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.selection.html to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.selection.html to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.selection.html to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.client.editor.selection.html; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.client.editor.impl; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.client.editor.content.paragraph; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.client.widget.popup.simple; from: org.waveprotocol.wave.client.editor.selection.content to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.gwt to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.gwt to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.gwt to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.editor.gwt to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.gwt to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.gwt to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.scroll to: org.waveprotocol.wave.client.wavepanel; from: org.waveprotocol.wave.client.scroll to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.wave.client.scroll to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.scroll to: org.waveprotocol.wave.client.wavepanel.impl; from: org.waveprotocol.wave.client.scroll to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.autohide to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.wave.client.widget.popup to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.client.widget.popup to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.widget.popup to: org.waveprotocol.wave.client.autohide; from: org.waveprotocol.wave.client.widget.popup to: org.waveprotocol.wave.client.common.webdriver; from: org.waveprotocol.wave.client.widget.popup.testing to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.popup.simple to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.menu to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.wave.client.widget.menu to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.widget.menu to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.button.popup to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.button to: org.waveprotocol.wave.client.widget.button.icon; from: org.waveprotocol.wave.client.widget.button to: org.waveprotocol.wave.client.widget.button.text; from: org.waveprotocol.wave.client.widget.button.text to: org.waveprotocol.wave.client.widget.button; from: org.waveprotocol.wave.client.widget.button.icon to: org.waveprotocol.wave.client.widget.button; from: org.waveprotocol.wave.client.widget.button.icon to: org.waveprotocol.wave.client.common.webdriver; from: org.waveprotocol.wave.client.widget.profile to: org.waveprotocol.wave.client.account; from: org.waveprotocol.wave.client.widget.profile to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.wave.client.widget.profile to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.wave.client.widget.profile to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.dialog to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.dialog to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.wave.client.widget.toolbar to: org.waveprotocol.wave.client.widget.toolbar.buttons; from: org.waveprotocol.wave.client.widget.toolbar to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.widget.toolbar to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.toolbar to: org.waveprotocol.wave.client.widget.overflowpanel; from: org.waveprotocol.wave.client.widget.toolbar.buttons to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.wave.client.widget.toolbar.buttons to: org.waveprotocol.wave.client.common.webdriver; from: org.waveprotocol.wave.client.widget.toolbar.buttons to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.wave.client.widget.toolbar.buttons to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.widget.toolbar.buttons to: org.waveprotocol.wave.client.widget.toolbar; from: org.waveprotocol.wave.client.widget.overflowpanel to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.wave.communication.gson to: org.waveprotocol.wave.communication.json; from: org.waveprotocol.wave.communication.gwt to: org.waveprotocol.wave.communication.json; from: org.waveprotocol.wave.federation to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.federation to: org.waveprotocol.wave.model.version; from: org.waveprotocol.wave.federation to: org.waveprotocol.protobuf; from: org.waveprotocol.wave.federation.noop to: org.waveprotocol.wave.federation; from: org.waveprotocol.wave.federation.noop to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.federation.xmpp to: org.waveprotocol.wave.federation; from: org.waveprotocol.wave.federation.xmpp to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.wave.federation.xmpp to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.id; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.adt.docbased; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.media.model to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.stat; from: org.waveprotocol.box.server to: org.waveprotocol.box.stat; from: org.waveprotocol.box.server to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.persistence.migration; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.persistence.lucene; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.persistence.file; from: org.waveprotocol.box.server to: org.waveprotocol.wave.federation; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.rpc; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots.register; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.executor; from: org.waveprotocol.box.server to: org.waveprotocol.wave.crypto; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots.passive; from: org.waveprotocol.box.server to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.frontend; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots.dataapi; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots.agent.passwd; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots.agent.welcome; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots.agent.registration; from: org.waveprotocol.box.server to: org.waveprotocol.wave.util.settings; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server to: org.waveprotocol.wave.federation.xmpp; from: org.waveprotocol.box.server to: org.waveprotocol.wave.federation.noop; from: org.waveprotocol.box.server to: org.waveprotocol.box.server.robots.active; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.rpc to: com.google.wave.api; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.webclient.search; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.rpc to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.frontend; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.util.escapers.jvm; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.persistence.file; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.stat; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.robots.agent.welcome; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.attachment; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.media.model; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.common.bootstrap; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.server.rpc.atmosphere; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.box.common.comms; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.rpc to: org.waveprotocol.wave.util.escapers; from: org.waveprotocol.box.server.rpc.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.rpc.atmosphere to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.rpc.atmosphere to: org.waveprotocol.box.server.rpc; from: org.waveprotocol.box.server.authentication to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.authentication to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.authentication to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.authentication to: org.waveprotocol.wave.util.escapers; from: org.waveprotocol.box.server.authentication to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.stat to: org.waveprotocol.box.stat; from: org.waveprotocol.box.server.stat to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.stat to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.operation.core; from: org.waveprotocol.box.server.common to: org.waveprotocol.wave.model.wave.data.core; from: org.waveprotocol.box.server.common to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.attachment to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.attachment to: org.waveprotocol.wave.media.model; from: org.waveprotocol.box.server.attachment to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.attachment to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.attachment to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.box.server.attachment to: org.waveprotocol.box.server.rpc; from: org.waveprotocol.box.server.attachment to: org.waveprotocol.wave.util.escapers.jvm; from: org.waveprotocol.box.server.util.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.util.testing to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.util to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.util to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.util to: org.waveprotocol.box.server.robots.agent.welcome; from: org.waveprotocol.box.server.util to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.util to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.frontend to: org.waveprotocol.box.server.frontend.testing; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.frontend.testing to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.federation; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.crypto; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.waveserver to: com.google.wave.api; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server.persistence.lucene; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.document; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server.robots.operations; from: org.waveprotocol.box.server.waveserver to: org.waveprotocol.box.server.waveserver.testing; from: org.waveprotocol.box.server.account to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.account to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.account to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.executor to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.executor to: org.waveprotocol.box.stat; from: org.waveprotocol.box.server.executor to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.util.escapers.jvm; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.persistence.mongodb; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.persistence.memory; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.crypto; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.persistence.file; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.media.model; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.waveserver.testing; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.util.testing; from: org.waveprotocol.box.server.persistence to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.persistence to: com.google.wave.api.event; from: org.waveprotocol.box.server.persistence to: com.google.wave.api; from: org.waveprotocol.box.server.persistence.lucene to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.persistence.lucene to: org.waveprotocol.box.server.persistence.file; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.crypto; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.box.server.persistence.protos; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.media.model; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.box.attachment; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.persistence.file to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.persistence.protos to: com.google.wave.api.robot; from: org.waveprotocol.box.server.persistence.protos to: com.google.wave.api; from: org.waveprotocol.box.server.persistence.protos to: com.google.wave.api.event; from: org.waveprotocol.box.server.persistence.protos to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.crypto; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.media.model; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.persistence.mongodb to: com.google.wave.api.event; from: org.waveprotocol.box.server.persistence.mongodb to: com.google.wave.api; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.persistence.mongodb to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.persistence.migration to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.persistence.migration to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.persistence.migration to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.persistence.migration to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.persistence.migration to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.wave.crypto; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.persistence.memory to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots to: com.google.wave.api; from: org.waveprotocol.box.server.robots to: com.google.wave.api.event; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.schema; from: org.waveprotocol.box.server.robots to: com.google.wave.api.impl; from: org.waveprotocol.box.server.robots to: com.google.wave.api.v2; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.robots.operations; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.frontend; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.robots.register; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.robots to: com.google.wave.api.robot; from: org.waveprotocol.box.server.robots to: org.waveprotocol.box.server.robots.dataapi; from: org.waveprotocol.box.server.robots to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.server.robots.active to: com.google.wave.api; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.robots.active to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.robots.active to: org.waveprotocol.box.server.robots.operations; from: org.waveprotocol.box.server.robots.operations to: com.google.wave.api; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.document; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.box.server.robots.operations to: com.google.wave.api.data; from: org.waveprotocol.box.server.robots.operations to: com.google.wave.api.event; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.robots.operations to: com.google.wave.api.impl; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.gadget; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.robots.passive; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.attachment; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.media.model; from: org.waveprotocol.box.server.robots.operations to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.frontend; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.box.server.robots.testing; from: org.waveprotocol.box.server.robots.operations to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.server.robots.agent to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.robots.agent to: org.waveprotocol.box.server.robots.register; from: org.waveprotocol.box.server.robots.agent to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.agent to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.agent to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.robots.agent to: com.google.wave.api; from: org.waveprotocol.box.server.robots.agent to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.robots.agent to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.robots.agent to: com.google.wave.api.event; from: org.waveprotocol.box.server.robots.agent.welcome to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.agent.welcome to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.agent.welcome to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.robots.agent.welcome to: com.google.wave.api; from: org.waveprotocol.box.server.robots.agent.welcome to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.robots.agent.welcome to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.robots.agent.passwd to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.robots.agent.passwd to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.agent.passwd to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.robots.agent.registration to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.robots.agent.registration to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.agent.registration to: org.waveprotocol.box.server; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.common; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.robots.passive to: com.google.wave.api.robot; from: org.waveprotocol.box.server.robots.passive to: com.google.wave.api; from: org.waveprotocol.box.server.robots.passive to: com.google.wave.api.impl; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.server.robots.operations; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.robots.passive to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.passive to: com.google.wave.api.event; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.document; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.box.server.robots.passive to: org.waveprotocol.wave.testing; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.testing to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.server.robots.testing to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.robots.util to: com.google.wave.api; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.box.server.robots.operations; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots.util to: com.google.wave.api.robot; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.wave.opbased; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.server.robots.util to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.robots.util to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.wave.util.logging; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.box.server.util; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.box.server.authentication; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.server.robots.dataapi to: com.google.wave.api; from: org.waveprotocol.box.server.robots.dataapi to: com.google.wave.api.data.converter; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.box.server.waveserver; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.box.server.robots; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.box.server.robots.util; from: org.waveprotocol.box.server.robots.dataapi to: com.google.wave.api.impl; from: org.waveprotocol.box.server.robots.dataapi to: org.waveprotocol.box.server.robots.operations; from: org.waveprotocol.box.server.robots.register to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.server.robots.register to: org.waveprotocol.box.server.persistence; from: org.waveprotocol.box.server.robots.register to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.server.robots.register to: org.waveprotocol.box.server.account; from: org.waveprotocol.box.stat to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.stat to: org.waveprotocol.box.common; from: org.waveprotocol.box.common to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.common to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.common to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.box.common to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.common to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.common to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.box.expimp to: org.waveprotocol.wave.model.image; from: org.waveprotocol.box.expimp to: org.waveprotocol.wave.media.model; from: org.waveprotocol.box.expimp to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.expimp to: org.waveprotocol.box.server.persistence.file; from: org.waveprotocol.box.expimp to: com.google.wave.api; from: org.waveprotocol.box.expimp to: com.google.wave.api.impl; from: org.waveprotocol.box.expimp to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.expimp to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.expimp to: org.waveprotocol.box.server.common; from: org.waveprotocol.box.expimp to: org.waveprotocol.wave.federation; from: org.waveprotocol.box.expimp to: org.waveprotocol.box.server.frontend; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.box.webclient.search.i18n; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.widget.toolbar; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.account; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.model.document; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.uibuilder; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.box.common; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.communication.gwt; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.box.webclient.widget.frame; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.box.webclient.search to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.box.webclient.search.testing to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.box.webclient.stat.dialog to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.box.webclient.stat.dialog to: org.waveprotocol.box.stat; from: org.waveprotocol.box.webclient.stat.dialog to: org.waveprotocol.wave.client.widget.dialog; from: org.waveprotocol.box.webclient.stat.gwtevent to: org.waveprotocol.box.stat; from: org.waveprotocol.box.webclient.stat to: org.waveprotocol.box.stat; from: org.waveprotocol.box.webclient.profile to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.box.webclient.profile to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.webclient.profile to: org.waveprotocol.wave.client.account.impl; from: org.waveprotocol.box.webclient.profile to: org.waveprotocol.wave.communication.gwt; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.webclient.common to: org.waveprotocol.wave.communication; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.webclient.client.i18n; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.scheduler; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.waveref; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.account; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.common.util; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.concurrencycontrol.common; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.wave.data.impl; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.events; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.wave.data; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.version; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.stat; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.operation.wave; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.concurrencycontrol.channel; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.webclient.common; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.util; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.document; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.webclient.widget.frame; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.webclient.search; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.wavepanel.view.dom; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.wavepanel.view.dom.full; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.wavepanel.view; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.wavepanel.impl.reader; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.wavepanel.impl.focus; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.communication.gwt; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.util.escapers; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.widget.popup; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.webclient.stat.gwtevent; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.doodad.attachment; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.wave.client.wavepanel.event; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.webclient.common.communication.callback; from: org.waveprotocol.box.webclient.client to: org.waveprotocol.box.webclient.client.atmosphere; from: org.waveprotocol.box.webclient.client to: com.google.gwt.websockets.client; from: org.waveprotocol.box.webclient.widget.frame to: org.waveprotocol.wave.client.widget.common; from: org.waveprotocol.box.webclient.widget.error to: org.waveprotocol.wave.client.common.safehtml; from: org.waveprotocol.pst to: org.waveprotocol.pst.style; from: org.waveprotocol.pst to: org.waveprotocol.pst.model; from: org.waveprotocol.pst.model to: org.waveprotocol.protobuf; from: org.waveprotocol.wave.concurrencycontrol to: org.waveprotocol.box.server.rpc; from: org.waveprotocol.wave.model.operation.testing to: org.waveprotocol.wave.model.document.bootstrap; from: org.waveprotocol.wave.model.operation.testing to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.operation.testing to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.operation.testing to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.operation.testing to: org.waveprotocol.wave.model.operation.testing.reference; from: org.waveprotocol.wave.model.operation.testing to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.model.operation.testing to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.model.operation.testing.reference to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.model.operation.testing.reference to: org.waveprotocol.wave.model.document.operation.algorithm; from: org.waveprotocol.wave.model.operation.testing.reference to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.model.operation.testing.reference to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.document; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.document.raw.impl; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.util; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.schema.conversation; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.model.document.operation.impl; from: org.waveprotocol.wave.client.editor.annotation to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.undo to: org.waveprotocol.wave.model.document.indexed; from: org.waveprotocol.wave.client.editor.undo to: org.waveprotocol.wave.model.operation; from: org.waveprotocol.wave.client.editor.undo to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.undo to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.undo to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.wave.client.editor.undo to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.undo to: org.waveprotocol.wave.model.undo; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.editor; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.common.logging; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.editor.testtools; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.model.document.operation.automaton; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.model.schema.conversation; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.editor.testing; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.model.document.util; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.debug.logger; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.editor.event; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.scheduler.testing; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.editor.content; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.widget.popup.simple; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.editor.content.misc; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.client.editor.keys; from: org.waveprotocol.wave.client.editor.integration to: org.waveprotocol.wave.model.document.operation; from: org.waveprotocol.box.webclient.client.state to: org.waveprotocol.wave.model.wave; from: org.waveprotocol.box.webclient.client.state to: org.waveprotocol.wave.model.id; from: org.waveprotocol.box.webclient.client.state to: org.waveprotocol.wave.model.supplement; from: org.waveprotocol.box.webclient.client.state to: org.waveprotocol.wave.model.conversation; from: org.waveprotocol.box.webclient.client.state to: org.waveprotocol.wave.client.state; from: org.waveprotocol.box.webclient.client.state to: org.waveprotocol.wave.model.testing; from: org.waveprotocol.wave.diff to: org.waveprotocol.protobuf; from: org.waveprotocol.box.common.comms to: org.waveprotocol.box.server.rpc.
jparyani_wave,com.google.wave.api.event,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: com.google.wave.api.event; com.google.wave.api
jparyani_wave,com.google.wave.api.event,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: com.google.wave.api.event; com.google.wave.api; com.google.wave.api.impl
jparyani_wave,com.google.wave.api.event,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): com.google.wave.api; com.google.wave.api.impl
jparyani_wave,com.google.wave.api.data,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ElementSerializer; ApiView; DocumentHitIterator; DocumentHitIterator.Singleshot; DocumentHitIterator.TextMatcher; DocumentHitIterator.ElementMatcher; ElementSerializerTest; DocumentHitIteratorTest; ApiViewTest]; [ApiView.ElementInfo]; [ApiView.Bit]. LCC (Lack of Component Cohesion) = 0.27
jparyani_wave,com.google.wave.api.data.converter,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): com.google.wave.api.data.converter.v21; org.waveprotocol.wave.model.wave.opbased
jparyani_wave,com.google.wave.api.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: com.google.wave.api.impl; com.google.wave.api
jparyani_wave,com.google.wave.api.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: com.google.wave.api.impl; com.google.wave.api; com.google.wave.api.event
jparyani_wave,com.google.wave.api.impl,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DocumentModifyAction]; [DocumentModifyAction.ModifyHow]; [DocumentModifyAction.BundledAnnotation]; [WaveletData; EventMessageBundleGsonAdaptor; EventMessageBundle; GsonFactory; ElementGsonAdaptor; JsonRpcResponseGsonAdaptor; JsonRpcResponseGsonAdaptorRobotTest; OperationRequestGsonAdaptor; OperationRequestGsonAdaptorRobotTest; RawAttachmentData]; [DocumentModifyQuery]; [RawDeltasListener]; [RawDeltas]; [GsonFactory.NonSerializableExclusionStrategy]; [GsonFactory.AnnotationInstanceCreator]; [GsonFactory.RangeInstanceCreator]; [GsonFactory.ThreadInstanceCreator]; [GsonFactory.SearchResultInstanceCreator]; [GsonFactory.SearchResultDigestInstanceCreator]; [GsonFactory.WaveletIdInstanceCreator]; [GsonFactory.AttachmentDataInstanceCreator]; [GsonFactory.ByteArrayGsonAdaptor]; [Tuple; TupleRobotTest]. LCC (Lack of Component Cohesion) = 0.63
jparyani_wave,com.google.wave.api.robot,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [RobotConnectionUtil; HttpRobotConnection; RobotConnection; RobotConnectionException; RobotCapabilitiesParser; RobotConnectionUtilTest; CapabilityFetchException; Capability]; [RobotName; RobotNameTest]; [RobotName.Builder]. LCC (Lack of Component Cohesion) = 0.27
jparyani_wave,org.waveprotocol.wave.crypto,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 32
jparyani_wave,org.waveprotocol.wave.common.logging,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [InMemoryLogSink; LogUtils; LogSink; PrintLogger.PrintLoggerSink; CircularBuffer; AbstractLogger; Logger; PrintLogger; LoggerBundle; AbstractLogger.LevelLogger]; [AbstractLogger.Level]; [AbstractLogger.NonNotifyingLogger]; [PrintLogger.NoOutputStream]. LCC (Lack of Component Cohesion) = 0.31
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.concurrencycontrol.testing; org.waveprotocol.wave.concurrencycontrol.channel
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.testing,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.concurrencycontrol.channel
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.testing,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [FakeWaveViewServiceUpdate]; [FakeOperationChannel]; [FakeOperationChannelMultiplexer]; [FakeClock]; [MockOperationChannel]; [MockOperationChannel.Method]; [CcTestingUtils]; [MockWaveViewService]; [MockWaveViewService.OpenArguments]; [MockWaveViewService.SubmitArguments]; [MockWaveViewService.CloseArguments]. LCC (Lack of Component Cohesion) = 1.0
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.wave,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 33
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.wave,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DuplexOpSink; DuplexOpSinkFactory; CcBasedWaveViewImpl; CcBasedWavelet; CcBasedWavelet.Factory; FlushingOperationSink; CcBasedWaveView; CcBasedWaveletListener; OperationSucker; CcBasedWaveViewTest; CcBasedWaveViewTest.MockOpenListener; OperationSuckerTest; OperationSuckerTest.MockFlushingOperationSink; CcBasedWaveViewImpl.MuxListener; CcBasedWaveViewImpl.LocalWaveletHolder; CcBasedWavelet.OperationApplier]; [WaveCorruptedHandler]; [CcBasedWaveViewImpl.DisconnectedHandler]; [CcBasedWaveViewImpl.CcDocumentFactory]; [CcBasedWaveViewImpl.WaveletListener]; [CcBasedWaveViewImpl.Factory]; [CcBasedWaveViewImpl.TerminalWavelets]; [CcBasedWavelet.FailureHandler]; [CcBasedWavelet.ChannelAdapter]; [CcBasedWaveView.OpenListener]; [WaveDisconnectedHandler]; [CcDocument; CcDataDocumentImpl; CcBasedWaveViewTest.MockCcDocument]; [CcBasedWaveViewTest.MethodCall]; [CcBasedWaveViewTest.MethodCallContext]; [CcBasedWaveViewTest.MockWaveViewListener]; [OperationSuckerTest.Method]. LCC (Lack of Component Cohesion) = 0.48
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.common,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.operation.wave
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.common,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SystemClock; Clock; SystemClockTest]; [CorruptionDetail; ResponseCode; ResponseCodeTest; Recoverable; ChannelException]; [DeltaPair]; [ConnectionEvent]; [UnsavedDataListenerFactory; UnsavedDataListener]; [UnsavedDataListener.UnsavedDataInfo]. LCC (Lack of Component Cohesion) = 0.46
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.client,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ConcurrencyControl; ServerConnection; OperationQueue; MergingSequence; ServerConnectionListener; MergingSequenceTest; ServerConnectionMock; OperationQueueTest; ServerMock; ServerMock.ReceiveCache; ClientMock; MockDeltaTransformer; OperationQueue.Item; ClientAndServerTest; SimpleDeltaHistory; ClientAndServerTest.TestConfig; OT3Test; OT3Test.TestConfig]; [ConcurrencyControl.AckInfo]; [ConcurrencyControl.AckedDelta]; [ConcurrencyControl.ConnectionListener]; [OperationQueue.Transformer]; [OperationQueue.ItemState]; [DeltaPairTest]; [MockDeltaTransformer.Expectation]. LCC (Lack of Component Cohesion) = 0.32
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.channel,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 69
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.channel,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.concurrencycontrol.channel; org.waveprotocol.wave.concurrencycontrol.testing
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.channel,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.concurrencycontrol.client
jparyani_wave,org.waveprotocol.wave.concurrencycontrol.channel,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [OperationChannelMultiplexerImpl; WaveletDeltaChannel; Accessibility; OperationChannelMultiplexer; OperationChannelMultiplexer.KnownWavelet; WaveletChannel; InternalOperationChannel; ViewChannel; OperationChannel; SubmitCallback; ViewChannelFactory; WaveletDeltaChannelImplTest; WaveletDeltaChannelImplTest.MockReceiver; WaveletDeltaChannelImplTest.MockWaveletChannel; MockViewChannel; MockViewChannel.Factory; MockWaveletDeltaChannel; OperationChannelImplTest; OperationChannelMultiplexerImplTest; OperationChannelMultiplexerImplTest.ConnectedChannel; UnsavedDataUpdateTest; MockOperationChannelListener; ViewChannelImplTest.MockSubmitListener; MockMuxListener; MockMuxListener.MethodCallContext; OperationChannelMultiplexerImpl.MultiplexedDeltaChannel; OperationChannelMultiplexerImpl.Stacklet; OperationChannelImpl; WaveletDeltaChannelImpl; ViewChannelImpl; WaveViewService; ViewChannelImplTest]; [OperationChannelMultiplexerImpl.DeltaChannelFactory]; [OperationChannelMultiplexerImpl.OperationChannelFactory]; [OperationChannelMultiplexerImpl.LoggerContext]; [OperationChannelMultiplexerImpl.State]; [OperationChannelImpl.State]; [WaveletDeltaChannel.Receiver]; [WaveletDeltaChannel.Transmitter]; [WaveletDeltaChannel.ClientMessage]; [WaveletDeltaChannelImpl.ServerMessage]; [WaveletDeltaChannelImpl.ServerDelta]; [WaveletDeltaChannelImpl.Committed]; [WaveletDeltaChannelImpl.Ack]; [WaveletDeltaChannelImpl.Nack]; [WaveletDeltaChannelImpl.State]; [ViewChannelImpl.State]; [OperationChannelMultiplexer.Listener]; [WaveViewService.WaveViewServiceUpdate]; [WaveViewService.OpenCallback]; [WaveViewService.SubmitCallback]; [WaveViewService.CloseCallback]; [WaveletChannel.Listener]; [ViewChannel.Listener]; [OperationChannel.Listener]; [WaveletDeltaChannelImplTest.Method]; [MockViewChannel.Method]; [MockWaveletDeltaChannel.Method]; [OperationChannelMultiplexerImplTest.ConnectionInfo]; [OperationChannelMultiplexerImplTest.FakeScheduler]; [OperationChannelMultiplexerImplTest.KnownWaveletDisconnectWhen]; [OperationChannelMultiplexerImplTest.NewWaveletDisconnectWhen]; [UnsavedDataUpdateTest.FakeUnsavedDataListener]; [ViewChannelImplTest.MockViewChannelListener]; [ViewChannelImplTest.MethodCall]; [ViewChannelImplTest.MethodCallContext]; [ViewChannelImplTest.MethodCall]; [ViewChannelImplTest.MethodCallContext]; [MockMuxListener.MethodCall]. LCC (Lack of Component Cohesion) = 0.55
jparyani_wave,org.waveprotocol.wave.util.escapers,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.waveref
jparyani_wave,org.waveprotocol.wave.model.document,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 56
jparyani_wave,org.waveprotocol.wave.model.document,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.model.document,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.document,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.conversation; org.waveprotocol.wave.model.supplement; org.waveprotocol.wave.client.state; org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.document.parser; org.waveprotocol.wave.model.document.operation.algorithm; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.document.raw.impl
jparyani_wave,org.waveprotocol.wave.model.document,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ReadableAnnotationSet; ReadableWDocument; AnnotationCursor; MutableAnnotationSet; MutableAnnotationSet.Persistent; MutableAnnotationSet.Local; MutableDocumentImpl; AnnotationCursorTestBase; MutableDocumentImplTest; DocumentTestCases; ReadableDocument; MutableDocument; MutableDocument.Provider; DocumentUnwrapper; Document; ObservableMutableDocument; Doc; MutableDocumentEvent; MutableDocumentListener; ObservableDocument; MutableDocumentListenerFactory; DocHandler; DocHandler.DocEventBundle; MutableDocumentListenerAdapter; AnnotationInterval]; [ReadableDocument.Provider]; [Doc.N]; [Doc.E]; [Doc.T]; [AnnotationMutationHandler]; [WaveContext]; [AnnotationBehaviour; AnnotationBehaviour.DefaultAnnotationBehaviour]; [AnnotationBehaviour.CursorDirection]; [AnnotationBehaviour.BiasDirection]; [AnnotationBehaviour.InheritDirection]; [AnnotationBehaviour.ContentType]; [AnnotationBehaviour.AnnotationFamily]; [RangedAnnotation; RangedAnnotationIterableTestBase]; [DocumentMutationStringifier]; [MutableDocument.Contributor]; [MutableDocument.Action]; [MutableDocument.Method]; [MutableDocument.Factory; DocumentFactory]; [DocumentUnwrapper.Action]; [MutableAnnotationSet.RangedValue]; [MutableAnnotationSet.CompareRangedValueByStartThenEnd]; [ObservableMutableDocument.Action]; [ObservableMutableDocument.Method]; [DocumentTestCases.DocumentParser]; [DocumentTestCases.TestComponent]; [DocumentTestCases.TestParameters]; [AnnotationSetTestBase]; [AnnotationSetTestBase.IntervalCallback]. LCC (Lack of Component Cohesion) = 0.52
jparyani_wave,org.waveprotocol.wave.model.document.operation,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 53
jparyani_wave,org.waveprotocol.wave.model.document.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.document.operation,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.document.operation.automaton; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.operation.wave
jparyani_wave,org.waveprotocol.wave.model.document.operation,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [EvaluatingDocOpCursor; DocOpCursor; DocInitializationCursor; AttributesUpdate; DocOpCursorDecorator; LocationModifier; DocOp; EvaluatingDocInitializationCursor; DocInitialization; ModifiableDocumentTestBase; DocumentCostFunctionTest; AnnotationBoundaryMapBuilder; AnnotationBoundaryMap; Nindo; NindoSink; NindoSink.Silent; DocumentCostFunction; AnnotationBoundaryMapBuilder.AnnotationBoundaryMapImpl; DocInitializationComponentType; DocOpComponentType; Attributes; NindoCursorDecorator; Automatons; NindoValidator; Nindo.ElementStart; Nindo.ReplaceAttributes; DocumentOperationReverser; ModifiableDocument; NindoAutomaton; SuperSink]; [AnnotationBoundaryMapBuilder.Triplet]; [Automatons.AnnoMap]; [NindoAutomaton.Violation]; [NindoAutomaton.DocSymbol]; [NindoAutomaton.StackEntry]; [NindoAutomaton.InsertElement]; [NindoAutomaton.DeleteElement]; [NindoValidator.IllFormed]; [Nindo.NindoCursor]; [Nindo.Builder]; [Nindo.AnnotationBuilder]; [Nindo.MutationComponent]; [Nindo.Skip]; [Nindo.Characters]; [Nindo.ElementEnd]; [Nindo.DeleteCharacters]; [Nindo.DeleteElementStart]; [Nindo.DeleteElementEnd]; [Nindo.UpdateAttributes]; [Nindo.StartAnnotation]; [Nindo.EndAnnotation]; [DocOp.IsDocOp]; [CapturingOperationSinkTest]. LCC (Lack of Component Cohesion) = 0.45
jparyani_wave,org.waveprotocol.wave.model.document.operation.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.util; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.operation.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.util; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.operation.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.operation.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.operation.util,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [UpdateMap; ImmutableUpdateMap; ImmutableUpdateMapTest]; [ImmutableStateMap; ImmutableStateMapTest]; [ImmutableStateMap.Attribute]; [StateMap]; [ExplodedDocOp]; [ImmutableUpdateMap.AttributeUpdate]. LCC (Lack of Component Cohesion) = 0.67
jparyani_wave,org.waveprotocol.wave.model.document.operation.impl,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 37
jparyani_wave,org.waveprotocol.wave.model.document.operation.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.document.operation
jparyani_wave,org.waveprotocol.wave.model.document.operation.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.operation.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.document.operation.impl,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.parser; org.waveprotocol.wave.model.document.operation.util; org.waveprotocol.wave.model.document.bootstrap
jparyani_wave,org.waveprotocol.wave.model.document.operation.impl,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AttributesImpl; DocOpUtil; DocInitializationBuffer; InitializationCursorAdapter; DocOpValidatorTest; DocOpUtilTest; DocOpBuilder; BufferedDocOpImpl; DocInitializationBuilder; UncheckedDocOpBuffer; DocOpValidator; AnnotationBoundaryMapImpl; DocOpBuffer; AbstractBufferedDocInitialization; AbstractDocInitialization]; [AnnotationBoundaryMapImpl.Builder]; [AnnotationMapImpl; AnnotationMap; AnnotationsUpdate; AnnotationsUpdateImpl]; [OperationComponents]; [OperationComponents.DocOpComponent]; [OperationComponents.DocInitializationComponent]; [OperationComponents.AnnotationBoundary]; [OperationComponents.Characters]; [OperationComponents.ElementStart]; [OperationComponents.ElementEnd]; [OperationComponents.Retain]; [OperationComponents.DeleteCharacters]; [OperationComponents.DeleteElementStart]; [OperationComponents.DeleteElementEnd]; [OperationComponents.ReplaceAttributes]; [OperationComponents.UpdateAttributes]; [AttributesUpdateImpl]; [DocOpValidator.IllFormed]; [DocOpValidatorTest.TestData]; [DocOpValidatorTest.DumbAnnotationBoundaryMap]. LCC (Lack of Component Cohesion) = 0.54
jparyani_wave,org.waveprotocol.wave.model.document.operation.automaton,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.automaton; org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.model.document.operation.automaton,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.automaton; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.operation.automaton,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.operation.automaton,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DocumentSchema; DocOpAutomaton; AutomatonDocument]; [DocumentSchema.PermittedCharacters]; [DocOpAutomaton.ValidationResult]; [DocOpAutomaton.Violation]; [DocOpAutomaton.OperationIllFormed]; [DocOpAutomaton.OperationInvalid]; [DocOpAutomaton.SchemaViolation]; [DocOpAutomaton.ViolationCollector]; [DocOpAutomaton.DocSymbol]; [DocOpAutomaton.InsertStart]. LCC (Lack of Component Cohesion) = 0.83
jparyani_wave,org.waveprotocol.wave.model.document.operation.algorithm,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 64
jparyani_wave,org.waveprotocol.wave.model.document.operation.algorithm,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.algorithm; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.operation.algorithm,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.algorithm; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.operation.algorithm,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.operation.algorithm; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.model.document.operation.algorithm,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.document.operation.algorithm,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [PositionTracker; NoninsertionTransformer; InsertionNoninsertionTransformer; InsertionTransformer; ValueUpdate; Composer; ComposerTest; Transformer; Decomposer; TransformerTest; DocOpTransformerTest; OperationNormalizer; DocOpCollector; DocOpCollectorTest]; [PositionTracker.RelativePosition]; [NoninsertionTransformer.InternalTransformException]; [NoninsertionTransformer.AnnotationTracker]; [NoninsertionTransformer.RangeCache]; [NoninsertionTransformer.RangeResolver]; [NoninsertionTransformer.DeleteCharactersResolver]; [NoninsertionTransformer.DeleteElementStartResolver]; [NoninsertionTransformer.ReplaceAttributesResolver]; [NoninsertionTransformer.UpdateAttributesResolver]; [NoninsertionTransformer.Target]; [NoninsertionTransformer.DeleteCharactersCache]; [NoninsertionTransformer.DeleteElementStartCache]; [NoninsertionTransformer.DeleteElementEndCache]; [NoninsertionTransformer.ReplaceAttributesCache]; [NoninsertionTransformer.UpdateAttributesCache]; [Decomposer.Target]; [AnnotationsNormalizer; AnnotationsNormalizerTest]; [AnnotationsNormalizer.AnnotationChange]; [AnnotationsNormalizer.AnnotationChangeValues]; [InsertionNoninsertionTransformer.RangeCache]; [InsertionNoninsertionTransformer.Target]; [InsertionNoninsertionTransformer.InsertionTarget]; [InsertionNoninsertionTransformer.NoninsertionTarget]; [InsertionNoninsertionTransformer.DeleteCharactersCache]; [InsertionNoninsertionTransformer.DeleteElementStartCache]; [InsertionNoninsertionTransformer.ReplaceAttributesCache]; [InsertionNoninsertionTransformer.UpdateAttributesCache]; [InsertionTransformer.Target]; [RangeNormalizer; RangeNormalizerTest]; [RangeNormalizer.Cache]; [Composer.AnnotationQueue]; [Composer.ComposeException]; [Composer.Target]; [Composer.PreTarget]; [Composer.PostTarget]; [Composer.DefaultPreTarget]; [Composer.RetainPreTarget]; [Composer.DeleteCharactersPreTarget]; [Composer.RetainPostTarget]; [Composer.CharactersPostTarget]; [Composer.ElementStartPostTarget]; [Composer.ElementEndPostTarget]; [Composer.ReplaceAttributesPostTarget]; [Composer.UpdateAttributesPostTarget]; [Composer.FinisherPostTarget]; [DocOpInverter]; [DocOpTransformerTest.TestParameters]; [DocOpTransformerTest.ReversibleTestParameters]. LCC (Lack of Component Cohesion) = 0.77
jparyani_wave,org.waveprotocol.wave.model.document.parser,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.parser; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.parser,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.parser; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.parser,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.parser; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.parser,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [StreamingXmlParser; XmlPullParser; XmlParserFactory; Item; ItemType; SafeXmlPullParser; XmlParseException; BufferedXmlParser; ParserTest; AnnotationParser; AnnotationParserTest]; [StreamingXmlParser.Buffer]; [RuntimeXmlParseException]. LCC (Lack of Component Cohesion) = 0.23
jparyani_wave,org.waveprotocol.wave.model.document.util,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 120
jparyani_wave,org.waveprotocol.wave.model.document.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.model.document.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.document.util,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.document.raw; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.document.raw.impl; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor; org.waveprotocol.wave.model.undo; org.waveprotocol.wave.model.document.operation.algorithm
jparyani_wave,org.waveprotocol.wave.model.document.util,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Point; Point.El; Point.Tx; IdentityView; TextLocator; FilteredView; Pretty; ContextProviders.LocalDocImpl; DocHelper; PointRange; DefaultDocumentEventRouter; DefaultDocumentEventRouter.Registration; LocalDocument; DocPredicate; FocusedPointRange; WritableLocalDocument; RawElementStyleView; ReadableDocumentView; FilterProduct; DocumentContext; MutableDocumentProxy; MutableDocumentProxy.DocumentProxy; DocCompare.NormalisingView; DefaultDocEventRouter; DocumentEventRouter; PersistentContent; PersistentContent.HardContent; LineContainers; LineContainersTest; LineContainersTest.LineTestState; RawElementStyleViewTest; TextLocatorTest; DocIterateTest; DocCompareTest; DocHelperTest; Property; Property.ImmutableProperty; Property.MutableProperty; ElementManager; RepaintingPersistentContent; ContextProviders; LocalAnnotationSetImpl; Annotations; DocProviders; AnnotationRegistry; AnnotationRegistry.Util; DocumentProvider; DocCompare; ReadableTreeWalkerTest; ReadableTreeWalkerTest.Bundle; TextExtractorTest; DomOperationUtilTest; DomOperationUtilTest.Bundle; AnnotationsTest; AnnotationRegistryTest; RangeTrackerTest; XmlStringBuilderTest; TextExtractor; ListenerRegistration; MuteDocEventRouter; RangeTracker; FocusedRange; Range; DomOperationUtil; DocIterate; ReadableTreeWalker; AnnotationRegistryImpl; ElementStyleView; ContextProviders.TestDocumentContext; XmlStringBuilderDoc; XmlStringBuilder; DocEventRouter]; [TextLocator.CharacterLocator]; [TextLocator.CharacterPredicate]; [TextLocator.CharacterLocatorImpl]; [TextLocator.PredicateBoundaryLocator]; [DocumentOperationCodePrinter]; [DocumentOperationCodePrinter.SimpleStream]; [EmptyDocument]; [FilteredView.Skip]; [DocumentParser]; [DocumentImpl]; [DocumentListenerRegistry]; [DocIterate.DocIterationFilter]; [DocIterate.DeepIteratorFilter]; [DocIterate.ElementFilter]; [DocIterate.ElementByTagNameFilter]; [AnnotationRegistryImpl.HandlerData]; [AnnotationIntervalImpl; GenericAnnotationIntervalIterable; GenericAnnotationIntervalIterable.GenericAnnotationIntervalIterator]; [ContextProviders.MiscListener]; [DocOpScrub; DocOpScrubTest]; [DocOpScrub.UncheckedAnnotationBoundary]; [DocOpScrub.Triplet]; [DocOpScrub.StringScrubber]; [DocOpScrub.ScrubCache]; [GenericAnnotationIntervalIterable.KeyEntry]; [GenericRangedAnnotationIterable; RangedAnnotationImpl; GenericRangedAnnotationIterable.GenericRangedAnnotationIterator]; [GenericRangedAnnotationIterable.KeyEntry]; [DocHelper.Expectation]; [DocHelper.NodeOffset]; [DocHelper.NodeAction]; [GenericAnnotationCursor]; [GenericAnnotationCursor.KeyLocation]; [NodeNotFoundException]; [FilterProduct.SkipStrategy]; [AnnotationBuilder]; [LineContainers.Rounding]; [LineContainers.RoundDirection]; [AnnotationsTest.CheckListener]; [AnnotationRegistryTest.Dummy]; [ElementHandlerRegistryTest]; [GenericRangedAnnotationIterableTest]; [UndoManagerTest]; [AnnotationIntervalIterableTestBase; GenericAnnotationIntervalIterableTest]. LCC (Lack of Component Cohesion) = 0.36
jparyani_wave,org.waveprotocol.wave.model.document.raw,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.raw; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.model.document.raw,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.raw; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.document.indexed
jparyani_wave,org.waveprotocol.wave.model.document.raw,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.parser
jparyani_wave,org.waveprotocol.wave.model.document.raw,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [RawDocumentProviderImpl; RawDocument; RawDocument.Provider; RawDocumentParserImpl; RawDocumentParserWithSelection; TextNodeOrganiser]; [RawDocument.Factory]; [RawDocumentParserWithSelection.SelectionParsingListener]. LCC (Lack of Component Cohesion) = 0.38
jparyani_wave,org.waveprotocol.wave.model.document.raw.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.raw.impl; org.waveprotocol.wave.model.document.indexed
jparyani_wave,org.waveprotocol.wave.model.document.raw.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.raw.impl; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.model.document.raw.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.raw.impl; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.raw.impl,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.document.raw
jparyani_wave,org.waveprotocol.wave.model.document.bootstrap,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.bootstrap; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.bootstrap,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.bootstrap; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.document.operation.impl
jparyani_wave,org.waveprotocol.wave.model.document.bootstrap,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.bootstrap; org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.indexed
jparyani_wave,org.waveprotocol.wave.model.document.bootstrap,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.bootstrap; org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.document.bootstrap,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [BootstrapDocument; BootstrapDocumentTest]; [BootstrapDocument.Item]; [BootstrapDocument.CharacterItem]; [BootstrapDocument.ElementStartItem]; [BootstrapDocument.ElementEndItem]. LCC (Lack of Component Cohesion) = 0.83
jparyani_wave,org.waveprotocol.wave.model.document.indexed,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 60
jparyani_wave,org.waveprotocol.wave.model.document.indexed,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.model.document.indexed,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.document.indexed,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.bootstrap
jparyani_wave,org.waveprotocol.wave.model.document.indexed,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DocumentHandler; ObservableIndexedDocument; RawAnnotationSet; IndexedDocProvider; AnnotationTreePerformanceTester; SimpleAnnotationSetTest; GenericAnnotationCursorTest; ObservableIndexedDocumentTest; AnnotationTreeTest; DocumentEvent; DocumentEvent.AttributesModified; DocumentEvent.TextInserted; DocumentEvent.ContentInserted; DocumentEvent.TextDeleted; DocumentEvent.ContentDeleted; DocumentEvent.AnnotationChanged; IndexedDocumentImpl; Validator; IndexedDocument; IndexedDocumentImplRandomLargeTest; IndexedDocumentImplTest; IndexedDocumentImplPerformanceTest; LocationMapperTest; EventBundleImpl; AnnotationTree; AnnotationSetListener; SimpleAnnotationSet; BasicAnnotationTree; StubModifiableAnnotations; NodeType; BasicAnnotationTree.Node; OffsetPoint; NindoTestCases]; [DocumentHandler.EventBundle]; [DocumentEvent.Type]; [DocumentEvent.TokenType]; [DocumentEvent.Token]; [DocumentEvent.Builder]; [IndexedDocumentImpl.InvertibleCursor]; [IndexedDocumentImpl.NonInvertibleCursor]; [EventBundleImpl.Builder]; [AnnotationTree.Notification]; [AnnotationTree.OpenAnnotation]; [LocationMapper; SizedObject]; [Locator]; [IndexedDocument.Provider]; [OffsetPoint.Finder]; [SimpleAnnotationSet.Values]; [SimpleAnnotationSet.Changes]; [SimpleAnnotationSet.Notification]; [SimpleAnnotationSet.ContainerTraverser]; [SimpleAnnotationSet.RangesIterator]; [RawAnnotationSet.AnnotationEvent]; [RawAnnotationSet.AnnotationStartEvent]; [RawAnnotationSet.AnnotationEndEvent]; [BasicAnnotationTree.NodeType]; [NindoTestCases.DocumentParser]; [NindoTestCases.TestComponent]; [NindoTestCases.TestParameters]. LCC (Lack of Component Cohesion) = 0.45
jparyani_wave,org.waveprotocol.wave.model.schema,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.schema,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.schema,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.schema.conversation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.schema.conversation; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.schema.conversation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.schema.conversation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.schema.conversation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.schema.conversation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.schema.account,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.schema.account; org.waveprotocol.wave.model.account
jparyani_wave,org.waveprotocol.wave.model.schema.account,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.account
jparyani_wave,org.waveprotocol.wave.model.undo,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.undo; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.model.undo,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.undo; org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.model.undo,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.undo; org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.model.undo,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [UndoManagerPlus; UndoManager; UndoManagerFactory; UndoManagerImpl; UndoStack]; [UndoStack.StackEntry]; [UndoManagerImpl.Algorithms]; [UndoManagerImpl.Checkpointer]. LCC (Lack of Component Cohesion) = 0.5
jparyani_wave,org.waveprotocol.wave.model.testing,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 74
jparyani_wave,org.waveprotocol.wave.model.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.operation.wave
jparyani_wave,org.waveprotocol.wave.model.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.operation.wave; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.operation.wave; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.model.testing,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.wave.data.impl; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.document.bootstrap
jparyani_wave,org.waveprotocol.wave.model.testing,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DeltaTestUtil]; [RandomProviderImpl; RandomDocOpGenerator; RandomProviderImplTest]; [FakeWaveView; OpBasedWaveletFactory; FakeIdGenerator; FakeDocument; BasicFactories; MockParticipationHelper; MockWaveletOperationContextFactory; Factory; FakeWaveView.Builder; WaveletDataFactory; GenericTestBase]; [FakeWaveletListener]; [DocOpCreator]; [DocOpCreator.SimplifyingDocOpBuilder]; [OpBasedWaveletFactory.VersionIncrementingSink]; [OpBasedWaveletFactory.Builder]; [FakeWaveletDataListener]; [RandomNindoGenerator]; [RandomNindoGenerator.Mapper]; [RandomNindoGenerator.Generator]; [RandomNindoGenerator.RandomizerMutationComponent]; [RandomNindoGenerator.RandomMutationComponentGenerator]; [RandomNindoGenerator.SkipGenerator]; [RandomNindoGenerator.CharactersGenerator]; [RandomNindoGenerator.DeleteCharactersGenerator]; [RandomNindoGenerator.AttributesChecker]; [RandomNindoGenerator.ElementStartGenerator]; [RandomNindoGenerator.RandomConstantMutationComponentGenerator]; [RandomNindoGenerator.ElementEndGenerator]; [RandomNindoGenerator.DeleteElementStartGenerator]; [RandomNindoGenerator.DeleteElementEndGenerator]; [RandomNindoGenerator.AttributesOnlyRandomMutationComponentGenerator]; [RandomNindoGenerator.SetAttributesGenerator]; [RandomNindoGenerator.UpdateAttributesGenerator]; [RandomNindoGenerator.StartAnnotationGenerator]; [RandomNindoGenerator.EndAnnotationGenerator]; [RandomDocOpGenerator.RandomProvider]; [RandomDocOpGenerator.Parameters]; [RandomDocOpGenerator.AnnotationOption]; [RandomDocOpGenerator.Mapper]; [RandomDocOpGenerator.Generator]; [RandomDocOpGenerator.RandomizerOperationComponent]; [RandomDocOpGenerator.Stage]; [RandomDocOpGenerator.RandomOperationComponentGenerator]; [RandomDocOpGenerator.SkipGenerator]; [RandomDocOpGenerator.CharactersGenerator]; [RandomDocOpGenerator.DeleteCharactersGenerator]; [RandomDocOpGenerator.AttributesUpdateChecker]; [RandomDocOpGenerator.ElementStartGenerator]; [RandomDocOpGenerator.RandomConstantOperationComponentGenerator]; [RandomDocOpGenerator.ElementEndGenerator]; [RandomDocOpGenerator.DeleteElementStartGenerator]; [RandomDocOpGenerator.DeleteElementEndGenerator]; [RandomDocOpGenerator.ReplaceAttributesGenerator]; [RandomDocOpGenerator.UpdateAttributesGenerator]; [RandomDocOpGenerator.RunnableWithException]; [RandomDocOpGenerator.AnnotationBoundaryGenerator]; [RandomDocOpGenerator.Result]; [RandomDocOpGenerator.StringNullComparator]; [FakeDocument.Factory]; [ModelTestUtils]; [ExtraAsserts]; [FakeHashedVersionFactory]; [OpMatchers]; [TestOperations]; [Response]; [Response.ResponseAnswer]; [GenericGWTTestBase]; [MockParticipationHelper.Frame]; [FakeSilentOperationSink]. LCC (Lack of Component Cohesion) = 0.84
jparyani_wave,org.waveprotocol.wave.model.wave,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.model.wave,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.wave,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.wave.data; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.wave.data,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data; org.waveprotocol.wave.model.wave.data.impl
jparyani_wave,org.waveprotocol.wave.model.wave.data,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.wave.data,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data; org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.wave.data,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data; org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.wave.data,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.document.operation.automaton; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.wave.data.impl
jparyani_wave,org.waveprotocol.wave.model.wave.data.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data.impl; org.waveprotocol.wave.model.wave.data
jparyani_wave,org.waveprotocol.wave.model.wave.data.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data.impl; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.wave.data.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data.impl; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.wave.data.impl,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.wave.data.core.impl
jparyani_wave,org.waveprotocol.wave.model.wave.data.impl,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ObservablePluggableMutableDocument; PluggableMutableDocument; DataUtil; StubDocumentFactory; WaveViewDataImplTest; DataUtilTest; BlipDataImpl; AbstractBlipData; DataUtil.RawBlipData; AbstractWaveletData; WaveletDataImpl; ForwardingReadableWaveletData; UnmodifiableWaveletData; UnmodifiableBlipData; ForwardingReadableBlipData; EmptyWaveletSnapshot; WaveViewDataImpl; WaveletDataListenerManager; DataUtil.CoreWrapperWaveletData]; [ObservablePluggableMutableDocument.DocumentHandlerManager]; [PluggableMutableDocument.DocumentCreationContext]; [PluggableMutableDocument.BasicSequencer]; [UnmodifiableWaveletData.Factory]; [WaveletDataImpl.Factory]; [WaveletDataListenerImpl]. LCC (Lack of Component Cohesion) = 0.28
jparyani_wave,org.waveprotocol.wave.model.wave.data.core,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data.core; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.wave.data.impl
jparyani_wave,org.waveprotocol.wave.model.wave.data.core,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data.core; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.wave.data.impl
jparyani_wave,org.waveprotocol.wave.model.wave.data.core.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data.core.impl; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.operation.wave; org.waveprotocol.wave.model.wave.data.impl
jparyani_wave,org.waveprotocol.wave.model.wave.data.core.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.data.core.impl; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.wave.data.impl
jparyani_wave,org.waveprotocol.wave.model.wave.opbased,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.wave.opbased,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.wave.opbased,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.wave.data; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.wave.opbased,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.wave.data; org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.wave.opbased,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.wave.data.impl
jparyani_wave,org.waveprotocol.wave.model.wave.opbased,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [OpBasedBlip; OpBasedWavelet; OpBasedWaveletTestBase; OpBasedWaveletWithWaveletDataImplTest]; [AnnotationSetObserver]; [ObservableWaveView; WaveViewImpl]; [WaveViewImpl.WaveletFactory]; [WaveViewImpl.WaveletConfigurator]; [WaveletListenerImpl]; [OpBasedWaveletWaveletTest]; [WaveletDataWithWaveletDataImplTest]; [ObservableWaveletWithOpBasedWaveletTest]; [ObservableWaveletDataWithWaveletDataImplTest]; [BlipDataWithBlipDataImplTest]. LCC (Lack of Component Cohesion) = 0.73
jparyani_wave,org.waveprotocol.wave.model.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.document.operation
jparyani_wave,org.waveprotocol.wave.model.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.operation,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.document.bootstrap; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.operation,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Visitable]; [CapturingOperationSink; SilentOperationSink; Operation; OperationSink; SilentOperationSinkTest; SilentOperationSinkTest.MyOperation; OperationRuntimeException; OperationException; ReversingOperationSink; OpCursorException; Domain; ReversibleOperation; OperationPair; OpComparatorsLargeTest; OpComparators]; [RemovedAuthorException; TransformException]; [OpComparators.OpEquator]; [SilentOperationSink.Void]; [SilentOperationSink.Blocked]; [SilentOperationSink.Executor]; [Visitor]; [OperationSequencer]; [DataFactory]; [SilentOperationSinkTest.MyData]. LCC (Lack of Component Cohesion) = 0.42
jparyani_wave,org.waveprotocol.wave.model.operation.wave,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 38
jparyani_wave,org.waveprotocol.wave.model.operation.wave,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation.wave; org.waveprotocol.wave.model.document.operation
jparyani_wave,org.waveprotocol.wave.model.operation.wave,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation.wave; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.operation.wave,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation.wave; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.operation.wave,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.operation.core; org.waveprotocol.wave.model.document.operation.algorithm; org.waveprotocol.wave.model.conversation; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.wave.data.impl; org.waveprotocol.wave.model.document.indexed
jparyani_wave,org.waveprotocol.wave.model.operation.core,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation.core; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.operation.wave
jparyani_wave,org.waveprotocol.wave.model.operation.core,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation.core; org.waveprotocol.wave.model.wave.data.core; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.operation.wave
jparyani_wave,org.waveprotocol.wave.model.operation.core,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.operation.core; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.operation.wave
jparyani_wave,org.waveprotocol.wave.model.adt,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 37
jparyani_wave,org.waveprotocol.wave.model.adt,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.adt; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.adt,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.adt; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.adt,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [MonotonicValue; ObservableMonotonicValue]; [ObservableBasicMap; ObservableBasicMapImpl; BasicMap; MonotonicMap; ObservableMonotonicMap; ObservableBasicMapTestBase; ObservableBasicMapTestBase.Listener; ObservableBasicMapWithObservableBasicMapImplTest]; [ObservableBasicMap.Listener]; [InMemoryElementList; ElementList; ObservableElementList]; [ObservableSingleton; ObservableSingletonImpl; Singleton; ObservableSingletonTestBase; ObservableSingletonTestBase.Listener; ObservableSingletonWithObservableSingletonImplTest]; [ObservableSingleton.Listener]; [ObservableBasicSetImpl; AbstractObservableBasicSet; BasicSet; ObservableBasicSet; ObservableBasicSetTestBase; ObservableBasicSetTestBase.Listener; ObservableBasicSetWithObservableBasicSetImplTest]; [ObservableSingletonImpl.Factory]; [BasicValue; ObservableBasicValue]; [ObservableBasicSet.Listener]; [ObservableMonotonicValue.Listener]; [ObservableBasicValue.Listener]; [ObservableStructuredValue]; [ObservableStructuredValue.Listener]; [ObservableElementList.Listener]. LCC (Lack of Component Cohesion) = 0.41
jparyani_wave,org.waveprotocol.wave.model.adt.docbased,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 45
jparyani_wave,org.waveprotocol.wave.model.adt.docbased,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.adt.docbased; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.adt.docbased,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.adt.docbased; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.supplement; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.adt.docbased,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DocumentBasedBasicValue; Initializer; DocumentBasedStructuredValue; Factory; DocumentBasedStructuredValueTest; ObservableSingletonWithDocumentBasedSingletonTest; DocumentBasedBasicValueTest; DocumentBasedBasicValueTest.FungeStack; TestUtil; DocumentBasedElementListTest.ValueList; InitializerTest; DocumentBasedElementList; DocumentBasedElementListTest; CompoundInitializer; CompoundInitializerTest; DocumentBasedSingleton]; [DocumentBasedBoolean; DocumentBasedBooleanTest]; [DocumentBasedMonotonicValue; DocumentBasedMonotonicValueTest; DocumentBasedMonotonicValueTest.FungeStack]; [AbstractDocumentBasedMap; DocumentBasedMonotonicMap; DocumentBasedBasicMap; DocumentBasedMonotonicMapTest; DocumentBasedMonotonicMapTest.FungeStack; DocumentBasedBasicMapTest; DocumentBasedBasicMapTest.FungeStack; ObservableBasicMapWithDocumentBasedBasicMapTest]; [DocumentBasedBasicSet; DocumentBasedBasicSetTest; DocumentBasedBasicSetTest.FungeStack; ObservableBasicSetWithDocumentBasedBasicSetTest]; [Initializer.Helper]; [DocumentBasedMonotonicMapTest.Entry]; [DocumentBasedMonotonicMapTest.ListBuilder]; [DocumentBasedMonotonicMapTest.MockListener]; [DocumentBasedStructuredValueTest.Key]; [DocumentBasedStructuredValueTest.MockStructuredValueObserver]; [DocumentBasedBasicMapTest.Entry]; [DocumentBasedBasicMapTest.ListBuilder]; [DocumentBasedBasicMapTest.MockListener]; [TestUtil.ValueContext]; [DocumentBasedElementListTest.ListChangeObserver]; [DocumentBasedMonotonicValueTest.MockListener]. LCC (Lack of Component Cohesion) = 0.38
jparyani_wave,org.waveprotocol.wave.model.conversation,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 74
jparyani_wave,org.waveprotocol.wave.model.conversation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.conversation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.conversation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.conversation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.conversation,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.adt.docbased; org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.document.operation.algorithm; org.waveprotocol.wave.model.conversation.testing; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.schema.conversation
jparyani_wave,org.waveprotocol.wave.model.conversation,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ObservableConversationThread; WaveletBasedConversationBlip; WaveletBasedConversationBlip.LocatedReplyThread; ConversationThread; ManifestBlip; BlipMappers; ConversationView; ConversationListenerImpl; ConversationBlip; ObservableConversation; ManifestThread; Blips; DocumentBasedManifestThread; TitleHelper; ObservableConversationView; ObservableConversationBlip; ObservableManifestBlip; DocumentBasedManifestBlip; ConversationStructure; WaveletBasedConversation; WaveletBasedConversation.ComponentHelper; WaveletBasedConversation.BlipListenerAggregator; BlipIterators; BlipIterators.BlipIterator; Manifest; WaveletBasedConversationThread; WrapperIterator; Conversation; ObservableManifestThread; DocumentBasedManifestTest; WaveBasedConversationViewTest; ConversationCopierTest; ConversationTestBase; BlipIteratorsTest; TitleHelperTest; WaveletBasedConversationTest; WrapperIteratorTest; ConversationViewTestBase; DocumentBasedManifestBlipTest; DocumentBasedManifestThreadTest; ConversationTestUtils; HasId; WrapperIteratorTest.TestManifest; DocumentBasedManifest; WaveBasedConversationView; AnchorData; ObservableManifest; WaveBasedConversationView.ConversationContainer; WaveletBasedConversation.ThreadListenerAggregator; ConversationCopier]; [WaveletBasedConversationBlip.Listener]; [InboxState]; [TagsDocument; TagsDocumentTest; TagsDocumentTest.TestListener]; [TagsDocument.Listener]; [BlipMappers.Exit]; [BlipMappers.DepthFirst]; [AnchorManager; AnchorManagerTest]; [AnchorManager.Listener]; [ConversationBlip.LocatedReplyThread]; [ObservableConversation.AnchorListener]; [ObservableConversation.Listener]; [AnnotationConstants]; [DocumentBasedManifest.AnchorKey]; [ObservableConversationView.Listener]; [ObservableManifestBlip.Listener]; [DocumentBasedManifestBlip.ThreadInitialiser]; [ObservableManifest.Listener]; [WaveletBasedConversationThread.Listener]; [Conversation.Anchor]; [ObservableManifestThread.Listener]; [SchemaConstraintsTest]. LCC (Lack of Component Cohesion) = 0.3
jparyani_wave,org.waveprotocol.wave.model.conversation.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation.testing; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.conversation.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation.testing; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.conversation.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation.testing; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.conversation.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.conversation.testing; org.waveprotocol.wave.model.schema; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.conversation
jparyani_wave,org.waveprotocol.wave.model.util,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 105
jparyani_wave,org.waveprotocol.wave.model.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.id
jparyani_wave,org.waveprotocol.wave.model.util,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.model.document.operation.automaton; org.waveprotocol.wave.model.testing; org.waveprotocol.wave.model.document.raw.impl
jparyani_wave,org.waveprotocol.wave.model.util,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [EvaluableOffsetList; OffsetList; EvaluableOffsetListTest; EvaluableOffsetList.Container]; [EvaluableOffsetList.AssociativeOperator]; [EvaluableOffsetList.Node]; [TitleExtractor; TitleExtractorTest]; [InvalidInputException]; [StructuredValue]; [DeletionListener; DocumentEventRouterTestBase; DefaultDocumentEventRouterTest; StringSet; CollectionFactory; ReadableStringSet; IdentitySet; NumberPriorityQueue; StringMap; NumberMap; IdentityMap; IntMap; CopyOnWriteSet; CollectionUtils.StringMapAdapter; CollectionUtils.NumberMapAdapter; CollectionUtils.IntMapAdapter; CollectionUtils.StringSetAdapter; CollectionUtils.IdentitySetAdapter; CollectionUtils.NumberPriorityQueueAdapter; CollectionUtils.IdentityHashMapAdapter; CollectionUtils.HashCollectionFactory; CollectionUtils.EmptyStringMap; CopyOnWriteSetTest; ReadableStringMap; ReadableIntMap; ReadableIdentitySet; AttributeListener; ElementListener; DocumentEventRouterTestBase.SelfRemovalListener; ReadableNumberMap]; [Preconditions; Utf16Util; IntRange; IntPair; CollectionUtils; ObservableMapImplTest; Utf16UtilTest; DataDomain; ChainedData; ChainedHashSet; ChainedDataTest; ChainedStringSet]; [StringSet.StringPredicate]; [ListSet]; [ReadableStringMap.ProcV]; [ReadableIntMap.ProcV]; [ReadableIdentitySet.Proc]; [Predicate]; [ConcurrentList; ConcurrentListTest]; [ConcurrentList.Node]; [ConcurrentList.NodeIterator]; [ReadableMap; SimpleMap]; [Serializer; Serializer.EnumSerializer]; [Utf16Util.CodePointHandler]; [Utf16Util.BlipCodePointResult]; [CharBase64; Base64DecoderException; CharBase64Test]; [ValueUtils; ValueUtilsTest]; [Scheduler; ImmediateExcecutionScheduler; FuzzingBackOffScheduler; FuzzingBackOffSchedulerTest; FuzzingBackOffGenerator; FuzzingBackOffGeneratorTest]; [Scheduler.Command]; [ReadableStringSet.Proc]; [OffsetList.Container]; [OffsetList.LocationAction]; [Pair; PairTest]; [StringMap.EntryFilter]; [FuzzingBackOffGenerator.BackOffParameters]; [ReadableNumberMap.ProcV]; [FuzzingBackOffScheduler.Cancellable]; [FuzzingBackOffScheduler.CollectiveScheduler]; [FuzzingBackOffScheduler.Builder]; [NumberMap.EntryFilter]; [Box]; [ConcurrentSet; ConcurrentSetTest]; [IdentityMap.ProcV]; [IdentityMap.Reduce]; [IntMap.EntryFilter]; [CopyOnWriteSet.CollectionFactory]; [ObservableMapImplTest.MockListener]; [DocumentEventRouterTestBase.DummyElm]; [FilteredViewTest]; [FilteredViewTest.BasicFilteringView]; [FuzzingBackOffSchedulerTest.FakeCancellable]; [FuzzingBackOffSchedulerTest.FakeNativeScheduler]. LCC (Lack of Component Cohesion) = 0.46
jparyani_wave,org.waveprotocol.wave.model.waveref,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [InvalidWaveRefException; WaverefEncoder; WaveRef; WaveRefTest; WaverefEncoderTest]; [WaverefEncoder.EscaperType]; [WaverefEncoder.PercentEncoderDecoder]; [WaveRef.Provider]. LCC (Lack of Component Cohesion) = 0.5
jparyani_wave,org.waveprotocol.wave.model.id,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 35
jparyani_wave,org.waveprotocol.wave.model.id,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.id,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.id,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.version
jparyani_wave,org.waveprotocol.wave.model.id,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.richtext,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.richtext; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor.extract
jparyani_wave,org.waveprotocol.wave.model.richtext,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.richtext; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor.extract
jparyani_wave,org.waveprotocol.wave.model.richtext,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [RichTextMutationBuilder; RichTextTokenizer; RichTextTokenizerImpl; RichTextTokenizerImplFirefoxTest; RichTextTokenizerImplTest; MockRichTextTokenizer; RichTextMutationBuilderTest; RichTextTokenizerImplFirefox]; [RichTextTokenizer.Type]; [RichTextTokenizer.TypeGroup]; [RichTextTokenizerImpl.Token]; [RichTextTokenizerImpl.StyleTokenExtractor]. LCC (Lack of Component Cohesion) = 0.42
jparyani_wave,org.waveprotocol.wave.model.experimental.schema,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 50
jparyani_wave,org.waveprotocol.wave.model.experimental.schema,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [InvalidSchemaException; SchemaFactory; SchemaFactory.BoxedSchemaException; RegularExpressionChecker; IntermediateSchemaFragment; IntermediateSchemaFragment.IntermediatePrologueEntry; IntermediateSchemaFragment.DeferredCompile; SchemaPattern; SchemaPattern.PrologueEntry; AttributesValidator; AttributesValidatorTest; SchemaFactoryTest; RegularExpressionCheckerTest; CharacterValidator; CharacterValidatorTest; AttributeValidationResult; AttributeValidationResult.AttributeNotAllowed; AttributeValidationResult.InvalidAttributeValue; AttributeValidationResult.MissingRequiredAttribute; AttributeValidationResult.RemovingRequiredAttribute; ValueValidator; IntermediateSchemaFragment.ReferenceData; DocInitializationParser]; [SchemaFactory.Handler]; [SchemaFactory.BaseHandler]; [SchemaFactory.ElementCollectionHandler]; [SchemaFactory.PatternHandler]; [SchemaFactory.DefinitionHandler]; [SchemaFactory.ElementHandler]; [SchemaFactory.PrologueHandler]; [SchemaFactory.EmptyHandler]; [SchemaFactory.SchemaBuilder]; [CharacterValidator.Predicate]; [CharacterValidator.ValidatingHandler]; [AttributeValidationResult.Type]; [RegularExpressionChecker.State]; [RegularExpressionChecker.HeadState]; [RegularExpressionChecker.TailState]; [RegularExpressionChecker.EscapeState]; [IntermediateSchemaFragment.IntermediatePrologueFragment]; [IntermediateSchemaFragment.DirectPrologueFragment]; [IntermediateSchemaFragment.ReferencePrologueFragment]; [IntermediateSchemaFragment.AttributesPatternBuilder]; [IntermediateSchemaFragment.CharacterPatternBuilder]; [IntermediateSchemaFragment.CompilerState]; [SchemaPattern.Prologue]; [DocInitializationParser.ParseException]; [DocInitializationParser.EventHandler]; [DocInitializationParser.FullHandler]; [DocInitializationParser.NonCharacterHandler]. LCC (Lack of Component Cohesion) = 0.56
jparyani_wave,org.waveprotocol.wave.model.account,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 32
jparyani_wave,org.waveprotocol.wave.model.account,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.account; org.waveprotocol.wave.model.schema.account
jparyani_wave,org.waveprotocol.wave.model.supplement,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 58
jparyani_wave,org.waveprotocol.wave.model.supplement,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.supplement; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.supplement,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.supplement; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.supplement,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.supplement; org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.supplement,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.supplement; org.waveprotocol.wave.model.id; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.model.version,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.version; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.model.version,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.model.version; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.wave.model.version,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.util
jparyani_wave,org.waveprotocol.wave.client,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.wavepanel.render; org.waveprotocol.wave.client.wavepanel.impl.toolbar
jparyani_wave,org.waveprotocol.wave.client,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [StageTwo; StageTwo.DefaultProvider; StageThree; StageThree.DefaultProvider; Stages; StageZero; StageZero.DefaultProvider; StageOne; StageOne.DefaultProvider]; [Stages.SimpleAsyncCallback]; [OptimalGroupingScheduler]; [OptimalGroupingScheduler.FuzzyTask]. LCC (Lack of Component Cohesion) = 0.33
jparyani_wave,org.waveprotocol.wave.client.state,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.state; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.client.state,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.state; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.client.state,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.state; org.waveprotocol.wave.client.debug.logger; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document
jparyani_wave,org.waveprotocol.wave.client.state,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.supplement
jparyani_wave,org.waveprotocol.wave.client.state,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [BlipReadStateMonitorImpl; BlipReadStateMonitor]; [ThreadReadStateMonitor; ThreadReadStateMonitorImpl]; [ThreadReadStateMonitor.Listener]; [ThreadReadStateMonitorImpl.ReadStateBucket]; [ThreadReadStateMonitorImpl.ThreadReadState]; [BlipReadStateMonitor.Listener]. LCC (Lack of Component Cohesion) = 0.75
jparyani_wave,org.waveprotocol.wave.client.render,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ConversationRenderer; RendererHelper; ResultProducingRenderHelper; ReductionRuleRenderHelperEquivalenceTest; ReducingRendererHelper; RenderingRules; ReductionRuleRenderHelperEquivalenceTest.FakeRules; ReductionBasedRenderer; WaveRenderer; CompositeRendererHelper]; [ReducingRendererHelper.Type]; [ReducingRendererHelper.Scope]; [BlipHtmlRenderer]. LCC (Lack of Component Cohesion) = 0.31
jparyani_wave,org.waveprotocol.wave.client.wave,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [LocalSupplementedWaveImpl; LocalSupplementedWave; LocalSupplementedWaveImplTest]; [SimpleDiffDoc; LazyContentDocument; DiffContentDocument; DiffSink; SimpleDiffDocTest; LazyContentDocumentTest; InteractiveDocument]; [RegistriesHolder]; [DocumentRegistry; WaveDocuments]. LCC (Lack of Component Cohesion) = 0.31
jparyani_wave,org.waveprotocol.wave.client.common.util,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 94
jparyani_wave,org.waveprotocol.wave.client.common.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.common.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.common.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.common.util,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.client.common.util,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Measurer; MeasurerInstance; MeasurerInstance.GwtMeasurer; MeasurerInstance.BoundingClientRectMeasurer]; [IntMapJsoView; JsoMapBase; JsoMapStringBuilder; JsIdentityMap; NumberMapJsoView; JsoIntMap; FastQueue; JsIdentitySet; FastQueueGwtTest; JsoCollectionFactory; JsoNumberMap; JsoStringMap; JsoStringSet; JsoView; QuirksConstants; DomHelper; IdentityHashQueue; SimpleDoubleToIntMap]; [IntMapJsoView.Reduce]; [VolatileComparable]; [SignalKeyLogic; SignalEventImpl; UserAgent; SignalEvent; FakeSignalEvent; EventWrapper; KeySignalListener; UserAgentStaticProperties; UserAgentStaticProperties.SafariImpl; UserAgentStaticProperties.FirefoxImpl; UserAgentStaticProperties.IEImpl; UserAgentStaticProperties.AndroidImpl; UserAgentStaticProperties.IPhoneImpl; KeyCombo; UserAgentRuntimeProperties]; [SignalKeyLogic.UserAgentType]; [SignalKeyLogic.OperatingSystem]; [SignalKeyLogic.Result]; [RegExp; JsRegExp; Factory; View.Factory]; [RegExp.Factory]; [DateUtils]; [SequenceIterator; Sequence; SequenceMapAdapter; SequenceMap; PruningSequenceMap; SequenceElement; StringSequence; LinkedSequence; LinkedPruningSequenceMap; LinkedPruningSequenceMap.Node; PruningMap; StringCodec; StringCodec.JsCodec; StringCodec.JavaCodec]; [DomHelper.ElementEditability]; [DomHelper.JavaScriptEventListener]; [DomHelper.HandlerReference]; [DomHelper.HandlerReferenceSet]; [OffsetPosition]; [View]; [SignalEventImpl.SignalEventFactory]; [SignalEventImpl.NativeEvent]; [SignalEventImpl.JsoNativeEvent]; [ClientPercentEncoderDecoder]; [SignalEvent.KeySignalType]; [SignalEvent.MoveUnit]; [SignalEvent.KeyModifier]; [WaveRefConstants]; [FakeSignalEvent.FakeNativeEvent]; [ClientDebugException]; [ChecksComparability]; [LogicalPanel; LogicalPanel.Impl]; [NumberPriorityQueue]; [NumberPriorityQueue.Comparator]; [CountdownLatch]; [AsyncHolder; AsyncHolder.Impl]; [AsyncHolder.Accessor]; [JsoStringSet.False]; [NumberMapJsoView.Reduce]; [JsArraySort]; [StringUtil]; [ChainComparator]; [MathUtil]; [LinkedSequence.Node]. LCC (Lack of Component Cohesion) = 0.45
jparyani_wave,org.waveprotocol.wave.client.scheduler,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 44
jparyani_wave,org.waveprotocol.wave.client.scheduler,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.scheduler; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.scheduler,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.scheduler; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.scheduler,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [TimerService; TimeSlicedCommandRepeater; ScheduleTimer; Scheduler; TimeSlicedCommandQueue; SchedulerTimerService; IdempotentScheduler; IdempotentScheduler.Builder; QueueProcessor; ScheduleCommand; BucketRateLimiter; SchedulerInstance; BrowserBackedScheduler; BrowserBackedSchedulerGwtTest; BrowserBackedSchedulerGwtTest.FakeTask; BrowserBackedSchedulerGwtTest.FakeProcess; BrowserBackedSchedulerGwtTest.IntervalProcess; IdempotentFinallyTest; IdempotentSchedulerTest; DelayedJobRegistryGwtTest; DelayedJobRegistry; TaskInfo; BufferedCommandQueue; CommandQueue; ScopedCommandQueue; Controller; JobRegistry; IdempotentFinally; IdempotentFinallyTest.TestCommand; FinalTaskRunner; FinalTaskRunnerImpl; SimpleTimer; GwtSimpleTimer; CancellableCommand]; [IdempotentFinally.State]; [SimpleTimer.Factory]; [Scheduler.Listener]; [Scheduler.Schedulable]; [Scheduler.Task]; [Scheduler.IncrementalTask]; [Scheduler.Priority]; [IdempotentScheduler.EfficiencyRecorder]; [BrowserBackedSchedulerGwtTest.HasProgress]; [BrowserBackedSchedulerGwtTest.InterleavingProc]. LCC (Lack of Component Cohesion) = 0.25
jparyani_wave,org.waveprotocol.wave.client.scheduler.knobs,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [KnobView; GwtKnobView; KnobsPresenter; KnobsView; GwtKnobsView; KnobPresenter; ControllerTest; ControllerTest.StubLevelView]; [KnobView.Listener]; [KnobView.Factory]; [GwtKnobsView.Resources]; [GwtKnobsView.Css]. LCC (Lack of Component Cohesion) = 0.42
jparyani_wave,org.waveprotocol.wave.client.concurrencycontrol,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.concurrencycontrol.wave
jparyani_wave,org.waveprotocol.wave.client.concurrencycontrol,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [StaticChannelBinder; WaveletOperationalizer; LiveTarget; LiveChannelBinder; ProxyOperationSink]; [MuxConnector]. LCC (Lack of Component Cohesion) = 0.33
jparyani_wave,org.waveprotocol.wave.client.uibuilder,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [UiBuilder; HtmlClosure; HtmlClosureCollection; BuilderHelper; OutputHelper; HtmlClosureCollectionTest; HtmlClosureCollectionTest.SimpleUiBuilder]; [UiBuilder.Constant]; [HtmlClosure.Constant]; [BuilderHelper.Component]. LCC (Lack of Component Cohesion) = 0.4
jparyani_wave,org.waveprotocol.wave.client.debug.logger,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.debug.logger; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.debug.logger,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.debug.logger; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.client.state
jparyani_wave,org.waveprotocol.wave.client.debug.logger,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [LoggerListener; DomLogger; BufferedLogger; LogLevel; LogLevel.NoneImpl; LogLevel.ErrorImpl; LogLevel.DebugImpl]; [DomLogger.Resources]; [DomLogger.Css]; [DomLogger.ErrorHandler]; [DomLogger.GWTLogSink]; [BufferedLogger.BufferedLogSink]; [BufferedLogger.LogMessage]. LCC (Lack of Component Cohesion) = 0.54
jparyani_wave,org.waveprotocol.wave.client.clipboard,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.clipboard; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor.extract
jparyani_wave,org.waveprotocol.wave.client.clipboard,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.clipboard; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor.extract
jparyani_wave,org.waveprotocol.wave.client.clipboard,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [PasteBufferImpl; PasteBufferImplSafariAndNewFirefox; Clipboard; PasteBufferImplOldFirefox; AnnotationSerializer]; [AnnotationSerializer.Builder]. LCC (Lack of Component Cohesion) = 0.33
jparyani_wave,org.waveprotocol.wave.client.paging,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [PagingDebugHelper; Block; ActiveRegion; Region; OverlapKind; SimpleMoveablePoint; TreeNode; ActiveRegionValidator; PointTest; RandomizedMutationTest; RandomizedTraverserTest; RandomizedActivationLargeTest; ViewportRegionValidator; FakeBlock; Traverser; Traverser.Point; RegionImpl; AbstractTreeNode; RandomTreeBuilder]; [Traverser.BlockSide]; [Traverser.SimplePoint]; [Traverser.MoveablePoint]; [ActiveRegion.StartPoint]; [ActiveRegion.EndPoint]; [FakeBlock.Factory]; [FakeBlock.Dimensions]. LCC (Lack of Component Cohesion) = 0.31
jparyani_wave,org.waveprotocol.wave.client.gadget.renderer,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 40
jparyani_wave,org.waveprotocol.wave.client.gadget.renderer,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.gadget.renderer; org.waveprotocol.wave.client.gadget
jparyani_wave,org.waveprotocol.wave.client.gadget.renderer,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [GadgetElementChild; GadgetWidget; GadgetUiListener; Locale; GadgetUserPrefs; GadgetDataStore; GadgetWaveletListener; GadgetMetadata; GadgetDataStoreImpl; GadgetDataStoreImpl.CacheElement; GadgetNonEditorGwtTest; GadgetNonEditorGwtTest.FakeLocale; Controller; GadgetRpcListener; ControllerGwtTest; ControllerGwtTest.TestController; ControllerGwtTest.Listener; WaveletListenerAdapter; GadgetWidgetUi; EditingIndicator; GadgetWidget.BlipEditingIndicator; SessionLocale; GadgetRenderer; Submitter; ParticipantInformation]; [GadgetElementChild.Type]; [Controller.JsArrayMixed]; [Controller.ServiceCallback]; [Controller.JavaScriptFunction]; [Controller.InvalidArgumentException]; [Controller.Service]; [GadgetWidgetUi.GadgetIFrame]; [GadgetWidgetUi.Resources]; [GadgetWidgetUi.Css]; [GadgetWidgetUi.Binder]; [GadgetWidgetUi.ThrobberState]; [Submitter.SubmitTask]; [GadgetWidget.ElementChangeTask]; [GadgetDataStore.DataCallback]; [GadgetMetadata.View]. LCC (Lack of Component Cohesion) = 0.4
jparyani_wave,org.waveprotocol.wave.client.gadget,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.gadget; org.waveprotocol.wave.client.gadget.renderer
jparyani_wave,org.waveprotocol.wave.client.gadget,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.supplement; org.waveprotocol.wave.client.gadget.renderer
jparyani_wave,org.waveprotocol.wave.client.gadget,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [GadgetXmlUtil; StateMap; StateMap.KeyValueComparator; StateMapGwtTest]; [StateMap.CheckKeyValue]; [StateMap.Each]; [GadgetLog]; [Gadget]. LCC (Lack of Component Cohesion) = 0.63
jparyani_wave,org.waveprotocol.wave.client.account,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.wave
jparyani_wave,org.waveprotocol.wave.client.doodad.attachment,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.doodad.attachment; org.waveprotocol.wave.client.doodad.attachment.render
jparyani_wave,org.waveprotocol.wave.client.doodad.attachment,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.doodad.attachment.render
jparyani_wave,org.waveprotocol.wave.client.doodad.attachment,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SimpleAttachmentManager; AttachmentManagerProvider; AttachmentManagerImpl; ImageThumbnail; ImageThumbnailAttachmentHandler; AttachmentImpl; ImageThumbnailNodeEventHandler]; [SimpleAttachmentManager.Listener]; [AttachmentConstants]; [AttachmentManagerImpl.GetAttachmentsInfoCallback]; [ImageThumbnail.ThumbnailActionHandler]. LCC (Lack of Component Cohesion) = 0.45
jparyani_wave,org.waveprotocol.wave.client.doodad.attachment.render,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.doodad.attachment.render; org.waveprotocol.wave.client.doodad.attachment
jparyani_wave,org.waveprotocol.wave.client.doodad.attachment.render,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ImageThumbnailRenderer; ImageThumbnailWidget; ImageThumbnailWrapper; ImageThumbnailView]; [ImageThumbnailWidget.Resources]; [ImageThumbnailWidget.Css]; [ImageThumbnailWidget.DoubleBufferImage]; [ImageThumbnailWidget.DoubleLoadHandler]; [ImageThumbnailWidget.Binder]; [ImageThumbnailView.ImageThumbnailViewListener]. LCC (Lack of Component Cohesion) = 0.7
jparyani_wave,org.waveprotocol.wave.client.doodad.suggestion,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.doodad.suggestion; org.waveprotocol.wave.client.doodad.link
jparyani_wave,org.waveprotocol.wave.client.doodad.experimental.htmltemplate,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [JsonpRouter; HttpCajoleService; CajoleService; CajolerFacade; Callback; NameValuePairNodeMutationHandler; PluginContext; HtmlTemplate; PartIdFactory; TemplateNodeMutationHandler; SessionPartIdFactory]; [TemplateNodeMutationHandler.PluginContextFactory]; [HttpCajoleService.CajolerResponseJsoImpl]; [PluginContext.EventType]; [PluginContext.EventListeners]; [CajoleService.CajolerResponse]; [CajolerFacade.Css]; [CajolerFacade.Resources]. LCC (Lack of Component Cohesion) = 0.44
jparyani_wave,org.waveprotocol.wave.client.doodad.link,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.doodad.link; org.waveprotocol.wave.client.doodad.suggestion
jparyani_wave,org.waveprotocol.wave.client.doodad.link,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.doodad.suggestion
jparyani_wave,org.waveprotocol.wave.client.doodad.link,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [LinkAnnotationHandler; Link; LinkTest]; [LinkAnnotationHandler.LinkAttributeAugmenter]; [LinkAnnotationHandler.RenderFunc]; [Link.InvalidLinkException]. LCC (Lack of Component Cohesion) = 0.67
jparyani_wave,org.waveprotocol.wave.client.doodad.form.input,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Input]; [Input.Resources]; [Input.Css]; [Password]; [Password.Resources]; [Password.Css]; [Password.PasswordEventHandler]; [Password.PasswordRenderer]. LCC (Lack of Component Cohesion) = 1.0
jparyani_wave,org.waveprotocol.wave.client.doodad.form.check,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Label; LabelRenderingMutationHandler]; [LabelRenderingMutationHandler.Resources]; [LabelRenderingMutationHandler.Css]; [CheckConstants; RadioGroup; CheckBox; CheckBox.CheckBoxRendereringMutationHandler; RadioButton]; [CheckConstants.Resources]; [CheckConstants.Css]. LCC (Lack of Component Cohesion) = 0.55
jparyani_wave,org.waveprotocol.wave.client.doodad.form,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.doodad.form.button; org.waveprotocol.wave.client.doodad.form.input; org.waveprotocol.wave.client.doodad.form.check
jparyani_wave,org.waveprotocol.wave.client.doodad.form.events,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.util
jparyani_wave,org.waveprotocol.wave.client.doodad.selection,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [CaretView; RgbColor; SelectionAnnotationHandler; SelectionAnnotationHandler.SessionData; CaretMarkerRenderer; SelectionExtractor; CaretWidget; SelectionAnnotationHandlerTest; SelectionAnnotationHandlerTest.FakeSession; CaretMarkerResources]; [SelectionAnnotationHandler.CaretViewFactory]; [CaretMarkerResources.Css]; [SelectionAnnotationHandlerTest.FakeCaretViewFactory]. LCC (Lack of Component Cohesion) = 0.31
jparyani_wave,org.waveprotocol.wave.client.events,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [WaveOpenEvent; ClientEvents; WaveSelectionEvent; Log; WaveOpenEventHandler; WaveCreationEventHandler; DebugMessageEvent; NetworkStatusEventHandler; WaveCreationEvent; NetworkStatusEvent; DebugMessageEventHandler; WaveSelectionEventHandler]; [NetworkStatusEvent.ConnectionStatus]; [DebugMessageEvent.Severity]. LCC (Lack of Component Cohesion) = 0.21
jparyani_wave,org.waveprotocol.wave.client.wavepanel.event,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [WaveKeyHandler]; [WaveChangeHandler; EventHandlerRegistry; WaveDoubleClickHandler; WaveMouseDownHandler; WaveClickHandler; EventDispatcherPanel]; [FocusManager; KeySignalHandler; KeySignalRouter; Focusable; FocusManager.DocumentPanel]; [EventDispatcherPanel.HandlerCollection]; [EventDispatcherPanel.ClickHandlers]; [EventDispatcherPanel.DoubleClickHandlers]; [EventDispatcherPanel.MouseDownHandlers]; [EventDispatcherPanel.ChangeHandlers]; [EventDispatcherPanelGwtTest]; [EventDispatcherPanelGwtTest.MyEvent]; [EventDispatcherPanelGwtTest.MyHandler]; [EventDispatcherPanelGwtTest.MockHandlers]. LCC (Lack of Component Cohesion) = 0.57
jparyani_wave,org.waveprotocol.wave.client.wavepanel.render,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ShallowBlipRenderer; BlipPager; FullDomRenderer; LiveProfileRenderer; LiveConversationViewRenderer; LiveConversationViewRenderer.LiveConversationRenderer; UndercurrentShallowBlipRenderer; DocumentRegistries; ReplyManager; WaveRendererTest; LiveSupplementRenderer; InlineAnchorLiveRenderer]; [BlipPager.DocProvider]; [FullDomRenderer.DocRefRenderer]; [FullDomRenderer.ParticipantsRenderer]; [PagingHandlerProxy]; [InlineAnchorLiveRenderer.AnchorHandler]; [InlineAnchorLiveRenderer.ReplyDoodad]; [InlineAnchorLiveRenderer.CanonicalAnchorFinder]; [InlineAnchorStaticRenderer]; [UndercurrentShallowBlipRenderer.DocumentRenderer]; [DocumentRegistries.Builder]; [DocumentRegistries.ConversationRegistries]; [HtmlDomRenderer]. LCC (Lack of Component Cohesion) = 0.54
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.edit,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.wavepanel.impl.edit; org.waveprotocol.wave.client.wavepanel.impl.toolbar
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.edit,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.doodad.selection; org.waveprotocol.wave.client.wavepanel.impl.toolbar
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.edit,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ParticipantController; ParticipantSelectorWidget; ParticipantControllerTest; ParticipantWidget]; [Actions; EditController; ActionsImpl; EditSession; KeepFocusInView; FocusedActions; DocumentUtil; DocumentUtilTest]; [Actions.Action]; [ParticipantWidget.Listener]; [ParticipantWidget.Binder]; [ParticipantSelectorWidget.Listener]; [ParticipantSelectorWidget.Binder]; [EditSession.Listener]; [DocumentUtilTest.TestState]. LCC (Lack of Component Cohesion) = 0.47
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.focus,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.wavepanel.impl.focus; org.waveprotocol.wave.client.wavepanel.impl.reader
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.focus,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.wavepanel.view.fake
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.focus,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [FocusFramePresenter; FocusFrameController; ViewTraverser; BlipEditStatusListener; FocusBlipSelector; FocusFrameBuilder; ViewTraverserTest]; [FocusFramePresenter.Listener]; [FocusFramePresenter.FocusOrder]; [FocusFramePresenter.FrameKeyHandler]; [ViewTraverserTest.BlipBuilder]; [ViewTraverserTest.ThreadBuilder]; [ViewTraverserTest.ConversationBuilder]. LCC (Lack of Component Cohesion) = 0.54
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.toolbar.color,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ComplexColorPicker; SimpleColorPicker; ColorHelper; AbstractColorPicker; ColorPopup; OnColorChooseListener; SampleCustomColorPicker]; [ComplexColorPicker.Resources]; [ComplexColorPicker.Style]; [SimpleColorPicker.Resources]; [SimpleColorPicker.Style]. LCC (Lack of Component Cohesion) = 0.45
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.toolbar,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.wavepanel.impl.toolbar; org.waveprotocol.wave.client.wavepanel.impl.edit
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.toolbar,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [EditorToolbarResources; EditorToolbarResources.Loader; EditToolbar; LinkerHelper; ViewToolbar; ToolbarSwitcher]; [EditorToolbarResources.Css]; [EditToolbar.ClickHandler]; [EditToolbar.FontFamily]; [EditToolbar.Alignment]. LCC (Lack of Component Cohesion) = 0.5
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.toolbar.gadget,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [GadgetInfoProvider; GadgetInfoProviderImpl; GadgetSelectorWidget; GadgetInfoProviderTest; GadgetInfoWidget; GadgetInfoParser; GwtGadgetInfoParser]; [GadgetInfoProvider.Listener]; [GadgetInfoProvider.GadgetCategoryType]; [GadgetInfoProvider.GadgetInfo]; [GadgetInfoWidget.Listener]; [GadgetInfoWidget.Binder]; [GadgetSelectorWidget.Listener]; [GadgetSelectorWidget.Binder]. LCC (Lack of Component Cohesion) = 0.57
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.reader,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.wavepanel.impl.reader; org.waveprotocol.wave.client.wavepanel.impl.focus
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.reader,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.wave; org.waveprotocol.wave.client.wavepanel.impl.focus
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl.diff,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.wavepanel.impl.edit
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.wavepanel.impl; org.waveprotocol.wave.client.wavepanel.view.dom; org.waveprotocol.wave.client.scroll
jparyani_wave,org.waveprotocol.wave.client.wavepanel.impl,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.wavepanel.event; org.waveprotocol.wave.client.wavepanel.view.dom
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 39
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.conversation; org.waveprotocol.wave.media.model
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view.dom,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.wavepanel.view.dom; org.waveprotocol.wave.client.scroll; org.waveprotocol.wave.client.wavepanel.impl
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view.dom,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.wavepanel.view.impl; org.waveprotocol.wave.client.scroll
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view.dom.full,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 66
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view.dom.full,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.wavepanel.view.dom.full; org.waveprotocol.wave.client.widget.dialog
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view.dom.full,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [BlipLinkPopupWidget]; [BlipLinkPopupWidget.Binder]; [BlipLinkPopupWidget.Resources]; [BlipLinkPopupWidget.Style]; [InlineConversationViewBuilder; TypeCodes; AnchorViewBuilder; RootThreadViewBuilder; ParticipantNameViewBuilder; FlowConversationViewBuilder; BlipViewBuilder; CollapsibleBuilder; ReplyBoxViewBuilder; ContinuationIndicatorViewBuilder; ViewFactories; BlipMetaViewBuilder; WavePanelResourceLoader; ViewFactory; BlipViewBuilderTest; RootThreadViewBuilderTest; CollapsibleBuilderTest; UiBuilderTestHelper; ReplyBoxBuilderTest; FlowConversationViewBuilderTest; FixedConversationViewBuilder; TopConversationViewBuilder; FixedConversationViewBuilderTest; ParticipantsViewBuilder; TopConversationViewBuilder.CssConstants; InlineThreadViewBuilder; ParticipantAvatarViewBuilder; ViewFactories.BaseFactory]; [ParticipantsViewBuilder.Resources]; [ParticipantsViewBuilder.Css]; [ParticipantsViewBuilder.Components]; [InlineThreadViewBuilder.InlineThreadStructure]; [DomRenderer]; [RootThreadViewBuilder.Resources]; [RootThreadViewBuilder.Css]; [RootThreadViewBuilder.Components]; [FocusFrame]; [FocusFrame.CssEditingResource]; [FocusFrame.IeBinder]; [FocusFrame.Resources]; [FocusFrame.Css]; [FocusFrame.Css3Binder]; [FocusFrame.Resources]; [FocusFrame.Css]; [TopConversationViewBuilder.Resources]; [TopConversationViewBuilder.Css]; [TopConversationViewBuilder.Components]; [BlipViewBuilder.Resources]; [BlipViewBuilder.Css]; [BlipViewBuilder.Components]; [CollapsibleBuilder.Resources]; [CollapsibleBuilder.Css]; [CollapsibleBuilder.Components]; [ReplyBoxViewBuilder.Resources]; [ReplyBoxViewBuilder.Css]; [ReplyBoxViewBuilder.Components]; [ContinuationIndicatorViewBuilder.Resources]; [ContinuationIndicatorViewBuilder.Css]; [BlipMetaViewBuilder.Components]; [BlipQueueRenderer]; [BlipQueueRenderer.PagingHandler]; [UiBuilderTestHelper.ErrorHandler]. LCC (Lack of Component Cohesion) = 0.59
jparyani_wave,org.waveprotocol.wave.client.wavepanel.view.impl,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AnchorViewImpl; AbstractStructuredView; BlipMetaViewImpl; ParticipantsViewImpl; ThreadViewImpl; ReplyBoxViewImpl; AbstractConversationViewImpl; BlipMenuItemViewImpl; InlineThreadViewImpl; InlineThreadViewImpl.Helper; ParticipantViewImpl; TopConversationViewImpl; TopConversationViewImpl.Helper; InlineConversationViewImpl; InlineConversationViewImpl.Helper; RootThreadViewImpl; RootThreadViewImpl.Helper; BlipViewImpl; ContinuationIndicatorViewImpl]; [AnchorViewImpl.Helper]; [ParticipantViewImpl.Helper]; [BlipViewImpl.Helper]; [ContinuationIndicatorViewImpl.Helper]; [BlipMetaViewImpl.Helper]; [ParticipantsViewImpl.Helper]; [ThreadViewImpl.Helper]; [ReplyBoxViewImpl.Helper]; [AbstractConversationViewImpl.Helper]; [BlipMenuItemViewImpl.Helper]; [EmptyTest]. LCC (Lack of Component Cohesion) = 0.4
jparyani_wave,org.waveprotocol.wave.client.wavepanel.block,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [BlockStructure; PageableBlockStructure; BlockStructureTestBase]; [BlockStructure.NodeType]; [BlockStructure.Node]; [PageableBlockStructure.NodeImpl]; [PageableBlockStructure.PageHandler]; [BlockStructureTestBase.Visitor]; [BlockStructureTestBase.NodeChecker]. LCC (Lack of Component Cohesion) = 0.78
jparyani_wave,org.waveprotocol.wave.client.editor.harness,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SignalEventHarness; DefaultTestHarness; EditorHarness; HighlightingDiffState; EditorHarness.EditorBundle]; [EditorTestHarness]; [RealisticEditor]. LCC (Lack of Component Cohesion) = 0.43
jparyani_wave,org.waveprotocol.wave.client.editor.examples.img,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [MyDoodad; TestModule; CaptionedImageWidget; MyDoodad.GwtEventHandler]; [MyDoodad.SimpleRenderer]; [MyDoodad.SimpleEventHandler]; [MyDoodad.CaptionedRenderer]; [MyDoodad.CaptionedEventHandler]; [MyDoodad.CaptionEventHandler]; [CaptionedImageWidget.Listener]; [CaptionedImageWidget.Binder]. LCC (Lack of Component Cohesion) = 0.73
jparyani_wave,org.waveprotocol.wave.client.editor,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 41
jparyani_wave,org.waveprotocol.wave.client.editor,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.client.editor,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.client.editor,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.client.editor,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.selection.content; org.waveprotocol.wave.client.editor.event; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.client.editor.content.misc; org.waveprotocol.wave.client.editor.sugg; org.waveprotocol.wave.client.editor.keys; org.waveprotocol.wave.client.editor.util; org.waveprotocol.wave.client.editor.content.paragraph; org.waveprotocol.wave.client.editor.debug; org.waveprotocol.wave.client.editor.webdriver; org.waveprotocol.wave.client.editor.content.img
jparyani_wave,org.waveprotocol.wave.client.editor,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [EditorSettings; EditorInstrumentor; EditorImpl; Editor; Editors; EditorUpdateEvent; EditorUndoManagerImpl; RestrictedRange; EditorStaticDeps; EditorTestingUtil; UndoableSequencer; ElementHandlerRegistry; EditorUpdateEventImpl; EditorContext; EditorAction; Responsibility; Responsibility.Manager; ResponsibilityManagerImpl; EditorUndoManager; HtmlSelectionHelperImpl; EditorContextAdapter; NodeEventHandlerImpl; NodeEventHandler; EditorImplWebkitMobile; EditorImpl.EditorEventsSubHandlerImpl; EditorImpl.EditorInteractorImpl; RenderingMutationHandler; NodeMutationHandler; NodeMutationHandlerImpl]; [NodeEventHandlerImpl.Helper]; [EditorAnnotationTree]; [EditorRuntimeException]; [ResponsibilityManagerImpl.SequenceType]; [EditorInstrumentor.Action]; [EditorInstrumentor.TimedAction]; [EditorImpl.MiniBundle]; [EditorImpl.Resources]; [EditorImpl.ConsistentStateCommandRunner]; [EditorUpdateEvent.EditorUpdateListener]; [ElementHandlerRegistry.HasHandlers]; [ElementHandlerRegistry.HandlerData]. LCC (Lack of Component Cohesion) = 0.32
jparyani_wave,org.waveprotocol.wave.client.editor.event,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.event; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.event,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.event; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.event,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.event; org.waveprotocol.wave.client.scheduler; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.event,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.testing
jparyani_wave,org.waveprotocol.wave.client.editor.event,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [CompositionEventHandler; EditorEventHandler; EditorEvent; EditorInteractor; CompositionEventHandlerTest; EditorEventHandlerGwtTest; EditorEventHandlerGwtTest.FakeEditorInteractor; EditorEventImpl; EditorEventsSubHandler; EditorEventHandlerGwtTest.FakeEditorEventsSubHandler]; [CompositionEventHandler.CompositionListener]; [EditorEventHandler.State]; [EditorEventHandler.SelectionLostException]; [EditorEventHandlerGwtTest.FakeRouter]; [EditorEventHandlerGwtTest.MethodContext]; [EditorEventHandlerGwtTest.MethodID]; [EditorEventHandlerGwtTest.MockContext]. LCC (Lack of Component Cohesion) = 0.47
jparyani_wave,org.waveprotocol.wave.client.editor.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.testing; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.testing; org.waveprotocol.wave.client.editor; org.waveprotocol.wave.client.editor.selection.content
jparyani_wave,org.waveprotocol.wave.client.editor.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.testing; org.waveprotocol.wave.client.editor; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.testing; org.waveprotocol.wave.client.editor; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.testing,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.content.paragraph; org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.client.editor.selection.content
jparyani_wave,org.waveprotocol.wave.client.editor.testing,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ContentSerialisationUtil]; [TestEditors; TestInlineDoodad]; [StubDocumentOperationSink]; [MockTypingSink]; [MockTypingSink.Op]; [MockTypingSink.Ins]; [MockTypingSink.Del]; [FakeEditorEvent]; [FakeUser]; [FakeUser.Action]; [DocumentFreeSelectionHelper]; [TestInlineDoodad.TestRenderer]; [FakeEditorContext]; [StubSelectionHelper]. LCC (Lack of Component Cohesion) = 0.93
jparyani_wave,org.waveprotocol.wave.client.editor.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.operation; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.operation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.operation; org.waveprotocol.wave.model.document.operation; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.sugg,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.sugg; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.sugg,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.sugg; org.waveprotocol.wave.client.editor.selection.content; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.sugg,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.sugg; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.sugg,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.sugg; org.waveprotocol.wave.client.scheduler; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.sugg,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [InteractiveSuggestionsManager; SuggestionsManager; SuggestionMenu; Menu; SuggestionResources]; [InteractiveSuggestionsManager.SuggestionMenuHandler]; [InteractiveSuggestionsManager.PopupCloser]; [SuggestionsManager.HasSuggestions]; [SuggestionResources.Css]. LCC (Lack of Component Cohesion) = 0.56
jparyani_wave,org.waveprotocol.wave.client.editor.extract,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 36
jparyani_wave,org.waveprotocol.wave.client.editor.extract,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.extract,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.extract,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.extract,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.extract,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.clipboard; org.waveprotocol.wave.model.richtext
jparyani_wave,org.waveprotocol.wave.client.editor.extract,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [PasteAnnotationLogic; PasteExtractor; PasteFormatRenderer; SelectionMatcher; PasteFormatRenderers; SubTreeXmlRenderer; PasteFormatRendererGwtTest; PasteExtractorGwtTest; PasteExtractorGwtTest.TestBundle; PasteAnnotationLogicTest; SubTreeXmlRendererTest]; [DomMutationReverter]; [DomMutationReverter.RevertListener]; [DomMutationReverter.Undoable]; [DomMutationReverter.RemovalEntry]; [InconsistencyException; InconsistencyException.HtmlMissing; InconsistencyException.HtmlInserted; Repairer; RepairerGwtTest; ExtractResources; TypingExtractor; TypingExtractorGwtTest; RepairListener; RepairerGwtTest.MockRepairListener]; [ExtractResources.Css]; [TypingExtractor.TypingSink]; [TypingExtractor.SelectionSource]; [TypingExtractor.TypingState]; [SelectionMatcher.LazyPoint]; [SelectionMatcher.Type]; [SelectionMatcher.EagerPoint]; [SelectionMatcher.LazyPointImpl]; [ImeExtractor]; [DOMMutationExtractor]; [PasteExtractorGwtTest.Operation]. LCC (Lack of Component Cohesion) = 0.47
jparyani_wave,org.waveprotocol.wave.client.editor.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.util; org.waveprotocol.wave.client.editor.content.misc
jparyani_wave,org.waveprotocol.wave.client.editor.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.util; org.waveprotocol.wave.model.document; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.util,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [PaddingBundle; PaddingBundleTest]; [AnnotationBehaviourLogic; AnnotationBehaviourLogicTest]; [EditorDocFormatter]; [EditorAnnotationUtil]; [EditorDocHelper]; [NodeMutationDelegator]; [EditorAnnotationUtilTest]. LCC (Lack of Component Cohesion) = 0.78
jparyani_wave,org.waveprotocol.wave.client.editor.debug,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.debug; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.debug,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.debug; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.debug,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DebugPopupFactory; DebugDialog; DebugOptions; CursorDisplay]; [DebugDialog.Selection]; [DebugDialog.LogPanel]. LCC (Lack of Component Cohesion) = 0.5
jparyani_wave,org.waveprotocol.wave.client.editor.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.impl; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.impl; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.impl,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.impl; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.impl,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.client.editor.testing
jparyani_wave,org.waveprotocol.wave.client.editor.impl,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [HtmlViewImpl; HtmlView; TextSkippingView.Html; StrippingHtmlView; NodeManager; ElementSkippingView; NodeManagerGwtTest; DiffManager; DiffManagerResources; TransparencyUtil; TextSkippingView; TextSkippingView.Content]; [DiffManager.DiffType]; [DiffManagerResources.Css]. LCC (Lack of Component Cohesion) = 0.21
jparyani_wave,org.waveprotocol.wave.client.editor.content,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 71
jparyani_wave,org.waveprotocol.wave.client.editor.content,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.model.document.util
jparyani_wave,org.waveprotocol.wave.client.editor.content,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.content,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor; org.waveprotocol.wave.client.editor.impl; org.waveprotocol.wave.client.editor.content.paragraph; org.waveprotocol.wave.client.editor.event; org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.model.document.indexed; org.waveprotocol.wave.client.editor.operation; org.waveprotocol.wave.client.editor.content.misc; org.waveprotocol.wave.client.editor.selection.content; org.waveprotocol.wave.client.editor.testing
jparyani_wave,org.waveprotocol.wave.client.editor.content,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ContentPoint; ContentElement; ExtendedClientDocumentContext; ContentDocument; ContentDocument.FilteredHtml; CMutableDocument; ContentTextNode; AnnotationPainter; FullContentView; LazyPersistenceManager; HasImplNodelets; Registries; NodeEventRouter; ClientDocumentContext; ContentRawDocument; SelectionMaintainer; ContentNode; TransparentManager; ContentView; LazyPersistentContentDocumentGwtTest; EditorGwtTestCase; ContentTestBase; DomGwtTest; ContentTextNodeGwtTest; ContentElementGwtTest; AgentAdapter; MutatingNode; Renderer; NullRenderer; PersistentContentView; ContentDocument.PersistentContentDoc; HtmlPoint; HTMLPretty; DiffHighlightingFilter; ContentDocElement; NiceHtmlRenderer; RegistriesImpl; PainterRegistry; PainterRegistryImpl; AnnotationPainter.DocPainter; PainterRegistryTest; ContentDocument.RenderedContent; ContentDocument.FullContent; RangeHelper]; [AgentAdapter.Resources]; [AgentAdapter.Css]; [Renderer.Renderable]; [DiffHighlightingFilter.DeleteInfo]; [DiffHighlightingFilter.DiffHighlightTarget]; [ContentRange; FocusedContentRange]; [ContentElement.Action]; [ExtendedClientDocumentContext.LowLevelEditingConcerns]; [ContentDocument.PermanentMutationHandler]; [ContentDocument.LocalOperationException]; [ContentDocument.SchemaViolatingLocalOperationException]; [ContentDocument.BadOpLocalOperationException]; [ContentDocument.AnnotationImplFactory]; [ContentDocument.SourceNindoSink]; [ContentDocument.LocalAnnotationSet]; [ContentDocument.ContentIndexedDoc]; [ContentDocument.Level]; [PainterRegistryImpl.PaintData]; [DiffOpWrapperBase]; [AnnotationPainter.PaintFunction]; [AnnotationPainter.BoundaryFunction]; [ClientDocumentContext.EditingConcerns]; [ClientDocumentContext.RenderingConcerns]; [ContentRawDocument.Factory]; [SelectionMaintainer.TextNodeChangeType]; [HasDisplayEditModes]. LCC (Lack of Component Cohesion) = 0.38
jparyani_wave,org.waveprotocol.wave.client.editor.content.img,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.img; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.content.img,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.img; org.waveprotocol.wave.client.editor.content.misc; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.content.img,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.img; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.content.img,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.img; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.content.misc,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.misc; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.content.misc,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.misc; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.content.misc,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.client.editor.event; org.waveprotocol.wave.client.editor.content.paragraph; org.waveprotocol.wave.client.editor.util; org.waveprotocol.wave.client.editor.selection.content
jparyani_wave,org.waveprotocol.wave.client.editor.content.misc,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AnnotationSpreadRenderer; AnnotationPaint; AnnotationBoundaryRenderer]; [AnnotationPaint.EventHandler]; [AnnotationPaint.MutationHandler]; [UpdateContentEditable; Caption; DisplayEditModeHandler]; [DisplayEditModeHandler.EditModeListener]; [CaretAnnotations]; [CaretAnnotations.AnnotationResolver]; [AnnotationHelper]; [LinoTextEventHandler]; [ChunkyElementHandler]; [StyleAnnotationHandler]. LCC (Lack of Component Cohesion) = 0.73
jparyani_wave,org.waveprotocol.wave.client.editor.content.paragraph,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 35
jparyani_wave,org.waveprotocol.wave.client.editor.content.paragraph,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.paragraph; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.content.paragraph,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.content.paragraph; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.content.paragraph,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.extract; org.waveprotocol.wave.client.editor.util
jparyani_wave,org.waveprotocol.wave.client.editor.content.paragraph,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DefaultParagraphHtmlRenderer; Paragraph; Paragraph.ListStyler; ParagraphHtmlRenderer; LineRendering; ParagraphRenderer; ParagraphBehaviour; ParagraphEventHandler; LocalParagraphEventHandler; ParagraphHelper; OrderedListRenumberer; OrderedListRenumberer.LevelNumbers; RenumbererTestBase; RenumbererTestBase.Renderer; ParagraphNiceHtmlRenderer; IeNodeletHelper; ParagraphHelperIE; Line; LineContainerParagraphiser; OrderedListRenumberer.ComparableLine; ParagraphHelperBr; ParagraphHelperAlwaysBr; ParagraphHelperWebkit; ParagraphHelperEmptyLineBr; RenumbererTest; RandomRenumbererLargeTest]; [ParagraphNiceHtmlRenderer.IndentType]; [ParagraphNiceHtmlRenderer.HtmlStack]; [Paragraph.Alignment]; [Paragraph.Direction]; [Paragraph.RegularStyler]; [Paragraph.LineStyle]; [LineContainerParagraphiser.LineHandler]; [OrderedListRenumberer.RelativeImportance]; [RenumbererTestBase.Type]. LCC (Lack of Component Cohesion) = 0.29
jparyani_wave,org.waveprotocol.wave.client.editor.webdriver,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.webdriver; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.webdriver,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.webdriver; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.webdriver,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.webdriver; org.waveprotocol.wave.model.document.operation.automaton; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.keys,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.keys; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.keys,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.keys; org.waveprotocol.wave.client.editor; org.waveprotocol.wave.client.editor.content.img
jparyani_wave,org.waveprotocol.wave.client.editor.keys,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.keys; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.keys,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.keys; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.editor.keys,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.editor.testing
jparyani_wave,org.waveprotocol.wave.client.editor.selection.html,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.selection.html; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.selection.html,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.selection.html; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.selection.html,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.selection.html; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.selection.html,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SelectionW3CNative; JsRange; SelectionImplW3C; SelectionCoordinatesHelperW3C; SelectionWebkit; NativeSelectionUtil; SelectionCoordinatesHelperDisabled; SelectionCoordinatesHelper; SelectionCoordinatesHelperIEImpl; SelectionImpl; SelectionImplDisabled; SelectionImplIE; JsSelectionIE; JsTextRangeIE]; [JsTextRangeIE.MoveUnit]; [JsTextRangeIE.CompareMode]; [SelectionWebkit.Direction]; [SelectionWebkit.MoveUnit]; [JsSelectionIE.Type]; [NativeSelectionUtil.MutationListener]; [NativeSelectionUtil.NoOpMutationListener]; [HtmlSelectionHelper]. LCC (Lack of Component Cohesion) = 0.41
jparyani_wave,org.waveprotocol.wave.client.editor.selection.content,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.selection.content; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.selection.content,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.selection.content; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.selection.content,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.selection.content; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.selection.content,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.editor.selection.content; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.wave; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content
jparyani_wave,org.waveprotocol.wave.client.editor.selection.content,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ValidSelectionStrategy]; [PassiveSelectionHelper; SelectionUtil; SelectionHelper; CaretMovementHelperImpl; CaretMovementHelper; AggressiveSelectionHelper; AggressiveSelectionHelperGwtTest; CaretMovementHelperWebkitImpl]; [PassiveSelectionHelper.ValidSelectionContainerView]. LCC (Lack of Component Cohesion) = 0.3
jparyani_wave,org.waveprotocol.wave.client.scroll,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.scroll; org.waveprotocol.wave.client.wavepanel.impl; org.waveprotocol.wave.client.wavepanel.view.dom
jparyani_wave,org.waveprotocol.wave.client.autohide,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.autohide; org.waveprotocol.wave.client.common.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor; org.waveprotocol.wave.client.widget.popup
jparyani_wave,org.waveprotocol.wave.client.autohide,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AutoHiderRegistrar; AutoHiderRegistrarHolder; AutoHider; EventPreviewAutoHiderRegistrar; Hideable]; [AutoHider.KeyBehavior]. LCC (Lack of Component Cohesion) = 0.33
jparyani_wave,org.waveprotocol.wave.client.widget.popup,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 31
jparyani_wave,org.waveprotocol.wave.client.widget.popup,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.popup; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.widget.popup,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.popup; org.waveprotocol.wave.client.scheduler; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor
jparyani_wave,org.waveprotocol.wave.client.widget.popup,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.scheduler; org.waveprotocol.wave.client.autohide
jparyani_wave,org.waveprotocol.wave.client.widget.popup,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [CenterPopupPositioner; PositionUtil; RelativePopupPositioner; PopupProvider; PopupFactory; AlignedPopupPositioner; PopupChrome; DesktopUniversalPopup; DesktopPopupProvider; TitleBar; PopupChromeFactory; UniversalPopup; MobilePopupChromeProvider; MobilePopupProvider; PopupChromeProvider; DesktopTitleBar; MobileUniversalPopup; PopupEventListener; PopupEventListener.PopupEventListenerAdapter; PopupEventSourcer; ListRelativePopupPositioner]; [DesktopUniversalPopup.Resources]; [DesktopUniversalPopup.Css]; [DesktopTitleBar.Resources]; [DesktopTitleBar.Css]; [MobileUniversalPopup.InternalPopup]; [MobileUniversalPopup.Resources]; [MobileUniversalPopup.Css]; [AlignedPopupPositioner.Insets]; [AlignedPopupPositioner.Horizontal]; [AlignedPopupPositioner.Vertical]. LCC (Lack of Component Cohesion) = 0.35
jparyani_wave,org.waveprotocol.wave.client.widget.popup.desktopchrome,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DesktopPopupChrome]; [DesktopPopupChrome.Resources]; [DesktopPopupChrome.Css]; [DesktopPopupChrome.Binder]; [DropdownPopupChrome]; [DropdownPopupChrome.Resources]; [DropdownPopupChrome.Css]; [DropdownPopupChrome.Binder]; [DesktopPopupChromeProvider]. LCC (Lack of Component Cohesion) = 1.0
jparyani_wave,org.waveprotocol.wave.client.widget.menu,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [MenuButton; PopupMenu; MenuBuilder; MenuItem; Menu; MenuNode; MenuBranch; PopupMenu.PopupMenuItem]; [MenuButton.Builder]; [MenuNode.MenuCommand]; [PopupMenu.Resources]; [PopupMenu.Css]; [MenuBuilder.MenuCommandAdapter]. LCC (Lack of Component Cohesion) = 0.46
jparyani_wave,org.waveprotocol.wave.client.widget.button,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.button; org.waveprotocol.wave.client.widget.button.icon
jparyani_wave,org.waveprotocol.wave.client.widget.button,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.widget.button.icon; org.waveprotocol.wave.client.widget.button.text
jparyani_wave,org.waveprotocol.wave.client.widget.button,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [UniversalButton; ButtonDisplay; CompositeButtonDisplay; ToggleButton; ClickButton; ToggleButtonController; MouseListener; ButtonFactory; ClickButtonWidget; ClickButtonController; Disableable; ToggleButtonWidget]; [ButtonBuilder]; [ButtonBuilder.Base]; [ButtonBuilder.Click]; [ButtonDisplay.ButtonState]; [ToggleButton.ToggleButtonListener]; [ClickButton.ClickButtonListener]; [ClickButton.ClickWhenDisabledListener]; [StyleAxis]. LCC (Lack of Component Cohesion) = 0.45
jparyani_wave,org.waveprotocol.wave.client.widget.button.text,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.button.text; org.waveprotocol.wave.client.widget.button
jparyani_wave,org.waveprotocol.wave.client.widget.button.icon,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.button.icon; org.waveprotocol.wave.client.widget.button
jparyani_wave,org.waveprotocol.wave.client.widget.button.icon,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [IconButtonTemplate]; [IconButtonTemplate.ButtonStateCss]; [IconButtonTemplate.Resources]; [IconButtonTemplate.Css]; [IconButtonTemplate.Resources1]; [IconButtonTemplate.Css1]; [IconButtonTemplate.IconButtonStyle]. LCC (Lack of Component Cohesion) = 1.0
jparyani_wave,org.waveprotocol.wave.client.widget.profile,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ProfilePopupPresenter; ProfilePopupView; ProfilePopupWidget]; [ProfilePopupView.Listener]; [ProfilePopupWidget.Binder]; [ProfilePopupWidget.Resources]; [ProfilePopupWidget.Style]. LCC (Lack of Component Cohesion) = 0.71
jparyani_wave,org.waveprotocol.wave.client.widget.common,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ButtonSwitch; Button; ButtonStyle]; [ButtonSwitch.Listener]; [ImplPanel]; [ClickableDivPanel]; [HoverHelper]; [HoverHelper.Hoverable]. LCC (Lack of Component Cohesion) = 0.75
jparyani_wave,org.waveprotocol.wave.client.widget.dialog,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.dialog; org.waveprotocol.wave.client.wavepanel.view.dom.full
jparyani_wave,org.waveprotocol.wave.client.widget.dialog,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.wavepanel.view.dom.full
jparyani_wave,org.waveprotocol.wave.client.widget.toolbar,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.toolbar; org.waveprotocol.wave.client.widget.toolbar.buttons
jparyani_wave,org.waveprotocol.wave.client.widget.toolbar,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SubmenuToolbarView; ToolbarButtonViewBuilder; GroupingToolbar; SubmenuToolbarWidget; SubmenuItem; ToplevelToolbarWidget; ToolbarView; GroupingToolbarTest; GroupingToolbarTest.PojoToolbar; GroupingToolbar.View]; [SubmenuToolbarView.Listener]; [SubmenuToolbarWidget.Resources]; [SubmenuToolbarWidget.Css]; [SubmenuItem.Parent]; [ToplevelToolbarWidget.Resources]; [ToplevelToolbarWidget.Css]; [ToplevelToolbarWidget.Item]; [ToplevelToolbarWidget.Binder]; [GroupingToolbarTest.FakeItem]. LCC (Lack of Component Cohesion) = 0.53
jparyani_wave,org.waveprotocol.wave.client.widget.toolbar.buttons,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.wave.client.widget.toolbar.buttons; org.waveprotocol.wave.client.widget.toolbar
jparyani_wave,org.waveprotocol.wave.client.widget.toolbar.buttons,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.client.widget.toolbar
jparyani_wave,org.waveprotocol.wave.client.widget.toolbar.buttons,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [VerticalToolbarButtonWidget; ToolbarButtonUi; ToolbarButtonView; ToolbarButtonUiProxy; ToolbarButtonViewProxy; AbstractToolbarButton; HorizontalToolbarButtonWidget; ToolbarClickButton; ToolbarToggleButton; ToolbarPopupToggler]; [VerticalToolbarButtonWidget.Resources]; [VerticalToolbarButtonWidget.Css]; [VerticalToolbarButtonWidget.Binder]; [ToolbarClickButton.Listener]; [ToolbarToggleButton.Listener]; [ToolbarButtonUi.Listener]; [ToolbarButtonView.State]; [ToolbarPopupToggler.Listener]; [HorizontalToolbarButtonWidget.Resources]; [HorizontalToolbarButtonWidget.Css]; [HorizontalToolbarButtonWidget.Binder]. LCC (Lack of Component Cohesion) = 0.57
jparyani_wave,org.waveprotocol.wave.federation,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 70
jparyani_wave,org.waveprotocol.wave.federation,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [FederationErrors]; [FederationException]; [WaveletFederationProvider]; [WaveletFederationProvider.FederationListener]; [WaveletFederationProvider.SubmitResultListener]; [WaveletFederationProvider.HistoryResponseListener]; [WaveletFederationProvider.DeltaSignerInfoResponseListener]; [WaveletFederationProvider.PostSignerInfoResponseListener]; [ProtocolHashedVersionFactory]; [FederationSettings]; [WaveletFederationListener]; [WaveletFederationListener.Factory]; [WaveletFederationListener.WaveletUpdateCallback]; [FederationTransport]; [Proto; Proto.ProtocolWaveletDeltaOrBuilder; Proto.ProtocolWaveletDelta; Proto.Builder; Proto.ProtocolHashedVersion; Proto.Builder; Proto.ProtocolWaveletOperationOrBuilder; Proto.ProtocolWaveletOperation; Proto.MutateDocumentOrBuilder; Proto.MutateDocument; Proto.Builder; Proto.Builder; Proto.ProtocolDocumentOperationOrBuilder; Proto.ProtocolDocumentOperation; Proto.ComponentOrBuilder; Proto.Component; Proto.KeyValuePair; Proto.Builder; Proto.KeyValueUpdate; Proto.Builder; Proto.ElementStartOrBuilder; Proto.ElementStart; Proto.Builder; Proto.ReplaceAttributesOrBuilder; Proto.ReplaceAttributes; Proto.Builder; Proto.UpdateAttributesOrBuilder; Proto.UpdateAttributes; Proto.Builder; Proto.AnnotationBoundaryOrBuilder; Proto.AnnotationBoundary; Proto.Builder; Proto.Builder; Proto.Builder; Proto.ProtocolAppliedWaveletDeltaOrBuilder; Proto.ProtocolAppliedWaveletDelta; Proto.Builder; Proto.ProtocolSignedDeltaOrBuilder; Proto.ProtocolSignedDelta; Proto.Builder; Proto.ProtocolSignatureOrBuilder; Proto.ProtocolSignature; Proto.SignatureAlgorithm; Proto.Builder; Proto.ProtocolSignerInfoOrBuilder; Proto.ProtocolSignerInfo; Proto.HashAlgorithm; Proto.Builder]; [Proto.ProtocolHashedVersionOrBuilder]; [Proto.KeyValuePairOrBuilder]; [Proto.KeyValueUpdateOrBuilder]; [FederationErrorProto; FederationErrorProto.FederationErrorOrBuilder; FederationErrorProto.FederationError; FederationErrorProto.Code; FederationErrorProto.Builder]. LCC (Lack of Component Cohesion) = 0.27
jparyani_wave,org.waveprotocol.wave.media.model,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.adt.docbased; org.waveprotocol.wave.model.wave.opbased
jparyani_wave,org.waveprotocol.wave.media.model,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Attachment; MutableClientAttachment; AttachmentDocumentWrapper; AttachmentDocumentWrapperTest]; [Attachment.Status]; [Attachment.ImageMetadata]; [Attachment.ErrorCondition]; [AttachmentIdGenerator; AttachmentId; AttachmentIdGeneratorImpl; AttachmentDataDocHelper; AttachmentDataDocHelperTest]; [AttachmentDocumentWrapper.Name]; [AttachmentDocumentWrapper.KeyName]; [AttachmentDocumentWrapper.ImageMetadataImpl]; [AttachmentDocumentWrapper.KeyNameSerializer]. LCC (Lack of Component Cohesion) = 0.56
jparyani_wave,org.waveprotocol.box.server,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server; org.waveprotocol.box.server.persistence.migration; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server; org.waveprotocol.box.server.stat; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server; org.waveprotocol.box.server.stat; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file
jparyani_wave,org.waveprotocol.box.server,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.stat; org.waveprotocol.box.server.persistence.migration; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server.rpc; org.waveprotocol.box.server.executor; org.waveprotocol.box.server.robots.passive; org.waveprotocol.box.server.frontend; org.waveprotocol.box.server.robots.dataapi; org.waveprotocol.box.server.robots.agent.passwd; org.waveprotocol.box.server.robots.agent.registration; org.waveprotocol.wave.federation.xmpp; org.waveprotocol.wave.federation.noop; org.waveprotocol.box.server.robots.active
jparyani_wave,org.waveprotocol.box.server.rpc,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 52
jparyani_wave,org.waveprotocol.box.server.rpc,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.rpc; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.rpc,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.rpc; org.waveprotocol.box.server.robots; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.rpc,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.rpc; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.rpc,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.rpc; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.rpc,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ClientRpcController; WebSocketClientRpcChannel; ClientRpcChannel; WebSocketChannelImpl; ProtoCallback; ServerRpcProvider.Connection; RpcTest; WebSocketChannelTest.TestCallback; Rpc; Rpc.CancelRpc; Rpc.Builder; Rpc.RpcFinished; Rpc.Builder; ClientRpcController.RpcState; WebSocketChannel; MessageExpectingChannel; ServerRpcProvider; ServerRpcProvider.WebSocketConnection; ServerRpcProvider.WaveWebSocketServlet; ServerRpcProvider.WaveAtmosphereService; WebSocketChannelTest.TestWebSocketChannel; ServerRpcControllerImpl; ServerRpcController]; [ClientRpcController.Status]; [SearchServlet; AbstractSearchServlet; NotificationServlet; ProtoSerializer; FetchServletTest; WaveletProviderStub; FetchServlet; AttachmentInfoServlet; FetchProfilesServlet]; [SignOutServlet; SignOutServletTest]; [GadgetProviderServlet]; [WebSocketChannel.MessageWrapper]; [LocaleServlet]; [UserRegistrationServlet; AuthenticationServlet; UserRegistrationServletTest; AuthenticationServletTest]; [WaveRefServlet]; [WaveClientServlet]; [ServerRpcProvider.RegisteredServiceMethod]; [ServerRpcProvider.AtmosphereConnection]; [ProtoSerializer.SerializationException]; [ProtoSerializer.ProtoImplSerializer]; [AttachmentServlet]; [WebSocketChannelTest]; [Rpc.CancelRpcOrBuilder]; [Rpc.RpcFinishedOrBuilder]. LCC (Lack of Component Cohesion) = 0.35
jparyani_wave,org.waveprotocol.box.server.rpc.atmosphere,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.rpc.atmosphere; org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.server.rpc.atmosphere,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.server.authentication,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.account
jparyani_wave,org.waveprotocol.box.server.authentication,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account
jparyani_wave,org.waveprotocol.box.server.authentication,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.mongodb; org.waveprotocol.box.server.account
jparyani_wave,org.waveprotocol.box.server.authentication,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util
jparyani_wave,org.waveprotocol.box.server.authentication,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.authentication,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SessionManagerImpl; SessionManager; SessionManagerTest]; [AccountStoreHolder; AccountStoreLoginModule; AccountStoreLoginModuleTest; ParticipantPrincipal; AuthTestUtil]; [HttpRequestBasedCallbackHandler; HttpRequestBasedCallbackHandlerTest]; [AccountStoreLoginModule.Status]; [PasswordDigest; PasswordDigestTest]; [AccountStoreLoginModuleTest.FakeCallbackHandler]. LCC (Lack of Component Cohesion) = 0.43
jparyani_wave,org.waveprotocol.box.server.stat,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.stat; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.stat,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.stat; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.common,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.common; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.common,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.common; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.mongodb
jparyani_wave,org.waveprotocol.box.server.common,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.common; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.mongodb; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.common,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.operation.core
jparyani_wave,org.waveprotocol.box.server.attachment,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.attachment; org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.server.attachment,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.attachment; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server; org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.server.attachment,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.attachment; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.robots.operations
jparyani_wave,org.waveprotocol.box.server.attachment,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.server.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.robots.operations
jparyani_wave,org.waveprotocol.box.server.util,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.wave.data.impl; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.robots.agent.welcome
jparyani_wave,org.waveprotocol.box.server.util,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [WaveletDataUtil; WaveletDataUtilTest; TestDataUtil]; [RandomBase64Generator; RandomBase64GeneratorTest]; [NetUtils]; [UrlParameters]; [SuccessFailCallback; BlockingSuccessFailCallback]; [RegistrationUtil]; [OAuthUtil]. LCC (Lack of Component Cohesion) = 0.64
jparyani_wave,org.waveprotocol.box.server.frontend,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.frontend; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.frontend,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.frontend; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.frontend,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.frontend; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.frontend,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.frontend.testing
jparyani_wave,org.waveprotocol.box.server.frontend,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [WaveletInfo; ClientFrontendImpl; UserManager; WaveViewSubscription; CommittedWaveletSnapshot; ClientFrontend; ClientFrontendImplTest; UserManagerTest; WaveClientRpcImpl; WaveClientRpcImplTest]; [WaveletInfo.PerWavelet]; [WaveViewSubscription.WaveletChannelState]; [ClientFrontend.OpenListener]. LCC (Lack of Component Cohesion) = 0.31
jparyani_wave,org.waveprotocol.box.server.frontend.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.frontend.testing; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server; org.waveprotocol.box.server.frontend
jparyani_wave,org.waveprotocol.box.server.waveserver,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 96
jparyani_wave,org.waveprotocol.box.server.waveserver,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.waveserver,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.mongodb
jparyani_wave,org.waveprotocol.box.server.waveserver,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.common; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.waveserver,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.common; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.mongodb
jparyani_wave,org.waveprotocol.box.server.waveserver,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server; org.waveprotocol.wave.model.supplement; org.waveprotocol.box.server.robots.operations
jparyani_wave,org.waveprotocol.box.server.account,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.account; org.waveprotocol.box.server.authentication
jparyani_wave,org.waveprotocol.box.server.account,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.account; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.account,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.account; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.mongodb
jparyani_wave,org.waveprotocol.box.server.account,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.executor,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.executor; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.persistence,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.persistence,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.authentication
jparyani_wave,org.waveprotocol.box.server.persistence,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util
jparyani_wave,org.waveprotocol.box.server.persistence,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.persistence.mongodb; org.waveprotocol.box.server; org.waveprotocol.box.server.persistence.memory; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.util.testing; org.waveprotocol.box.server.common
jparyani_wave,org.waveprotocol.box.server.persistence,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [FileNotFoundPersistenceException; PersistenceException; AccountStore; PersistenceModule; FakePermissiveAccountStore; SignerInfoStore; AttachmentStore; AttachmentStoreTestBase; AccountStoreTestBase; AttachmentUtil]; [PersistenceStartException]; [AttachmentStore.AttachmentData]; [CertPathStoreTestBase]; [DeltaStoreTestBase]. LCC (Lack of Component Cohesion) = 0.36
jparyani_wave,org.waveprotocol.box.server.persistence.lucene,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.lucene; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.persistence.lucene,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.lucene; org.waveprotocol.box.server; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.persistence.lucene,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.lucene; org.waveprotocol.box.server; org.waveprotocol.box.server.persistence.migration; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.persistence.lucene,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server; org.waveprotocol.box.server.persistence.file
jparyani_wave,org.waveprotocol.box.server.persistence.file,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.persistence.file,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.file,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.file,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server; org.waveprotocol.box.server.stat; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.file,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.persistence.protos
jparyani_wave,org.waveprotocol.box.server.persistence.file,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [FileSignerInfoStore; FileUtils; FileAccountStore; AttachmentStoreTest; CertPathStoreTest; DeltaStoreTest; AccountStoreTest; DeltaIndex; FileDeltaCollection; FileDeltaStore]; [FileDeltaCollection.DeltaHeader]; [FileAttachmentStore]. LCC (Lack of Component Cohesion) = 0.25
jparyani_wave,org.waveprotocol.box.server.persistence.protos,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.protos; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file
jparyani_wave,org.waveprotocol.box.server.persistence.protos,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.protos; org.waveprotocol.box.server.common; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file
jparyani_wave,org.waveprotocol.box.server.persistence.protos,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ProtoDeltaStoreDataSerializer]; [ProtoAccountDataSerializer; ProtoAccountDataSerializerTest]; [ProtoAccountStoreData; ProtoAccountStoreData.ProtoAccountDataOrBuilder; ProtoAccountStoreData.ProtoAccountData; ProtoAccountStoreData.AccountDataType; ProtoAccountStoreData.Builder; ProtoAccountStoreData.ProtoHumanAccountDataOrBuilder; ProtoAccountStoreData.ProtoHumanAccountData; ProtoAccountStoreData.Builder; ProtoAccountStoreData.ProtoPasswordDigest; ProtoAccountStoreData.Builder; ProtoAccountStoreData.ProtoRobotAccountDataOrBuilder; ProtoAccountStoreData.ProtoRobotAccountData; ProtoAccountStoreData.Builder; ProtoAccountStoreData.ProtoRobotCapabilitiesOrBuilder; ProtoAccountStoreData.ProtoRobotCapabilities; ProtoAccountStoreData.Builder; ProtoAccountStoreData.ProtoRobotCapability; ProtoAccountStoreData.Builder]; [ProtoAccountStoreData.ProtoPasswordDigestOrBuilder]; [ProtoAccountStoreData.ProtoRobotCapabilityOrBuilder]; [ProtoDeltaStoreData; ProtoDeltaStoreData.ProtoTransformedWaveletDelta; ProtoDeltaStoreData.Builder]; [ProtoDeltaStoreData.ProtoTransformedWaveletDeltaOrBuilder]. LCC (Lack of Component Cohesion) = 0.26
jparyani_wave,org.waveprotocol.box.server.persistence.mongodb,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.mongodb; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.mongodb,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.mongodb; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.mongodb,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.mongodb; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.common; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.migration,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.migration; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.persistence.migration,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.migration; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.persistence.migration,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.migration; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.persistence.memory,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.memory; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.memory,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.memory; org.waveprotocol.box.server.account; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.memory,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.persistence.memory; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.server.persistence.memory,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [MemoryDeltaStore; MemoryDeltaCollection]; [MemoryStore; CertPathStoreTest]; [DeltaStoreTest]; [AccountStoreTest]. LCC (Lack of Component Cohesion) = 0.67
jparyani_wave,org.waveprotocol.box.server.robots,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util; org.waveprotocol.box.server.account
jparyani_wave,org.waveprotocol.box.server.robots,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account
jparyani_wave,org.waveprotocol.box.server.robots,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.mongodb; org.waveprotocol.box.server.account
jparyani_wave,org.waveprotocol.box.server.robots,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): com.google.wave.api.v2; org.waveprotocol.box.server; org.waveprotocol.box.server.robots.operations; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.frontend; org.waveprotocol.box.server.robots.dataapi
jparyani_wave,org.waveprotocol.box.server.robots,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [OperationResults; OperationContextImpl; OperationContextImplTest; OperationContext; RobotWaveletData; RobotWaveletTest]; [OperationServiceRegistry; RobotApiModule; AbstractOperationServiceRegistry; OperationServiceRegistryTest; OperationServiceRegistryTest.OperationServiceRegistryImpl]; [RobotSerializerModule]; [ProfileFetcherModule]; [RobotRegistrationServlet]; [RobotCapabilities]; [RobotsTestBase]. LCC (Lack of Component Cohesion) = 0.44
jparyani_wave,org.waveprotocol.box.server.robots.active,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.active; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.active,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.active; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.active,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.active; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.operations,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 32
jparyani_wave,org.waveprotocol.box.server.robots.operations,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.operations; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.robots.operations,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.operations; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.robots.operations,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.operations; org.waveprotocol.box.server.robots; org.waveprotocol.box.server; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.robots.operations,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.operations; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.robots.operations,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.robots.passive
jparyani_wave,org.waveprotocol.box.server.robots.agent,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AbstractBaseRobotAgent; AbstractCliRobotAgent; AbstractRobotAgentTest.FakeRobotAgent]; [AbstractBaseRobotAgent.ServerFrontendAddressHolder]; [RobotAgentUtil; RobotAgentUtilTest]; [AbstractRobotAgentTest]. LCC (Lack of Component Cohesion) = 0.57
jparyani_wave,org.waveprotocol.box.server.robots.agent.welcome,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.welcome; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.welcome,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.welcome; org.waveprotocol.box.server; org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.server.robots.agent.welcome,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.welcome; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util
jparyani_wave,org.waveprotocol.box.server.robots.agent.welcome,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.welcome; org.waveprotocol.box.server.account; org.waveprotocol.box.server.authentication; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.welcome,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.passwd,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.passwd; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.passwd,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.passwd; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.passwd,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.passwd; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.passwd,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.passwd; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.registration,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.registration; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.registration,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.registration; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.registration,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.registration; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.agent.registration,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.agent.registration; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.passive,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.passive; org.waveprotocol.box.server.robots.operations
jparyani_wave,org.waveprotocol.box.server.robots.passive,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.passive; org.waveprotocol.box.server.robots; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.passive,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.passive; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.passive,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.passive; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.persistence.file; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.passive,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [WaveletAndDeltas; EventGenerator; Robot; WaveletOperationInverter; WaveletAndDeltasTest; EventGeneratorTest; RobotConnectorTest; RobotTest; RobotsGatewayTest; RobotConnector; RobotsGateway; RobotOperationApplicator; RobotOperationApplicatorTest]; [OperationServiceRegistryImpl]; [EventGenerator.EventGeneratingWaveletListener]; [EventGenerator.EventGeneratingConversationListener]; [EventGenerator.EventGeneratingDocumentHandler]; [WaveletOperationInverter.BlipOperationInverter]. LCC (Lack of Component Cohesion) = 0.33
jparyani_wave,org.waveprotocol.box.server.robots.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.testing; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.robots.operations
jparyani_wave,org.waveprotocol.box.server.robots.testing,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.testing; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server.robots.util; org.waveprotocol.box.server.robots.operations
jparyani_wave,org.waveprotocol.box.server.robots.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.util; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.robots.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.util; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.robots.operations
jparyani_wave,org.waveprotocol.box.server.robots.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.util; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util; org.waveprotocol.box.server.robots.agent.welcome
jparyani_wave,org.waveprotocol.box.server.robots.util,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.util; org.waveprotocol.box.server.robots; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.waveserver
jparyani_wave,org.waveprotocol.box.server.robots.util,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.robots; org.waveprotocol.box.server.robots.operations; org.waveprotocol.box.server.waveserver; org.waveprotocol.wave.model.wave.opbased; org.waveprotocol.wave.model.supplement; org.waveprotocol.box.server.common
jparyani_wave,org.waveprotocol.box.server.robots.util,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [RobotsUtil]; [RobotsUtil.RobotRegistrationException]; [ConversationUtil; OperationUtilTest; OperationUtil]; [LoggingRequestListener]. LCC (Lack of Component Cohesion) = 0.67
jparyani_wave,org.waveprotocol.box.server.robots.dataapi,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.dataapi; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.robots.dataapi,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.dataapi; org.waveprotocol.box.server.waveserver; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.dataapi,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.dataapi; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.dataapi,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.dataapi; org.waveprotocol.box.server.util; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.robots.dataapi,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DataApiTokenContainer; DataApiOAuthServlet; DataApiServlet; BaseApiServlet; DataApiServletTest; DataApiOAuthServletTest; DataApiTokenContainerTest]; [DataApiOperationServiceRegistry]; [DataApiOAuthServletTest.ServletOutputStreamStub]. LCC (Lack of Component Cohesion) = 0.33
jparyani_wave,org.waveprotocol.box.server.robots.register,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.register; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.register,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.register; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots
jparyani_wave,org.waveprotocol.box.server.robots.register,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.server.robots.register; org.waveprotocol.box.server.persistence; org.waveprotocol.box.server.account; org.waveprotocol.box.server.robots; org.waveprotocol.box.server
jparyani_wave,org.waveprotocol.box.server.robots.register,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.persistence
jparyani_wave,org.waveprotocol.box.stat,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.stat; org.waveprotocol.wave.model.util; org.waveprotocol.wave.model.document.util; org.waveprotocol.wave.client.editor.content; org.waveprotocol.wave.client.scheduler
jparyani_wave,org.waveprotocol.box.stat,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.common
jparyani_wave,org.waveprotocol.box.stat,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Timing; AsyncCallContext; RequestScope; StatRenderer; StatRecorder; SessionContext; Statistic; TimingReceiver; Timer; StatStore; ExecutionTree; Measurement; ExecutionNode; StatRenderer.ProfiledRequest]; [RequestScope.Value]; [Statistic.Entry]; [Statistic.FieldEntry]; [StatService]. LCC (Lack of Component Cohesion) = 0.28
jparyani_wave,org.waveprotocol.box.common,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.wave.model.document.operation.impl; org.waveprotocol.wave.model.operation.wave; org.waveprotocol.wave.model.testing
jparyani_wave,org.waveprotocol.box.common,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SessionConstants]; [Snippets; DocumentConstants]; [ExceptionalIterator; ExceptionalIteratorTest]; [ExceptionalIterator.Empty]; [ExceptionalIterator.FromIterator]; [ExceptionalIterator.Failing]; [DeltaSequence; DeltaSequenceTest]; [ListReceiver; Receiver]. LCC (Lack of Component Cohesion) = 0.67
jparyani_wave,org.waveprotocol.box.expimp,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DeltaParser; WaveImport; DomainConverter; WaveExport; Console; DeltaParserTest; DomainConverterTest; FileNames; OAuth]; [WaveImport.ImportWaveletState]. LCC (Lack of Component Cohesion) = 0.2
jparyani_wave,org.waveprotocol.box.webclient.search,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 45
jparyani_wave,org.waveprotocol.box.webclient.search,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SearchPresenter; DigestView; Digest; SearchPanelView; SimpleSearch; SimpleSearch.DigestProxy; SearchPanelRenderer; SearchView; Search; SearchService; SearchService.DigestSnapshot; SearchPanelWidget; WaveStore; Pool; ToppingUpPool; ToppingUpPoolTest; ToppingUpPoolTest.MockFactory; SearchWidget; SearchPanelResourceLoader; DigestDomImpl; SearchServiceImpl; SearchBuilder; JsoSearchBuilderImpl; RemoteSearchService; WaveBasedDigest]; [SearchPresenter.WaveActionHandler]; [WaveStore.Listener]; [SearchWidget.Resources]; [SearchWidget.Css]; [SearchWidget.Binder]; [DigestDomImpl.Resources]; [DigestDomImpl.Css]; [DigestDomImpl.Binder]; [WaveBasedDigest.Listener]; [SearchPanelView.Listener]; [JsoSearchBuilderImpl.SearchBuilderUtils]; [SearchView.Listener]; [Search.Listener]; [Search.State]; [ToppingUpPool.Factory]; [SearchService.Callback]; [SearchPanelWidget.Resources]; [SearchPanelWidget.Css]; [SearchPanelWidget.CssConstants]; [SearchPanelWidget.Binder]. LCC (Lack of Component Cohesion) = 0.47
jparyani_wave,org.waveprotocol.box.webclient.client,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 36
jparyani_wave,org.waveprotocol.box.webclient.client,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [RemoteViewServiceMultiplexer; StageTwoProvider; RemoteWaveViewService; SubmitResponseCallback; WaveWebSocketCallback; StagesProvider; WindowTitleHandler; WaveWebSocketClient; Session; Session.JsSession; Session.StubSession; WaveSocket; WebClient; ClientIdGenerator; WaveSocketFactory; HistoryProvider; HistoryProviderDefault; HistorySupport; LocaleService; RemoteLocaleService; DebugMessagePanel; HistoryChangeListener]; [SavedStateIndicator]; [SavedStateIndicator.SavedState]; [RemoteWaveViewService.WaveViewServiceUpdateImpl]; [RemoteWaveViewService.VersionSignatureManager]; [SimpleWaveStore]; [WaveWebSocketClient.MessageWrapper]; [WaveWebSocketClient.ConnectState]; [DebugMessagePanel.Binder]; [DebugMessagePanel.Style]; [WaveSocket.WaveSocketCallback]; [WebClient.Binder]; [WebClient.Style]; [WebClient.ErrorHandler]; [SnapshotFetcher]. LCC (Lack of Component Cohesion) = 0.42
jparyani_wave,org.waveprotocol.box.webclient.widget.error,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ErrorIndicatorWidget; ErrorIndicatorPresenter; ErrorIndicatorView]; [ErrorIndicatorWidget.Binder]; [ErrorIndicatorWidget.Style]; [ErrorIndicatorView.Listener]. LCC (Lack of Component Cohesion) = 0.67
jparyani_wave,org.waveprotocol.pst,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [PstMain; PstCommandLine; PstException; PstFileDescriptor; Pst]; [PstException.TemplateException]. LCC (Lack of Component Cohesion) = 0.33
jparyani_wave,org.waveprotocol.pst.model,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Util; Type; Message; Field; MessageProperties; ProtoEnum]; [EnumValue]. LCC (Lack of Component Cohesion) = 0.29
jparyani_wave,org.waveprotocol.pst.style,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Styler; PstStyler]; [PstStyler.StyleBuilder]; [PstStyler.LineStyler]; [PstStyler.LineGenerator]; [PstStyler.LinePipeline]; [PstStyler.ListGenerator]; [PstStyler.StatefulLineStyler]. LCC (Lack of Component Cohesion) = 0.88
jparyani_wave,org.waveprotocol.wave.concurrencycontrol,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 51
jparyani_wave,org.waveprotocol.wave.concurrencycontrol,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [TestBase]; [ClientServer; ClientServer.FetchWaveViewRequestOrBuilder; ClientServer.FetchWaveViewRequest; ClientServer.Builder; ClientServer.FetchWaveViewResponseOrBuilder; ClientServer.FetchWaveViewResponse; ClientServer.WaveletOrBuilder; ClientServer.Wavelet; ClientServer.Builder; ClientServer.Builder; ClientServer.WaveletVersion; ClientServer.Builder; ClientServer.WaveletSnapshotOrBuilder; ClientServer.WaveletSnapshot; ClientServer.Builder; ClientServer.DocumentSnapshot; ClientServer.Builder; ClientServer.OpenWaveletChannelRequest; ClientServer.Builder; ClientServer.OpenWaveletChannelStreamOrBuilder; ClientServer.OpenWaveletChannelStream; ClientServer.Builder; ClientServer.CloseWaveletChannelRequest; ClientServer.Builder; ClientServer.WaveletUpdate; ClientServer.Builder; ClientServer.WaveletChannelTerminatorOrBuilder; ClientServer.WaveletChannelTerminator; ClientServer.Builder; ClientServer.SubmitDeltaRequest; ClientServer.Builder; ClientServer.SubmitDeltaResponseOrBuilder; ClientServer.SubmitDeltaResponse; ClientServer.Builder; ClientServer.TransportAuthenticationRequest; ClientServer.Builder; ClientServer.EmptyResponse; ClientServer.Builder; ClientServer.ResponseStatusOrBuilder; ClientServer.ResponseStatus; ClientServer.ResponseCode; ClientServer.Builder]; [ClientServer.WaveletVersionOrBuilder]; [ClientServer.DocumentSnapshotOrBuilder]; [ClientServer.OpenWaveletChannelRequestOrBuilder]; [ClientServer.CloseWaveletChannelRequestOrBuilder]; [ClientServer.WaveletUpdateOrBuilder]; [ClientServer.SubmitDeltaRequestOrBuilder]; [ClientServer.TransportAuthenticationRequestOrBuilder]; [ClientServer.EmptyResponseOrBuilder]. LCC (Lack of Component Cohesion) = 0.2
jparyani_wave,org.waveprotocol.wave.model.operation.testing,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [Rational; RationalDomain; RationalDomain.Data; RationalDomain.Affine; AffineGenerator; RandomTesterTest; StringOpGenerator; StringDomainTest; RandomOpGenerator; DomainRandomTester; DocumentDomainLargeTest; StringDomain; DocOpGenerator; DocOpTransformerReferenceLargeTest; DocumentDomain]; [DomainRandomTester.FailureException]; [DomainRandomTester.Log]; [StringDomain.Data]; [StringDomain.StringOp]; [StringDomain.Component]; [StringDomain.Insert]; [StringDomain.Delete]; [StringDomain.Skip]. LCC (Lack of Component Cohesion) = 0.39
jparyani_wave,org.waveprotocol.wave.model.operation.testing.reference,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 65
jparyani_wave,org.waveprotocol.wave.model.operation.testing.reference,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [PositionTracker; InsertionDeletionTransformer; DeletionDeletionTransformer; AnnotationTamenessChecker; InsertionPreservationTransformer; ReferenceTransformer; PreservationPreservationTransformer; PreservationDeletionTransformer; ValueUpdate; InsertionInsertionTransformer; Decomposer]; [PositionTracker.RelativePosition]; [InsertionDeletionTransformer.RangeCache]; [InsertionDeletionTransformer.Target]; [InsertionDeletionTransformer.InsertionTarget]; [InsertionDeletionTransformer.NoninsertionTarget]; [InsertionDeletionTransformer.DeleteCharactersCache]; [InsertionDeletionTransformer.DeleteElementStartCache]; [Decomposer.Decomposition]; [Decomposer.Target]; [DeletionDeletionTransformer.InternalTransformException]; [DeletionDeletionTransformer.RangeCache]; [DeletionDeletionTransformer.RangeResolver]; [DeletionDeletionTransformer.DeleteCharactersResolver]; [DeletionDeletionTransformer.DeleteElementStartResolver]; [DeletionDeletionTransformer.Target]; [DeletionDeletionTransformer.DeleteCharactersCache]; [DeletionDeletionTransformer.DeleteElementStartCache]; [DeletionDeletionTransformer.DeleteElementEndCache]; [AnnotationTamenessChecker.RelativePosition]; [AnnotationTamenessChecker.PositionTracker]; [AnnotationTamenessChecker.Target]; [AnnotationTamenessChecker.PreservationTarget]; [AnnotationTamenessChecker.DeletionTarget]; [InsertionPreservationTransformer.RangeCache]; [InsertionPreservationTransformer.Target]; [InsertionPreservationTransformer.InsertionTarget]; [InsertionPreservationTransformer.NoninsertionTarget]; [InsertionPreservationTransformer.ReplaceAttributesCache]; [InsertionPreservationTransformer.UpdateAttributesCache]; [PreservationPreservationTransformer.InternalTransformException]; [PreservationPreservationTransformer.AnnotationTracker]; [PreservationPreservationTransformer.RangeCache]; [PreservationPreservationTransformer.RangeResolver]; [PreservationPreservationTransformer.ReplaceAttributesResolver]; [PreservationPreservationTransformer.UpdateAttributesResolver]; [PreservationPreservationTransformer.Target]; [PreservationPreservationTransformer.ReplaceAttributesCache]; [PreservationPreservationTransformer.UpdateAttributesCache]; [PreservationDeletionTransformer.InternalTransformException]; [PreservationDeletionTransformer.RangeCache]; [PreservationDeletionTransformer.RangeResolver]; [PreservationDeletionTransformer.Target]; [PreservationDeletionTransformer.PreservationTarget]; [PreservationDeletionTransformer.ReplaceAttributesCache]; [PreservationDeletionTransformer.UpdateAttributesCache]; [PreservationDeletionTransformer.DeletionTarget]; [PreservationDeletionTransformer.DeleteCharactersCache]; [PreservationDeletionTransformer.DeleteElementStartCache]; [PreservationDeletionTransformer.DeleteElementEndCache]; [PreservationDeletionTransformer.DeleteCharactersResolver]; [PreservationDeletionTransformer.DeleteElementStartResolver]; [PreservationDeletionTransformer.ReplaceAttributesResolver]; [PreservationDeletionTransformer.UpdateAttributesResolver]; [InsertionInsertionTransformer.Target]. LCC (Lack of Component Cohesion) = 0.85
jparyani_wave,org.waveprotocol.wave.client.editor.annotation,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AnnotationPainterTest; AnnotationPainterTestBase; AnnotationPainterRandomTestBase; PojoAnnotationPainterRandomLargeTest]; [AnnotationPainterTestBase.Box]; [AnnotationPainterRandomTestBase.TestConfiguration]; [AnnotationHelperTest]; [CaretAnnotationsTest]; [CaretAnnotationsTest.MockResolver]. LCC (Lack of Component Cohesion) = 0.67
jparyani_wave,org.waveprotocol.box.search,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [SearchProto; SearchProto.SearchRequest; SearchProto.Builder; SearchProto.SearchResponseOrBuilder; SearchProto.SearchResponse; SearchProto.Digest; SearchProto.Builder; SearchProto.Builder]; [SearchProto.SearchRequestOrBuilder]; [SearchProto.DigestOrBuilder]. LCC (Lack of Component Cohesion) = 0.3
jparyani_wave,org.waveprotocol.box.profile,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ProfilesProto; ProfilesProto.ProfileRequest; ProfilesProto.Builder; ProfilesProto.ProfileResponseOrBuilder; ProfilesProto.ProfileResponse; ProfilesProto.FetchedProfile; ProfilesProto.Builder; ProfilesProto.Builder]; [ProfilesProto.ProfileRequestOrBuilder]; [ProfilesProto.FetchedProfileOrBuilder]. LCC (Lack of Component Cohesion) = 0.3
jparyani_wave,org.waveprotocol.box.common.comms,God Component,The tool detected the smell in this component because the component contains high number of classes. Number of classes in the component are: 36
jparyani_wave,org.waveprotocol.box.common.comms,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: org.waveprotocol.box.common.comms; org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.common.comms,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): org.waveprotocol.box.server.rpc
jparyani_wave,org.waveprotocol.box.attachment,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [AttachmentProto; AttachmentProto.AttachmentsResponseOrBuilder; AttachmentProto.AttachmentsResponse; AttachmentProto.Builder; AttachmentProto.AttachmentMetadataOrBuilder; AttachmentProto.AttachmentMetadata; AttachmentProto.Builder; AttachmentProto.ImageMetadata; AttachmentProto.Builder]; [AttachmentProto.ImageMetadataOrBuilder]. LCC (Lack of Component Cohesion) = 0.2

Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
benjiman_expressions,uk.co.benjiweber.expressions,ToString,autoToString,Long Statement,The length of the statement "return "{" + props().stream().map(prop -> (Object)prop.apply((T)this)).map(prop -> prop == null ? "_" : prop.toString()).collect(Collectors.joining("` ")) + "}";" is 161.,8
benjiman_expressions,uk.co.benjiweber.expressions,EqualsHashcode,autoHashCode,Long Statement,The length of the statement "return props().stream().map(prop -> (Object)prop.apply((T)this)).collect(ResultCalculator::new`ResultCalculator::accept`ResultCalculator::combine).result;" is 154.,17
benjiman_expressions,uk.co.benjiweber.expressions,InstanceOfMethodReference,main,Magic Number,The method contains a magic number: 5,5
benjiman_expressions,uk.co.benjiweber.expressions,CoalesceTest,should_be_able_to_use_optionals,Long Statement,The length of the statement "assertEquals("bob"`coalesce(() -> Optional.<String>empty()`() -> Optional.of(new Person("bob").name())`() -> Optional.of(new Person("barbara").name())).get());" is 159.,39
benjiman_expressions,uk.co.benjiweber.expressions,UsingTest,should_close_closeable_when_exception,Empty catch clause,The method has an empty catch block.,25
benjiman_expressions,uk.co.benjiweber.expressions,ChainableVoidTest,chaining_void_example,Long Statement,The length of the statement "Duck duck=chain(new Duck()).invoke(Duck::quack).invoke(Duck::waddle).invoke(Duck::setName`"ducky").invoke(Duck::setFooBar`"curry_and_partially_apply"`5).unwrap();" is 162.,12
benjiman_expressions,uk.co.benjiweber.expressions,ChainableVoidTest,chaining_void_example,Magic Number,The method contains a magic number: 5,12
benjiman_expressions,uk.co.benjiweber.expressions,ChainableVoidTest,chaining_void_example,Magic Number,The method contains a magic number: 5,12
benjiman_expressions,uk.co.benjiweber.expressions,CurryTest,curry_bi,Magic Number,The method contains a magic number: 3,9
benjiman_expressions,uk.co.benjiweber.expressions,CurryTest,curry_bi,Magic Number,The method contains a magic number: 2,9
benjiman_expressions,uk.co.benjiweber.expressions,CurryTest,curry_tri,Magic Number,The method contains a magic number: 6,14
benjiman_expressions,uk.co.benjiweber.expressions,CurryTest,curry_tri,Magic Number,The method contains a magic number: 3,14
benjiman_expressions,uk.co.benjiweber.expressions,CurryTest,curry_tri,Magic Number,The method contains a magic number: 2,14
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,mixingPaint,Magic Number,The method contains a magic number: 100,27
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,mixingPaint,Magic Number,The method contains a magic number: 100,27
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,mixingPaint,Magic Number,The method contains a magic number: 100,27
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,mixingPaint,Magic Number,The method contains a magic number: 100,27
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,paintEquals,Magic Number,The method contains a magic number: 100,38
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,paintEquals,Magic Number,The method contains a magic number: 100,38
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,paintToString,Magic Number,The method contains a magic number: 100,51
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,paintToString,Magic Number,The method contains a magic number: 100,51
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,property_with_behaviour,Magic Number,The method contains a magic number: 2D,95
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,property_with_behaviour,Magic Number,The method contains a magic number: 7200D,95
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,property_with_behaviour,Magic Number,The method contains a magic number: 2D,95
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,property_with_behaviour,Magic Number,The method contains a magic number: 3D,95
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,property_with_behaviour,Magic Number,The method contains a magic number: 10800D,95
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,property_with_behaviour,Magic Number,The method contains a magic number: 3D,95
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,pass_around_references_to_hours,Magic Number,The method contains a magic number: 2D,107
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,pass_around_references_to_hours,Magic Number,The method contains a magic number: 3D,107
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,pass_around_references_to_hours,Magic Number,The method contains a magic number: 3D,107
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,pass_around_references_to_hours,Magic Number,The method contains a magic number: 2D,107
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,pass_around_references_to_hours,Magic Number,The method contains a magic number: 2D,107
benjiman_expressions,uk.co.benjiweber.expressions,PropertyTest,pass_around_references_to_hours,Magic Number,The method contains a magic number: 2D,107
benjiman_expressions,uk.co.benjiweber.expressions,TimesTest,times_collection_size,Magic Number,The method contains a magic number: 3,13
benjiman_expressions,uk.co.benjiweber.expressions,TimesTest,times_literal,Magic Number,The method contains a magic number: 6,22
benjiman_expressions,uk.co.benjiweber.expressions,TimesTest,times_literal,Magic Number,The method contains a magic number: 6,22
benjiman_expressions,uk.co.benjiweber.expressions,InstanceOfTest,should_return_alternative_when_input_object_is_not_instance,Magic Number,The method contains a magic number: 5,24
benjiman_expressions,uk.co.benjiweber.expressions,InstanceOfTest,should_return_empty_optional_when_input_object_is_not_instance,Magic Number,The method contains a magic number: 5,46
benjiman_expressions,uk.co.benjiweber.expressions,InstanceOfTest,should_not_throw_exception_if_block_does_not_need_evaluating,Magic Number,The method contains a magic number: 5,69
benjiman_expressions,uk.co.benjiweber.expressions,TryAsExpressionTest,should_return_try_value_when_number,Magic Number,The method contains a magic number: 2,25
benjiman_expressions,uk.co.benjiweber.expressions,TryAsExpressionTest,should_not_wrap_or_catch_uncaught_runtime_exception,Empty catch clause,The method has an empty catch block.,84
benjiman_expressions,uk.co.benjiweber.expressions,TryAsExpressionTest,should_not_wrap_or_catch_uncaught_error,Empty catch clause,The method has an empty catch block.,101
benjiman_expressions,uk.co.benjiweber.expressions,TryAsExpressionTest,should_execute_finally_when_uncaught_exception,Empty catch clause,The method has an empty catch block.,145
benjiman_expressions,uk.co.benjiweber.expressions,TryAsExpressionTest,should_execute_finally_when_uncaught_error,Empty catch clause,The method has an empty catch block.,164
benjiman_expressions,uk.co.benjiweber.expressions.properties,GuessesName,recordPosition,Magic Number,The method contains a magic number: 3,21
benjiman_expressions,uk.co.benjiweber.expressions.properties,GuessesName,guessName,Long Statement,The length of the statement ").filter(f -> f.getType().isAssignableFrom(GuessesName.class)).filter(f -> unchecked(() -> (GuessesName)f.get(o)).declaringLineNumber == this.declaringLineNumber).findFirst();" is 175.,33
benjiman_expressions,uk.co.benjiweber.expressions.tuples,QuinTuple,of,Long Parameter List,The method has 5 parameters. ,13
benjiman_expressions,uk.co.benjiweber.expressions.tuples,Tuple,tuple,Long Parameter List,The method has 5 parameters. ,20
benjiman_expressions,uk.co.benjiweber.expressions.tuples,Tuple,tuple,Long Parameter List,The method has 6 parameters. ,24
benjiman_expressions,uk.co.benjiweber.expressions.tuples,SexTuple,of,Long Parameter List,The method has 6 parameters. ,14
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,return_and_expand_tuples,Long Statement,The length of the statement "String name=me().map((firstname`favouriteNo`surname) -> tuple(firstname`surname)).map((firstname`surname) -> firstname + " " + surname);" is 136.,11
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,me,Magic Number,The method contains a magic number: 9001,19
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,tuple_equality,Magic Number,The method contains a magic number: 5,23
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,tuple_equality,Magic Number,The method contains a magic number: 5,23
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,tuple_equality,Magic Number,The method contains a magic number: 5,23
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,tuple_equality,Magic Number,The method contains a magic number: 5,23
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,tuple_toString,Magic Number,The method contains a magic number: 9,34
benjiman_expressions,uk.co.benjiweber.expressions.tuples,TupleTest,return_and_throw_checked_exception,Magic Number,The method contains a magic number: 9000,40
benjiman_expressions,uk.co.benjiweber.expressions.functions,QuinFunction,apply,Long Parameter List,The method has 5 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalSexFunction,apply,Long Parameter List,The method has 6 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,SexFunction,apply,Long Parameter List,The method has 6 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,QuinConsumer,accept,Long Parameter List,The method has 5 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,SexConsumer,accept,Long Parameter List,The method has 6 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalQuinConsumer,accept,Long Parameter List,The method has 5 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalSexConsumer,accept,Long Parameter List,The method has 6 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalQuinFunction,apply,Long Parameter List,The method has 5 parameters. ,4
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalFunctionTest,wrap_in_custom_container,Long Statement,The length of the statement "Function<Do`Container<String>> f=exceptional(Example::methodThatThrowsCheckedException).wrapReturn(Container::of).wrapException(Container::empty);" is 146.,53
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalFunctionTest,wrapping_in_results,Long Statement,The length of the statement "List<String> result=asList("foo"`"bar"`"baz"`"UPR"`"boooo").stream().map(exceptional(Example::duplicatesShortStrings).resultOut()).map(exceptional(Example::uppercasesStrings).resultInOut()).filter(Result::success).map(Result::unwrap).collect(toList());" is 252.,60
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalFunctionTest,flatmapping_with_stream,Long Statement,The length of the statement "List<String> result=asList("foo"`"bar"`"baz"`"UPR"`"boooo").stream().flatMap(exceptional(Example::duplicatesShortStrings).stream()).flatMap(exceptional(Example::uppercasesStrings).stream()).collect(toList());" is 208.,74
benjiman_expressions,uk.co.benjiweber.expressions.functions,ExceptionalFunctionTest,logging_discarded,Long Statement,The length of the statement "List<String> result=asList("foo"`"bar"`"baz"`"UPR"`"boooo").stream().flatMap(exceptional(Example::duplicatesShortStrings).wrapReturn(Stream::of).peek(System.out::println).orElse(Stream::empty)).flatMap(exceptional(Example::uppercasesStrings).wrapReturn(Stream::of).peek(System.out::println).orElse(Stream::empty)).collect(toList());" is 332.,86
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,Result,wrapConsumer,Empty catch clause,The method has an empty catch block.,97
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,ExceptionsTest,streams_and_exceptions,Long Statement,The length of the statement "List<String> result=asList("foo"`"bar"`"baz"`"boooo").stream().map(Result.wrapReturn(Example::duplicatesShortStrings)).map(Result.wrap(s -> s.toUpperCase())).filter(Result::success).map(Result::unwrap).collect(toList());" is 220.,103
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,ExceptionsTest,streams_and_exceptions_exceptions_mid_stream,Long Statement,The length of the statement "List<String> result=asList("foo"`"bar"`"baz"`"UPR"`"boooo").stream().map(Result.wrapReturn(Example::duplicatesShortStrings)).map(Result.wrapExceptional(Example::uppercasesStrings)).filter(Result::success).map(Result::unwrap).collect(toList());" is 243.,117
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,ExceptionsTest,streams_and_exceptions_exceptions_map_failure_cases,Long Statement,The length of the statement "List<String> result=asList("foo"`"bar"`"baz"`"UPR"`"boooo").stream().map(Result.wrapReturn(Example::duplicatesShortStrings)).map(Result.wrapExceptional(Example::uppercasesStrings)).map(Result.onSuccess(Function.<String>identity()).on(InputTooLongException.class`s -> "OhNoes").mapper()).filter(Result::success).map(Result::unwrap).collect(toList());" is 349.,131
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,ExceptionsTest,streams_and_exceptions_exceptions_throw_unfiltered_failures,Long Statement,The length of the statement "asList("foo"`"bar"`"baz"`"UPR"`"boooo").stream().map(Result.wrapReturn(Example::duplicatesShortStrings)).map(Result.wrapExceptional(Example::uppercasesStrings)).map(Result::unwrap).collect(toList());" is 199.,146
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,ExceptionsTest,completable_future_supplyaync_exceptional,Long Statement,The length of the statement "CompletableFuture.supplyAsync(Result.wrapReturn(Example::throwingSupplier)).thenApply(Result.wrap(String::toUpperCase)).thenAccept(Result.wrapConsumer(System.out::println));" is 173.,160
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,ExceptionsTest,completable_future_supplyaync_exceptional,Long Statement,The length of the statement "CompletableFuture.supplyAsync(Result.wrapReturn(Example::notThrowingSupplier)).thenApply(Result.wrap(String::toUpperCase)).thenAccept(Result.wrapConsumer(System.out::println));" is 176.,160
benjiman_expressions,uk.co.benjiweber.expressions.exceptions,Example,duplicatesShortStrings,Magic Number,The method contains a magic number: 3,43
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,match,Long Method,The method has 206 lines of code.,22
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,match,Long Statement,The length of the statement "public <A`B`C>TriMatchConstructorBuilder<T`A`B`C> when( TriFunction<A`B`C`T> constructor` MatchesAny a` MatchesAny b` MatchesAny c){" is 132.,22
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,match,Magic Number,The method contains a magic number: 2,22
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,match,Magic Number,The method contains a magic number: 2,22
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,when,Magic Number,The method contains a magic number: 2,86
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,then,Magic Number,The method contains a magic number: 2,89
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,when,Magic Number,The method contains a magic number: 2,154
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,then,Magic Number,The method contains a magic number: 2,156
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,missingProps,Long Identifier,The length of the identifier missingPropertiesFromNestedCaseProperties is 41.,243
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,missingProps,Long Statement,The length of the statement "Stream<Object> missingPropertiesFromNestedCaseProperties=toMatch.props().stream().filter(prop -> prop.apply((T)toMatch) instanceof Case).flatMap(prop -> missingProps((Case<Object>)prop.apply((T)value)`(Case<Object>)prop.apply((T)toMatch)).stream());" is 249.,243
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,Case,missingProps,Long Statement,The length of the statement "Stream<Object> missingDirectProperties=toMatch.props().stream().filter(prop -> prop.apply((T)toMatch) == null).map(prop -> prop.apply((T)value));" is 145.,243
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,ShapeExample,main,Magic Number,The method contains a magic number: 5,34
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,ShapeExample,main,Magic Number,The method contains a magic number: 4,34
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,ShapeExample,description,Long Statement,The length of the statement "return shape.match().when(Circle.class`circle -> "circle" + circle.radius()).when(Square.class`square -> "square" + square.width()).when(Rectangle.class`rectangle -> "rectangle" + rectangle.width() + rectangle.height());" is 220.,38
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,MatchExample,main,Magic Number,The method contains a magic number: 18,22
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,MatchExample,description,Long Statement,The length of the statement "return person.match().when(Person::person`"Bob"`_`_).then((lastname`age) -> lastname).when(Person::person`_`_`18).then((firstname`lastname) -> lastname)._("unknown");" is 166.,26
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,MatchExample,description,Magic Number,The method contains a magic number: 18,26
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references,Long Statement,The length of the statement "String result=a.match().when(a(Customer::customer).matching("Benji"`"Weber"`an(Address::address).matching(_`"AB123CD"))).then(firstLine -> firstLine.roadName()).otherwise("unknown");" is 182.,19
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references,Magic Number,The method contains a magic number: 123,19
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_no_match,Long Statement,The length of the statement "String result=a.match().when(a(Customer::customer).matching("Someone"`"Else"`an(Address::address).matching(_`"AB123CD"))).then(firstLine -> firstLine.roadName()).otherwise("unknown");" is 183.,34
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_no_match,Magic Number,The method contains a magic number: 123,34
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_deeper,Long Statement,The length of the statement "String result=a.match().when(a(Customer::customer).matching("Benji"`"Weber"`an(Address::address).matching(a(FirstLine::firstLine).matching(_`_)`_))).then((houseNo`road`postCode) -> houseNo + " " + road).otherwise("unknown");" is 224.,49
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_deeper,Magic Number,The method contains a magic number: 123,49
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_optional,Long Statement,The length of the statement "Optional<String> result=a.match().when(a(Customer::customer).matching("Benji"`"Weber"`an(Address::address).matching(a(FirstLine::firstLine).matching(_`_)`_))).then((houseNo`road`postCode) -> houseNo + " " + road).toOptional();" is 226.,67
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_optional,Magic Number,The method contains a magic number: 123,67
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_optional_unknown,Long Statement,The length of the statement "Optional<String> result=a.match().when(a(Customer::customer).matching("Someone"`"Weber"`an(Address::address).matching(a(FirstLine::firstLine).matching(_`_)`_))).then((houseNo`road`postCode) -> houseNo + " " + road).toOptional();" is 228.,85
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,NestedDecompositionTest,nested_decomposition_using_constructor_references_optional_unknown,Magic Number,The method contains a magic number: 123,85
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionTest,decomposition_variable_items_example,Magic Number,The method contains a magic number: 18,17
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionTest,decomposition_variable_items_example,Magic Number,The method contains a magic number: 28,17
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionTest,decomposition_variable_items_example,Magic Number,The method contains a magic number: 90,17
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionTest,matchExample,Long Statement,The length of the statement "return person.match().when(person("Bob"`_`_)`(surname`age) -> "first_" + surname + "_"+ age).when(person("Bill"`"Smith"`_)`age -> "second_" + age)._("unknown");" is 160.,28
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseListTest,list_size_example,Magic Number,The method contains a magic number: 3,20
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseListTest,longer,Long Statement,The length of the statement "return list.match().when(erasesTo(Tail.class)`n -> list(n.head() + n.head()`longer(n.tail()))).when(erasesTo(EmptyList.class)`n -> empty());" is 140.,41
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Long Statement,The length of the statement "assertEquals("foo"`person("Bob"`"sfasdf"`18).match().when(Person::person`"Bob"`"sfasdf"`_).then(a -> "foo")._("unknown"));" is 122.,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Long Statement,The length of the statement "assertEquals("foo"`person("Bob"`"asdf"`18).match().when(Person::person`_`"aaaaaaa"`18).then(age -> "aaaaaaa").when(Person::person`_`"asdf"`18).then(a -> "foo")._("unknown"));" is 174.,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Long Statement,The length of the statement "assertEquals("unknown"`person("Bob"`"fdsa"`18).match().when(Person::person`_`"aaaaaaa"`18).then(age -> "aaaaaaa").when(Person::person`_`"asdf"`18).then(a -> "foo")._("unknown"));" is 178.,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Long Statement,The length of the statement "assertEquals("foo"`person("Bob"`"asdf"`18).match().when(Person::person`_`"aaaaaaa"`18).then(age -> "aaaaaaa").when(Person::person`"Bob"`_`18).then(a -> "foo")._("unknown"));" is 173.,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Long Statement,The length of the statement "assertEquals("unknown"`person("Bob"`"fdsa"`18).match().when(Person::person`_`"aaaaaaa"`18).then(age -> "aaaaaaa").when(Person::person`"Bill"`_`18).then(a -> "foo")._("unknown"));" is 178.,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Long Statement,The length of the statement "assertEquals("foo"`person("Bob"`"asdf"`18).match().when(Person::person`_`"aaaaaaa"`18).then(age -> "aaaaaaa").when(Person::person`"Bob"`"asdf"`_).then(a -> "foo")._("unknown"));" is 177.,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Long Statement,The length of the statement "assertEquals("unknown"`person("Bob"`"fdsa"`18).match().when(Person::person`_`"aaaaaaa"`18).then(age -> "aaaaaaa").when(Person::person`"Bob"`"asdf"`_).then(a -> "foo")._("unknown"));" is 181.,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,one_missings,Magic Number,The method contains a magic number: 18,13
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,all_missing,Long Statement,The length of the statement "assertEquals("foo"`person("Bob"`"asdf"`18).match().when(Person::person`_`_`_).then((firstname`lastname`age) -> "foo")._(""));" is 125.,35
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,all_missing,Magic Number,The method contains a magic number: 18,35
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,none_missing,Magic Number,The method contains a magic number: 18,40
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,UnreadableDecompositionTest,none_missing,Magic Number,The method contains a magic number: 18,40
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionConstructorReferenceTest,decomposition_variable_items_example,Magic Number,The method contains a magic number: 18,11
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionConstructorReferenceTest,decomposition_variable_items_example,Magic Number,The method contains a magic number: 28,11
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionConstructorReferenceTest,decomposition_variable_items_example,Magic Number,The method contains a magic number: 90,11
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,DecompositionConstructorReferenceTest,matchExample,Long Statement,The length of the statement "return person.match().when(Person::person`"Bob"`_`_).then((surname`age) -> "first_" + surname + "_"+ age).when(Person::person`"Bill"`"Smith"`_).then(age -> "second_" + age)._("unknown");" is 186.,22
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTest,case_example,Magic Number,The method contains a magic number: 4f,10
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTest,case_example,Magic Number,The method contains a magic number: 6f,10
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTest,case_example,Magic Number,The method contains a magic number: 2f,10
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTest,description,Long Statement,The length of the statement "return shape.match().when(Rectangle.class`rect -> "Rectangle " + rect.width() + "x"+ rect.length()).when(Circle.class`circle -> "Circle with radius " + circle.radius()).when(Cube.class`cube -> "Cube with size " + cube.size());" is 226.,21
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseConstructorTest,constructor_matching_example,Long Statement,The length of the statement "String someone=so.match().when(person("Ann"`"Other")`p -> "another").when(person("Some"`"One")`p -> "someone")._("Unknown Person");" is 131.,20
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseConstructorTest,constructor_matching_any,Long Statement,The length of the statement "String someone=so.match().when(person("Some"`_)`p -> "someone").when(person(_`"Other")`p -> "another")._("Unknown Person");" is 123.,32
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseConstructorTest,constructor_matching_any,Long Statement,The length of the statement "String another=an.match().when(person("Some"`_)`p -> "someone").when(person(_`"Other")`p -> "another")._("Unknown Person");" is 123.,32
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseParseArgumentsTest,applyArgument,Long Statement,The length of the statement "input.match().when(arg("--help"`_)`arg -> this.printHelp(arg.value())).when(arg("--lang"`_)`arg -> this.setLanguage(arg.value()))._(arg -> printUsageAndExit());" is 160.,33
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTreeTest,counting_nodes_example,Magic Number,The method contains a magic number: 5,12
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTreeTest,counting_nodes_example,Magic Number,The method contains a magic number: 3,12
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTreeTest,counting_nodes_example,Magic Number,The method contains a magic number: 4,12
benjiman_expressions,uk.co.benjiweber.expressions.caseclass,CaseTreeTest,counting_nodes_example,Magic Number,The method contains a magic number: 4,12

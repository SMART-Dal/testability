Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
Appendium_flatpack,net.sf.flatpack.examples.delimiteddynamiccolumnswitherrors,DelimitedWithPZMapErrors,call,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newDelimitedParser(new File(mapping)`new File(data)`'`'`'"'`true);" is 123.,40
Appendium_flatpack,net.sf.flatpack.examples.lowlevelparse,LowLevelParse,call,Magic Number,The method contains a magic number: 10,38
Appendium_flatpack,net.sf.flatpack.examples,Examples,doCSVTestFileCreator,Magic Number,The method contains a magic number: 10,87
Appendium_flatpack,net.sf.flatpack.examples,Examples,doCSVTestFileCreator,Magic Number,The method contains a magic number: 100,87
Appendium_flatpack,net.sf.flatpack.examples,Examples,doCSVLarge,Magic Number,The method contains a magic number: 10,184
Appendium_flatpack,net.sf.flatpack.examples,Examples,doCSVLarge,Magic Number,The method contains a magic number: 2000000,184
Appendium_flatpack,net.sf.flatpack.examples,Examples,doStringBuffer,Magic Number,The method contains a magic number: 100000,227
Appendium_flatpack,net.sf.flatpack.examples,Examples,doStringBuffer,Magic Number,The method contains a magic number: 20,227
Appendium_flatpack,net.sf.flatpack.examples,Examples,doStringBuffer,Magic Number,The method contains a magic number: 1000,227
Appendium_flatpack,net.sf.flatpack.examples,Examples,doTestParsers,Magic Number,The method contains a magic number: 1000,256
Appendium_flatpack,net.sf.flatpack.examples,Examples,doTestParsers,Magic Number,The method contains a magic number: 100,256
Appendium_flatpack,net.sf.flatpack.examples.fixedlengthheaderandtrailer,FixedLengthHeaderAndTrailer,call,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newFixedLengthParser(new FileReader(mapping)`new FileReader(data));" is 124.,33
Appendium_flatpack,net.sf.flatpack.examples.exporttoexcel,DelimitedFileExportToExcel,call,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newDelimitedParser(new FileReader(mapping)`new FileReader(data)`'`'`'"'`true);" is 135.,41
Appendium_flatpack,net.sf.flatpack.examples.delimiteddynamiccolumns,DelimitedWithPZMap,call,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newDelimitedParser(new File(mapping)`new File(data)`'`'`'"'`true);" is 123.,41
Appendium_flatpack,net.sf.flatpack.examples.createsamplecsv,CSVTestFileCreator,main,Magic Number,The method contains a magic number: 2,22
Appendium_flatpack,net.sf.flatpack.examples.createsamplecsv,CSVTestFileCreator,createFile,Magic Number,The method contains a magic number: 100000,46
Appendium_flatpack,net.sf.flatpack.examples.largedataset.delimiteddynamiccolumns,LargeDelimitedWithPZMap,call,Long Statement,The length of the statement "try (FileReader pzmap=new FileReader(mapping);FileReader fileToParse=new FileReader(data);BuffReaderDelimParser pzparse=(BuffReaderDelimParser)BuffReaderParseFactory.getInstance().newDelimitedParser(pzmap`fileToParse`'`'`'"'`true)){" is 232.,31
Appendium_flatpack,net.sf.flatpack.examples.largedataset.largecsvperformancetest,CSVLarge,call,Long Statement,The length of the statement "try (BuffReaderDelimParser pzparse=(BuffReaderDelimParser)BuffReaderParseFactory.getInstance().newDelimitedParser(new FileReader(data)`'`'`'"')){" is 145.,46
Appendium_flatpack,net.sf.flatpack.examples.largedataset.largecsvperformancetest,CSVLarge,call,Magic Number,The method contains a magic number: 2500,46
Appendium_flatpack,net.sf.flatpack.examples.largedataset.largecsvperformancetest,CSVLarge,call,Magic Number,The method contains a magic number: 1000,46
Appendium_flatpack,net.sf.flatpack.examples.largedataset.largecsvperformancetest,CSVLarge,call,Magic Number,The method contains a magic number: 1000,46
Appendium_flatpack,net.sf.flatpack.examples.largedataset.largecsvperformancetest,CSVLarge,readSettings,Complex Conditional,The conditional expression line.trim().length() == 0 || line.startsWith("#") || line.indexOf("=") == -1 is complex.,91
Appendium_flatpack,net.sf.flatpack.examples.largedataset.fixedlengthdynamiccolumns,LargeFixedLengthWithPZMap,call,Long Statement,The length of the statement "try (BuffReaderFixedParser pzparse=(BuffReaderFixedParser)BuffReaderParseFactory.getInstance().newFixedLengthParser(new FileReader(mapping)`new FileReader(data))){" is 163.,30
Appendium_flatpack,net.sf.flatpack.examples.numericsanddates,NumericsAndDates,call,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newDelimitedParser(new FileReader(mapping)`new FileReader(data)`'`'`'\"'`true);" is 136.,31
Appendium_flatpack,net.sf.flatpack.examples.csvperformancetest,CSVPerformanceTest,call,Complex Method,Cyclomatic complexity of the method is 11,50
Appendium_flatpack,net.sf.flatpack.examples.csvperformancetest,CSVPerformanceTest,call,Magic Number,The method contains a magic number: 1000,50
Appendium_flatpack,net.sf.flatpack.examples.csvperformancetest,CSVPerformanceTest,call,Magic Number,The method contains a magic number: 1000.0,50
Appendium_flatpack,net.sf.flatpack.examples.csvperformancetest,CSVPerformanceTest,call,Magic Number,The method contains a magic number: 2000,50
Appendium_flatpack,net.sf.flatpack.examples.csvperformancetest,CSVPerformanceTest,call,Magic Number,The method contains a magic number: 1000,50
Appendium_flatpack,net.sf.flatpack.examples.csvperformancetest,CSVPerformanceTest,call,Magic Number,The method contains a magic number: 1000.0,50
Appendium_flatpack,net.sf.flatpack.examples.csvperformancetest,CSVPerformanceTest,readSettings,Complex Conditional,The conditional expression line.trim().length() == 0 || line.startsWith("#") || line.indexOf("=") == -1 is complex.,118
Appendium_flatpack,net.sf.flatpack.examples.delimitedcolumnnamesinfile,DelimitedColumnNamesInFile,main,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newDelimitedParser(new File("PEOPLE-CommaDelimitedWithQualifier.txt")`'`'`'"');" is 136.,24
Appendium_flatpack,net.sf.flatpack.examples.fixedlengthdynamiccolumns,FixedLengthWithPZMap,call,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newFixedLengthParser(new FileReader(mapping)`new FileReader(data));" is 124.,31
Appendium_flatpack,net.sf.flatpack,ParserFactory,newDelimitedParser,Long Parameter List,The method has 6 parameters. ,164
Appendium_flatpack,net.sf.flatpack,ParserFactory,newDelimitedParser,Long Parameter List,The method has 6 parameters. ,198
Appendium_flatpack,net.sf.flatpack,ParserFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,228
Appendium_flatpack,net.sf.flatpack,ParserFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,254
Appendium_flatpack,net.sf.flatpack,ParserFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,277
Appendium_flatpack,net.sf.flatpack,StreamingDataSet,stream,Long Statement,The length of the statement "return StreamSupport.stream(Spliterators.spliteratorUnknownSize(spliterator()`Spliterator.ORDERED | Spliterator.NONNULL | Spliterator.IMMUTABLE)`false);" is 152.,19
Appendium_flatpack,net.sf.flatpack,StreamingDataSet,parallelStream,Long Statement,The length of the statement "return StreamSupport.stream(Spliterators.spliteratorUnknownSize(spliterator()`Spliterator.ORDERED | Spliterator.NONNULL | Spliterator.IMMUTABLE)`true);" is 151.,28
Appendium_flatpack,net.sf.flatpack,RowRecord,RowRecord,Long Parameter List,The method has 8 parameters. ,36
Appendium_flatpack,net.sf.flatpack,Parser,setAddSuffixToDuplicateColumnNames,Long Identifier,The length of the parameter addSuffixToDuplicateColumnNames is 31.,85
Appendium_flatpack,net.sf.flatpack,DelimiterParser,DelimiterParser,Long Parameter List,The method has 5 parameters. ,58
Appendium_flatpack,net.sf.flatpack,DelimiterParser,DelimiterParser,Long Parameter List,The method has 5 parameters. ,64
Appendium_flatpack,net.sf.flatpack,DelimiterParser,DelimiterParser,Long Parameter List,The method has 5 parameters. ,85
Appendium_flatpack,net.sf.flatpack,AbstractParser,isAddSuffixToDuplicateColumnNames,Long Identifier,The length of the field addSuffixToDuplicateColumnNames is 31.,94
Appendium_flatpack,net.sf.flatpack,AbstractParser,setAddSuffixToDuplicateColumnNames,Long Identifier,The length of the parameter addSuffixToDuplicateColumnNames is 31.,98
Appendium_flatpack,net.sf.flatpack,AbstractParser,setAddSuffixToDuplicateColumnNames,Long Identifier,The length of the field addSuffixToDuplicateColumnNames is 31.,98
Appendium_flatpack,net.sf.flatpack,AbstractParser,addError,Long Parameter List,The method has 5 parameters. ,243
Appendium_flatpack,net.sf.flatpack,AbstractParser,addError,Long Parameter List,The method has 7 parameters. ,266
Appendium_flatpack,net.sf.flatpack,DBDelimiterParser,DBDelimiterParser,Long Parameter List,The method has 6 parameters. ,56
Appendium_flatpack,net.sf.flatpack,DBDelimiterParser,DBDelimiterParser,Long Parameter List,The method has 6 parameters. ,63
Appendium_flatpack,net.sf.flatpack,AbstractFixedLengthParser,doFixedLengthFile,Complex Method,Cyclomatic complexity of the method is 9,82
Appendium_flatpack,net.sf.flatpack,AbstractFixedLengthParser,doFixedLengthFile,Long Statement,The length of the statement "addError(ds`"LINE TOO LONG. LINE IS " + originalLine.length() + " LONG. SHOULD BE "+ recordLength`lineCount`2`isStoreRawDataToDataError() ? originalLine : null);" is 161.,82
Appendium_flatpack,net.sf.flatpack,AbstractFixedLengthParser,doFixedLengthFile,Long Statement,The length of the statement "addError(ds`"LINE TOO SHORT. LINE IS " + line.length() + " LONG. SHOULD BE "+ recordLength`lineCount`2`isStoreRawDataToDataError() ? originalLine : null);" is 154.,82
Appendium_flatpack,net.sf.flatpack,AbstractFixedLengthParser,doFixedLengthFile,Long Statement,The length of the statement "row.addColumn(FixedWidthParserUtils.splitFixedText(cmds`line`isPreserveLeadingWhitespace()`isPreserveTrailingWhitespace()));" is 124.,82
Appendium_flatpack,net.sf.flatpack,AbstractFixedLengthParser,doFixedLengthFile,Magic Number,The method contains a magic number: 2,82
Appendium_flatpack,net.sf.flatpack,AbstractFixedLengthParser,doFixedLengthFile,Magic Number,The method contains a magic number: 2,82
Appendium_flatpack,net.sf.flatpack,DataError,DataError,Long Parameter List,The method has 6 parameters. ,77
Appendium_flatpack,net.sf.flatpack,DataError,toString,Long Statement,The length of the statement "buf.append("Line:").append(lineNo).append(" Level:").append(errorLevel).append(" Desc:").append(errorDesc).append(System.getProperty("line.separator"));" is 152.,125
Appendium_flatpack,net.sf.flatpack,DataError,toString,Long Statement,The length of the statement "buf.append("LastColName:").append(lastColumnName).append(" Value:").append(lastColumnValue).append(System.lineSeparator());" is 123.,125
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,AbstractDelimiterParser,Long Parameter List,The method has 5 parameters. ,63
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,doDelimitedFile,Complex Method,Cyclomatic complexity of the method is 13,126
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,doDelimitedFile,Long Statement,The length of the statement "List<String> columns=ParserUtils.splitLine(line`getDelimiter()`getQualifier()`estimatedColCount`isPreserveLeadingWhitespace()`isPreserveTrailingWhitespace());" is 158.,126
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,doDelimitedFile,Long Statement,The length of the statement "addError(ds`"Flatpack truncated line to correct number of columns"`lineCount`1`isStoreRawDataToDataError() ? line : null);" is 122.,126
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,doDelimitedFile,Long Statement,The length of the statement "addError(ds`"Too many columns expected: " + columnCount + " Flatpack got: "+ columns.size()`lineCount`2`isStoreRawDataToDataError() ? line : null);" is 147.,126
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,doDelimitedFile,Long Statement,The length of the statement "addError(ds`"Too few columns expected: " + columnCount + " only got: "+ columns.size()`lineCount`2`isStoreRawDataToDataError() ? line : null);" is 142.,126
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,doDelimitedFile,Magic Number,The method contains a magic number: 2,126
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,doDelimitedFile,Magic Number,The method contains a magic number: 2,126
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,oddNumberOfQualifier,Magic Number,The method contains a magic number: 2,220
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,isMultiline,Complex Conditional,The conditional expression aMultiline && position == 0 && aСhrArray[0] == aQualifier && aСhrArray.length > 1 && aСhrArray[1] == aQualifier is complex.,287
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,isMultiline,Complex Conditional,The conditional expression aMultiline && position == 0 && aСhrArray[0] == aQualifier && aСhrArray.length > 1 && aСhrArray[1] != aQualifier is complex.,287
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,isMultiline,Complex Method,Cyclomatic complexity of the method is 14,287
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,isMultiline,Long Statement,The length of the statement "else if (aMultiline && position == 0 && aСhrArray[0] == aQualifier && aСhrArray.length > 1 && aСhrArray[1] != aQualifier) {" is 123.,287
Appendium_flatpack,net.sf.flatpack,AbstractDelimiterParser,isMultiline,Magic Number,The method contains a magic number: 2,287
Appendium_flatpack,net.sf.flatpack,DefaultDataSet,next,Long Statement,The length of the statement "currentRecord=new RowRecord(rows.get(pointer)`metaData`parser.isColumnNamesCaseSensitive()`pzConvertProps`strictNumericParse`upperCase`lowerCase`parser.isNullEmptyStrings());" is 174.,331
Appendium_flatpack,net.sf.flatpack,DefaultDataSet,previous,Long Statement,The length of the statement "currentRecord=new RowRecord(rows.get(pointer)`metaData`parser.isColumnNamesCaseSensitive()`pzConvertProps`strictNumericParse`upperCase`lowerCase`parser.isNullEmptyStrings());" is 174.,368
Appendium_flatpack,net.sf.flatpack,DefaultDataSet,absolute,Long Statement,The length of the statement "currentRecord=new RowRecord(rows.get(pointer)`metaData`parser.isColumnNamesCaseSensitive()`pzConvertProps`strictNumericParse`upperCase`lowerCase`parser.isNullEmptyStrings());" is 174.,414
Appendium_flatpack,net.sf.flatpack,DefaultParserFactory,newDelimitedParser,Long Parameter List,The method has 6 parameters. ,111
Appendium_flatpack,net.sf.flatpack,DefaultParserFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,123
Appendium_flatpack,net.sf.flatpack,DefaultParserFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,135
Appendium_flatpack,net.sf.flatpack,DefaultParserFactory,newDelimitedParser,Long Parameter List,The method has 6 parameters. ,181
Appendium_flatpack,net.sf.flatpack,DefaultParserFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,192
Appendium_flatpack,net.sf.flatpack,DataSetFunctionalityTest,testContains,Long Statement,The length of the statement "final Parser p=DefaultParserFactory.getInstance().newDelimitedParser(new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER);" is 122.,22
Appendium_flatpack,net.sf.flatpack,DataSetFunctionalityTest,testContainsForStream,Long Statement,The length of the statement "final Parser p=DefaultParserFactory.getInstance().newDelimitedParser(new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER);" is 122.,33
Appendium_flatpack,net.sf.flatpack,DataSetFunctionalityTest,testDoNotPreserveSpace,Long Statement,The length of the statement "final Parser p1=DefaultParserFactory.getInstance().newDelimitedParser(new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER);" is 123.,43
Appendium_flatpack,net.sf.flatpack,DataSetFunctionalityTest,testDoPreserveLeadingSpace,Long Statement,The length of the statement "final Parser p=DefaultParserFactory.getInstance().newDelimitedParser(new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER);" is 122.,54
Appendium_flatpack,net.sf.flatpack,DataSetFunctionalityTest,testDoPreserveTrailingSpace,Long Statement,The length of the statement "final Parser p1=DefaultParserFactory.getInstance().newDelimitedParser(new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER);" is 123.,64
Appendium_flatpack,net.sf.flatpack,DataSetFunctionalityTest,testDoPreserveBothSpace,Long Statement,The length of the statement "final Parser p1=DefaultParserFactory.getInstance().newDelimitedParser(new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER);" is 123.,76
Appendium_flatpack,net.sf.flatpack,DataSetFunctionalityTest,testContainsWithStream,Magic Number,The method contains a magic number: 2,179
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Long Statement,The length of the statement "final Parser p=DefaultParserFactory.getInstance().newDelimitedParser(new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER);" is 122.,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Long Statement,The length of the statement "assertEquals("rec2 dateCol"`new Date(114`Calendar.JUNE`11)`record2.get().getDate("dateCol"`() -> new Date(114`Calendar.JUNE`11)));" is 130.,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Long Statement,The length of the statement "assertEquals("rec2 bigDecimalCol"`new BigDecimal("555")`record2.get().getBigDecimal("bigDecimalCol"`() -> new BigDecimal("555")));" is 130.,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 2.2,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 114,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 23,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 6,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 3.76,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 3.76d,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 114,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 11,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 114,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 11,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 8,20
Appendium_flatpack,net.sf.flatpack,RecordTest,testContains,Magic Number,The method contains a magic number: 8,20
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,splitLine,Complex Conditional,The conditional expression (currentChar != delimiter || insideQualifier) && currentChar != qualifier is complex.,74
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,splitLine,Complex Conditional,The conditional expression trimmed == null || trimmed.length() == 1 && (trimmed.charAt(0) == delimiter || trimmed.charAt(0) == qualifier) is complex.,74
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,splitLine,Complex Conditional,The conditional expression previousChar == delimiter || previousChar == 0 || previousChar == ' ' is complex.,74
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,splitLine,Complex Conditional,The conditional expression insideQualifier && currentChar == qualifier && i + 1 < size && trimmedLine.charAt(i + 1) == qualifier is complex.,74
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,splitLine,Complex Method,Cyclomatic complexity of the method is 31,74
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,splitLine,Long Method,The method has 137 lines of code.,74
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,splitLine,Long Parameter List,The method has 6 parameters. ,74
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,replace,Complex Conditional,The conditional expression text.length() == 0 || isEmpty(searchString) || replacement == null || max == 0 is complex.,262
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,replace,Magic Number,The method contains a magic number: 16,262
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,replace,Magic Number,The method contains a magic number: 64,262
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,replace,Magic Number,The method contains a magic number: 64,262
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,getPZMetaDataFromFile,Long Identifier,The length of the parameter addSuffixToDuplicateColumnNames is 31.,392
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,getPZMetaDataFromFile,Long Parameter List,The method has 5 parameters. ,392
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,getPZMetaDataFromFile,Magic Number,The method contains a magic number: 2,392
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,isMultiLine,Complex Method,Cyclomatic complexity of the method is 22,433
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,getColumnMetaData,Complex Conditional,The conditional expression key == null || key.equals(FPConstants.DETAIL_ID) || key.equals(FPConstants.COL_IDX) is complex.,602
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,getColumnIndex,Long Statement,The length of the statement "throw new NoSuchElementException("Column [" + column + "] does not exist` check case/spelling."+ (key != null ? " key:[" + key + "]" : ""));" is 140.,610
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,stripNonLongChars,Complex Conditional,The conditional expression c >= '0' && c <= '9' || c == '-' is complex.,689
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,stripNonLongChars,Complex Conditional,The conditional expression sLen == 0 || sLen == 1 && "-".equals(s) is complex.,689
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,stripNonDoubleChars,Complex Conditional,The conditional expression c >= '0' && c <= '9' || c == '-' || c == '.' is complex.,724
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,stripNonDoubleChars,Complex Conditional,The conditional expression sLen == 0 || sLen == 1 && (".".equals(s) || "-".equals(s)) is complex.,724
Appendium_flatpack,net.sf.flatpack.util,ParserUtils,buildMDFromSQLTable,Long Statement,The length of the statement "sqlSb.append("SELECT * FROM ").append(dfTbl).append(" INNER JOIN ").append(dsTbl).append(" ON ").append(dfTbl).append(".DATAFILE_NO = ").append(dsTbl).append(".DATAFILE_NO " + "WHERE DATAFILE_DESC = ? ORDER BY DATASTRUCTURE_COL_ORDER");" is 236.,809
Appendium_flatpack,net.sf.flatpack.ordering,OrderBy,compareCol,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6db1b0c,116
Appendium_flatpack,net.sf.flatpack.ordering,OrderBy,getBadDateDefault,Magic Number,The method contains a magic number: 1900,160
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderParseFactory,newDelimitedParser,Long Parameter List,The method has 6 parameters. ,111
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderParseFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,123
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderParseFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,135
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderParseFactory,newDelimitedParser,Long Parameter List,The method has 6 parameters. ,163
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderParseFactory,newDelimitedParser,Long Parameter List,The method has 5 parameters. ,177
Appendium_flatpack,net.sf.flatpack.brparse,DBBuffReaderDelimParser,DBBuffReaderDelimParser,Long Parameter List,The method has 6 parameters. ,22
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Complex Method,Cyclomatic complexity of the method is 9,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Long Statement,The length of the statement "row.addColumn(FixedWidthParserUtils.splitFixedText(cmds`line.substring(0`recordLength)`isPreserveLeadingWhitespace()`isPreserveTrailingWhitespace()));" is 150.,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Long Statement,The length of the statement "addError(ds`"LINE TOO LONG. LINE IS " + line.length() + " LONG. SHOULD BE "+ recordLength`lineCount`2`isStoreRawDataToDataError() ? line : null);" is 145.,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Long Statement,The length of the statement "row.addColumn(FixedWidthParserUtils.splitFixedText(cmds`line + ParserUtils.padding(recordLength - line.length()`' ')`isPreserveLeadingWhitespace()`isPreserveTrailingWhitespace()));" is 180.,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Long Statement,The length of the statement "addError(ds`"LINE TOO SHORT. LINE IS " + line.length() + " LONG. SHOULD BE "+ recordLength`lineCount`2`isStoreRawDataToDataError() ? line : null);" is 146.,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Long Statement,The length of the statement "row.addColumn(FixedWidthParserUtils.splitFixedText(cmds`line`isPreserveLeadingWhitespace()`isPreserveTrailingWhitespace()));" is 124.,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Magic Number,The method contains a magic number: 2,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderFixedParser,buildRow,Magic Number,The method contains a magic number: 2,119
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,BuffReaderDelimParser,Long Parameter List,The method has 5 parameters. ,61
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,BuffReaderDelimParser,Long Parameter List,The method has 5 parameters. ,66
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,BuffReaderDelimParser,Long Parameter List,The method has 5 parameters. ,79
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,buildRow,Long Statement,The length of the statement "List<String> columns=ParserUtils.splitLine(line`getDelimiter()`getQualifier()`FPConstants.SPLITLINE_SIZE_INIT`isPreserveLeadingWhitespace()`isPreserveTrailingWhitespace());" is 172.,106
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,shouldSkipFirstRecord,Long Statement,The length of the statement "setPzMetaData(ParserUtils.getPZMetaDataFromFile(line`getDelimiter()`getQualifier()`this`isAddSuffixToDuplicateColumnNames()));" is 126.,152
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,handleTooFewColumns,Long Parameter List,The method has 5 parameters. ,194
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,handleTooFewColumns,Long Statement,The length of the statement "String lastColumnName=colTitles != null && !colTitles.isEmpty() && !columns.isEmpty() ? colTitles.get(columns.size() - 1).getColName() : null;" is 142.,194
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,handleTooFewColumns,Magic Number,The method contains a magic number: 2,194
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,handleTooManyColumns,Long Statement,The length of the statement "addError(ds`"Too many columns expected size: " + columnCount + " Actual size: "+ columns.size()`getLineCount()`2`isStoreRawDataToDataError() ? line : null);" is 156.,228
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParser,handleTooManyColumns,Magic Number,The method contains a magic number: 2,228
Appendium_flatpack,net.sf.flatpack.brparse,BuffReaderDelimParserTest,parseRawData,Long Statement,The length of the statement "final Parser parser=BuffReaderParseFactory.getInstance().newDelimitedParser(pzReader`lineReader`DELIMTER`QUALIFIER`false);" is 122.,26
Appendium_flatpack,net.sf.flatpack.xml,MetaData,getColumnIndex,Complex Conditional,The conditional expression key != null && !key.equals(FPConstants.DETAIL_ID) && !key.equals(FPConstants.COL_IDX) is complex.,65
Appendium_flatpack,net.sf.flatpack.xml,MapParser,parse,Long Statement,The length of the statement "mdIndex.put(FPConstants.COL_IDX + "_" + getAttributeValue(attributes`"id")`ParserUtils.buidColumnIndexMap(columns`pzparser));" is 125.,81
Appendium_flatpack,net.sf.flatpack.xml,MapParser,parseColumnElements,Long Statement,The length of the statement "throw new IllegalArgumentException("LENGTH ATTRIBUTE ON COLUMN ELEMENT MUST BE AN INTEGER. GOT: " + attributes.getNamedItem(LENGTH).getTextContent()`ex);" is 153.,156
Appendium_flatpack,net.sf.flatpack.xml,MapParser,setShowDebug,Long Statement,The length of the statement "LOGGER.debug("Start Position: {} End Postion: {} Element Number: {} Indicator{}"`xmlrecEle.getStartPosition()`xmlrecEle.getEndPositition()`xmlrecEle.getElementNumber()`xmlrecEle.getIndicator());" is 194.,219
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testInvalidMap,Long Statement,The length of the statement "final Map<String`Object> parse=MapParser.parse(new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream("BrokenMapping.pzmap.xml"))`null);" is 156.,60
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testInvalidMap,Long Statement,The length of the statement "assertThat(io.getMessage()).contains("The element type \"COLUMN\" must be terminated by the matching end-tag \"</COLUMN>\"");" is 125.,60
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseFixedMap,Magic Number,The method contains a magic number: 6,70
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseFixedMap,Magic Number,The method contains a magic number: 6,70
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseFixedMap,Magic Number,The method contains a magic number: 35,70
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseFixedMap,Magic Number,The method contains a magic number: 100,70
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseFixedMap,Magic Number,The method contains a magic number: 2,70
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseFixedMap,Magic Number,The method contains a magic number: 5,70
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Long Statement,The length of the statement "final Map<String`Object> parse=MapParser.parse(new InputStreamReader(getClass().getClassLoader().getResourceAsStream("test-complex-fixed.xml"))`null);" is 150.,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Long Statement,The length of the statement "assertThat(details.getColumns()).extracting("colName").containsOnly("RecordType"`"StatusIndicator"`"ExchangeCode"`"ExchangeName");" is 130.,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Magic Number,The method contains a magic number: 8,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Magic Number,The method contains a magic number: 2,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Magic Number,The method contains a magic number: 4,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Magic Number,The method contains a magic number: 2,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Magic Number,The method contains a magic number: 8,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseComplexFixedMap,Magic Number,The method contains a magic number: 259,80
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParse,Magic Number,The method contains a magic number: 2,96
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParse,Magic Number,The method contains a magic number: 6,96
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseCaseSensitive,Magic Number,The method contains a magic number: 2,116
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseCaseSensitive,Magic Number,The method contains a magic number: 6,116
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseIgnoreCase,Magic Number,The method contains a magic number: 2,130
Appendium_flatpack,net.sf.flatpack.xml,MapParserTest,testParseIgnoreCase,Magic Number,The method contains a magic number: 6,130
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriter,DelimiterWriter,Long Parameter List,The method has 5 parameters. ,25
Appendium_flatpack,net.sf.flatpack.writer,FixedLengthWriter,addRecordEntry,Long Statement,The length of the statement "throw new IllegalArgumentException(valueString + " exceeds the maximum length for column " + columnName+ "("+ metaData.getColLength()+ ")");" is 140.,27
Appendium_flatpack,net.sf.flatpack.writer,DoubleQualifierWriteReadTest,testDelimiter,Magic Number,The method contains a magic number: 2,25
Appendium_flatpack,net.sf.flatpack.writer,FixedLengthWriterTest,testWriteFixedLength,Long Statement,The length of the statement "writer.addRecordEntry("LASTNAME"`"DOE").addRecordEntry("ADDRESS"`"1234 CIRCLE CT").addRecordEntry("STATE"`"OH").addRecordEntry("ZIP"`"44035").addRecordEntry("FIRSTNAME"`"JOHN").addRecordEntry("CITY"`"ELYRIA").addRecordEntry("REVENUE"`BigDecimal.ZERO).nextRecord().flush();" is 272.,18
Appendium_flatpack,net.sf.flatpack.writer,FixedLengthWriterTest,testWriterWithDifferentFillChar,Long Statement,The length of the statement "final String expected=this.normalizeLineEnding("JOHN...............................DOE................................1234 CIRCLE CT......................................................................................ELYRIA..............................................................................................OH44035..........");" is 338.,37
Appendium_flatpack,net.sf.flatpack.writer,FixedLengthWriterTest,testCreateParserWithMalformedMappingFile,Empty catch clause,The method has an empty catch block.,55
Appendium_flatpack,net.sf.flatpack.writer,FixedLengthWriterTest,testWriteStringWiderThanColumnDefinition,Empty catch clause,The method has an empty catch block.,66
Appendium_flatpack,net.sf.flatpack.writer,FixedLengthWriterTest,getMappingDiffRecordTypes,Long Statement,The length of the statement "final String xml="<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> \r\n" + "<!DOCTYPE PZMAP SYSTEM \"pzfilereader.dtd\" > \r\n" + " <PZMAP>\r\n"+ " <RECORD id=\"header\" startPosition=\"1\" endPosition=\"1\" indicator=\"H\">"+ " <COLUMN name=\"recordtype\" length=\"1\" /> \r\n"+ " <COLUMN name=\"headerdata1\" length=\"20\" /> \r\n"+ " </RECORD>"+ " <COLUMN name=\"recordtype\" length=\"1\" /> \r\n"+ " <COLUMN name=\"detaildata1\" length=\"20\" /> \r\n"+ " </PZMAP>";" is 468.,126
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testCloseable,Long Statement,The length of the statement "final DelimiterWriterFactory factory=new DelimiterWriterFactory(';'`'"').addColumnTitle("FIRSTNAME").addColumnTitle("LASTNAME").addColumnTitle("ADDRESS").addColumnTitle("CITY").addColumnTitle("STATE").addColumnTitle("REVENUE").addColumnTitle("ZIP");" is 249.,20
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testCloseable,Long Statement,The length of the statement "writer.addRecordEntry("LASTNAME"`"ANAME").addRecordEntry("FIRSTNAME"`"JOHN").addRecordEntry("ZIP"`"44035").addRecordEntry("CITY"`"ELYRIA").addRecordEntry("STATE"`"OH").addRecordEntry("ADDRESS"`"1234 CIRCLE CT").addRecordEntry("REVENUE"`BigDecimal.ZERO).nextRecord().flush();" is 274.,20
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testWriteCsvNoMappingFile,Long Statement,The length of the statement "final DelimiterWriterFactory factory=new DelimiterWriterFactory(';'`'"').addColumnTitle("FIRSTNAME").addColumnTitle("LASTNAME").addColumnTitle("ADDRESS").addColumnTitle("CITY").addColumnTitle("STATE").addColumnTitle("ZIP").addColumnTitle("REVENUE");" is 249.,47
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testWriteCsvNoMappingFile,Long Statement,The length of the statement "writer.addRecordEntry("LASTNAME"`"ANAME").addRecordEntry("FIRSTNAME"`"JOHN").addRecordEntry("ZIP"`"44035").addRecordEntry("CITY"`"ELYRIA").addRecordEntry("STATE"`"OH").addRecordEntry("ADDRESS"`"1234 CIRCLE CT").addRecordEntry("REVENUE"`BigDecimal.TEN).nextRecord().flush();" is 273.,47
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testWriteCsvNoMappingFile,Long Statement,The length of the statement "final String expected=this.joinLines("FIRSTNAME;LASTNAME;ADDRESS;CITY;STATE;ZIP;REVENUE"`"JOHN;ANAME;1234 CIRCLE CT;ELYRIA;OH;44035;10");" is 137.,47
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testWritingALong,Magic Number,The method contains a magic number: 123_456_789_101_123L,76
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testWriteCsvWithMappingFile,Long Statement,The length of the statement "final String expected=this.joinLines("FIRSTNAME;LASTNAME;ADDRESS;CITY;STATE;ZIP"`"JOHN;ANAME;1234 CIRCLE CT;ELYRIA;OH;44035");" is 126.,95
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testCreateWriterWithoutColumnMapping,Empty catch clause,The method has an empty catch block.,134
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testCreateWriterWithNullOutputStream,Empty catch clause,The method has an empty catch block.,144
Appendium_flatpack,net.sf.flatpack.writer,DelimiterWriterTest,testWriteValueWithQualifier,Long Statement,The length of the statement "final String expected=this.joinLines("col1;col2;col3;col4"`"\"value;with;delimiter\";normal value;\"value \"\"with qualifier\"\"\";\"value \"\"with qualifier\"\" and ;delimiter;\"");" is 182.,176
Appendium_flatpack,net.sf.flatpack.columninfile,DelimitedColumnNamesInFileTest,testRowCount,Magic Number,The method contains a magic number: 6,43
Appendium_flatpack,net.sf.flatpack.columninfile,DelimitedColumnNamesInFileTest,testColumnNameCount,Magic Number,The method contains a magic number: 6,61
Appendium_flatpack,net.sf.flatpack.columninfile,DelimitedColumnNamesInFile,main,Long Statement,The length of the statement "final Parser pzparser=DefaultParserFactory.getInstance().newDelimitedParser(new File("net/sf/flatpack/columninfile/PEOPLE-CommaDelimitedWithQualifier.txt")`'`'`'\"');" is 166.,24
Appendium_flatpack,net.sf.flatpack.columninfile,DelimitedColumnNamesInFile,getDsForTest,Long Statement,The length of the statement "final Parser parser=DefaultParserFactory.getInstance().newDelimitedParser(new File("src/test/java/net/sf/flatpack/columninfile/PEOPLE-CommaDelimitedWithQualifier.txt")`'`'`'\"');" is 178.,60
Appendium_flatpack,net.sf.flatpack.parserutils,FixedWidthParserUtilsTest,testFixedParse,Long Statement,The length of the statement "check(new String[]{"test with some space"`"test"`"test"}`new int[]{300`10`20}`new String[]{"test with some space"`"test"`"test"}`true`false);" is 141.,18
Appendium_flatpack,net.sf.flatpack.parserutils,FixedWidthParserUtilsTest,testFixedParse,Long Statement,The length of the statement "check(textWithLeadingAndTrailing`new int[]{36`7`4}`new String[]{" test with leading and trailing"`" test"`"test"}`true`false);" is 126.,18
Appendium_flatpack,net.sf.flatpack.parserutils,FixedWidthParserUtilsTest,testFixedParse,Long Statement,The length of the statement "check(textWithLeadingAndTrailing`new int[]{36`7`4}`new String[]{"test with leading and trailing "`"test "`"test"}`false`true);" is 126.,18
Appendium_flatpack,net.sf.flatpack.parserutils,FixedWidthParserUtilsTest,check,Long Parameter List,The method has 5 parameters. ,35
Appendium_flatpack,net.sf.flatpack.parserutils,FixedWidthParserUtilsTest,check,Long Statement,The length of the statement "final List<String> splitResult=FixedWidthParserUtils.splitFixedText(columnMetaData`lineToParse.toString()`preserveLeading`preserveTrailing);" is 140.,35
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testNoLineBreaks,Long Statement,The length of the statement "assertEquals("Expected size (d = [" + d + "] q = ["+ (q != 0 ? String.valueOf(q) : "")+ "] txt ["+ txtToParse+ "])"`DELIMITED_DATA_NO_BREAKS.length`splitLineResults.size());" is 173.,36
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testNoLineBreaks,Long Statement,The length of the statement "assertEquals("Data Element Value Does Not Match (d = [" + d + "] q = ["+ q+ "] txt ["+ txtToParse+ "])"`DELIMITED_DATA_NO_BREAKS[j]`(String)splitLineResults.get(j));" is 165.,36
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testNoLineBreaks,Magic Number,The method contains a magic number: 10,36
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineBreaks,Long Statement,The length of the statement "assertEquals("Did Not Get Amount Of Elements Expected (d = " + d + " q = "+ q+ ")"`DELIMITED_DATA_WITH_BREAKS.length`splitLineResults.size());" is 142.,63
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineBreaks,Long Statement,The length of the statement "assertEquals("Data Element Value Does Not Match (d = " + d + " q = "+ q+ ")"`DELIMITED_DATA_WITH_BREAKS[j]`(String)splitLineResults.get(j));" is 140.,63
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineBreaks,Long Statement,The length of the statement "ParserUtils.splitLine("26`\"10726/1996\"`551`\"Extra\"`08/04/2005 00:00:00`0`0``\"The unanimous judgement of the Team is that:\n" + "\n" + "(i) The members have to pay the amount on time. \n"+ "\n"+ "(ii) There would be regular meeting biweekly. \""`'`'`'"'`10`false`false);" is 274.,63
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineBreaks,Magic Number,The method contains a magic number: 10,63
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineBreaks,Magic Number,The method contains a magic number: 10,63
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMalformedData,Magic Number,The method contains a magic number: 10,95
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMalformedData,Magic Number,The method contains a magic number: 2,95
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testSomeExtremeCases,Long Statement,The length of the statement "check("\"test1\"`test2`\"0.00\"`\"another` element here\"`lastone"`'`'`'\"'`new String[]{"test1"`"test2"`"0.00"`"another` element here"`"lastone"});" is 148.,105
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testSomeExtremeCases,Long Statement,The length of the statement "check("\"FRED\"`\"ZNAME\"`\"Text Qualifier \" and seperator` in string\"`\"ELYRIA\"`\"OH\"`\"\""`'`'`'\"'`new String[]{"FRED"`"ZNAME"`"Text Qualifier \" and seperator` in string"`"ELYRIA"`"OH"`""});" is 198.,105
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testSomeExtremeCases,Long Statement,The length of the statement "check("\"3881\"`\"2272\"`\"\"`\"\"We don't have any medical records on file` but claim was precerted under PME 5490-6125-0000. I'm following up with Jeri and Megan regarding the Never Event question. based upon the ICD 9 procedure codes on the sample claim & the diagnosis codes and claim history` appears patient had a laminotomy on 6/4/2010. Based upon the sample claim` appears that there was post-op infection + a laceration of the dura. Based on the EWM screen information from INQ62` the post-op infection diagnosis and staph infection diagnosis were indicated as yes` these conditions were present on admission. This doesn't mean that the patient got the infection during the outpatient surgery on 6/4/2010--it doesn't mean he didn't either.\r\n" + "Based upon the Never event wording in e.Policies` we do not consider a diagnosis of post-op infection or laceration during a procedure a Never event. Therefore` we would not deny charges. For purposes of this policy` Aetna has determined the following events to be Never Events:\r\n" + "*\"`\"1\"`\"2011-06-17\"`\"1\""`'`'`'"'`new String[]{"3881"`"2272"`""`"\"We don't have any medical records on file` but claim was precerted under PME 5490-6125-0000. I'm following up with Jeri and Megan regarding the Never Event question. based upon the ICD 9 procedure codes on the sample claim & the diagnosis codes and claim history` appears patient had a laminotomy on 6/4/2010. Based upon the sample claim` appears that there was post-op infection + a laceration of the dura. Based on the EWM screen information from INQ62` the post-op infection diagnosis and staph infection diagnosis were indicated as yes` these conditions were present on admission. This doesn't mean that the patient got the infection during the outpatient surgery on 6/4/2010--it doesn't mean he didn't either.\r\n" + "Based upon the Never event wording in e.Policies` we do not consider a diagnosis of post-op infection or laceration during a procedure a Never event. Therefore` we would not deny charges. For purposes of this policy` Aetna has determined the following events to be Never Events:\r\n" + "*"`"1"`"2011-06-17"`"1"});" is 2153.,105
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testSomeExtremeCases2,Long Statement,The length of the statement "check("\"test1\"`test2`\"0.00\"`\"another` element here\"`lastone"`'`'`'\''`new String[]{"\"test1\""`"test2"`"\"0.00\""`"\"another"`"element here\""`"lastone"});" is 161.,167
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,check,Long Statement,The length of the statement "assertEquals("Did Not Get Amount Of Elements Expected (d = " + delim + " q = "+ qualifier+ ") txt ["+ txtToParse+ "]"`expected.length`splitLineResults.size());" is 159.,198
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,check,Magic Number,The method contains a magic number: 10,198
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 3,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 2,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 3,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 2,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 3,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 2,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 3,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testMultilineExtreme,Magic Number,The method contains a magic number: 2,209
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineWithQualifiersAsText,Magic Number,The method contains a magic number: 10,239
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineWithQualifiersAsText,Magic Number,The method contains a magic number: 4,239
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineWithQualifiersAsText,Magic Number,The method contains a magic number: 2,239
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsSplitLineTest,testLineWithQualifiersAsText,Magic Number,The method contains a magic number: 3,239
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testEmptyRow,Magic Number,The method contains a magic number: 4,62
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testCsvSplit,Magic Number,The method contains a magic number: 5,89
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyCsvSplit,Magic Number,The method contains a magic number: 5,95
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testCsvSplitWithDelimiterInsideOnLastCol3Col,Long Statement,The length of the statement "testCsvSplit("Simple CSV Split with Delimiter Inside on last 3 Col"`"\"col1\"`\"col2\"`\"col\"\"3\""`"col1"`"col2"`"col\"3");" is 125.,129
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testCsvSplitWithDelimiterInsideOnFirst,Long Statement,The length of the statement "testCsvSplit("Simple CSV Split with Delimiter Inside 1st of 3 col"`"\"col\"\"1\"`\"col2\"`\"col3\""`"col\"1"`"col2"`"col3");" is 124.,133
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testCsvSplitWithDelimiterInside,Long Statement,The length of the statement "testCsvSplit("Simple CSV Split with Delimiter Inside 2nd of 3 Col"`"\"col1\"`\"col\"\"2\"`\"col3\""`"col1"`"col\"2"`"col3");" is 124.,137
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testCsvSplitWithMultiDelimiterInside,Long Statement,The length of the statement "testCsvSplit("Simple CSV Split with Multi Delimiter Inside 2nd of 3 Col"`"\"col1\"`\"col\"\"\"\"2\"`\"col3\""`"col1"`"col\"\"2"`"col3");" is 136.,141
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyQualifierCsvSplitWithDelimiterInsideOnLastColTwoCol,Long Statement,The length of the statement "testFancyCsvSplit("Simple Fancy Qualifier CSV Split with Delimiter Inside on last 2Col"`"|col1|`|col||2|"`"col1"`"col|2");" is 122.,177
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyQualifierCsvSplitWithMultiDelimiterInsideOnLastColTwoCol,Long Statement,The length of the statement "testFancyCsvSplit("Simple Fancy Qualifier CSV Split with Multi Delimiter Inside on last 2Col"`"|col1|`|col||||2|"`"col1"`"col||2");" is 131.,181
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyQualifierCsvSplitWithDelimiterInsideOnLastCol3Col,Long Statement,The length of the statement "testFancyCsvSplit("Simple Fancy Qualifier CSV Split with Delimiter Inside on last 3 Col"`"|col1|`|col2|`|col||3|"`"col1"`"col2"`"col|3");" is 137.,185
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyQualifierCsvSplitWithDelimiterInsideOnFirst,Long Statement,The length of the statement "testFancyCsvSplit("Simple Fancy Qualifier CSV Split with Delimiter Inside 1st of 3 col"`"|col||1|`|col2|`|col3|"`"col|1"`"col2"`"col3");" is 136.,189
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyQualifierCsvSplitWithDelimiterInside,Long Statement,The length of the statement "testFancyCsvSplit("Simple Fancy Qualifier CSV Split with Delimiter Inside 2nd of 3 Col"`"|col1|`|col||2|`|col3|"`"col1"`"col|2"`"col3");" is 136.,193
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyQualifierCsvSplitWithMultiDelimiterInside,Long Statement,The length of the statement "testFancyCsvSplit("Simple Fancy Qualifier CSV Split with Multi Delimiter Inside 2nd of 3 Col"`"|col1|`|col||||2|`|col3|"`"col1"`"col||2"`"col3");" is 145.,197
Appendium_flatpack,net.sf.flatpack.parserutils,ParserUtilsTest,testFancyQualifierCsvSplitWithMultiDelimiterInsideLast,Long Statement,The length of the statement "testFancyCsvSplit("Simple Fancy Qualifier CSV Split with Multi Delimiter Inside 2nd of 3 Col"`"|col1|`|col2|`|col3|||"`"col1"`"col2"`"col3|");" is 142.,202
Appendium_flatpack,net.sf.flatpack.delim.pipe,PipeParserTest,testPipeMultiline,Long Statement,The length of the statement "final String testCsv="\"col1\"|\"col2\"|\"col3\"" + System.lineSeparator() + "\"val"+ System.lineSeparator()+ "1\"|\"val2\"|\"val3\"";" is 134.,28
Appendium_flatpack,net.sf.flatpack.delim.pipe,PipeParserTest,testPipeMultilineAfterDelimiter,Long Statement,The length of the statement "final String testCsv="\"col1\"|\"col2\"|\"col3\"" + System.lineSeparator() + "\"val1\"|\""+ System.lineSeparator()+ "val2\"|\"val3\"";" is 134.,35
Appendium_flatpack,net.sf.flatpack.delim.pipe,PipeParserTest,testPipeMultilineDelimiterIsFirst,Long Statement,The length of the statement "final String testCsv="\"col1\"|\"col2\"|\"col3\"" + System.lineSeparator() + "\""+ System.lineSeparator()+ "val1\"|\"val2\"|\"val3\"";" is 134.,42
Appendium_flatpack,net.sf.flatpack.delim.pipe,PipeParserTest,testPipeMultilineDoubleLine,Long Statement,The length of the statement "final String testCsv="\"col1\"|\"col2\"|\"col3\"" + System.lineSeparator() + "\"val"+ System.lineSeparator()+ System.lineSeparator()+ "1"+ System.lineSeparator()+ "2\"|\"val2\"|\"val3\"";" is 187.,50
Appendium_flatpack,net.sf.flatpack.delim.pipe,PipeParserTest,testPipeMultilineDoubleLine,Long Statement,The length of the statement "final String[] expectedResult={"val" + System.lineSeparator() + System.lineSeparator()+ "1"+ System.lineSeparator()+ "2"`"val2"`"val3"};" is 136.,50
Appendium_flatpack,net.sf.flatpack.delim.pipe,PipeParserTest,testPipeMultilineEmpty,Long Statement,The length of the statement "final String testCsv="\"col1\"|\"col2\"|\"col3\"" + System.lineSeparator() + "\"val"+ System.lineSeparator()+ "2\"|\"\"|\"\"";" is 126.,60
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvWithWrongPzMap,Long Statement,The length of the statement "final Parser parser=BuffReaderParseFactory.getInstance().newDelimitedParser(new StringReader(columnMapping)`new StringReader(csvData)`'`'`FPConstants.NO_QUALIFIER`true);" is 169.,39
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvWithWrongPzMap,Magic Number,The method contains a magic number: 5,39
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineString,Long Statement,The length of the statement "final String testCsv="col1`col2`col3`col4`col5`col6`col7" + System.lineSeparator() + "Bob`Smith`bsmiht@test.com`\"This is a long fragment of text"+ System.lineSeparator()+ "that should be processed as a single field\"` 1988` 111-222-33`\"another field with new line character"+ System.lineSeparator()+ "that should be considered as a field of the same data row\"";" is 364.,67
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineString,Long Statement,The length of the statement "final String[] expectedResult={"Bob"`"Smith"`"bsmiht@test.com"`"This is a long fragment of text" + System.lineSeparator() + "that should be processed as a single field"`" 1988"`" 111-222-33"`"another field with new line character" + System.lineSeparator() + "that should be considered as a field of the same data row"};" is 319.,67
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineEmptyString,Long Statement,The length of the statement "final String testCsv="col1`col2`col3" + System.lineSeparator() + "B`\"S"+ System.lineSeparator()+ System.lineSeparator()+ "\"`val3"+ System.lineSeparator()+ "v1`v2`v3";" is 168.,97
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineEmptyString,Magic Number,The method contains a magic number: 2,97
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineEmptyStringAndDoubleQuote,Long Statement,The length of the statement "final String testCsv="col1`col2`col3" + System.lineSeparator() + "B`\"S"+ System.lineSeparator()+ "\"\" "+ System.lineSeparator()+ "Hello \"\""+ "\"`val3"+ System.lineSeparator()+ "v1`v2`v3";" is 191.,130
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineEmptyStringAndDoubleQuote,Magic Number,The method contains a magic number: 2,130
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineStringFirstLine,Long Statement,The length of the statement "final String testCsv="col1`col2`col3`col4`col5`col6`col7" + System.lineSeparator() + "\"Bob"+ System.lineSeparator()+ "by\"`\"Smith\"`\"bsmiht@test.com\"`\"This is a long fragment of text"+ System.lineSeparator()+ "that should be processed as a single field\"` 1988` 111-222-33`\"another field with new line character"+ System.lineSeparator()+ "that should be considered as a field of the same data row\"";" is 406.,163
Appendium_flatpack,net.sf.flatpack.delim.csv,CsvParserTest,testCsvDocumentWithMultilineStringFirstLine,Long Statement,The length of the statement "final String[] expectedResult={"Bob" + System.lineSeparator() + "by"`"Smith"`"bsmiht@test.com"`"This is a long fragment of text" + System.lineSeparator() + "that should be processed as a single field"`" 1988"`" 111-222-33"`"another field with new line character" + System.lineSeparator() + "that should be considered as a field of the same data row"};" is 351.,163
Appendium_flatpack,net.sf.flatpack.delim.tab,TabDelimited,getDsForTest,Long Statement,The length of the statement "final Parser parser=DefaultParserFactory.getInstance().newDelimitedParser(new FileReader("src/test/java/net/sf/flatpack/delim/tab/PEOPLE-TabDelimitedWithQualifier.txt")`'\t'`'\"');" is 180.,63
Appendium_flatpack,net.sf.flatpack.delim.tab,TabDelimitedTest,testRowCount,Magic Number,The method contains a magic number: 2,43
Appendium_flatpack,net.sf.flatpack.delim.tab,TabDelimitedTest,testColumnNameCount,Magic Number,The method contains a magic number: 5,61
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testLineSeparation,Magic Number,The method contains a magic number: 26,27
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testLineSeparation,Magic Number,The method contains a magic number: 2,27
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testSameNumberOffFields,Magic Number,The method contains a magic number: 23,52
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testSameNumberOffFields,Magic Number,The method contains a magic number: 2,52
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testSameNumberOffFields,Magic Number,The method contains a magic number: 3,52
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testSameNumberOffFields,Magic Number,The method contains a magic number: 3,52
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testSpacesArePartOfField,Magic Number,The method contains a magic number: 34,81
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testSpacesArePartOfField,Magic Number,The method contains a magic number: 2,81
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testLastFieldShouldNotHaveDelimiter,Magic Number,The method contains a magic number: 26,106
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testLastFieldShouldNotHaveDelimiter,Magic Number,The method contains a magic number: 2,106
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testLastFieldShouldNotHaveDelimiter,Magic Number,The method contains a magic number: 11,106
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,testLastFieldShouldNotHaveDelimiter,Magic Number,The method contains a magic number: 11,106
Appendium_flatpack,net.sf.flatpack.rfc4180,CsvWriterFormatDefintionTest,getWriterForRfc4180,Long Statement,The length of the statement "final DelimiterWriterFactory factory=new DelimiterWriterFactory(FIELD_DELIMITER`FIELD_QUALIFIER).addColumnTitle("col1").addColumnTitle("col2").addColumnTitle("col3");" is 166.,130
Appendium_flatpack,net.sf.flatpack.pzparser,PZParserOptsTest,testCaseSensitiveMetaData,Empty catch clause,The method has an empty catch block.,97
Appendium_flatpack,net.sf.flatpack.pzparser,PZParserOptsTest,testCaseSensitiveMetaData,Empty catch clause,The method has an empty catch block.,97
Appendium_flatpack,net.sf.flatpack.pzparser,PZParserOptsTest,testEmptyRowCheck,Empty catch clause,The method has an empty catch block.,150
Appendium_flatpack,net.sf.flatpack.pzparser,PZParserOptsTest,testStoreRawData,Empty catch clause,The method has an empty catch block.,192
Appendium_flatpack,net.sf.flatpack.pzparser,PZParserOptsTest,testBRParseParameters,Long Statement,The length of the statement "final String xml="<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> \r\n" + "<!DOCTYPE PZMAP SYSTEM \"pzfilereader.dtd\" > \r\n" + " <PZMAP>\r\n"+ " <COLUMN name=\"column1\" /> \r\n"+ " <COLUMN name=\"column2\" /> \r\n"+ " </PZMAP>";" is 231.,229
Appendium_flatpack,net.sf.flatpack.pzparser,PZParserOptsTest,testBRParseParameters,Long Statement,The length of the statement "final Parser p=BuffReaderParseFactory.getInstance().newDelimitedParser(new StringReader(xml)`new StringReader(cols)`'`'`FPConstants.NO_QUALIFIER`false);" is 152.,229
Appendium_flatpack,net.sf.flatpack.pzparser,PZParserOptsTest,testFixedWidthMultipleRecordElementsInMapping,Long Statement,The length of the statement "final String xml="<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> \r\n" + "<!DOCTYPE PZMAP SYSTEM \"pzfilereader.dtd\" > \r\n" + " <PZMAP>\r\n"+ " <RECORD id=\"header\" startPosition=\"1\" endPosition=\"1\" indicator=\"H\">"+ " <COLUMN name=\"recordtype\" length=\"1\" /> \r\n"+ " <COLUMN name=\"headerdata1\" length=\"20\" /> \r\n"+ " </RECORD>"+ " <COLUMN name=\"recordtype\" length=\"1\" /> \r\n"+ " <COLUMN name=\"detaildata1\" length=\"20\" /> \r\n"+ " </PZMAP>";" is 468.,243
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Complex Conditional,The conditional expression exportOnlyColumnsList != null && !exportOnlyColumnsList.contains(columnNames[i]) || excludeFromExportColumnsList != null && excludeFromExportColumnsList.contains(columnNames[i]) is complex.,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Complex Conditional,The conditional expression exportOnlyColumnsList != null && !exportOnlyColumnsList.contains(columnNames[i]) || excludeFromExportColumnsList != null && excludeFromExportColumnsList.contains(columnNames[i]) is complex.,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Complex Method,Cyclomatic complexity of the method is 10,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Long Statement,The length of the statement "final List<String> excludeFromExportColumnsList=getExcludeFromExportColumns() != null ? Arrays.asList(excludeFromExportColumns) : null;" is 135.,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Long Statement,The length of the statement "final List<String> numericColumnList=getNumericColumns() != null ? Arrays.asList(getNumericColumns()) : new ArrayList<>();" is 122.,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Long Statement,The length of the statement "if (exportOnlyColumnsList != null && !exportOnlyColumnsList.contains(columnNames[i]) || excludeFromExportColumnsList != null && excludeFromExportColumnsList.contains(columnNames[i])) {" is 184.,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Long Statement,The length of the statement "if (exportOnlyColumnsList != null && !exportOnlyColumnsList.contains(columnNames[i]) || excludeFromExportColumnsList != null && excludeFromExportColumnsList.contains(columnNames[i])) {" is 184.,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Magic Number,The method contains a magic number: 10,68
Appendium_flatpack,net.sf.flatpack.excel,ExcelTransformer,writeExcelFile,Magic Number,The method contains a magic number: 10,68

Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SonarQubeArgumentsWrapper,SonarQubeArgumentsWrapper,Long Identifier,The length of the field mySQRParametersAccessorFactory is 30.,38
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SonarQubeArgumentsWrapper,modify,Long Identifier,The length of the field mySQRParametersAccessorFactory is 30.,44
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQRParametersAccessorFactoryImpl,createAccessor,Long Statement,The length of the statement "return new SQRParametersAccessor(SQRParametersUtil.mergeParameters(runnerContext.getBuild().getSharedConfigParameters()`runnerContext.getRunnerParameters()));" is 158.,25
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,SQMSBuildStartServiceFactory,Long Identifier,The length of the field mySqmsBuildFinishServiceFactory is 31.,49
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,SQMSBuildStartServiceFactory,Long Identifier,The length of the field mySonarQubeMSBuildScannerLocator is 32.,49
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,SQMSBuildStartServiceFactory,Long Parameter List,The method has 5 parameters. ,49
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,SQMSBuildStartServiceFactory,Long Statement,The length of the statement "@Nullable @Override public String getExecutablePath( @NotNull final BuildRunnerContext runnerContext) throws RunBuildException {" is 128.,49
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,SQMSBuildStartServiceFactory,Long Statement,The length of the statement "`runner.getWorkingDirectory()`new SQRParametersAccessor(SQRParametersUtil.mergeAuthParameters(runner.getBuild().getSharedConfigParameters()`runner.getRunnerParameters())));" is 172.,49
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,beforeRunnerStart,Long Identifier,The length of the field mySqmsBuildFinishServiceFactory is 31.,61
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,beforeRunnerStart,Long Identifier,The length of the field mySonarQubeMSBuildScannerLocator is 32.,61
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,beforeRunnerStart,Long Statement,The length of the statement "@Nullable @Override public String getExecutablePath( @NotNull final BuildRunnerContext runnerContext) throws RunBuildException {" is 128.,61
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,beforeRunnerStart,Long Statement,The length of the statement "`runner.getWorkingDirectory()`new SQRParametersAccessor(SQRParametersUtil.mergeAuthParameters(runner.getBuild().getSharedConfigParameters()`runner.getRunnerParameters())));" is 172.,61
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,getExecutablePath,Long Identifier,The length of the field mySonarQubeMSBuildScannerLocator is 32.,66
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,createService,Long Identifier,The length of the field mySonarQubeMSBuildScannerLocator is 32.,77
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildStartServiceFactory,createService,Long Statement,The length of the statement "return new SimpleExecute(new ExecutionChain(Arrays.asList(new SonarQubeArgumentsWrapper(new SQScannerArgsComposer(myOSType))`new MonoWrapper(myOSType`myMonoLocator)`new BeginExecutionWrapper()))`new SQMSBuildExecutableFactory(mySonarQubeMSBuildScannerLocator));" is 261.,77
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildFinishServiceFactory,SQMSBuildFinishServiceFactory,Long Parameter List,The method has 5 parameters. ,52
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildFinishServiceFactory,SQMSBuildFinishServiceFactory,Long Statement,The length of the statement "@Override public void runnerFinished( @NotNull final BuildRunnerContext runner` @NotNull final BuildFinishedStatus status){" is 123.,52
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildFinishServiceFactory,createService,Complex Conditional,The conditional expression msBuildScannerLocator == null || workingDirectory == null || sqrParametersAccessor == null is complex.,79
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildFinishServiceFactory,createService,Long Statement,The length of the statement "return new SimpleExecute(new ExecutionChain(Arrays.asList(new SonarQubeArgumentsWrapper(new SQScannerArgsComposer(myOSType)`new SQRParametersAccessorFactory(){" is 159.,79
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildFinishServiceFactory,createService,Long Statement,The length of the statement ")`new MonoWrapper(myOSType`myMonoLocator)`new EndExecution()))`new SQMSBuildExecutableFactory(msBuildScannerLocator)`workingDirectory.getAbsolutePath());" is 153.,79
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildFinishServiceFactory,setUpFinishStep,Long Identifier,The length of the parameter sonarQubeMSBuildScannerLocator is 30.,113
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildExecutableFactory,SQMSBuildExecutableFactory,Long Identifier,The length of the parameter sonarQubeMSBuildScannerLocator is 30.,31
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildExecutableFactory,SQMSBuildExecutableFactory,Long Identifier,The length of the field mySonarQubeMSBuildScannerLocator is 32.,31
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildExecutableFactory,create,Long Identifier,The length of the field mySonarQubeMSBuildScannerLocator is 32.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildExecutableFactory,checkExecutable,Long Statement,The length of the statement "throw new RunBuildException("Incorrect SonarScanner for MSBuild installation: " + executable.getAbsolutePath() + " not found");" is 127.,54
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildExecutableFactory,checkExecutable,Long Statement,The length of the statement "throw new RunBuildException("Incorrect SonarScanner for MSBuild installation: " + executable.getAbsolutePath() + " is not a file");" is 131.,54
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBuildExecutableFactory,checkExecutable,Long Statement,The length of the statement "throw new RunBuildException("Incorrect SonarScanner for MSBuild installation: cannot execute " + executable.getAbsolutePath() + "");" is 132.,54
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SonarQubeMSBuildScannerLocatorImpl,getExecutablePath,Long Statement,The length of the statement "return explicitPath != null ? explicitPath : runnerContext.getRunnerParameters().get(SQMSConstants.SONAR_QUBE_MSBUILD_VERSION_PARAMETER);" is 137.,28
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild,SQMSBeginRunType,getDefaultRunnerProperties,Long Statement,The length of the statement "map.put(SQMSConstants.SONAR_QUBE_MSBUILD_VERSION_PARAMETER`"%teamcity.tool." + SQMSConstants.SONAR_QUBE_MSBUILD_TOOL_TYPE_ID + ".DEFAULT%");" is 140.,87
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,makeProgramCommandLine,Long Statement,The length of the statement "final List<String> programArgs=composeSQRArgs(getRunnerContext().getRunnerParameters()`agentBuild.getSharedConfigParameters()`sonarScannerRoot`agentBuild.getBuildTempDirectory());" is 179.,70
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,makeProgramCommandLine,Long Statement,The length of the statement "final ProgramCommandLine build=builder.withClassPath(getClasspath()).withMainClass(getMainClass(useScanner)).withJavaHome(jdkHome).withBaseDir(agentBuild.getCheckoutDirectory().getAbsolutePath()).withEnvVariables(getRunnerContext().getBuildParameters().getEnvironmentVariables()).withJvmArgs(jvmAgrs).withClassPath(getClasspath()).withProgramArgs(programArgs).withWorkingDir(getRunnerContext().getWorkingDirectory().getAbsolutePath()).build();" is 443.,70
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,composeSQRArgs,Complex Conditional,The conditional expression !collectedReports.isEmpty() && (accessor.getAdditionalParameters() == null || !accessor.getAdditionalParameters().contains("-Dsonar.junit.reportsPath")) is complex.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,composeSQRArgs,Complex Conditional,The conditional expression file.exists() && file.isFile() && file.canRead() is complex.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,composeSQRArgs,Complex Method,Cyclomatic complexity of the method is 13,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,composeSQRArgs,Long Statement,The length of the statement "final SQRParametersAccessor accessor=new SQRParametersAccessor(SQRParametersUtil.mergeParameters(sharedConfigParameters`runnerParameters));" is 139.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,composeSQRArgs,Long Statement,The length of the statement "if (!collectedReports.isEmpty() && (accessor.getAdditionalParameters() == null || !accessor.getAdditionalParameters().contains("-Dsonar.junit.reportsPath"))) {" is 159.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,composeSQRArgs,Long Statement,The length of the statement "return file.getName().startsWith("JACOCO") && file.getName().endsWith("coverage") && new File(file`"report" + File.separator + "jacocoReport.xml").exists();" is 156.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,accept,Long Statement,The length of the statement "return file.getName().startsWith("JACOCO") && file.getName().endsWith("coverage") && new File(file`"report" + File.separator + "jacocoReport.xml").exists();" is 156.,165
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,getSonarScannerRoot,Long Statement,The length of the statement "final String explicitPath=getRunnerContext().getConfigParameters().get(SonarQubeScannerConstants.SONAR_QUBE_SCANNER_VERSION_PARAMETER);" is 135.,284
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildService,getSonarScannerRoot,Long Statement,The length of the statement "return explicitPath != null ? explicitPath : getRunnerContext().getRunnerParameters().get(SonarQubeScannerConstants.SONAR_QUBE_SCANNER_VERSION_PARAMETER);" is 154.,284
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArg,Long Statement,The length of the statement "assertTrue(res.isEmpty()`"Null values should not be passed to the resulting list. List: " + Arrays.toString(res.toArray()));" is 124.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArg,Long Statement,The length of the statement "assertEquals(res.get(0)`"-Dkey=value"`"'-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 139.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArg,Long Statement,The length of the statement "assertTrue(res.size() == 1`"Only '-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 133.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArg,Long Statement,The length of the statement "assertEquals(res.get(0)`"-Dkey=value"`"'-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 139.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArg,Long Statement,The length of the statement "assertEquals(res.get(1)`"-Dkey=value"`"'-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 139.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArg,Long Statement,The length of the statement "assertTrue(res.size() == 2`"Second '-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 135.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArg,Magic Number,The method contains a magic number: 2,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArgWin,Long Statement,The length of the statement "assertTrue(res.isEmpty()`"Null values should not be passed to the resulting list. List: " + Arrays.toString(res.toArray()));" is 124.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArgWin,Long Statement,The length of the statement "assertEquals(res.get(0)`"\"-Dkey=value\""`"'-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 143.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArgWin,Long Statement,The length of the statement "assertTrue(res.size() == 1`"Only '-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 133.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArgWin,Long Statement,The length of the statement "assertEquals(res.get(0)`"\"-Dkey=value\""`"'-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 143.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArgWin,Long Statement,The length of the statement "assertEquals(res.get(1)`"\"-Dkey=value\""`"'-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 143.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArgWin,Long Statement,The length of the statement "assertTrue(res.size() == 2`"Second '-Dkey=value' pair should be added to the resulting list. List: " + Arrays.toString(res.toArray()));" is 135.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRBuildServiceTest,testAddSQRArgWin,Magic Number,The method contains a magic number: 2,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SSLToolsTest,addOneCertificateToCacerts,Long Statement,The length of the statement "String certificateContent="-----BEGIN CERTIFICATE-----\n" + "MIIBaTCCAQ6gAwIBAgIBATAKBggqhkjOPQQDAjAvMS0wKwYDVQQDDCQ0NTJiNmMx\n" + "OS1lYjY4LTRlNzAtYjE3Ny0zZTU1M2U1YzZkMzYwHhcNMjExMTEyMjAwMDQ4WhcN\n"+ "MjExMTEzMjAwMDQ4WjAvMS0wKwYDVQQDDCQ0NTJiNmMxOS1lYjY4LTRlNzAtYjE3\n"+ "Ny0zZTU1M2U1YzZkMzYwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAStwNVdUQln\n"+ "31aEA7C8pLHZqFF7eVrjruZSxlLiFGaszL5ht0IwP1C2xpV4zqn8W4if/FSjPUr9\n"+ "cG+gjucetp1noxswGTAXBgNVHREBAf8EDTALgglsb2NhbGhvc3QwCgYIKoZIzj0E\n"+ "AwIDSQAwRgIhANhI7Uq9V/l1bnNKunOhbYG9Yi6Td2abEZaI700gKUhqAiEA1prc\n"+ "5nDPIDtcYOgQnxkPA0mrZ57oRPnjJ8/KDUyb6aE=\n"+ "-----END CERTIFICATE-----\n";" is 627.,23
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,BuildSummaryLinkController,doHandle,Long Statement,The length of the statement "final BuildArtifact artifact=build.getArtifacts(BuildArtifactsViewMode.VIEW_HIDDEN_ONLY).getArtifact(Constants.SONAR_SERVER_URL_ARTIF_LOCATION_FULL);" is 149.,61
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,PluginLoadTest,testServerSpringLoad,Long Statement,The length of the statement "try (ClassPathXmlApplicationContext ctx=new ClassPathXmlApplicationContext("/META-INF/build-server-plugin-sonar-plugin.xml")){" is 126.,25
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,PluginLoadTest,testServerSpringLoad,Long Statement,The length of the statement "Assert.assertTrue(e.getMessage().contains("No qualifying bean of type 'jetbrains.buildServer.web.openapi.WebControllerManager' available")`"Error message must say that WebControllerManager is not available");" is 208.,25
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,DataProviders,getFileSystemAndRoot,Long Statement,The length of the statement "return new Object[][]{{Jimfs.newFileSystem(Configuration.windows())`"C:\\"}`{Jimfs.newFileSystem(Configuration.unix())`"/"}};" is 125.,8
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,TestTools,prepareZip,Long Statement,The length of the statement "Files.write(zip`new byte[]{0x50`0x4B`0x05`0x06`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00`0x00});" is 139.,17
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,Util,close,Empty catch clause,The method has an empty catch block.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin,SQRParametersAccessorTest,testGetProjectName,Long Statement,The length of the statement "final SQRParametersAccessor accessor=new SQRParametersAccessor(Collections.singletonMap(Constants.SONAR_PROJECT_KEY`"key"));" is 124.,28
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.util,SimpleExecute,makeProgramCommandLine,Long Statement,The length of the statement "return new SimpleProgramCommandLine(getRunnerContext().getBuildParameters().getEnvironmentVariables()`myAbsolutePath != null ? myAbsolutePath : getRunnerContext().getWorkingDirectory().getAbsolutePath()`executable.myExecutable`executable.myArguments);" is 251.,50
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.util,SSLTools,storeCertificates,Long Statement,The length of the statement "Files.walk(certificateFolder`1).filter(Files::isRegularFile).map(it -> storeCertificate(ks`it)).filter(Objects::nonNull).forEach(t -> counter.incrementAndGet());" is 161.,67
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,SimpleZipToolProviderSQMSBuild,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,62
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,SimpleZipToolProviderSQMSBuild,Long Identifier,The length of the field SONAR_FILE_NAME_PARTS_SEPARATOR is 31.,62
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,SimpleZipToolProviderSQMSBuild,Long Identifier,The length of the field myPackedSonarQubeScannerRootDirPattern is 38.,62
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,SimpleZipToolProviderSQMSBuild,Long Statement,The length of the statement "myPackedSonarQubeScannerRootZipPattern=myToolType.getType() + SONAR_FILE_NAME_PARTS_SEPARATOR + VERSION_PATTERN+ ZIP_EXTENSION;" is 127.,62
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,getPackedZipPattern,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,82
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,getPackedDirPattern,Long Identifier,The length of the field myPackedSonarQubeScannerRootDirPattern is 38.,88
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,parseVersion,Long Identifier,The length of the field SONAR_QUBE_SCANNER_MSBUILD_EXE is 30.,106
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,parseVersion,Long Identifier,The length of the field SONAR_QUBE_SCANNER_MSBUILD_ALT_EXE is 34.,106
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,parseVersion,Long Statement,The length of the statement "if (existsAndExecutable(fs`"/" + SONAR_QUBE_SCANNER_MSBUILD_EXE) || existsAndExecutable(fs`"/" + SONAR_QUBE_SCANNER_MSBUILD_ALT_EXE)) {" is 135.,106
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,parseVersion,Long Statement,The length of the statement "return GetPackageVersionResult.version(new SonarQubeToolVersion(getToolType()`version`getToolType().getType() + "." + version));" is 128.,106
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,parseVersion,Long Statement,The length of the statement "return GetPackageVersionResult.error("Doesn't seem like SonarScanner for MSBuild: cannot find '" + SONAR_QUBE_SCANNER_MSBUILD_EXE + "'");" is 137.,106
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,tryParsePackedPackage,Long Statement,The length of the statement "return GetPackageVersionResult.version(new SonarQubeToolVersion(myToolType`version`myToolType.getType() + "." + version));" is 122.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,tryParsePackedPackage,Long Statement,The length of the statement "LOG.warn("Unexpected package " + path.getFileName().toString() + "` only sonar-scanner-msbuid with "+ SonarQubeToolProvider.VERSION_GROUP_NAME+ " suffix is allowed.");" is 167.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,tryParsePackedPackage,Long Statement,The length of the statement "return GetPackageVersionResult.error("Unexpected package " + path.getFileName().toString() + "` only sonar-scanner-msbuid with "+ SonarQubeToolProvider.VERSION_GROUP_NAME+ " suffix is allowed.");" is 195.,123
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,describeBrokenPackage,Long Statement,The length of the statement "return GetPackageVersionResult.error("Should be single zip` name should contain version` eg: sonar-scanner-msbuild.4.0.2.892.zip");" is 131.,142
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,validatePackedTool,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,148
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,validatePackedTool,Long Statement,The length of the statement "final Matcher matcher=Pattern.compile(myPackedSonarQubeScannerRootZipPattern).matcher(toolPackage.getFileName().toString());" is 124.,148
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,validatePackedTool,Long Statement,The length of the statement "LOG.warn("Cannot unpack " + toolPackage + ": should be single zip file with version suffix: 'sonar-scanner-msbuild-4.0.2.892.zip'.");" is 133.,148
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,validatePackedTool,Long Statement,The length of the statement "throw new ToolException("Cannot unpack " + toolPackage + ": should be single zip file with version suffix: 'sonar-scanner-msbuild-4.0.2.892.zip'.");" is 148.,148
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,layoutContents,Empty catch clause,The method has an empty catch block.,162
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,layoutContents,Long Statement,The length of the statement "@Override public FileVisitResult preVisitDirectory( final Path path` final BasicFileAttributes basicFileAttributes) throws IOException {" is 136.,162
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,layoutContents,Long Statement,The length of the statement "@Override public FileVisitResult visitFile( final Path path` final BasicFileAttributes basicFileAttributes) throws IOException {" is 128.,162
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,layoutContents,Long Statement,The length of the statement "sonarScanners=children.filter(p -> p.getFileName().toString().startsWith(SONAR_SCANNER_PREFIX)).collect(Collectors.toList());" is 125.,162
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,layoutContents,Long Statement,The length of the statement "List<String> iterable=new ArrayList<>(Arrays.asList("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"`"<teamcity-agent-plugin xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\""`" xsi:noNamespaceSchemaLocation=\"urn:shemas-jetbrains-com:teamcity-agent-plugin-v1-xml\">"`" <tool-deployment>"`" <layout>"`" <executable-files>"));" is 327.,162
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuild,preVisitDirectory,Empty catch clause,The method has an empty catch block.,168
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild.1.2.3.zip"`root`"some"`"path"));" is 124.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild-1.2.3.zip"`root`"some"`"path"));" is 124.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild-1.2.3.4.zip"`root`"some"`"path"));" is 126.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild-5.1.0.28487-net5.0.zip"`root`"some"`"path"));" is 137.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild-5.1.0.28487-netcoreapp2.0.zip"`root`"some"`"path"));" is 144.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild-5.1.0.28487-net46.zip"`root`"some"`"path"));" is 136.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild.zip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 178.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuil-1.2.3.zip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 183.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild-1.2.3a.zip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 185.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-msbuild-1.2.3.ip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 183.,35
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testParseVersionIncorrect,Long Statement,The length of the statement "then(res.getDetails()).doesNotContain(SimpleZipToolProviderSQMSBuild.BIN).contains(SimpleZipToolProviderSQMSBuild.SONAR_QUBE_SCANNER_MSBUILD_EXE);" is 146.,58
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testParseVersionIncorrect,Long Statement,The length of the statement "then(res.getDetails()).doesNotContain(SimpleZipToolProviderSQMSBuild.BIN).contains(SimpleZipToolProviderSQMSBuild.SONAR_QUBE_SCANNER_MSBUILD_EXE);" is 146.,58
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testLayoutContents,Complex Conditional,The conditional expression line.contains("include name=") && line.contains(SimpleZipToolProviderSQMSBuild.SONAR_SCANNER_PREFIX) && line.contains(SOME_EXE) is complex.,74
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testLayoutContents,Long Statement,The length of the statement "then(Files.exists(xml)).describedAs(SimpleZipToolProviderSQMSBuild.TEAMCITY_PLUGIN_XML + " should have been created").isTrue();" is 127.,74
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testLayoutContents,Long Statement,The length of the statement "then(lines).extracting(s -> s.trim()).contains("<executable-files>"`"</executable-files>"`"<include name='" + SimpleZipToolProviderSQMSBuild.SONAR_QUBE_SCANNER_MSBUILD_EXE + "'/>");" is 181.,74
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,testLayoutContents,Long Statement,The length of the statement "if (line.contains("include name=") && line.contains(SimpleZipToolProviderSQMSBuild.SONAR_SCANNER_PREFIX) && line.contains(SOME_EXE)) {" is 134.,74
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,prepareCorrectPluginWithName,Long Statement,The length of the statement "Files.createDirectories(zfs.getPath("/"`SimpleZipToolProviderSQMSBuild.SONAR_SCANNER_PREFIX`SimpleZipToolProviderSQMSBuild.BIN));" is 129.,115
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.msbuild.tool,SimpleZipToolProviderSQMSBuildTest,prepareCorrectPluginWithName,Long Statement,The length of the statement "Files.createFile(zfs.getPath("/"`SimpleZipToolProviderSQMSBuild.SONAR_SCANNER_PREFIX`SimpleZipToolProviderSQMSBuild.BIN`SOME_EXE));" is 131.,115
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner,SQSPropertiesProvider,updateParameters,Long Statement,The length of the statement "if (!Constants.RUNNER_TYPE.equals(runnerContext.getType()) && !SQMSConstants.SONAR_QUBE_MSBUILD_RUN_TYPE_ID.equals(runnerContext.getType())) {" is 142.,45
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner,SQSPropertiesProvider,doUpdateParameters,Long Statement,The length of the statement "runnerContext.addRunnerParameter(SonarQubeScannerConstants.SONAR_QUBE_SCANNER_VERSION_PARAMETER`"%teamcity.tool." + SonarQubeScannerConstants.SONAR_QUBE_SCANNER_TOOL_TYPE_ID + ".DEFAULT%");" is 189.,74
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager.projectfeatures,SQSManagerEmptyTypeProjectFeatures,getAvailableServersStream,Long Statement,The length of the statement "return project.getAvailableFeaturesOfType(PROJECT_FEATURE_TYPE).stream().filter(d -> d.getParameters().containsKey("id") && d.getParameters().containsKey("url")).map(SQSInfoImpl::new);" is 184.,50
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager.projectfeatures,SQSManagerEmptyTypeProjectFeatures,getServer,Long Statement,The length of the statement "final Optional<SProjectFeatureDescriptor> optional=project.getAvailableFeaturesOfType(PROJECT_FEATURE_TYPE).stream().filter(f -> {" is 130.,60
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager.projectfeatures,SQSManagerEmptyTypeProjectFeatures,editServer,Long Statement,The length of the statement "return new SQSActionResult(new SQSInfoImpl(found.get())`modifiedServer`"SonarQube Server '" + modifiedServer.getName() + "' updated");" is 134.,77
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager.projectfeatures,SQSManagerEmptyTypeProjectFeatures,addServer,Long Statement,The length of the statement "if (getServer(toProject`newServer.getId()) != null) return new SQSActionResult(null`null`"Cannot add: SonarQube Server with id '" + newServer.getId() + "' already exists"`true);" is 177.,91
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,SimpleZipToolProviderSQScanner,Long Identifier,The length of the field myPackedSonarQubeScannerRootDirPattern is 38.,60
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,SimpleZipToolProviderSQScanner,Long Identifier,The length of the field SONAR_QUBE_SCANNER_TYPE_SUFFIX is 30.,60
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,SimpleZipToolProviderSQScanner,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,60
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,SimpleZipToolProviderSQScanner,Long Statement,The length of the statement "myPackedSonarQubeScannerRootDirPattern="(" + myToolType.getType() + "|"+ SONAR_QUBE_SCANNER_TOOL_TYPE_ID_ALT+ ")[\\.-]"+ VERSION_PATTERN+ SONAR_QUBE_SCANNER_TYPE_SUFFIX;" is 169.,60
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,getPackedZipPattern,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,79
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,getPackedDirPattern,Long Identifier,The length of the field myPackedSonarQubeScannerRootDirPattern is 38.,85
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,parseVersion,Long Statement,The length of the statement "return GetPackageVersionResult.version(new SonarQubeToolVersion(getToolType()`version`getToolType().getType() + "." + version+ "-"+ SONAR_QUBE_SCANNER_TYPE));" is 158.,103
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,parseVersion,Long Statement,The length of the statement "return GetPackageVersionResult.version(new SonarQubeToolVersion(getToolType()`version`getToolType().getType() + "." + version+ "-"+ SONAR_QUBE_RUNNER_TYPE));" is 157.,103
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,parseVersion,Long Statement,The length of the statement "return GetPackageVersionResult.error("Doesn't seem like SonarQube Scanner or SonarQube Runner: cannot find main class neither in 'org.sonarsource.scanner.cli' package neither in 'org.sonar.runner' packege");" is 207.,103
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,tryParsePackedPackage,Long Identifier,The length of the field SONAR_QUBE_SCANNER_TYPE_SUFFIX is 30.,121
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,tryParsePackedPackage,Long Statement,The length of the statement "return GetPackageVersionResult.version(new SonarQubeToolVersion(myToolType`version`myToolType.getType() + "." + version+ "-"+ SONAR_QUBE_RUNNER_TYPE));" is 151.,121
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,tryParsePackedPackage,Long Statement,The length of the statement "return GetPackageVersionResult.version(new SonarQubeToolVersion(myToolType`version`myToolType.getType() + "." + version+ "-"+ SONAR_QUBE_SCANNER_TYPE));" is 152.,121
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,tryParsePackedPackage,Long Statement,The length of the statement "LOG.warn("Unexpected package " + path.getFileName().toString() + "` only "+ myToolType.getType()+ " and "+ SONAR_QUBE_SCANNER_TYPE_SUFFIX+ " with "+ SonarQubeToolProvider.VERSION_GROUP_NAME+ " suffix are allowed.");" is 215.,121
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,tryParsePackedPackage,Long Statement,The length of the statement "return GetPackageVersionResult.error("Unexpected package " + path.getFileName().toString() + "` only "+ myToolType.getType()+ " and "+ SONAR_QUBE_SCANNER_TYPE_SUFFIX+ " are allowed.");" is 184.,121
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,describeBrokenPackage,Long Statement,The length of the statement "return GetPackageVersionResult.error("Should be single jar with. The name should contain version` eg: sonar-runner.2.4.jar or sonar-scanner-cli-3.0.3.jar");" is 156.,144
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,validatePackedTool,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,150
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,validatePackedTool,Long Statement,The length of the statement "final Matcher matcher=Pattern.compile(myPackedSonarQubeScannerRootZipPattern).matcher(toolPackage.getFileName().toString());" is 124.,150
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,validatePackedTool,Long Statement,The length of the statement "LOG.warn("Cannot unpack " + toolPackage + ": should be single jar file with version suffix: 'sonar-qube-scanner.3.0.3.778-scanner.jar'.");" is 138.,150
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScanner,validatePackedTool,Long Statement,The length of the statement "throw new ToolException("Cannot unpack " + toolPackage + ": should be single jar file with version suffix. Eg: 'sonar-qube-scanner.3.0.3.778-scanner.jar'.");" is 157.,150
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanner.1.2.3-scanner.zip"`root`"some"`"path"));" is 129.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanner-1.2.3-scanner.zip"`root`"some"`"path"));" is 129.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanner-1-scanner.zip"`root`"some"`"path"));" is 125.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanner-1.2.3.4-scanner.zip"`root`"some"`"path"));" is 131.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-cli-4.6.0.2311-macosx.zip"`root`"some"`"path"));" is 132.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-scanner-cli-4.6.0.2311.zip"`root`"some"`"path"));" is 125.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanner-scanner.zip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 183.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanne-1.2.3-scanner.zip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 188.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanner-1.2.3a-scanner.zip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 190.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testValidatePackedTool,Long Statement,The length of the statement "assertThatThrownBy(() -> myToolProvider.validatePackedTool(prepareCorrectPluginWithName(jimfs`"sonar-qube-scanner-1.2.3.ip"`root`"some"`"path"))).isInstanceOf(ToolException.class);" is 180.,36
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testTryParsePackedPackage,Long Statement,The length of the statement "assertThat(tryParsePackedPackage("sonar-qube-scanner.1.2.3-scanner.zip").getToolVersion()).extracting("version"`"type.type"`"id").containsExactly("1.2.3"`SonarQubeScannerConstants.SONAR_QUBE_SCANNER_TOOL_TYPE_ID`"sonar-qube-scanner.1.2.3-scanner");" is 248.,50
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testTryParsePackedPackage,Long Statement,The length of the statement "assertThat(tryParsePackedPackage("sonar-qube-scanner.1.2.3-runner.zip").getToolVersion()).extracting("version"`"type.type"`"id").containsExactly("1.2.3"`SonarQubeScannerConstants.SONAR_QUBE_SCANNER_TOOL_TYPE_ID`"sonar-qube-scanner.1.2.3-runner");" is 246.,50
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testTryParsePackedPackage,Long Statement,The length of the statement "assertThat(tryParsePackedPackage("sonar-scanner-cli-4.6.0.2311.zip").getToolVersion()).extracting("version"`"type.type"`"id").containsExactly("4.6.0.2311"`SonarQubeScannerConstants.SONAR_QUBE_SCANNER_TOOL_TYPE_ID`"sonar-qube-scanner.4.6.0.2311-scanner");" is 254.,50
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.tool,SimpleZipToolProviderSQScannerTest,testTryParsePackedPackage,Long Statement,The length of the statement "assertThat(tryParsePackedPackage("sonar-scanner-cli-4.6.0.2311-arm7.zip").getToolVersion()).extracting("version"`"type.type"`"id").containsExactly("4.6.0.2311-arm7"`SonarQubeScannerConstants.SONAR_QUBE_SCANNER_TOOL_TYPE_ID`"sonar-qube-scanner.4.6.0.2311-arm7-scanner");" is 269.,50
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManager,editServer,Long Statement,The length of the statement "return new SQSActionResult(init`sqsInfo`"SonarQube Server '" + sqsInfo.getName() + "' updated and moved to project features");" is 126.,89
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManager,editServer,Long Statement,The length of the statement "return new SQSActionResult(null`null`"Cannot edit: SonarQube Server with id '" + sqsInfo.getId() + "' was not found"`true);" is 123.,89
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManager,migrate,Long Statement,The length of the statement "project.persist(myConfigActionFactory.createAction(project`sqsInfos.length + " SonarQube Servers moved from " + sqsManager.getDescription()+ " to "+ myEditManager.getDescription()));" is 182.,138
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManager,migrate,Long Statement,The length of the statement "project.persist(myConfigActionFactory.createAction(project`"SonarQube Server '" + sqsInfos[0].getName() + "' moved from "+ sqsManager.getDescription()+ " to "+ myEditManager.getDescription()));" is 193.,138
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,SQSInfoFactory,create,Long Parameter List,The method has 10 parameters. ,28
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,SQSInfoFactory,create,Long Statement,The length of the statement "return new SQSInfoImpl(id == null ? UUID.randomUUID().toString() : id`name`url`Boolean.toString(useToken)`token`login`password`jdbcUrl`jdbcUsername`jdbcPassword);" is 162.,28
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,BaseSQSInfo,BaseSQSInfo,Long Parameter List,The method has 10 parameters. ,47
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ServerManagementProjectTab,fillModel,Long Statement,The length of the statement "model.put("userHasPermissionManagement"`AuthUtil.hasPermissionToManageProject(securityContext.getAuthorityHolder()`currentProject.getProjectId()));" is 147.,73
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,ManageSQSActionController,Long Parameter List,The method has 6 parameters. ,74
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,process,Complex Method,Cyclomatic complexity of the method is 10,102
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,process,Long Statement,The length of the statement "configAction=myConfigActionFactory.createAction(project`"parameters of SonarQube Server '" + sqsInfo.getName() + "' were changed");" is 131.,102
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,getJDBCPassword,Long Statement,The length of the statement "return Boolean.parseBoolean(request.getParameter(SONAR_JDBC_PASSWORD_PRESERVE)) ? old.getJDBCPassword() : decryptIfNeeded(request.getParameter(SONAR_JDBC_PASSWORD));" is 165.,174
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,getPassword,Long Statement,The length of the statement "return Boolean.parseBoolean(request.getParameter(SONAR_PASSWORD_PRESERVE)) ? old.getPassword() : decryptIfNeeded(request.getParameter(SONAR_PASSWORD));" is 151.,179
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,getToken,Long Statement,The length of the statement "return Boolean.parseBoolean(request.getParameter(SONAR_TOKEN_PRESERVE)) ? old.getToken() : decryptIfNeeded(request.getParameter(SONAR_TOKEN));" is 142.,184
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,createServerInfo,Long Parameter List,The method has 5 parameters. ,189
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,createServerInfo,Long Statement,The length of the statement "boolean useToken=useTokenString != null ? Boolean.parseBoolean(useTokenString) : request.getParameter(SONAR_TOKEN) != null;" is 123.,189
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,createServerInfo,Long Statement,The length of the statement "return mySQSInfoFactory.create(serverInfoId`StringUtil.nullIfEmpty(request.getParameter(SERVERINFO_NAME))`useTokenString`useToken ? StringUtil.nullIfEmpty(token) : null`StringUtil.nullIfEmpty(request.getParameter(SONAR_URL))`!useToken ? StringUtil.nullIfEmpty(request.getParameter(SONAR_LOGIN)) : null`!useToken ? StringUtil.nullIfEmpty(pass) : null`StringUtil.nullIfEmpty(request.getParameter(SONAR_JDBC_URL))`StringUtil.nullIfEmpty(request.getParameter(SONAR_JDBC_USERNAME))`StringUtil.nullIfEmpty(jdbcPass));" is 511.,189
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,ManageSQSActionController,addServerInfo,Long Statement,The length of the statement "final SQSInfo serverInfo=createServerInfo(request`null`decryptIfNeeded(request.getParameter(SONAR_PASSWORD))`decryptIfNeeded(request.getParameter(SONAR_JDBC_PASSWORD))`decryptIfNeeded(request.getParameter(SONAR_TOKEN)));" is 220.,227
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManagerTest,test,Long Statement,The length of the statement "final MigratingSQSManager migratingSQSManager=new MigratingSQSManager(Arrays.asList(sqsManagerProjectFeatures`SQSManager)`sqsManagerProjectFeatures`mock(ConfigActionFactory.class));" is 181.,56
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManagerTest,should_not_add_to_old,Long Statement,The length of the statement "final MigratingSQSManager migratingSQSManager=new MigratingSQSManager(Arrays.asList(sqsManagerProjectFeatures`sqsManager)`sqsManagerProjectFeatures`mock(ConfigActionFactory.class));" is 181.,82
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManagerTest,should_remove_from_old_on_edit,Long Statement,The length of the statement "final MigratingSQSManager migratingSQSManager=new MigratingSQSManager(Arrays.asList(sqsManagerProjectFeatures`sqsManager)`sqsManagerProjectFeatures`mock(ConfigActionFactory.class));" is 181.,98
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManagerTest,should_add_to_new_when_edit,Long Statement,The length of the statement "final MigratingSQSManager migratingSQSManager=new MigratingSQSManager(Arrays.asList(sqsManagerProjectFeatures`sqsManager)`sqsManagerProjectFeatures`mock(ConfigActionFactory.class));" is 181.,116
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManagerTest,should_remove_from_both,Long Statement,The length of the statement "final MigratingSQSManager migratingSQSManager=new MigratingSQSManager(Arrays.asList(sqsManagerProjectFeatures`sqsManager)`sqsManagerProjectFeatures`mock(ConfigActionFactory.class));" is 181.,133
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManagerTest,should_get_from_both,Long Statement,The length of the statement "final MigratingSQSManager migratingSQSManager=new MigratingSQSManager(Arrays.asList(sqsManagerProjectFeatures`sqsManager)`sqsManagerProjectFeatures`mock(ConfigActionFactory.class));" is 181.,160
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager,MigratingSQSManagerTest,should_get_from_new_when_available,Long Statement,The length of the statement "final MigratingSQSManager migratingSQSManager=new MigratingSQSManager(Arrays.asList(sqsManagerProjectFeatures`sqsManager)`sqsManagerProjectFeatures`mock(ConfigActionFactory.class));" is 181.,182
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeatures,getServer,Long Statement,The length of the statement "final Optional<SProjectFeatureDescriptor> optional=project.getAvailableFeaturesOfType(PROJECT_FEATURE_TYPE).stream().filter(f -> {" is 130.,59
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeatures,editServer,Long Statement,The length of the statement "return new SQSActionResult(new SQSInfoImpl(found.get())`modifiedServer`"SonarQube Server '" + modifiedServer.getName() + "' updated");" is 134.,82
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeatures,addServer,Long Statement,The length of the statement "if (getServer(toProject`newServer.getId()) != null) return new SQSActionResult(null`null`"Cannot add: SonarQube Server with id '" + newServer.getId() + "' already exists"`true);" is 177.,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSInfoImpl,SQSInfoImpl,Long Parameter List,The method has 10 parameters. ,41
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_single_child,Long Statement,The length of the statement "final List<SProjectFeatureDescriptor> features=Collections.singletonList(mockProjectFeature("id"`BaseSQSInfo.NAME`"InChild"));" is 126.,59
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_single_child,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getServer(myProject`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InChild".equals(sqsInfo.getName())`"having InChild name"));" is 162.,59
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_single_child,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getOwnServer(myProject`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InChild".equals(sqsInfo.getName())`"having InChild name"));" is 165.,59
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_single_parent,Long Statement,The length of the statement "final List<SProjectFeatureDescriptor> features=Collections.singletonList(mockProjectFeature("id"`BaseSQSInfo.NAME`"InRoot"));" is 125.,75
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_single_parent,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getServer(myProject`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InRoot".equals(sqsInfo.getName())`"having InRoot name"));" is 160.,75
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_single_parent,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getOwnServer(myRoot`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InRoot".equals(sqsInfo.getName())`"having InRoot name"));" is 160.,75
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_single_parent,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getServer(myRoot`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InRoot".equals(sqsInfo.getName())`"having InRoot name"));" is 157.,75
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_same_id_in_parent,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getOwnServer(myProject`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InChild".equals(sqsInfo.getName())`"having InChild name"));" is 165.,94
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_same_id_in_parent,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getServer(myProject`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InChild".equals(sqsInfo.getName())`"having InChild name"));" is 162.,94
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_same_id_in_parent,Long Statement,The length of the statement "then(mySqsManagerProjectFeatures.getOwnServer(myRoot`"id")).isNotNull().is(new Condition<>(sqsInfo -> "InRoot".equals(sqsInfo.getName())`"having InRoot name"));" is 160.,94
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,test_same_id_in_parent,Magic Number,The method contains a magic number: 2,94
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,mockProjectFeature,Magic Number,The method contains a magic number: 2,122
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectfeatures,SQSManagerProjectFeaturesTest,mockProjectFeature,Magic Number,The method contains a magic number: 2,122
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectsettings,XMLBasedSQSInfo,XMLBasedSQSInfo,Long Parameter List,The method has 8 parameters. ,40
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectsettings,SQSProjectSettings,cast,Long Statement,The length of the statement "return new XMLBasedSQSInfo(info.getId()`info.getName()`info.getUrl()`info.getLogin()`info.getPassword()`info.getJDBCUrl()`info.getJDBCUsername()`info.getJDBCPassword());" is 169.,81
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectsettings,XMLBasedSQSInfoHelper,createServerInfo,Long Parameter List,The method has 8 parameters. ,31
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.manager.projectsettings,XMLBasedSQSInfoHelper,createServerInfo,Long Statement,The length of the statement "return new XMLBasedSQSInfo(id == null ? UUID.randomUUID().toString() : id`name`url`login`password`dbUrl`dbUsername`dbPassword);" is 127.,31
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProvider,SonarQubeToolProvider,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProvider,SonarQubeToolProvider,Long Identifier,The length of the field myPackedSonarQubeScannerRootDirPattern is 38.,51
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProvider,getBundledToolVersions,Long Identifier,The length of the field myPackedSonarQubeScannerRootZipPattern is 38.,65
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProvider,unpackToolPackage,Empty catch clause,The method has an empty catch block.,128
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProvider,unpackToolPackage,Long Identifier,The length of the field myPackedSonarQubeScannerRootDirPattern is 38.,128
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProvider,unpackToolPackage,Long Statement,The length of the statement "throw new ToolException("Unexpected target directory name: should match '" + myPackedSonarQubeScannerRootDirPattern.pattern() + "' while got "+ targetPath.getFileName().toString());" is 181.,128
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner.3.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.SCANNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 270.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner-3.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.SCANNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 270.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner-5.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.SCANNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 270.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"aaa-5.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.SCANNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 260.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"5.2.0.1227.zip"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.SCANNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNull();" is 253.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"aaa.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.SCANNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNull();" is 246.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner.3.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 269.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner-3.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 269.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner-5.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 269.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"aaa-5.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNotNull();" is 259.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"5.2.0.1227.zip"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNull();" is 252.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"aaa.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION)))).getToolVersion()).isNull();" is 245.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner.3.2.0.1227.jar"`zipFS -> {" is 127.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner-3.2.0.1227.jar"`zipFS -> {" is 127.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion,Long Statement,The length of the statement "then(sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner-5.2.0.1227.jar"`zipFS -> {" is 127.,34
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion_shouldReturnCorrectToolId,Long Statement,The length of the statement "final GetPackageVersionResult scanner=sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner.3.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.SCANNER_MAIN_CLASS_LOCATION))));" is 273.,64
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testTryGetPackageVersion_shouldReturnCorrectToolId,Long Statement,The length of the statement "final GetPackageVersionResult runner=sonarQubeToolProvider.tryGetPackageVersion(TestTools.prepareZip(fs.getPath(root)`"sonar-scanner.3.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION))));" is 271.,64
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.tool,SonarQubeToolProviderTest,testUnpackToolPackage,Long Statement,The length of the statement "sonarQubeToolProvider.unpackToolPackage(TestTools.prepareZip(fs.getPath(root)`"aaa-5.2.0.1227.jar"`zipFS -> TestTools.createFile(TestTools.fromZipString(zipFS`SimpleZipToolProviderSQScanner.RUNNER_MAIN_CLASS_LOCATION)))`targetPath);" is 232.,78
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,updateParameters,Long Statement,The length of the statement "if (context.getBuild().getBuildFeaturesOfType(BranchesAndPullRequestsBuildFeature.BUILD_FEATURE_TYPE).isEmpty() || context.getSharedParameters().containsKey(SQS_SYSENV)) {" is 171.,52
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,updateParameters,Long Statement,The length of the statement "context.getBuild().getBuildLog().message(String.format("Build feature '%s' requires TeamCity 2019.2 or above"`BranchesAndPullRequestsBuildFeature.BUILD_FEATURE_NAME)`Status.ERROR`MessageAttrs.attrs());" is 201.,52
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,updateParameters,Long Statement,The length of the statement "context.getBuild().getBuildLog().message(String.format("SonarQube plugin detects %s` '%s' set with '%s'"`type`SQS_SYSENV`jsonString)`Status.NORMAL`MessageAttrs.attrs());" is 169.,52
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,updateParameters,Magic Number,The method contains a magic number: 11,52
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,isTeamCityMinimalVersion,Long Statement,The length of the statement "return version.getDisplayVersionMajor() > 2019 || (version.getDisplayVersionMajor() == 2019 && version.getDisplayVersionMinor() >= 2);" is 134.,109
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,isTeamCityMinimalVersion,Magic Number,The method contains a magic number: 2019,109
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,isTeamCityMinimalVersion,Magic Number,The method contains a magic number: 2019,109
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessor,isTeamCityMinimalVersion,Magic Number,The method contains a magic number: 2,109
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,fixRunBuildParameters,Long Statement,The length of the statement "if (build.getBuildFeaturesOfType(BranchesAndPullRequestsBuildFeature.BUILD_FEATURE_TYPE).isEmpty() || buildParams.containsKey(SQS_SYSENV)) {" is 140.,39
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,fixRunBuildParameters,Long Statement,The length of the statement "build.getBuildLog().message(String.format("Build feature '%s' requiers TeamCity 2019.2 or above"`BranchesAndPullRequestsBuildFeature.BUILD_FEATURE_NAME)`Status.ERROR`MessageAttrs.attrs());" is 188.,39
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,fixRunBuildParameters,Long Statement,The length of the statement "build.getBuildLog().message(String.format("SonarQube plugin detects %s` '%s' set with '%s'"`type`SQS_SYSENV`jsonString)`Status.NORMAL`MessageAttrs.attrs());" is 156.,39
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,fixRunBuildParameters,Magic Number,The method contains a magic number: 11,39
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,isTeamCityMinimalVersion,Long Statement,The length of the statement "return version.getDisplayVersionMajor() > 2019 || (version.getDisplayVersionMajor() == 2019 && version.getDisplayVersionMinor() >= 2);" is 134.,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,isTeamCityMinimalVersion,Magic Number,The method contains a magic number: 2019,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,isTeamCityMinimalVersion,Magic Number,The method contains a magic number: 2019,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessor,isTeamCityMinimalVersion,Magic Number,The method contains a magic number: 2,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testGitHubPrUrlHttp,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.pullrequest.key\":\"1\"`\"sonar.pullrequest.branch\":\"Update README.md\"`\"sonar.pullrequest.base\":\"master\"`\"sonar.pullrequest.provider\":\"github\"`\"sonar.pullrequest.github.repository\":\"orga-test/repo-test\"}");" is 279.,67
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testGitHubPrUrlHttpGitSuffix,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.pullrequest.key\":\"42\"`\"sonar.pullrequest.branch\":\"Update README.md\"`\"sonar.pullrequest.base\":\"master\"`\"sonar.pullrequest.provider\":\"github\"`\"sonar.pullrequest.github.repository\":\"orga-test/repo-test\"}");" is 280.,82
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testGitHubPrUrlSsh,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.pullrequest.key\":\"1\"`\"sonar.pullrequest.branch\":\"Update README.md\"`\"sonar.pullrequest.base\":\"master\"`\"sonar.pullrequest.provider\":\"github\"`\"sonar.pullrequest.github.repository\":\"orga-test/repo-test\"}");" is 279.,98
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testGitHubBranch,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"someBranch\"`\"sonar.branch.target\":\"master\"}");" is 125.,114
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Method,The method has 117 lines of code.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.3 (build 42)")));" is 138.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo(null)));" is 123.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("")));" is 121.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2020.1.4 (build 42)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2020")));" is 125.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.3 (build 42)")));" is 138.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.2.1 (build 71758)")));" is 143.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.2 (build 42)")));" is 138.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.2")));" is 127.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.5 (build 66605)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.4 (build 66526)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.3 (build 66439)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.2 (build 66342)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.1 (build 66192)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1")));" is 128.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.4 (build 61678)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.3 (build 61544)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.2 (build 61245)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.1 (build 61078)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2")));" is 128.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.5 (build 58744)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.4 (build 58724)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.3 (build 58658)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.2 (build 58537)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.1 (build 58406)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1 (build 58245)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.4 (build 51228)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.3 (build 51047)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.2 (build 50909)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.1 (build 50732)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2 (build 50574)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.5 (build 47175)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.4 (build 47070)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.3 (build 46961)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.2 (build 46812)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.1 (build 46654)")));" is 144.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1 (build 46533)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.5 (build 42677)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.4 (build 42538)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.3 (build 42434)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.2 (build 42234)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.1 (build 42078)")));" is 142.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0 (build 42002)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.7 (build 37573)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.6 (build 37459)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.5 (build 37377)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.4 (build 37293)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.3 (build 37176)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.2 (build 37168)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.1 (build 36973)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1 (build 36973)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.5 (build 32523)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.4 (build 32407)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.3 (build 32334)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.2 (build 32195)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.1 (build 32116)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0 (build 32060)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.5 (build 30240)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.4 (build 30168)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.3 (build 30101)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.2 (build 29993)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.1 (build 29939)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1 (build 29879)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.6 (build 27767)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.5 (build 27692)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.4 (build 27540)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.3 (build 27540)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.2 (build 27482)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.1 (build 27435)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0 (build 27402)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.5 (build 24400)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.4 (build 24331)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.3 (build 24266)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.2 (build 24170)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.1 (build 24074)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1 (build 23907)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.4 (build 21474)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.3 (build 21424)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.2 (build 21349)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.1 (build 21326)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0 (build 21241)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.6 (build 18130)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.5 (build 18087)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.4 (build 18046)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.3 (build 17985)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.2 (build 17935)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.1 (build 17834)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5 (build 17795)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0.3 (build 15925)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0.2 (build 15857)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0.1 (build 15816)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0 (build 15772)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.5 (build 13602)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.4 (build 13550)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.3 (build 13506)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.2 (build 13430)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.1 (build 13398)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1 (build 13360)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0.3 (build 10821)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0.2 (build 10784)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0.1 (build 10715)")));" is 141.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0 (build 10669)")));" is 139.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.6 (build 9140)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.5 (build 9103)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.4 (build 9071)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.3 (build 9035)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.2 (build 9029)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.1 (build 8975)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5 (build 8944)")));" is 138.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.0.2 (build 8222)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.0.1 (build 8171)")));" is 140.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.0 (build 8080)")));" is 138.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("3.1.2")));" is 127.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("3.1.1")));" is 127.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsBuildStartContextProcessor.isTeamCityMinimalVersion(mockServerVersionInfo("3.1")));" is 125.,127
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testTeamCityVersionOK,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"someBranch\"`\"sonar.branch.target\":\"master\"}");" is 125.,271
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testGitHubBranchParamPREmpty,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"someBranch\"`\"sonar.branch.target\":\"master\"}");" is 125.,296
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,testGitHubBranchLong,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"feature/someBranch\"`\"sonar.branch.target\":\"master\"}");" is 133.,310
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,executeProcessor,Long Statement,The length of the statement "when(build.getBuildFeaturesOfType(BranchesAndPullRequestsBuildFeature.BUILD_FEATURE_TYPE)).thenReturn(Collections.singleton(mockbf));" is 133.,358
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsBuildStartContextProcessorTest,executeProcessor,Long Statement,The length of the statement "BranchesAndPullRequestsBuildStartContextProcessor processor=spy(BranchesAndPullRequestsBuildStartContextProcessor.class);" is 121.,358
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testGitHubPrUrlHttp,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.pullrequest.key\":\"1\"`\"sonar.pullrequest.branch\":\"Update README.md\"`\"sonar.pullrequest.base\":\"master\"`\"sonar.pullrequest.provider\":\"github\"`\"sonar.pullrequest.github.repository\":\"orga-test/repo-test\"}");" is 279.,64
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testGitHubPrUrlHttpGitSuffix,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.pullrequest.key\":\"42\"`\"sonar.pullrequest.branch\":\"Update README.md\"`\"sonar.pullrequest.base\":\"master\"`\"sonar.pullrequest.provider\":\"github\"`\"sonar.pullrequest.github.repository\":\"orga-test/repo-test\"}");" is 280.,79
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testGitHubPrUrlSsh,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.pullrequest.key\":\"1\"`\"sonar.pullrequest.branch\":\"Update README.md\"`\"sonar.pullrequest.base\":\"master\"`\"sonar.pullrequest.provider\":\"github\"`\"sonar.pullrequest.github.repository\":\"orga-test/repo-test\"}");" is 279.,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testGitHubBranch,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"someBranch\"`\"sonar.branch.target\":\"master\"}");" is 125.,111
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Method,The method has 117 lines of code.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.3 (build 42)")));" is 134.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2020.1.4 (build 42)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2020")));" is 121.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.3 (build 42)")));" is 134.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.2.1 (build 71758)")));" is 139.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.2 (build 42)")));" is 134.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertTrue(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.2")));" is 123.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.5 (build 66605)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.4 (build 66526)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.3 (build 66439)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.2 (build 66342)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1.1 (build 66192)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2019.1")));" is 124.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.4 (build 61678)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.3 (build 61544)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.2 (build 61245)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2.1 (build 61078)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.2")));" is 124.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.5 (build 58744)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.4 (build 58724)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.3 (build 58658)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.2 (build 58537)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1.1 (build 58406)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2018.1 (build 58245)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.4 (build 51228)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.3 (build 51047)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.2 (build 50909)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2.1 (build 50732)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.2 (build 50574)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.5 (build 47175)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.4 (build 47070)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.3 (build 46961)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.2 (build 46812)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1.1 (build 46654)")));" is 140.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("2017.1 (build 46533)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.5 (build 42677)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.4 (build 42538)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.3 (build 42434)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.2 (build 42234)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0.1 (build 42078)")));" is 138.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("10.0 (build 42002)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.7 (build 37573)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.6 (build 37459)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.5 (build 37377)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.4 (build 37293)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.3 (build 37176)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.2 (build 37168)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1.1 (build 36973)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.1 (build 36973)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.5 (build 32523)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.4 (build 32407)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.3 (build 32334)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.2 (build 32195)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0.1 (build 32116)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("9.0 (build 32060)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.5 (build 30240)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.4 (build 30168)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.3 (build 30101)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.2 (build 29993)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1.1 (build 29939)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.1 (build 29879)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.6 (build 27767)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.5 (build 27692)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.4 (build 27540)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.3 (build 27540)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.2 (build 27482)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0.1 (build 27435)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("8.0 (build 27402)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.5 (build 24400)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.4 (build 24331)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.3 (build 24266)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.2 (build 24170)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1.1 (build 24074)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.1 (build 23907)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.4 (build 21474)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.3 (build 21424)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.2 (build 21349)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0.1 (build 21326)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("7.0 (build 21241)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.6 (build 18130)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.5 (build 18087)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.4 (build 18046)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.3 (build 17985)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.2 (build 17935)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5.1 (build 17834)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.5 (build 17795)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0.3 (build 15925)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0.2 (build 15857)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0.1 (build 15816)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("6.0 (build 15772)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.5 (build 13602)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.4 (build 13550)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.3 (build 13506)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.2 (build 13430)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1.1 (build 13398)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.1 (build 13360)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0.3 (build 10821)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0.2 (build 10784)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0.1 (build 10715)")));" is 137.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("5.0 (build 10669)")));" is 135.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.6 (build 9140)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.5 (build 9103)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.4 (build 9071)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.3 (build 9035)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.2 (build 9029)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5.1 (build 8975)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.5 (build 8944)")));" is 134.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.0.2 (build 8222)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.0.1 (build 8171)")));" is 136.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("4.0 (build 8080)")));" is 134.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("3.1.2")));" is 123.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("3.1.1")));" is 123.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersions,Long Statement,The length of the statement "Assert.assertFalse(BranchesAndPullRequestsParametersPreprocessor.isTeamCityMinimalVersion(mockServerVersionInfo("3.1")));" is 121.,124
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testTeamCityVersionOK,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"someBranch\"`\"sonar.branch.target\":\"master\"}");" is 125.,244
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testGitHubBranchParamPREmpty,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"someBranch\"`\"sonar.branch.target\":\"master\"}");" is 125.,269
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,testGitHubBranchLong,Long Statement,The length of the statement "Assert.assertEquals(buildParams.get(SQS_SYSENV)`"{\"sonar.branch.name\":\"feature/someBranch\"`\"sonar.branch.target\":\"master\"}");" is 133.,283
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.buildfeatures,BranchesAndPullRequestsParametersPreprocessorTest,executeProcessor,Long Statement,The length of the statement "when(build.getBuildFeaturesOfType(BranchesAndPullRequestsBuildFeature.BUILD_FEATURE_TYPE)).thenReturn(Collections.singleton(mockbf));" is 133.,331
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager,SQSManagerTest,test_own,Long Statement,The length of the statement "then(sqsManager.getOwnAvailableServers(myProject)).hasSize(1).areExactly(1`new Condition<>(sqsInfo -> sqsInfo.getId().equals(myServerId)`"Should be one " + myServerId));" is 169.,71
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager,SQSManagerTest,test_own,Long Statement,The length of the statement "then(sqsManager.getOwnAvailableServers(myRoot)).hasSize(1).areExactly(1`new Condition<>(sqsInfo -> sqsInfo.getId().equals(myRootServerId)`"Should be one " + myRootServerId));" is 174.,71
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager,SQSManagerTest,test_recurse,Long Statement,The length of the statement "then(sqsManager.getAvailableServers(myProject)).hasSize(2).areExactly(1`new Condition<>(sqsInfo -> sqsInfo.getId().equals(myServerId)`"Should be one " + myServerId)).areExactly(1`new Condition<>(sqsInfo -> sqsInfo.getId().equals(myRootServerId)`"Should be one " + myServerId));" is 277.,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager,SQSManagerTest,test_recurse,Long Statement,The length of the statement "then(sqsManager.getAvailableServers(myRoot)).hasSize(1).areExactly(1`new Condition<>(sqsInfo -> sqsInfo.getId().equals(myRootServerId)`"containing %s"`myRootServerId));" is 168.,95
Linfar_TeamCity.SonarQubePlugin,jetbrains.buildserver.sonarplugin.sqrunner.manager,SQSManagerTest,test_recurse,Magic Number,The method contains a magic number: 2,95

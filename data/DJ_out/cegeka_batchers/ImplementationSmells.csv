Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImpl,getJobResults,Long Statement,The length of the statement "List<JobInstance> jobInstancesByJobName=jobExplorer.findJobInstancesByJobName(AbstractEmployeeJobConfig.EMPLOYEE_JOB`0`Integer.MAX_VALUE);" is 138.,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImpl,getJobResults,Long Statement,The length of the statement "List<JobResult> collect=months.stream().map(mapJobStartParamsToJobResult(jobResultMap)).sorted((comparing(onYear).thenComparing(comparing(onMonth))).reversed()).collect(Collectors.toList());" is 190.,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImpl,getMapOfJobResultsForJobInstances,Long Statement,The length of the statement "Map<JobInstance`List<JobExecution>> jobInstanceWithJobExecutions=jobInstancesWithJobExecutionsMap(jobInstancesByJobName);" is 121.,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImpl,getMapOfJobResultsForJobInstances,Long Statement,The length of the statement "List<JobResult> jobResults=jobInstanceWithJobExecutions.entrySet().stream().map(jobExecutionMapper::toJobResultTo).collect(Collectors.toList());" is 144.,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImpl,jobInstancesWithJobExecutionsMap,Long Statement,The length of the statement "return jobInstancesByJobName.stream().collect(toMap(instance -> instance`instance -> jobExplorer.getJobExecutions(instance)));" is 126.,69
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImpl,getJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 12,85
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacade,callTaxService,Long Identifier,The length of the identifier successTaxWebserviceCallResult is 30.,20
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacade,callTaxService,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,20
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacade,saveTaxServiceCallResult,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxCalculatorJobService,startJobs,Long Statement,The length of the statement "catch ( JobExecutionAlreadyRunningException|JobRestartException|JobInstanceAlreadyCompleteException|JobParametersInvalidException e) {" is 134.,49
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobExecutionMapper,jobExecutionToJobExecutionResultMapper,Long Statement,The length of the statement "return jobExecution -> new JobExecutionResult(jobExecution.getId()`jobExecution.getStatus().toString()`jobExecution.getStartTime()`jobExecution.getEndTime()`getDescription(jobExecution));" is 187.,41
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobExecutionMapper,getDescription,Long Statement,The length of the statement "return jobExec.getJobParameters().getLong(JobStartParams.MONTH) + "/" + jobExec.getJobParameters().getLong(JobStartParams.YEAR)+ "` id :"+ jobExec.getId();" is 155.,48
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,SpringBatchAndBatchRepositoryCleaner,deleteEverythingFromRepositories,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobExecutionMapperTest,testToJobResultTo,Magic Number,The method contains a magic number: 1000,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,setUp,Magic Number,The method contains a magic number: 2000.0,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsFailed_andCallReturnsValid_callResultIsReturned,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,58
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsFailed_andCallReturnsValid_callResultIsReturned,Long Statement,The length of the statement "TaxWebserviceCallResult actualTaxWebserviceCallResult=taxPaymentWebServiceFacade.callTaxService(taxCalculation`taxServiceCallResultCallable);" is 141.,58
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsFailed_andCallReturnsException_exceptionIsReturned,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,67
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsFailed_andCallReturnsException_exceptionIsReturned,Long Statement,The length of the statement "when(taxServiceCallResultCallable.call()).thenThrow(new TaxWebServiceNonFatalException(new EmployeeTestBuilder().build()`Money.of(CurrencyUnit.EUR`10)`HttpStatus.INTERNAL_SERVER_ERROR`null`"boe"));" is 197.,67
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsFailed_andCallReturnsException_exceptionIsReturned,Long Statement,The length of the statement "expectExceptionWithMessage(TaxWebServiceNonFatalException.class`"Paying the taxes for employee with id null with amount EUR 10.00 failed because of boe");" is 154.,67
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsFailed_andCallReturnsException_exceptionIsReturned,Magic Number,The method contains a magic number: 10,67
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsValid_thenPreviousCallResultIsReturned,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,77
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsValid_thenPreviousCallResultIsReturned,Long Statement,The length of the statement "when(taxWebserviceCallResultRepository.findSuccessfulByTaxCalculation(taxCalculation)).thenReturn(taxWebserviceCallResultValid);" is 128.,77
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxPaymentWebServiceFacadeTest,whenPreviousCallResultIsValid_thenPreviousCallResultIsReturned,Long Statement,The length of the statement "assertThat(taxPaymentWebServiceFacade.callTaxService(taxCalculation`taxServiceCallResultCallable)).isEqualTo(taxWebserviceCallResultValid);" is 139.,77
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,SpringBatchAndBatchRepositoryCleanerTest,testDeleteAll,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,SpringBatchAndBatchRepositoryCleanerTest,testDeleteAll,Magic Number,The method contains a magic number: 6,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,SpringBatchAndBatchRepositoryCleanerTest,testDeleteAll,Magic Number,The method contains a magic number: 6,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Long Statement,The length of the statement "when(jobExplorer.findJobInstancesByJobName(EmployeeJobConfigSingleJvm.EMPLOYEE_JOB`0`MAX_VALUE)).thenReturn(jobInstances);" is 122.,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Long Statement,The length of the statement "when(jobExplorer.getJobExecutions(jobInstance2)).thenReturn(asList(jobInstance2_jobExecution1`jobInstance2_jobExecution2));" is 123.,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 2L,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 2014,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 5,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 2013,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 6,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 2013,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 6,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_DifferentDates_SortingIsDescOnYearAndMonth,Magic Number,The method contains a magic number: 6,46
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Long Statement,The length of the statement "when(jobExplorer.findJobInstancesByJobName(EmployeeJobConfigSingleJvm.EMPLOYEE_JOB`0`MAX_VALUE)).thenReturn(asList(jobInstance1));" is 130.,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Long Statement,The length of the statement "JobExecution jobInstance1_jobExecution1=new JobExecution(jobInstance1`1L`createJobParameters(dateTime.getYear()`dateTime.getMonthOfYear())`null);" is 145.,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Long Statement,The length of the statement "JobExecution jobInstance1_jobExecution2=new JobExecution(jobInstance1`2L`createJobParameters(dateTime.getYear()`dateTime.getMonthOfYear())`null);" is 145.,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Long Statement,The length of the statement "when(jobExplorer.getJobExecutions(jobInstance1)).thenReturn(asList(jobInstance1_jobExecution1`jobInstance1_jobExecution2));" is 123.,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Long Statement,The length of the statement "assertThat(jobResults.get(0).getJobExecutionResults().get(0).getEndTime()).isAfter(jobResults.get(0).getJobExecutionResults().get(1).getEndTime());" is 147.,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Magic Number,The method contains a magic number: 3,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Magic Number,The method contains a magic number: 2L,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetFinishedJobResults_SameDates_SortingIsDescOnDate,Magic Number,The method contains a magic number: 4,74
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobResults_Returns_Last6Months,Magic Number,The method contains a magic number: 6,95
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 3,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 2014,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 6,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 2,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 2,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 2,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 3,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 12,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 3,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 4,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 11,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 4,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 5,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 10,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,testGetJobStartParamsPreviousMonths,Magic Number,The method contains a magic number: 5,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplTest,createJobParameters,Long Statement,The length of the statement "return new JobParametersBuilder().addLong(JobStartParams.YEAR`year).addLong(JobStartParams.MONTH`month).toJobParameters();" is 122.,140
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,JobResultsServiceImplITest,testJobResults,Magic Number,The method contains a magic number: 6,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service,TaxCalculatorJobServiceTest,setUpJobLauncher,Long Statement,The length of the statement "setInternalState(taxCalculatorJobService`"jobStartListeners"`asList(jobStartListenerMock1`jobStartListenerMock2).stream().collect(toSet()));" is 140.,56
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service.reporting,MonthlyTaxReportServiceTest,generateReportWithCorrectData,Magic Number,The method contains a magic number: 3L,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service.reporting,MonthlyTaxReportServiceTest,generateReportWithCorrectData,Magic Number,The method contains a magic number: 5,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.service.reporting,MonthlyTaxReportServiceTest,testResultsArePersisted,Magic Number,The method contains a magic number: 3L,70
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.tasklet,JobResultsTaskletTest,testExecuteCallsService,Long Statement,The length of the statement "when(chunkContextMock.getStepContext()).thenReturn(new StepContext(new StepExecution("stepName"`new JobExecution(JOB_EXECUTION_ID)`123L)));" is 139.,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.tasklet,JobResultsTaskletTest,testExecuteCallsService,Magic Number,The method contains a magic number: 123L,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.tasklet,JobResultsTaskletTest,testExecuteCallsService,Magic Number,The method contains a magic number: 2L,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.tasklet,JobResultsTaskletTest,testExecuteCallsService,Magic Number,The method contains a magic number: 2015L,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.tasklet,JobResultsTaskletTest,testExecuteCallsService,Magic Number,The method contains a magic number: 12345L,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.tasklet,JobResultsTaskletTest,testExecuteCallsService,Magic Number,The method contains a magic number: 2015,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.tasklet,JobResultsTaskletTest,testExecuteCallsService,Magic Number,The method contains a magic number: 2,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,AbstractEmployeeJobConfig,taxCalculationStep,Long Statement,The length of the statement "return stepBuilders.get(stepName).<Employee`TaxCalculation>chunk(5).reader(taxCalculatorItemReader).processor(calculateTaxProcessor).writer(taxCalculatorItemWriter).taskExecutor(taskExecutor).listener(taxCalculationStepProgressListener()).allowStartIfComplete(true).build();" is 274.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,AbstractEmployeeJobConfig,taxCalculationStep,Magic Number,The method contains a magic number: 5,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,AbstractEmployeeJobConfig,wsCallAndGenerateAndSendPaycheckStep,Long Identifier,The length of the field maxConsecutiveExceptionsSkipPolicy is 34.,88
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,AbstractEmployeeJobConfig,wsCallAndGenerateAndSendPaycheckStep,Long Identifier,The length of the field createMonthlyTaxForEmployeeListener is 35.,88
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,AbstractEmployeeJobConfig,wsCallAndGenerateAndSendPaycheckStep,Long Identifier,The length of the field failedStepStepExecutionListener is 31.,88
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,AbstractEmployeeJobConfig,wsCallAndGenerateAndSendPaycheckStep,Long Statement,The length of the statement "return stepBuilders.get(stepName).<TaxCalculation`PayCheck>chunk(5).faultTolerant().skipPolicy(maxConsecutiveExceptionsSkipPolicy).noRollback(TaxWebServiceNonFatalException.class).noRollback(EmailSenderException.class).reader(wsCallItemReader).processor(compositeItemProcessor).writer(wsCallItemWriter).listener(createMonthlyTaxForEmployeeListener).listener(maxConsecutiveExceptionsSkipPolicy).listener(failedStepStepExecutionListener).listener(singleJVMJobProgressListener).allowStartIfComplete(true).taskExecutor(taskExecutor).build();" is 537.,88
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,AbstractEmployeeJobConfig,wsCallAndGenerateAndSendPaycheckStep,Magic Number,The method contains a magic number: 5,88
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,EmployeeJobTestConfig,dataSourcePopulator,Long Statement,The length of the statement "databasePopulator.setScripts(new ClassPathResource("org/springframework/batch/core/schema-drop-hsqldb.sql")`new ClassPathResource("org/springframework/batch/core/schema-hsqldb.sql"));" is 183.,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,RetryConfigTest,whenRetryCallbackFails_retryTimeIsExponential,Long Statement,The length of the statement "when(retryCallback.doWithRetry(any(RetryContext.class))).thenThrow(new TaxWebServiceNonFatalException(new EmployeeTestBuilder().build()`Money.of(CurrencyUnit.EUR`10)`null`null`"boe")).thenThrow(new TaxWebServiceNonFatalException(new EmployeeTestBuilder().build()`Money.of(CurrencyUnit.EUR`10)`null`null`"boe")).thenReturn(any());" is 329.,37
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,RetryConfigTest,whenRetryCallbackFails_retryTimeIsExponential,Magic Number,The method contains a magic number: 10,37
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,RetryConfigTest,whenRetryCallbackFails_retryTimeIsExponential,Magic Number,The method contains a magic number: 10,37
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,RetryConfigTest,whenRetryCallbackFails_retryTimeIsExponential,Magic Number,The method contains a magic number: 3,37
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config,RetryConfigTest,whenRetryCallbackFails_retryTimeIsExponential,Magic Number,The method contains a magic number: 300,37
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListener,afterWrite,Magic Number,The method contains a magic number: 100,54
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,CreateMonthlyTaxForEmployeeListener,afterProcess,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,19
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,CreateMonthlyTaxForEmployeeListener,afterProcess,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTaxForEmployee=MonthlyTaxForEmployee.from(item.getEmployee()`item.getYear()`item.getMonth()`item.getTax()`result.getPayCheckPdf());" is 160.,19
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,CreateMonthlyTaxForEmployeeListener,onProcessError,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,25
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,CreateMonthlyTaxForEmployeeListener,onProcessError,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTaxForEmployee=MonthlyTaxForEmployee.from(item.getEmployee()`item.getYear()`item.getMonth()`item.getTax()`e.getMessage());" is 151.,25
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,ChangeStatusOnFailedStepsJobExecListener,afterJob,Long Statement,The length of the statement "List<StepExecution> failedStepExecutions=jobExecution.getStepExecutions().stream().filter(stepExecution -> stepExecution.getExitStatus().getExitCode().equals(ExitStatus.FAILED.getExitCode())).collect(Collectors.toList());" is 221.,16
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,FailedStepStepExecutionListenerTest,testAfterStep_returns_FailedExitStatus_whenRead_And_Write_Count_Dont_Match,Long Identifier,The length of the field failedStepStepExecutionListener is 31.,24
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,FailedStepStepExecutionListenerTest,testAfterStep_returns_FailedExitStatus_whenRead_And_Write_Count_Dont_Match,Magic Number,The method contains a magic number: 2,24
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,FailedStepStepExecutionListenerTest,testAfterStep_returns_CompletedExitStatus_whenRead_And_Write_Match,Long Identifier,The length of the field failedStepStepExecutionListener is 31.,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,FailedStepStepExecutionListenerTest,testAfterStep_returns_CompletedExitStatus_whenRead_And_Write_Match,Magic Number,The method contains a magic number: 2,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,FailedStepStepExecutionListenerTest,testAfterStep_returns_CompletedExitStatus_whenRead_And_Write_Match,Magic Number,The method contains a magic number: 2,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,ChangeStatusOnFailedStepsJobExecListenerTest,testAfterJobJobExecutionHasBatchStatusFailedWhenWeHaveStepsWithStatusNotCompleted,Long Identifier,The length of the field changeStatusOnFailedStepsJobExecListener is 40.,16
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,ChangeStatusOnFailedStepsJobExecListenerTest,testAfterJobJobExecutionHasBatchStatusUnchangedWhenAllStepsCompleted,Long Identifier,The length of the field changeStatusOnFailedStepsJobExecListener is 40.,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith1000Employees_whenWritingOneItem_thenNoNewEventIsTriggered,Magic Number,The method contains a magic number: 1000,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_whenWritingOneItem_thenAProgressEventIsTriggered,Magic Number,The method contains a magic number: 100,62
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_whenWritingOneItem_thenAProgressEventIsTriggered,Magic Number,The method contains a magic number: 2,62
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith1000Employees_when999ItemsAreWrittenTwice_thenProgressIs99,Magic Number,The method contains a magic number: 1000,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith1000Employees_when999ItemsAreWrittenTwice_thenProgressIs99,Magic Number,The method contains a magic number: 999,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith1000Employees_when999ItemsAreWrittenTwice_thenProgressIs99,Magic Number,The method contains a magic number: 2,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith1000Employees_when999ItemsAreWrittenTwice_thenProgressIs99,Magic Number,The method contains a magic number: 99,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStarted_whenWritingAllItemsAtOnce_thenAnEventWith100ProgressIsTriggered,Magic Number,The method contains a magic number: 100,85
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStarted_whenWritingAllItemsAtOnce_thenAnEventWith100ProgressIsTriggered,Magic Number,The method contains a magic number: 100,85
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStarted_whenWritingAllItemsAtOnce_thenAnEventWith100ProgressIsTriggered,Magic Number,The method contains a magic number: 2,85
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStarted_whenWritingAllItemsAtOnce_thenAnEventWith100ProgressIsTriggered,Magic Number,The method contains a magic number: 100,85
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 100,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 25,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 25,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 25,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 25,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 5,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 25,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 2,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 50,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 3,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 75,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 4,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.listeners,SingleJVMJobProgressListenerTest,givenAStepStartedWith100Employees_when5ItemsAreWritten_thenAnEventIsTriggeredWithProgress,Magic Number,The method contains a magic number: 100,96
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.singlejvm,ItemReaderWriterConfig,monthlyTaxForEmployeeJpaItemWriter,Long Identifier,The length of the identifier monthlyTaxForEmployeeJpaItemWriter is 34.,104
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.singlejvm,EmployeeJobConfigSingleJvm,employeeJob,Long Identifier,The length of the field changeStatusOnFailedStepsJobExecListener is 40.,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.singlejvm,EmployeeJobConfigSingleJvm,employeeJob,Long Statement,The length of the statement "return jobBuilders.get(EMPLOYEE_JOB).start(taxCalculationStep()).next(wsCallAndGenerateAndSendPaycheckStep()).next(jobResultsPdf()).listener(jobStatusListener).listener(changeStatusOnFailedStepsJobExecListener).build();" is 219.,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.singlejvm,EmployeeJobConfigSingleJvm,wsCallAndGenerateAndSendPaycheckStep,Long Identifier,The length of the field WS_CALL_AND_GENERATE_AND_SEND_PAYCHECK_STEP is 43.,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,ItemReaderWriterConfig,monthlyTaxForEmployeeJpaItemWriter,Long Identifier,The length of the identifier monthlyTaxForEmployeeJpaItemWriter is 34.,88
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,ClusterConfig,getInterfacesToAdd,Long Identifier,The length of the field NET_INTERFACE_INTERNAL_LAN_PREFIX is 33.,98
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,ClusterConfig,getInterfacesToAdd,Long Statement,The length of the statement "List<String> wellKnownInterfaces=listNetworkINterfacesIps.stream().filter(existingInterface -> interestingINterfacesPrefixes.stream().filter(interestingINterfacePrefix -> existingInterface.startsWith(interestingINterfacePrefix)).count() > 0).distinct().collect(Collectors.toList());" is 282.,98
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,ClusterConfig,getBatchersmasterInterfacePrefix,Magic Number,The method contains a magic number: 4,155
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,ClusterConfig,getBatchersmasterInterfacePrefix,Magic Number,The method contains a magic number: 2,155
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobConfigMaster,employeeJob,Long Identifier,The length of the field changeStatusOnFailedStepsJobExecListener is 40.,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobConfigMaster,employeeJob,Long Statement,The length of the statement "return jobBuilders.get(EMPLOYEE_JOB).start(taxCalculationStep()).next(wsCallAndGenerateAndSendPaycheckStep()).next(jobResultsPdf()).listener(jobStatusListener).listener(changeStatusOnFailedStepsJobExecListener).build();" is 219.,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobConfigMaster,taxCalculationStep,Long Statement,The length of the statement "return stepBuilders.get(TAX_CALCULATION_STEP).partitioner(TAX_CALCULATION_STEP`employeeJobPartitioner).partitionHandler(taxCalculationPartitionHandler()).build();" is 162.,62
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobConfigMaster,wsCallAndGenerateAndSendPaycheckStep,Long Identifier,The length of the field WS_CALL_AND_GENERATE_AND_SEND_PAYCHECK_STEP is 43.,71
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobConfigMaster,taxCalculationPartitionHandler,Long Identifier,The length of the identifier messageChannelPartitionHandler is 30.,81
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobConfigMaster,taxCalculationPartitionHandler,Long Identifier,The length of the field MASTER_WITHOUT_TAX_CALCULATION_STEP is 35.,81
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,JobProgressNotifier,onMessage,Long Statement,The length of the statement "JobProgressEvent updateProgress=new JobProgressEvent(slaveProgressEvent.getJobStartParams()`slaveProgressEvent.getStepName()`progress);" is 135.,47
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,JobProgressNotifier,onMessage,Magic Number,The method contains a magic number: 100,47
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 31,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 5,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 7L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 8L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 14L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 15L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 21L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 22L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 28L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 29L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given31Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 31L,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 100,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 5,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 21L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 22L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 42L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 43L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 63L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 64L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 84L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 85L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.config.remotepartitioning,EmployeeJobPartitionerTest,given100Employees_whenPartitioningFor1NodeWith5PartitionsPerNode_thenDistributeCorrectly,Magic Number,The method contains a magic number: 100L,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculation,from,Long Parameter List,The method has 5 parameters. ,100
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepository,findByTaxCalculation,Long Statement,The length of the statement "TypedQuery<TaxWebserviceCallResult> byTaxCalculation=entityManager.createNamedQuery(TaxWebserviceCallResult.FIND_BY_TAXCALCULATION`TaxWebserviceCallResult.class);" is 162.,16
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepository,findSuccessfulByTaxCalculation,Long Statement,The length of the statement "TypedQuery<TaxWebserviceCallResult> byTaxCalculation=entityManager.createNamedQuery(TaxWebserviceCallResult.FIND_SUCCESSFUL_BY_TAXCALCULATION`TaxWebserviceCallResult.class);" is 173.,24
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResult,callSucceeded,Magic Number,The method contains a magic number: 200,48
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepository,getUnprocessedEmployeeIds,Long Statement,The length of the statement "TypedQuery<Long> namedQuery=entityManager.createNamedQuery(TaxCalculation.GET_UNPROCESSED_EMPLOYEES_IDS_BY_YEAR_AND_MONTH`Long.class);" is 134.,19
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepository,find,Long Statement,The length of the statement "TypedQuery<TaxCalculation> byMonthAndYear=entityManager.createNamedQuery(TaxCalculation.FIND_BY_YEAR_AND_MONTH`TaxCalculation.class);" is 133.,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepository,findByEmployee,Long Statement,The length of the statement "TypedQuery<TaxCalculation> byEmployee=entityManager.createNamedQuery(TaxCalculation.FIND_BY_EMPLOYEE`TaxCalculation.class);" is 123.,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepository,getSuccessSum,Long Statement,The length of the statement "Money sum=entityManager.createNamedQuery(TaxCalculation.GET_SUCCESS_SUM`Money.class).setParameter("month"`month).setParameter("year"`year).getSingleResult();" is 157.,47
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepository,getFailedSum,Long Statement,The length of the statement "Money sum=entityManager.createNamedQuery(TaxCalculation.GET_FAILED_SUM`Money.class).setParameter("month"`month).setParameter("year"`year).getSingleResult();" is 156.,56
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,PayCheckRepositoryTest,setUp,Magic Number,The method contains a magic number: 10.0,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,PayCheckRepositoryTest,setUp,Magic Number,The method contains a magic number: 2,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,PayCheckRepositoryTest,setUp,Magic Number,The method contains a magic number: 10.0,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,setup,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,setup,Long Statement,The length of the statement "januaryTry1=TaxWebserviceCallResult.callFailed(january`new TaxWebServiceFatalException(new EmployeeTestBuilder().build()`Money.of(CurrencyUnit.EUR`10)`HttpStatus.BAD_REQUEST`null`"boe"));" is 187.,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,setup,Magic Number,The method contains a magic number: 10.0,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,setup,Magic Number,The method contains a magic number: 2,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,setup,Magic Number,The method contains a magic number: 10.0,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,setup,Magic Number,The method contains a magic number: 10,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,testFindByTaxCalculation,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,69
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,testFindSuccessfulByTaxCalculation_returnsSuccessful,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,80
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,testFindSuccessfulByTaxCalculation_returnsSuccessful,Long Statement,The length of the statement "TaxWebserviceCallResult successfulByTaxCalculation=taxWebserviceCallResultRepository.findSuccessfulByTaxCalculation(january);" is 125.,80
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,testFindSuccessfulByTaxCalculation_returnsNullWhenNoCall,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,86
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,testFindSuccessfulByTaxCalculation_returnsNullWhenNoCall,Long Statement,The length of the statement "TaxWebserviceCallResult successfulByTaxCalculation=taxWebserviceCallResultRepository.findSuccessfulByTaxCalculation(march);" is 123.,86
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,testFindSuccessfulByTaxCalculation_returnsNullWhenNoCall,Magic Number,The method contains a magic number: 3,86
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxWebserviceCallResultRepositoryTest,testFindSuccessfulByTaxCalculation_returnsNullWhenNoCall,Magic Number,The method contains a magic number: 10.0,86
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,testFind,Magic Number,The method contains a magic number: 2014,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,cannotHaveDuplicateCalculation,Magic Number,The method contains a magic number: 15.0,62
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,givenNoEmployees_whenGettingSum_theSumIsZero,Magic Number,The method contains a magic number: 2014,71
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,givenNoEmployees_whenGettingSum_theSumIsZero,Magic Number,The method contains a magic number: 5,71
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,givenNoEmployees_whenGettingSum_theSumIsZero,Magic Number,The method contains a magic number: 2014,71
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,givenNoEmployees_whenGettingSum_theSumIsZero,Magic Number,The method contains a magic number: 5,71
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,given4EmployeesOneWithTax_whenGetUnprocessedEmployeeIds_thenReturnCorrectList,Long Statement,The length of the statement "assertThat(taxCalculationRepository.getUnprocessedEmployeeIds(2014L`5L`0L)).containsOnly(employee1.getId()`employee3.getId()`employee4.getId());" is 144.,120
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,given4EmployeesOneWithTax_whenGetUnprocessedEmployeeIds_thenReturnCorrectList,Magic Number,The method contains a magic number: 2014,120
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,given4EmployeesOneWithTax_whenGetUnprocessedEmployeeIds_thenReturnCorrectList,Magic Number,The method contains a magic number: 5,120
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,given4EmployeesOneWithTax_whenGetUnprocessedEmployeeIds_thenReturnCorrectList,Magic Number,The method contains a magic number: 2014L,120
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,given4EmployeesOneWithTax_whenGetUnprocessedEmployeeIds_thenReturnCorrectList,Magic Number,The method contains a magic number: 5L,120
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,setupGigelAndIonel,Magic Number,The method contains a magic number: 10.0,142
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,setupGigelAndIonel,Magic Number,The method contains a magic number: 2,142
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,setupGigelAndIonel,Magic Number,The method contains a magic number: 10.0,142
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,setupGigelAndIonel,Magic Number,The method contains a magic number: 12.0,142
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,setupGigelAndIonel,Magic Number,The method contains a magic number: 2,142
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,TaxCalculationRepositoryTest,setupGigelAndIonel,Magic Number,The method contains a magic number: 13.0,142
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobStartParams,hashCode,Magic Number,The method contains a magic number: 31,44
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobExecutionResult,JobExecutionResult,Long Parameter List,The method has 5 parameters. ,14
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobResultTest,testSortingOfJobExecutionResults,Magic Number,The method contains a magic number: 5L,12
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobResultTest,testSortingOfJobExecutionResults,Magic Number,The method contains a magic number: 2L,12
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobResultTest,testSortingOfJobExecutionResults,Magic Number,The method contains a magic number: 19L,12
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobExecutionResultTest,givenStartAndEndTime_whenGetDuration_thenCalculateDurationAsDifference,Magic Number,The method contains a magic number: 1234567L,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobExecutionResultTest,givenStartAndEndTime_whenGetDuration_thenCalculateDurationAsDifference,Magic Number,The method contains a magic number: 1000,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobExecutionResultTest,givenStartAndEndTime_whenGetDuration_thenCalculateDurationAsDifference,Magic Number,The method contains a magic number: 1000,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobExecutionResultTest,givenRunningJobExecutionWithoutEndTime_whenGetDuration_thenReturnNull,Magic Number,The method contains a magic number: 1234567L,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.domain,JobExecutionResultTest,givenNotStartedJobExecution_whenGetDuration_thenReturnNull,Magic Number,The method contains a magic number: 1234567L,23
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,SendPaycheckProcessor,getEmailBodyForEmployee,Long Statement,The length of the statement "StringBuilder sb=new StringBuilder().append("Dear employee`").append(newline).append("Please find enclosed the paycheck for ").append(getYearMonth(taxCalculation)).append(newline).append("Regards`").append(newline).append("The Finance department");" is 248.,55
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,SendPaycheckProcessorTest,setUp,Long Statement,The length of the statement "when(resourceLoader.getResource("classpath:/paycheck-template.docx")).thenReturn(new ClassPathResource("paycheck-template.docx"));" is 130.,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,SendPaycheckProcessorTest,setUp,Magic Number,The method contains a magic number: 2000,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,SendPaycheckProcessorTest,setUp,Magic Number,The method contains a magic number: 10.0,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,SendPaycheckProcessorTest,givenAnEmployee_whenProcessEmployee_thenAnEmailWithTheGeneratedPDFIsSent,Long Statement,The length of the statement "assertThat(context).containsKey("period").containsKey("name").containsKey("name").containsKey("employee_id").containsKey("monthly_income").containsKey("monthly_tax");" is 166.,84
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,EmployeeProcessorTest,setUp,Magic Number,The method contains a magic number: 2014L,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,EmployeeProcessorTest,setUp,Magic Number,The method contains a magic number: 5L,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,EmployeeProcessorTest,whenAnEmployeeWithoutCalculatedTax_isProcessed_thenTaxIsOnlyPercentOfCurrentIncome,Magic Number,The method contains a magic number: 1000,41
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,EmployeeProcessorTest,whenAnEmployeeWithoutCalculatedTax_isProcessed_thenTaxIsOnlyPercentOfCurrentIncome,Magic Number,The method contains a magic number: 1500,41
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,EmployeeProcessorTest,whenAnEmployeeWithoutCalculatedTax_isProcessed_thenTaxIsOnlyPercentOfCurrentIncome,Magic Number,The method contains a magic number: 100,41
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,EmployeeProcessorTest,whenAnEmployeeWithoutCalculatedTax_isProcessed_thenTaxIsOnlyPercentOfCurrentIncome,Magic Number,The method contains a magic number: 150,41
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 100,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 2014L,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 5L,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 123L,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 10,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 123L,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 2014,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 5,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CalculateTaxProcessorTest,testProcess,Magic Number,The method contains a magic number: 10,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CallWebserviceProcessorTest,setUp,Magic Number,The method contains a magic number: 2000.0,43
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CallWebserviceProcessorTest,testProcessHappyPath_NoExceptionHasBeenThrownAndEmployeeIsReturned,Long Statement,The length of the statement "when(taxPaymentWebServiceFacade.callTaxService(eq(taxCalculation)`any(Callable.class))).thenReturn(taxWebserviceCallResult);" is 124.,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CallWebserviceProcessorTest,testProcessBadResponse_ExceptionHasBeenThrownAndEmployeeIsReturned,Long Statement,The length of the statement "when(taxPaymentWebServiceFacade.callTaxService(eq(taxCalculation)`any(Callable.class))).thenThrow(new TaxWebServiceNonFatalException(new EmployeeTestBuilder().build()`Money.of(CurrencyUnit.EUR`10)`null`null`"boe"));" is 215.,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.processor,CallWebserviceProcessorTest,testProcessBadResponse_ExceptionHasBeenThrownAndEmployeeIsReturned,Magic Number,The method contains a magic number: 10,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,tearDown,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,86
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,tearDown,Long Identifier,The length of the field taxWebserviceCallResultRepository is 33.,86
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesNotFailWhenWebserviceResponseFails2TimesWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 2,126
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobContinuesButFailsWhenMailCanNotBeSend,Magic Number,The method contains a magic number: 2,138
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesFailBecauseOfSkipsWhenWebserviceResponseFails3TimesWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 2,152
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesFailBecauseOfSkipsWhenWebserviceResponseFails3TimesWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 4,152
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesFailCompletelyWhenWebserviceResponseFails9TimesConsecutiveWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 4,165
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesFailCompletelyWhenWebserviceResponseFails9TimesConsecutiveWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 9,165
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesContinueWhenWebserviceResponseFails8TimesConsecutiveWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 5,177
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesContinueWhenWebserviceResponseFails8TimesConsecutiveWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 8,177
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,jobDoesContinueWhenWebserviceResponseFails8TimesConsecutiveWithServerException_BackendMakesABobo,Magic Number,The method contains a magic number: 5,177
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenTaxServiceReturnsSuccess_MonthlyTaxForEmployeeHasNoErrorAndAPaycheck,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,229
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenTaxServiceReturnsFailure_MonthlyTaxForEmployeeHasErrorAndNoPaycheck,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,242
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,testSumOfSuccessTaxesIsCalculated,Magic Number,The method contains a magic number: 2,255
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,testSumOfSuccessTaxesIsCalculated,Magic Number,The method contains a magic number: 200D,255
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenWebServiceFailsForOneEmployee_thenSumOfTaxes_isCalculatedOnlyForSuccessfulCalls,Magic Number,The method contains a magic number: 3,268
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenWebServiceFailsForOneEmployee_thenSumOfTaxes_isCalculatedOnlyForSuccessfulCalls,Magic Number,The method contains a magic number: 3,268
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenWebServiceFailsForOneEmployee_thenSumOfTaxes_isCalculatedOnlyForSuccessfulCalls,Magic Number,The method contains a magic number: 200D,268
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenWebServiceFailsForOneEmployee_thenSumOfTaxes_isCalculatedForFailedCalls,Magic Number,The method contains a magic number: 3,282
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenWebServiceFailsForOneEmployee_thenSumOfTaxes_isCalculatedForFailedCalls,Magic Number,The method contains a magic number: 3,282
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,whenWebServiceFailsForOneEmployee_thenSumOfTaxes_isCalculatedForFailedCalls,Magic Number,The method contains a magic number: 100D,282
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,rerunSameMonthJobIfPreviousJobHasFailures,Magic Number,The method contains a magic number: 3,296
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,verifyJob,Long Statement,The length of the statement "jobExecution.getStepExecutions().forEach(se -> se.getFailureExceptions().forEach(t -> assertThat(t).isNotInstanceOf(AssertionError.class)));" is 140.,321
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,haveOneEmployee,Long Statement,The length of the statement "Employee employee=new EmployeeTestBuilder().withFirstName("Monica").withLastName("Dev").withIncome(1000).withEmailAddress(EMAIL_ADDRESS).build();" is 145.,335
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,haveOneEmployee,Magic Number,The method contains a magic number: 1000,335
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,EmployeeBatchJobITest,respondOneTimeWithSuccess,Long Statement,The length of the statement "mockServer.expect(requestTo(taxServiceUrl)).andExpect(method(HttpMethod.POST)).andRespond(withSuccess(STATUS_OK`MediaType.APPLICATION_JSON));" is 141.,347
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,AbstractBatchIntegrationTest,fixDateTimeToWhenJesusWasBorn,Magic Number,The method contains a magic number: 100L,38
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_noWork,Long Statement,The length of the statement "JobParameters jobParameters=new JobParametersBuilder().addLong("year"`2014L`true).addLong("month"`5L`true).toJobParameters();" is 125.,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_noWork,Long Statement,The length of the statement "JobExecution jobExecution=jobLauncherTestUtils.launchStep(EmployeeJobConfigSingleJvm.TAX_CALCULATION_STEP`jobParameters);" is 121.,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_noWork,Magic Number,The method contains a magic number: 2014L,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_noWork,Magic Number,The method contains a magic number: 5L,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_noWork,Magic Number,The method contains a magic number: 2014,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_noWork,Magic Number,The method contains a magic number: 5,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Long Statement,The length of the statement "JobParameters jobParameters=new JobParametersBuilder().addLong("year"`2014L`true).addLong("month"`5L`true).toJobParameters();" is 125.,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Long Statement,The length of the statement "JobExecution jobExecution=jobLauncherTestUtils.launchStep(EmployeeJobConfigSingleJvm.TAX_CALCULATION_STEP`jobParameters);" is 121.,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Magic Number,The method contains a magic number: 2014L,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Magic Number,The method contains a magic number: 5L,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Magic Number,The method contains a magic number: 2014,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Magic Number,The method contains a magic number: 5,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Magic Number,The method contains a magic number: 2014,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,taxCalculationStep_generatesCorrectCalculation,Magic Number,The method contains a magic number: 5,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,haveOneEmployee,Long Statement,The length of the statement "Employee employee=new EmployeeTestBuilder().withFirstName("Monica").withLastName("Dev").withIncome(1000).withEmailAddress("monica@cegeka.com").build();" is 151.,77
cegeka_batchers,be.cegeka.batchers.taxcalculator.batch.integration,TaxCalculationStepITest,haveOneEmployee,Magic Number,The method contains a magic number: 1000,77
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,SpecialEmployeesService,parseEmployeeIdWithFailureRateString,Long Identifier,The length of the parameter employeeIdWithFailureRateString is 31.,78
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TextFileTaxLogger,log,Long Statement,The length of the statement "String msg="Received tax request for employee with id " + employeeId + " with amount "+ taxAmount+ " and completed with status: "+ status;" is 138.,18
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testOK,Long Statement,The length of the statement "mockMvc.perform(post("/taxservice").contentType(MediaType.APPLICATION_JSON).content(convertObjectToJsonBytes(createTaxToAsJsonNode(1233454354L`222.3)))).andExpect(status().isOk());" is 180.,24
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testOK,Magic Number,The method contains a magic number: 1233454354L,24
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testOK,Magic Number,The method contains a magic number: 222.3,24
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testNoParams,Long Statement,The length of the statement "mockMvc.perform(post("/taxservice").contentType(MediaType.APPLICATION_JSON).content("")).andExpect(status().isBadRequest());" is 124.,31
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testMissingEmployeeId,Long Statement,The length of the statement "mockMvc.perform(post("/taxservice").contentType(MediaType.APPLICATION_JSON).content(convertObjectToJsonBytes(createTaxToAsJsonNode(null`222.3)))).andExpect(status().isBadRequest());" is 181.,38
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testMissingEmployeeId,Magic Number,The method contains a magic number: 222.3,38
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testMissingAmount,Long Statement,The length of the statement "mockMvc.perform(post("/taxservice").contentType(MediaType.APPLICATION_JSON).content(convertObjectToJsonBytes(createTaxToAsJsonNode(1234455667L`null)))).andExpect(status().isBadRequest());" is 187.,45
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testMissingAmount,Magic Number,The method contains a magic number: 1234455667L,45
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testUnluckEmployeesGetFailureResponse,Long Statement,The length of the statement "mockMvc.perform(post("/taxservice").contentType(MediaType.APPLICATION_JSON).content(convertObjectToJsonBytes(createTaxToAsJsonNode(123L`222.3)))).andExpect(status().is5xxServerError());" is 185.,53
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testUnluckEmployeesGetFailureResponse,Magic Number,The method contains a magic number: 123L,53
cegeka_batchers,be.cegeka.batchers.taxservice.stubwebservice,TaxControllerIntegrationTest,testUnluckEmployeesGetFailureResponse,Magic Number,The method contains a magic number: 222.3,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorService,resetEmployees,Long Statement,The length of the statement "throw new IllegalArgumentException("The number of generated employees must be between 1 and " + MAX_GENERATED_EMPLOYEES);" is 121.,28
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorService,generateNewEmployees,Magic Number,The method contains a magic number: 500,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorService,generateNewEmployees,Magic Number,The method contains a magic number: 4501,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeService,getTotalAmountOfPaidTaxes,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeService,getTotalAmountOfPaidTaxes,Long Statement,The length of the statement "return monthlyTaxForEmployeeRepository.findByEmployee(employee).stream().filter(monthlyTaxForEmployee -> monthlyTaxForEmployee.hasErrorMessage() == false).map(MonthlyTaxForEmployee::getTax).reduce((a`b) -> a.plus(b)).orElse(Money.zero(CurrencyUnit.EUR));" is 254.,31
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeService,getEmployeeTaxes,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxPaymentWebService,doWebserviceCallToTaxService,Long Statement,The length of the statement "throw new TaxWebServiceNonFatalException(employee`taxesToPay`webserviceResult.getStatusCode()`getJson(taxServiceResponseTo)`"invalid response from server");" is 156.,36
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxCalculatorService,calculateTax,Magic Number,The method contains a magic number: 0.1,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmailSenderServiceITest,sendAnEmailToMe,Magic Number,The method contains a magic number: 256,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmailSenderServiceITest,sendAnEmailToMe,Magic Number,The method contains a magic number: 256,40
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,RunningTimeServiceIntegrationTest,testValuesAreFromConfigFile,Magic Number,The method contains a magic number: 2L,13
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxPaymentWebServiceTest,testProcessHappyPath_NoExceptionHasBeenThrownAndEmployeeIsReturned,Magic Number,The method contains a magic number: 2000.0,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxPaymentWebServiceTest,testProcessBadResponse_ExceptionHasBeenThrownForever,Magic Number,The method contains a magic number: 2000.0,66
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxPaymentWebServiceTest,testProcessTimeoutResponse_ExceptionHasBeenThrownForever,Magic Number,The method contains a magic number: 2000.0,77
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxPaymentWebServiceTest,testProcess_UnexpectedServerExceptionOccurs_ExceptionIsRethrown,Magic Number,The method contains a magic number: 2000.0,86
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxPaymentWebServiceTest,testProcess_ClientExceptionOccurs_TaxWebserviceFatalExceptionIsRethrown,Magic Number,The method contains a magic number: 2000.0,95
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxPaymentWebServiceTest,whenCallingTheWebservice,Long Statement,The length of the statement "return when(restTemplateMock.postForEntity(eq(URI.create(HTTP_SOMEHOST_SOMEURL))`any(TaxTo.class)`eq(TaxServiceResponseTo.class)));" is 131.,104
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorIntegrationTest,testNumberOfEmployeesIsReadFromPropertyFile,Magic Number,The method contains a magic number: 12,33
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorIntegrationTest,testEmployeeGeneratorSetsNameAndIncome,Magic Number,The method contains a magic number: 500,38
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorIntegrationTest,testEmployeeGeneratorSetsNameAndIncome,Magic Number,The method contains a magic number: 5000,38
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxCalculatorServiceTest,setUp,Magic Number,The method contains a magic number: 100,27
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,TaxCalculatorServiceTest,testCalculateTax,Magic Number,The method contains a magic number: 10,35
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorServiceTest,whenGenerateEmployees_thenEmployeesGetSaved,Magic Number,The method contains a magic number: 3L,49
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeGeneratorServiceTest,whenGenerateEmployees_thenEmployeesGetSaved,Magic Number,The method contains a magic number: 3,49
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,RunningTimeServiceTest,testSleepWhenMinimumAndMaximumAreSet,Magic Number,The method contains a magic number: 300L,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,RunningTimeServiceTest,testSleepWhenMinimumAndMaximumAreSet,Magic Number,The method contains a magic number: 300L,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,givenEmployees_whenGetEmployees_thenRepositoryIsCalledWithCorrectParameters,Magic Number,The method contains a magic number: 10,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,givenEmployees_whenGetEmployees_thenRepositoryIsCalledWithCorrectParameters,Magic Number,The method contains a magic number: 10,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,testGetEmployeeTaxes,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,getTotalAmountOfPaidTaxes,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,getTotalAmountOfPaidTaxes,Long Statement,The length of the statement "when(monthlyTaxForEmployeeRepository.findByEmployee(employee)).thenReturn(Arrays.asList(new MonthlyTaxForEmployeeTestBuilder().withHasError(false).withTax(10.0).build()`new MonthlyTaxForEmployeeTestBuilder().withHasError(false).withTax(10.0).build()`new MonthlyTaxForEmployeeTestBuilder().withHasError(true).withTax(10.0).build()));" is 332.,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,getTotalAmountOfPaidTaxes,Magic Number,The method contains a magic number: 10.0,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,getTotalAmountOfPaidTaxes,Magic Number,The method contains a magic number: 10.0,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,getTotalAmountOfPaidTaxes,Magic Number,The method contains a magic number: 10.0,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service,EmployeeServiceTest,getTotalAmountOfPaidTaxes,Magic Number,The method contains a magic number: 20.0,64
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service.exceptions,TaxWebServiceFatalException,TaxWebServiceFatalException,Long Parameter List,The method has 5 parameters. ,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service.exceptions,TaxWebServiceFatalException,TaxWebServiceFatalException,Long Parameter List,The method has 5 parameters. ,15
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service.exceptions,TaxWebServiceException,TaxWebServiceException,Long Parameter List,The method has 5 parameters. ,14
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service.exceptions,TaxWebServiceException,TaxWebServiceException,Long Parameter List,The method has 5 parameters. ,22
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service.exceptions,TaxWebServiceException,createMessage,Long Statement,The length of the statement "return String.format("Paying the taxes for employee with id %d with amount %s failed because of %s"`employee.getId()`taxesToPay.toString()`reason);" is 147.,30
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service.exceptions,TaxWebServiceNonFatalException,TaxWebServiceNonFatalException,Long Parameter List,The method has 5 parameters. ,9
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.service.exceptions,TaxWebServiceNonFatalException,TaxWebServiceNonFatalException,Long Parameter List,The method has 5 parameters. ,13
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.config,WebserviceCallConfig,restTemplate,Long Statement,The length of the statement "restTemplate.setMessageConverters(Arrays.<HttpMessageConverter<?>>asList(new MappingJackson2HttpMessageConverter()`new StringHttpMessageConverter()));" is 150.,27
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployee,MonthlyTaxForEmployee,Long Parameter List,The method has 6 parameters. ,77
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployee,from,Long Parameter List,The method has 5 parameters. ,87
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployee,from,Long Parameter List,The method has 5 parameters. ,91
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepository,findByEmployee,Long Statement,The length of the statement "TypedQuery<MonthlyTaxForEmployee> typedQuery=entityManager.createNamedQuery(MonthlyTaxForEmployee.FIND_BY_EMPLOYEE`MonthlyTaxForEmployee.class);" is 144.,29
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepository,find,Long Statement,The length of the statement "TypedQuery<MonthlyTaxForEmployee> typedQuery=entityManager.createNamedQuery(MonthlyTaxForEmployee.FIND_BY_EMPLOYEE_YEAR_AND_MONTH`MonthlyTaxForEmployee.class);" is 159.,37
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTestBuilder,withAPdf,Magic Number,The method contains a magic number: 10,56
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTestBuilder,withHasError,Magic Number,The method contains a magic number: 10,67
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,testWhenSavingTheEmployeeIsPersisted,Long Statement,The length of the statement "Employee employee=new EmployeeTestBuilder().withIncome(INCOME).withFirstName(FIRST_NAME).withLastName(LAST_NAME).build();" is 121.,36
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,testCount,Magic Number,The method contains a magic number: 2L,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,given30Employees_whenGetEmployeesForFirstPage_thenFirst10EmployeesAreReturned,Magic Number,The method contains a magic number: 30,91
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,given30Employees_whenGetEmployeesForFirstPage_thenFirst10EmployeesAreReturned,Magic Number,The method contains a magic number: 10,91
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,given30Employees_whenGetEmployeesForFirstPage_thenFirst10EmployeesAreReturned,Magic Number,The method contains a magic number: 10,91
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,givenEmployeesWithoutCalculatedTaxes_whenGetEmployeesForSecondPage_thenSecondPageEmployeesAreReturnedWithTaxZero,Magic Number,The method contains a magic number: 30,100
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,givenEmployeesWithoutCalculatedTaxes_whenGetEmployeesForSecondPage_thenSecondPageEmployeesAreReturnedWithTaxZero,Magic Number,The method contains a magic number: 10,100
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,givenEmployeesWithoutCalculatedTaxes_whenGetEmployeesForSecondPage_thenSecondPageEmployeesAreReturnedWithTaxZero,Magic Number,The method contains a magic number: 10,100
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,given20Employees_whenGetCount_thenEmployeeCountIs20,Magic Number,The method contains a magic number: 20,109
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,given20Employees_whenGetCount_thenEmployeeCountIs20,Magic Number,The method contains a magic number: 20L,109
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeRepositoryTest,haveEmployees,Long Statement,The length of the statement "Employee employee=new EmployeeTestBuilder().withFirstName("John" + i).withLastName("Smith" + i).withEmailAddress("john.smith" + i + "@gmail.com").build();" is 154.,116
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,EmployeeTestFixture,anEmployee,Long Statement,The length of the statement "return new EmployeeTestBuilder().withFirstName("firstame").withLastName("lastName").withEmailAddress("cucu@mailinator.com").build();" is 132.,5
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testSave_UpdatesExistingMonthlyTaxForEmployeeRecord,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testSave_UpdatesExistingMonthlyTaxForEmployeeRecord,Long Statement,The length of the statement "MonthlyTaxForEmployee marchFailed=new MonthlyTaxForEmployeeTestBuilder().withEmployee(employee).withYear(2014).withMonth(1).withTax(10.0).withLastErrorMessage("it failed").build();" is 180.,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testSave_UpdatesExistingMonthlyTaxForEmployeeRecord,Long Statement,The length of the statement "MonthlyTaxForEmployee marchSucceeded=new MonthlyTaxForEmployeeTestBuilder().withEmployee(employee).withYear(2014).withMonth(1).withTax(10.0).withAPdf().build();" is 160.,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testSave_UpdatesExistingMonthlyTaxForEmployeeRecord,Magic Number,The method contains a magic number: 2014,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testSave_UpdatesExistingMonthlyTaxForEmployeeRecord,Magic Number,The method contains a magic number: 10.0,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testSave_UpdatesExistingMonthlyTaxForEmployeeRecord,Magic Number,The method contains a magic number: 2014,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testSave_UpdatesExistingMonthlyTaxForEmployeeRecord,Magic Number,The method contains a magic number: 10.0,32
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testFindByEmployee,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testFind,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,62
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,testFind,Magic Number,The method contains a magic number: 2014,62
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Long Statement,The length of the statement "gigelJanuary=new MonthlyTaxForEmployeeTestBuilder().withEmployee(gigel).withYear(2014).withMonth(1).withTax(10.0).build();" is 122.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Long Statement,The length of the statement "gigelFebruary=new MonthlyTaxForEmployeeTestBuilder().withEmployee(gigel).withYear(2014).withMonth(2).withTax(10.0).build();" is 123.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Long Statement,The length of the statement "ionelJanuary=new MonthlyTaxForEmployeeTestBuilder().withEmployee(ionel).withYear(2014).withMonth(1).withTax(12.0).build();" is 122.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Long Statement,The length of the statement "ionelFebruary=new MonthlyTaxForEmployeeTestBuilder().withEmployee(ionel).withYear(2014).withMonth(2).withTax(13.0).build();" is 123.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 2014,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 10.0,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 2014,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 2,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 10.0,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 2014,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 12.0,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 2014,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 2,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,setupSomeEmployeesAndMonthlyTaxes,Magic Number,The method contains a magic number: 13.0,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,saveTaxesFor2014_5,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,98
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,saveTaxesFor2014_5,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTaxForEmployee=new MonthlyTaxForEmployeeTestBuilder().withEmployee(employee).withTax(tax).withYear(2014).withMonth(5).withHasError(hasError).build();" is 178.,98
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,saveTaxesFor2014_5,Magic Number,The method contains a magic number: 2014,98
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeRepositoryTest,saveTaxesFor2014_5,Magic Number,The method contains a magic number: 5,98
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,dateTimeIsFilledIn,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTaxForEmployee=MonthlyTaxForEmployee.from(new EmployeeTestBuilder().build()`2014`5`Money.of(CurrencyUnit.EUR`10.00)`"there was an error");" is 167.,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,dateTimeIsFilledIn,Magic Number,The method contains a magic number: 2014,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,dateTimeIsFilledIn,Magic Number,The method contains a magic number: 5,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,dateTimeIsFilledIn,Magic Number,The method contains a magic number: 10.00,11
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_True,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTaxForEmployee=MonthlyTaxForEmployee.from(new EmployeeTestBuilder().build()`2014`5`Money.of(CurrencyUnit.EUR`10.00)`"there was an error");" is 167.,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_True,Magic Number,The method contains a magic number: 2014,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_True,Magic Number,The method contains a magic number: 5,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_True,Magic Number,The method contains a magic number: 10.00,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_False,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTaxForEmployee=MonthlyTaxForEmployee.from(new EmployeeTestBuilder().build()`2014`5`Money.of(CurrencyUnit.EUR`10.00)`new byte[10]);" is 159.,23
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_False,Magic Number,The method contains a magic number: 2014,23
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_False,Magic Number,The method contains a magic number: 5,23
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_False,Magic Number,The method contains a magic number: 10.00,23
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain,MonthlyTaxForEmployeeTest,hasErrorMessage_False,Magic Number,The method contains a magic number: 10,23
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.email,EmailAttachmentTO,toString,Long Statement,The length of the statement "return "EmailAttachmentTO{" + "mimeType='" + mimeType + '\''+ "` name='"+ name+ '\''+ "` description='"+ description+ '\''+ '}';" is 128.,42
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.email,EmailTO,toString,Long Statement,The length of the statement "return "EmailTO{" + "tos=" + tos + "` attachments="+ attachments+ "` body='"+ body+ '\''+ "` subject='"+ subject+ '\''+ "` from='"+ from+ '\''+ '}';" is 148.,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.generation,ApplicationRepositoryCleaner,deleteAll,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,24
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.generation,ApplicationRepositoryCleanerTest,testDeleteAll,Long Identifier,The length of the field monthlyTaxForEmployeeRepositoryMock is 35.,28
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepository,findByYearAndMonth,Long Statement,The length of the statement "TypedQuery<MonthlyReport> typedQuery=entityManager.createNamedQuery(MonthlyReport.FIND_BY_YEAR_AND_MONTH`MonthlyReport.class);" is 126.,15
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReport,from,Long Parameter List,The method has 5 parameters. ,54
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 3L,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 2014,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 3,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 4L,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 2014,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 4,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 2014,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 3,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 2014,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindByYearAndMonth,Magic Number,The method contains a magic number: 4,17
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindById,Magic Number,The method contains a magic number: 3L,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindById,Magic Number,The method contains a magic number: 2014,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindById,Magic Number,The method contains a magic number: 3,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindById,Magic Number,The method contains a magic number: 4L,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindById,Magic Number,The method contains a magic number: 2014,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.reporting,MonthlyReportRepositoryTest,testFindById,Magic Number,The method contains a magic number: 4,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.pdf,PdfAssertions,getPdfText,Empty catch clause,The method has an empty catch block.,21
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.pdf,PDFGeneratorServiceTest,pdfGeneratorServiceIsThreadSafe,Magic Number,The method contains a magic number: 10,42
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.pdf,PDFGeneratorServiceTest,doPdfGenerationInMultipleThreads,Long Statement,The length of the statement "Set<Future<byte[]>> results=createCallsToPdfGeneratorServiceMultiThreaded(pdfGeneratorService`numberOfSimultaneousThreads`startCountDownLatch`endCountDownLatch);" is 161.,50
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.pdf,PDFGeneratorServiceTest,createCallsToPdfGeneratorServiceMultiThreaded,Long Identifier,The length of the identifier pdfGeneratorServiceForMultipleThreads is 37.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.pdf,PDFGeneratorServiceTest,createCallsToPdfGeneratorServiceMultiThreaded,Long Statement,The length of the statement "Callable<byte[]> pdfGeneratorServiceForMultipleThreads=createPdfGeneratorServiceForMultipleThreads(pdfGeneratorService`startCountDownLatch`endCountDownLatch);" is 158.,73
cegeka_batchers,be.cegeka.batchers.taxcalculator.application.domain.pdf,PDFGeneratorServiceTest,waitForXDocReportToInitialize,Magic Number,The method contains a magic number: 2,102
cegeka_batchers,be.cegeka.batchers.taxcalculator.infrastructure.config,EventBusPostProcessor,postProcessAfterInitialization,Long Statement,The length of the statement "LOG.trace("Bean {} containing method {} was subscribed to {}"`new Object[]{beanName`method.getName()`EventBus.class.getCanonicalName()});" is 137.,26
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.model,EmployeeTaxTo,EmployeeTaxTo,Long Parameter List,The method has 5 parameters. ,21
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,getEmployees,Long Identifier,The length of the field presentationEmployeeRepository is 30.,33
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,getEmployeeCount,Long Identifier,The length of the field presentationEmployeeRepository is 30.,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,getEmployeeDetails,Long Identifier,The length of the field presentationEmployeeRepository is 30.,45
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,getEmployeeTaxes,Long Statement,The length of the statement "List<EmployeeTaxTo> employeeTaxTos=employeeTaxes.stream().map(mapTaxCalculationToEmployeeTaxTo(employee)).sorted(comparing(onMonth).reversed()).collect(Collectors.toList());" is 173.,51
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,mapTaxCalculationToEmployeeTaxTo,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,65
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,mapTaxCalculationToEmployeeTaxTo,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTaxForEmployee=monthlyTaxForEmployeeRepository.find(employee`taxCalculation.getYear()`taxCalculation.getMonth());" is 142.,65
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,mapTaxCalculationToEmployeeTaxTo,Long Statement,The length of the statement "String status=monthlyTaxForEmployee == null ? "IN PROGRESS" : monthlyTaxForEmployee.getMonthlyReportPdf() == null ? "FAILURE" : "SUCCESS";" is 138.,65
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestController,mapTaxCalculationToEmployeeTaxTo,Long Statement,The length of the statement "return new EmployeeTaxTo(taxCalculation.getYear()`taxCalculation.getMonth()`taxCalculation.getTax()`taxCalculation.getCalculationDate()`status);" is 144.,65
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,JobResultsControllerTest,testGetReportContent,Long Statement,The length of the statement "mockMvc.perform(get("/files/job_report/" + JOB_EXECUTION_ID + ".pdf")).andExpect(status().isOk()).andExpect(content().bytes(bytes));" is 132.,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,JobResultsControllerTest,testGetReportContent,Magic Number,The method contains a magic number: 2014,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,JobResultsControllerTest,testGetReportContent,Magic Number,The method contains a magic number: 4,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,setUp,Long Statement,The length of the statement "mockMvc=MockMvcBuilders.standaloneSetup(employeeRestController).setMessageConverters(new MappingJackson2HttpMessageConverter()).build();" is 136.,52
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,givenOneEmployee_whenGetEmployees_thenReturnCorrectJson,Long Identifier,The length of the field presentationEmployeeRepository is 30.,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,givenOneEmployee_whenGetEmployees_thenReturnCorrectJson,Long Statement,The length of the statement "EmployeeTo employeeTo=new EmployeeTo(employee.getFirstName()`employee.getLastName()`employee.getEmail()`employee.getIncome()`Money.parse("EUR 200")`1L`0l);" is 155.,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,givenOneEmployee_whenGetEmployees_thenReturnCorrectJson,Long Statement,The length of the statement "MvcResult mvcResult=mockMvc.perform(get("/employees?page=0&pageSize=10").contentType(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andReturn();" is 153.,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,givenOneEmployee_whenGetEmployees_thenReturnCorrectJson,Magic Number,The method contains a magic number: 200,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,givenOneEmployee_whenGetEmployees_thenReturnCorrectJson,Magic Number,The method contains a magic number: 10,59
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,givenOneEmployee_whenGetEmployeeCount_thenReturnCorrectJson,Long Identifier,The length of the field presentationEmployeeRepository is 30.,79
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,givenOneEmployee_whenGetEmployeeCount_thenReturnCorrectJson,Long Statement,The length of the statement "MvcResult mvcResult=mockMvc.perform(get("/employees/count").contentType(MediaType.APPLICATION_JSON)).andExpect(status().isOk()).andReturn();" is 140.,79
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,testGetEmployeeTaxes,Long Identifier,The length of the field monthlyTaxForEmployeeRepository is 31.,92
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,testGetEmployeeTaxes,Magic Number,The method contains a magic number: 12L,92
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,testGetEmployeeTaxes,Magic Number,The method contains a magic number: 2012,92
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,testGetEmployeeTaxes,Magic Number,The method contains a magic number: 2,92
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,EmployeeRestControllerTest,testGetEmployeeTaxes,Magic Number,The method contains a magic number: 10,92
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,GenerateEmployeesRestControllerTest,setUp,Long Identifier,The length of the field generateEmployeesRestController is 31.,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,GenerateEmployeesRestControllerTest,setUp,Long Statement,The length of the statement "mockMvc=MockMvcBuilders.standaloneSetup(generateEmployeesRestController).setMessageConverters(new MappingJackson2HttpMessageConverter()).build();" is 145.,34
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.rest.controller,GenerateEmployeesRestControllerTest,testGetFirst20Employees,Long Identifier,The length of the field TEST_NUMBER_OF_EMPLOYEES_TO_GENERATE is 36.,41
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.utils,JodaMoneySerializerTest,testMoneySerialization,Magic Number,The method contains a magic number: 234.56,21
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.config,WebAppInitializer,onStartup,Long Statement,The length of the statement "ServletRegistration.Dynamic dispatcherServlet=servletContext.addServlet(DISPATCHER_SERVLET_NAME`new DispatcherServlet(ctx));" is 124.,24
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.config,PresentationTestConfig,presentationEmployeeRepository,Long Identifier,The length of the identifier presentationEmployeeRepository is 30.,16
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.to,EmployeeTo,EmployeeTo,Long Parameter List,The method has 7 parameters. ,26
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.repositories,PresentationEmployeeRepositoryTest,givenEmployeeWithError_whenGetEmployees_employeeWithErrorIsReturned,Long Identifier,The length of the field presentationEmployeeRepository is 30.,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.repositories,PresentationEmployeeRepositoryTest,givenEmployeeWithError_whenGetEmployees_employeeWithErrorIsReturned,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTax=new MonthlyTaxForEmployeeTestBuilder().withEmployee(first).withLastErrorMessage("BOOM!!!").build();" is 132.,39
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.repositories,PresentationEmployeeRepositoryTest,givenEmployeeWithNoError_whenGetEmployees_employeeWithNoErrorIsReturned,Long Identifier,The length of the field presentationEmployeeRepository is 30.,55
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.repositories,PresentationEmployeeRepositoryTest,givenEmployeeWithError_whenGetEmploye_employeeWithErrorIsReturned,Long Identifier,The length of the field presentationEmployeeRepository is 30.,70
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.repositories,PresentationEmployeeRepositoryTest,givenEmployeeWithError_whenGetEmploye_employeeWithErrorIsReturned,Long Statement,The length of the statement "MonthlyTaxForEmployee monthlyTax=new MonthlyTaxForEmployeeTestBuilder().withEmployee(first).withLastErrorMessage("BOOM!!!").build();" is 132.,70
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.repositories,PresentationEmployeeRepositoryTest,givenEmployeeWithNoError_whenGetEmployee_employeeWithNoErrorIsReturned,Long Identifier,The length of the field presentationEmployeeRepository is 30.,87
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.performance,ThreadedPerformanceTest,setUp,Magic Number,The method contains a magic number: 2L,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.performance,ThreadedPerformanceTest,setUp,Magic Number,The method contains a magic number: 2014L,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.performance,ThreadedPerformanceTest,setUp,Magic Number,The method contains a magic number: 51,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.performance,ThreadedPerformanceTest,setUp,Magic Number,The method contains a magic number: 50,53
cegeka_batchers,be.cegeka.batchers.taxcalculator.presentation.performance,ThreadedPerformanceTest,respondSuccess,Long Statement,The length of the statement "mockServer.expect(requestTo(taxServiceUrl)).andExpect(method(HttpMethod.POST)).andRespond(withSuccess(STATUS_OK`MediaType.APPLICATION_JSON));" is 141.,88

Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
jkazama_ddd-java,sample.context.rest,RestErrorAdvice,handleBind,Magic Number,The method contains a magic number: 2,64
jkazama_ddd-java,sample.context.uid,IdGenerator,generate,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2fc7698c,20
jkazama_ddd-java,sample.context.orm,TxTemplate,tx,Long Statement,The length of the statement "return this.idLock.get().call(this.IdLockPair.get().getId()`this.IdLockPair.get().getLockType()`() -> tmpl.execute(status -> supplier.get()));" is 142.,92
jkazama_ddd-java,sample.util,Calculator,add,Empty catch clause,The method has an empty catch block.,67
jkazama_ddd-java,sample.util,Calculator,subtract,Empty catch clause,The method has an empty catch block.,94
jkazama_ddd-java,sample.util,Calculator,multiply,Empty catch clause,The method has an empty catch block.,117
jkazama_ddd-java,sample.util,Calculator,divideBy,Empty catch clause,The method has an empty catch block.,140
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Long Statement,The length of the statement "assertEquals(new BigDecimal("0.91")`Calculator.init(12.4).scale(2).add(0.033).subtract(2.33).multiply(0.3).divideBy(3.3).decimal());" is 132.,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 4,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 10,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 2,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 4,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 4,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 8,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 12.4,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 2,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 0.033,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 2.33,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 0.3,11
jkazama_ddd-java,sample.util,CalculatorTest,単純な四則演算検証,Magic Number,The method contains a magic number: 3.3,11
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Long Statement,The length of the statement "assertEquals(new BigDecimal("3.34")`Calculator.init(3.333).scale(2`RoundingMode.HALF_UP).add(0.001).add(0.001).decimal());" is 122.,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Long Statement,The length of the statement "assertEquals(new BigDecimal("3.33")`Calculator.init(3.333).scale(2`RoundingMode.HALF_UP).roundingAlways(true).add(0.001).add(0.001).decimal());" is 143.,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 3.333,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 2,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 0.001,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 0.001,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 3.333,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 2,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 0.001,25
jkazama_ddd-java,sample.util,CalculatorTest,累積端数処理の検証,Magic Number,The method contains a magic number: 0.001,25
jkazama_ddd-java,sample.model,DataFixtures,cio,Long Statement,The length of the statement "return new CashInOut(uid.generate(CashInOut.class.getSimpleName())`accountId`"JPY"`new BigDecimal(absAmount)`withdrawal`time.tp()`time.dayPlus(1)`time.dayPlus(3)`"tFiCode"`"tFiAccId"`"sFiCode"`"sFiAccId"`ActionStatusType.UNPROCESSED`"dummy"`time.date()`null);" is 259.,101
jkazama_ddd-java,sample.model,DataFixtures,cio,Magic Number,The method contains a magic number: 3,101
jkazama_ddd-java,sample.model.asset,CashInOut,withdraw,Magic Number,The method contains a magic number: 3,188
jkazama_ddd-java,sample.usecase,AssetAdminService,closingCashOutInTx,Empty catch clause,The method has an empty catch block.,60
jkazama_ddd-java,sample.usecase,AssetAdminService,realizeCashflowInTx,Empty catch clause,The method has an empty catch block.,95
jkazama_ddd-java,sample.usecase,AssetService,AssetService,Long Parameter List,The method has 5 parameters. ,33
jkazama_ddd-java,sample.usecase.mail,ServiceMailDeliver,handleEvent,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6b96af8d,46

Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
pietermartin_sqlg,org.umlg.sqlg,SqlgPlugin,load,Long Statement,The length of the statement "throw new IllegalStateException("Could not find suitable Sqlg plugin for the database: " + metaData.getDatabaseProductName());" is 126.,59
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlTypeToPropertyType,Complex Method,Cyclomatic complexity of the method is 13,72
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlTypeToPropertyType,Long Parameter List,The method has 7 parameters. ,72
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlTypeToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@fa955cd,72
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlArrayTypeNameToPropertyType,Complex Method,Cyclomatic complexity of the method is 12,105
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlArrayTypeNameToPropertyType,Long Parameter List,The method has 6 parameters. ,105
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlArrayTypeNameToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@241c2c41,105
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Conditional,The conditional expression value instanceof Boolean || value instanceof Boolean[] || value instanceof boolean[] is complex.,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Conditional,The conditional expression value instanceof Byte || value instanceof Byte[] || value instanceof byte[] is complex.,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Conditional,The conditional expression value instanceof Short || value instanceof Short[] || value instanceof short[] is complex.,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Conditional,The conditional expression value instanceof Integer || value instanceof Integer[] || value instanceof int[] is complex.,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Conditional,The conditional expression value instanceof Long || value instanceof Long[] || value instanceof long[] is complex.,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Conditional,The conditional expression value instanceof Double || value instanceof Double[] || value instanceof double[] is complex.,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Conditional,The conditional expression value instanceof Float || value instanceof Float[] || value instanceof float[] is complex.,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,validateProperty,Complex Method,Cyclomatic complexity of the method is 18,154
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,propertyTypeToSqlDefinition,Complex Method,Cyclomatic complexity of the method is 45,225
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,propertyTypeToSqlDefinition,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5910173d,225
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,propertyTypeToJavaSqlType,Complex Method,Cyclomatic complexity of the method is 38,321
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,propertyTypeToJavaSqlType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@577b479d,321
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,putJsonObject,Complex Method,Cyclomatic complexity of the method is 12,398
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,putJsonObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@12397782,398
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,putJsonMetaObject,Complex Method,Cyclomatic complexity of the method is 10,450
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,putJsonMetaObject,Long Parameter List,The method has 5 parameters. ,450
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,putJsonMetaObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@57022fa0,450
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,putJsonMetaObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@e727382,450
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_graph\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"updatedOn\" TIMESTAMP` "+ "\"version\" VARCHAR` "+ "\"dbVersion\" VARCHAR);");" is 216.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_schema\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" VARCHAR);");" is 158.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_vertex\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" VARCHAR` "+ "\"schemaVertex\" VARCHAR`"+ "\"partitionType\" VARCHAR` "+ "\"partitionExpression\" VARCHAR` "+ "\"shardCount\" INTEGER);");" is 283.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_edge\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" VARCHAR` "+ "\"partitionType\" VARCHAR` "+ "\"partitionExpression\" VARCHAR` "+ "\"shardCount\" INTEGER);");" is 252.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_partition\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" VARCHAR` "+ "\"from\" VARCHAR` "+ "\"to\" VARCHAR` "+ "\"in\" VARCHAR` "+ "\"modulus\" INTEGER` "+ "\"remainder\" INTEGER` "+ "\"partitionType\" VARCHAR` "+ "\"partitionExpression\" VARCHAR);");" is 343.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_property\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" VARCHAR` "+ "\"type\" VARCHAR);");" is 182.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_index\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" VARCHAR` "+ "\"index_type\" VARCHAR);");" is 185.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_schema_vertex\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.schema__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.schema__O\") REFERENCES \"sqlg_schema\".\"V_schema\" (\"ID\"));");" is 377.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_in_edges\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 366.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_out_edges\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 367.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_property\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 385.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_property\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 377.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_identifier\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 421.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_identifier\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 413.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_partition\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 389.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_partition\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 381.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_partition_partition\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\"));");" is 401.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_distribution\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 389.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_colocate\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 379.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_distribution\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 381.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_colocate\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 371.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_index\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.index__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 373.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_index\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.index__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 365.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_index_property\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.index__O\" BIGINT` "+ "\"sequence\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.index__O\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\"));");" is 407.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_log\" (" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"timestamp\" TIMESTAMP` "+ "\"pid\" INTEGER` "+ "\"log\" VARCHAR);");" is 175.,587
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,convertArray,Complex Conditional,The conditional expression dates != null && dates.length > 0 && dates[0] instanceof Timestamp is complex.,768
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,convertArray,Complex Method,Cyclomatic complexity of the method is 20,768
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,convertArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3b88a7e,768
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,supportsType,Complex Method,Cyclomatic complexity of the method is 28,855
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,supportsType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5ae468ec,855
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,addPartitionTables,Long Statement,The length of the statement "return Arrays.asList("ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"partitionType\" VARCHAR DEFAULT 'NONE';"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"partitionExpression\" VARCHAR;"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"shardCount\" INTEGER;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"partitionType\" VARCHAR DEFAULT 'NONE';"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"partitionExpression\" VARCHAR;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"shardCount\" INTEGER;"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_partition\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" VARCHAR` "+ "\"from\" VARCHAR` "+ "\"to\" VARCHAR` "+ "\"in\" VARCHAR` "+ "\"partitionType\" VARCHAR` "+ "\"partitionExpression\" VARCHAR);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_partition_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_identifier\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_identifier\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_distribution\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_colocate\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_distribution\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_colocate\"(" + "\"ID\" IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 4358.,933
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,addHashPartitionColumns,Long Statement,The length of the statement "return List.of("ALTER TABLE \"sqlg_schema\".\"V_partition\" ADD COLUMN \"modulus\" INTEGER;"`"ALTER TABLE \"sqlg_schema\".\"V_partition\" ADD COLUMN \"remainder\" INTEGER;");" is 174.,1012
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,addDbVersionToGraph,Long Statement,The length of the statement "return "ALTER TABLE \"sqlg_schema\".\"V_graph\" ADD COLUMN \"dbVersion\" VARCHAR DEFAULT '" + metadata.getDatabaseProductVersion() + "';";" is 138.,1020
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,toSelectString,Complex Conditional,The conditional expression !partOfDuplicateQuery && column.getAggregateFunction() != null && column.getAggregateFunction().equals(GraphTraversal.Symbols.count) is complex.,1034
pietermartin_sqlg,org.umlg.sqlg,H2Dialect,toSelectString,Long Statement,The length of the statement "if (!partOfDuplicateQuery && column.getAggregateFunction() != null && column.getAggregateFunction().equals(GraphTraversal.Symbols.count)) {" is 139.,1034
pietermartin_sqlg,org.umlg.sqlg,Log4j2TestAppender,append,Magic Number,The method contains a magic number: 10,54
pietermartin_sqlg,org.umlg.sqlg.strategy,Emit,Emit,Long Parameter List,The method has 5 parameters. ,65
pietermartin_sqlg,org.umlg.sqlg.strategy,Emit,evaluateElementValueTraversal,Complex Method,Cyclomatic complexity of the method is 12,148
pietermartin_sqlg,org.umlg.sqlg.strategy,Emit,evaluateElementValueTraversal,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getScopeKeys().size() == 1`"toOrderByClause expects the selectOneStep to have one scopeKey!");" is 133.,148
pietermartin_sqlg,org.umlg.sqlg.strategy,Emit,evaluateElementValueTraversal,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getLocalChildren().size() == 1`"toOrderByClause expects the selectOneStep to have one traversal!");" is 138.,148
pietermartin_sqlg,org.umlg.sqlg.strategy,Emit,evaluateElementValueTraversal,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getLocalChildren().get(0) instanceof ValueTraversal || selectOneStep.getLocalChildren().get(0) instanceof TokenTraversal`"toOrderByClause expects the selectOneStep's traversal to be a ElementValueTraversal or a TokenTraversal!");" is 268.,148
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgDropStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,24
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgDropStepStrategy,apply,Long Statement,The length of the statement "TraversalHelper.replaceStep(dropStep`new SqlgDropStepBarrier<>(traversal`dropStep.getMutatingCallbackRegistry())`traversal);" is 124.,24
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgSqlExecutor,executeDropQuery,Long Identifier,The length of the identifier addAdditionalPartitionHasContainer is 34.,39
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgSqlExecutor,executeDropQuery,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@63fbb981,39
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgSqlExecutor,executeDropQuery,Long Identifier,The length of the parameter includeAdditionalPartitionHasContainer is 38.,148
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgSqlExecutor,executeDropQuery,Long Statement,The length of the statement "if (!distinctQueryStack.isEmpty() && distinctQueryStack.peekFirst().getStepType() != SchemaTableTree.STEP_TYPE.GRAPH_STEP) {" is 124.,148
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgSqlExecutor,executeDropQuery,Long Statement,The length of the statement "SqlgUtil.setParametersOnStatement(sqlgGraph`distinctQueryStack`preparedStatement`parameterCount`includeAdditionalPartitionHasContainer);" is 136.,148
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgHasStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,30
pietermartin_sqlg,org.umlg.sqlg.strategy,TopologyStrategy,apply,Long Identifier,The length of the field TOPOLOGY_SELECTION_SQLG_SCHEMA is 30.,26
pietermartin_sqlg,org.umlg.sqlg.strategy,TopologyStrategy,apply,Long Statement,The length of the statement "if (!TraversalHelper.getStepsOfAssignableClass(GraphStep.class`traversal).isEmpty() || !TraversalHelper.getStepsOfAssignableClass(VertexStep.class`traversal).isEmpty()) {" is 170.,26
pietermartin_sqlg,org.umlg.sqlg.strategy,TopologyStrategy,apply,Long Statement,The length of the statement "TraversalHelper.insertAfterStep(new HasStep(traversal`new HasContainer(TOPOLOGY_SELECTION_SQLG_SCHEMA`P.eq(this.sqlgSchema)))`traversal.getStartStep()`traversal);" is 162.,26
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgGraphStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,25
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgGraphStepStrategy,applyPost,Long Statement,The length of the statement "return Stream.of(MatchPredicateStrategy.class`RepeatUnrollStrategy.class`PathRetractionStrategy.class`MessagePassingReductionStrategy.class`IncidentToAdjacentStrategy.class).collect(Collectors.toSet());" is 202.,36
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgInjectStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,19
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgHasNextStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,24
pietermartin_sqlg,org.umlg.sqlg.strategy,GraphStrategy,apply,Long Statement,The length of the statement "if (!Stream.of(originalGraphStep.getIds()).allMatch(i -> clazz.isAssignableFrom(i.getClass()))) throw Graph.Exceptions.idArgsMustBeEitherIdOrElement();" is 151.,40
pietermartin_sqlg,org.umlg.sqlg.strategy,GraphStrategy,apply,Long Statement,The length of the statement "logger.debug("gremlin not optimized due to path or tree step. " + this.traversal.toString() + "\nPath to gremlin:\n"+ ExceptionUtils.getStackTrace(new Throwable()));" is 165.,40
pietermartin_sqlg,org.umlg.sqlg.strategy,GraphStrategy,constructSqlgStep,Long Statement,The length of the statement "Preconditions.checkArgument(startStep instanceof GraphStep`"Expected a GraphStep` found instead a " + startStep.getClass().getName());" is 134.,88
pietermartin_sqlg,org.umlg.sqlg.strategy,GraphStrategy,constructSqlgStep,Long Statement,The length of the statement "return new SqlgGraphStep(this.sqlgGraph`this.traversal`graphStep.getReturnClass()`graphStep.isStartStep()`graphStep.getIds());" is 126.,88
pietermartin_sqlg,org.umlg.sqlg.strategy,GraphStrategy,doFirst,Long Statement,The length of the statement "this.currentReplacedStep.addLabel(pathCount.getValue() + BaseStrategy.PATH_LABEL_SUFFIX + BaseStrategy.SQLG_PATH_FAKE_LABEL);" is 125.,96
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgWhereStrategy,apply,Complex Conditional,The conditional expression wps.getPredicate().isPresent() && (wps.getPredicate().get().getBiPredicate() instanceof FullText || wps.getPredicate().get().getBiPredicate() instanceof ArrayContains || wps.getPredicate().get().getBiPredicate() instanceof ArrayOverlaps) is complex.,37
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgWhereStrategy,apply,Complex Method,Cyclomatic complexity of the method is 11,37
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgWhereStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,37
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgWhereStrategy,apply,Long Statement,The length of the statement "if (wps.getPredicate().isPresent() && (wps.getPredicate().get().getBiPredicate() instanceof FullText || wps.getPredicate().get().getBiPredicate() instanceof ArrayContains || wps.getPredicate().get().getBiPredicate() instanceof ArrayOverlaps)) {" is 244.,37
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgWhereStrategy,captureLabels,Long Statement,The length of the statement "stepsByLabel.put(label.substring(label.indexOf(BaseStrategy.PATH_LABEL_SUFFIX) + BaseStrategy.PATH_LABEL_SUFFIX.length())`rs);" is 126.,92
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgWhereStrategy,captureLabels,Long Statement,The length of the statement "stepsByLabel.put(label.substring(label.indexOf(BaseStrategy.EMIT_LABEL_SUFFIX) + BaseStrategy.EMIT_LABEL_SUFFIX.length())`rs);" is 126.,92
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgRestrictPropertiesStrategy,apply,Complex Method,Cyclomatic complexity of the method is 10,31
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgRestrictPropertiesStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,31
pietermartin_sqlg,org.umlg.sqlg.strategy,VertexStrategy,apply,Long Statement,The length of the statement "logger.debug("gremlin not optimized due to path or tree step. " + this.traversal.toString() + "\nPath to gremlin:\n"+ ExceptionUtils.getStackTrace(new Throwable()));" is 165.,45
pietermartin_sqlg,org.umlg.sqlg.strategy,VertexStrategy,doFirst,Complex Conditional,The conditional expression !(step instanceof VertexStep || step instanceof EdgeVertexStep || step instanceof ChooseStep|| step instanceof OptionalStep) is complex.,87
pietermartin_sqlg,org.umlg.sqlg.strategy,VertexStrategy,doFirst,Complex Method,Cyclomatic complexity of the method is 8,87
pietermartin_sqlg,org.umlg.sqlg.strategy,VertexStrategy,doFirst,Long Statement,The length of the statement "if (!(step instanceof VertexStep || step instanceof EdgeVertexStep || step instanceof ChooseStep|| step instanceof OptionalStep)) {" is 131.,87
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgAddVertexStartStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,26
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgAddVertexStartStepStrategy,apply,Long Statement,The length of the statement "List<AddVertexStartStep> addVertexStartSteps=TraversalHelper.getStepsOfAssignableClassRecursively(AddVertexStartStep.class`traversal);" is 134.,26
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgAddVertexStartStepStrategy,apply,Long Statement,The length of the statement "SqlgAddVertexStartStep sqlgAddVertexStartStep=new SqlgAddVertexStartStep(addVertexStartStep.getTraversal()`addVertexStartStep.getParameters());" is 143.,26
pietermartin_sqlg,org.umlg.sqlg.strategy,SqlgAddVertexStartStepStrategy,apply,Long Statement,The length of the statement "for ( EventCallback<Event.VertexAddedEvent> callback : addVertexStartStep.getMutatingCallbackRegistry().getCallbacks()) {" is 121.,26
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleStep,Complex Conditional,The conditional expression step instanceof VertexStep || step instanceof EdgeVertexStep || step instanceof EdgeOtherVertexStep is complex.,123
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleStep,Complex Method,Cyclomatic complexity of the method is 31,123
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleStep,Long Method,The method has 142 lines of code.,123
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleIdStep,Complex Method,Cyclomatic complexity of the method is 8,265
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handlePropertyMapStep,Complex Method,Cyclomatic complexity of the method is 9,298
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handlePropertyMapStep,Long Statement,The length of the statement "SqlgPropertyMapStep<?`?> sqlgPropertyMapStep=new SqlgPropertyMapStep<>(traversal`propertyMapStep.getIncludedTokens()`propertyMapStep.getReturnType()`traversalRing`propertyMapStep.getPropertyKeys());" is 198.,298
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handlePropertiesStep,Long Statement,The length of the statement "SqlgPropertiesStep sqlgPropertiesStep=new SqlgPropertiesStep(propertiesStep.getTraversal()`propertiesStep.getReturnType()`propertiesStep.getPropertyKeys());" is 156.,354
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleVertexStep,Long Statement,The length of the statement "this.currentReplacedStep.addLabel(pathCount.getValue() + BaseStrategy.PATH_LABEL_SUFFIX + BaseStrategy.SQLG_PATH_FAKE_LABEL);" is 125.,390
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleRepeatStep,Complex Conditional,The conditional expression internalRepeatStep instanceof VertexStep || internalRepeatStep instanceof EdgeVertexStep || internalRepeatStep instanceof EdgeOtherVertexStep is complex.,419
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleRepeatStep,Long Statement,The length of the statement "else if (internalRepeatStep instanceof VertexStep || internalRepeatStep instanceof EdgeVertexStep || internalRepeatStep instanceof EdgeOtherVertexStep) {" is 153.,419
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOptionalStep,Complex Conditional,The conditional expression internalOptionalStep instanceof VertexStep || internalOptionalStep instanceof EdgeVertexStep || internalOptionalStep instanceof EdgeOtherVertexStep is complex.,472
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOptionalStep,Complex Method,Cyclomatic complexity of the method is 8,472
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOptionalStep,Long Statement,The length of the statement "ReplacedStep<?`?> previousReplacedStep=this.sqlgStep.getReplacedSteps().get(this.sqlgStep.getReplacedSteps().size() - 1);" is 121.,472
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOptionalStep,Long Statement,The length of the statement "if (internalOptionalStep instanceof VertexStep || internalOptionalStep instanceof EdgeVertexStep || internalOptionalStep instanceof EdgeOtherVertexStep) {" is 154.,472
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleChooseStep,Complex Conditional,The conditional expression internalChooseStep instanceof VertexStep || internalChooseStep instanceof EdgeVertexStep || internalChooseStep instanceof EdgeOtherVertexStep is complex.,516
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleChooseStep,Complex Method,Cyclomatic complexity of the method is 8,516
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleChooseStep,Long Statement,The length of the statement "Preconditions.checkState(globalChildren.size() == 2`"ChooseStep's globalChildren must have size 2` one for true and one for false");" is 132.,516
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleChooseStep,Long Statement,The length of the statement "ReplacedStep<?`?> previousReplacedStep=this.sqlgStep.getReplacedSteps().get(this.sqlgStep.getReplacedSteps().size() - 1);" is 121.,516
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleChooseStep,Long Statement,The length of the statement "if (internalChooseStep instanceof VertexStep || internalChooseStep instanceof EdgeVertexStep || internalChooseStep instanceof EdgeOtherVertexStep) {" is 148.,516
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleChooseStep,Magic Number,The method contains a magic number: 2,516
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleHasSteps,Complex Method,Cyclomatic complexity of the method is 15,570
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleHasSteps,Long Statement,The length of the statement "currentStep.getLabels().forEach(label -> this.currentReplacedStep.addLabel(pathCount + BaseStrategy.PATH_LABEL_SUFFIX + label));" is 128.,570
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleHasSteps,Long Statement,The length of the statement "currentStep.getLabels().forEach(label -> this.currentReplacedStep.addLabel(pathCount + BaseStrategy.PATH_LABEL_SUFFIX + label));" is 128.,570
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleHasSteps,Long Statement,The length of the statement "currentStep.getLabels().forEach(label -> this.currentReplacedStep.addLabel(pathCount + BaseStrategy.PATH_LABEL_SUFFIX + label));" is 128.,570
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOrderGlobalSteps,Complex Method,Cyclomatic complexity of the method is 13,706
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOrderGlobalSteps,Long Statement,The length of the statement "@SuppressWarnings("unchecked") List<Pair<Traversal.Admin<?`?>`Comparator<?>>> comparators=((OrderGlobalStep)step).getComparators();" is 131.,706
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOrderGlobalSteps,Long Statement,The length of the statement "@SuppressWarnings("unchecked") List<Pair<Traversal.Admin<?`?>`Comparator<?>>> comparators=((OrderGlobalStep)step).getComparators();" is 131.,706
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOrderGlobalSteps,Long Statement,The length of the statement "this.currentReplacedStep.addLabel(pathCount.getValue() + BaseStrategy.PATH_LABEL_SUFFIX + BaseStrategy.SQLG_PATH_ORDER_RANGE_LABEL);" is 132.,706
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOrderGlobalSteps,Long Statement,The length of the statement "@SuppressWarnings("unchecked") List<Pair<Traversal.Admin<?`?>`Comparator<?>>> comparators=((OrderGlobalStep)step).getComparators();" is 131.,706
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleOrderGlobalSteps,Long Statement,The length of the statement "this.currentReplacedStep.addLabel(pathCount.getValue() + BaseStrategy.PATH_LABEL_SUFFIX + BaseStrategy.SQLG_PATH_ORDER_RANGE_LABEL);" is 132.,706
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Complex Conditional,The conditional expression hasContainerKeyNotIdOrLabel && (hasContainer.getBiPredicate().equals(Contains.within) || hasContainer.getBiPredicate().equals(Contains.without)) is complex.,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Complex Conditional,The conditional expression hasContainerKeyNotIdOrLabel && hasContainer.getBiPredicate() instanceof Text || hasContainer.getBiPredicate() instanceof FullText || hasContainer.getBiPredicate() instanceof ArrayContains || hasContainer.getBiPredicate() instanceof ArrayOverlaps is complex.,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Complex Method,Cyclomatic complexity of the method is 21,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Long Statement,The length of the statement "if (!TraversalHelper.hasAllStepsOfClass(localTraversal`HasStep.class`ConnectiveStep.class`TraversalFilterStep.class`NotStep.class)) {" is 133.,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Long Statement,The length of the statement "else if (hasContainerKeyNotIdOrLabel && (hasContainer.getBiPredicate().equals(Contains.within) || hasContainer.getBiPredicate().equals(Contains.without))) {" is 156.,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Long Statement,The length of the statement "else if (hasContainerKeyNotIdOrLabel && hasContainer.getBiPredicate() instanceof Text || hasContainer.getBiPredicate() instanceof FullText || hasContainer.getBiPredicate() instanceof ArrayContains || hasContainer.getBiPredicate() instanceof ArrayOverlaps) {" is 257.,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Magic Number,The method contains a magic number: 2,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleConnectiveStepInternal,Magic Number,The method contains a magic number: 2,809
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizableOrderGlobalStep,Long Statement,The length of the statement "List<CountGlobalStep> countGlobalSteps=TraversalHelper.getStepsOfAssignableClassRecursively(CountGlobalStep.class`defaultGraphTraversal);" is 137.,885
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizableOrderGlobalStep,Long Statement,The length of the statement "List<LambdaMapStep> lambdaMapSteps=TraversalHelper.getStepsOfAssignableClassRecursively(LambdaMapStep.class`defaultGraphTraversal);" is 131.,885
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleRangeGlobalSteps,Complex Method,Cyclomatic complexity of the method is 9,909
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleRangeGlobalSteps,Long Statement,The length of the statement "this.currentReplacedStep.addLabel(pathCount.getValue() + BaseStrategy.PATH_LABEL_SUFFIX + BaseStrategy.SQLG_PATH_ORDER_RANGE_LABEL);" is 132.,909
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,precedesPathOrTreeStep,Complex Conditional,The conditional expression traversal.getParent() != null && (traversal.getParent() instanceof SqlgLocalStepBarrier || traversal.getParent() instanceof SqlgUnionStepBarrier) is complex.,953
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,precedesPathOrTreeStep,Long Statement,The length of the statement "if (traversal.getParent() != null && (traversal.getParent() instanceof SqlgLocalStepBarrier || traversal.getParent() instanceof SqlgUnionStepBarrier)) {" is 152.,953
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,precedesPathOrTreeStep,Long Statement,The length of the statement "Predicate<Step> p=s -> s.getClass().equals(PathStep.class) || s.getClass().equals(TreeStep.class) || s.getClass().equals(TreeSideEffectStep.class)|| s.getClass().equals(PathFilterStep.class)|| s.getClass().equals(EdgeOtherVertexStep.class);" is 240.,953
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,isNotWithMultipleColumnValue,Complex Conditional,The conditional expression predicate.getValue() instanceof ZonedDateTime || predicate.getValue() instanceof Period || predicate.getValue() instanceof Duration|| (predicate.getValue() instanceof List && containsWithMultipleColumnValue((List<Object>)predicate.getValue()))|| (predicate instanceof ConnectiveP && isConnectivePWithMultipleColumnValue((ConnectiveP)h.getPredicate())) is complex.,974
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,isNotWithMultipleColumnValue,Long Statement,The length of the statement "if (predicate.getValue() instanceof ZonedDateTime || predicate.getValue() instanceof Period || predicate.getValue() instanceof Duration|| (predicate.getValue() instanceof List && containsWithMultipleColumnValue((List<Object>)predicate.getValue()))|| (predicate instanceof ConnectiveP && isConnectivePWithMultipleColumnValue((ConnectiveP)h.getPredicate()))) {" is 358.,974
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,hasContainerKeyNotIdOrLabel,Long Statement,The length of the statement "return !(hasContainer.getKey().equals(TopologyStrategy.TOPOLOGY_SELECTION_SQLG_SCHEMA) || hasContainer.getKey().equals(TopologyStrategy.TOPOLOGY_SELECTION_GLOBAL_UNIQUE_INDEX) || hasContainer.getKey().equals(T.id.getAccessor())|| (hasContainer.getKey().equals(T.label.getAccessor())));" is 285.,992
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeIdHas,Long Statement,The length of the statement "if (hasContainer.getKey().equals(T.id.getAccessor()) && SUPPORTED_ID_BI_PREDICATE.contains(hasContainer.getBiPredicate())) {" is 124.,997
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeLabelHas,Long Statement,The length of the statement "if (hasContainer.getKey().equals(T.label.getAccessor()) && SUPPORTED_LABEL_BI_PREDICATE.contains(hasContainer.getBiPredicate())) {" is 130.,1008
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeWithInOut,Complex Conditional,The conditional expression hasContainerKeyNotIdOrLabel(hasContainer) && (hasContainer.getBiPredicate() == Contains.without || hasContainer.getBiPredicate() == Contains.within) is complex.,1030
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeWithInOut,Long Statement,The length of the statement "if (hasContainerKeyNotIdOrLabel(hasContainer) && (hasContainer.getBiPredicate() == Contains.without || hasContainer.getBiPredicate() == Contains.within)) {" is 155.,1030
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeBetween,Magic Number,The method contains a magic number: 2,1042
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeInside,Magic Number,The method contains a magic number: 2,1059
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeOutside,Magic Number,The method contains a magic number: 2,1076
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeTextContains,Complex Conditional,The conditional expression hasContainerKeyNotIdOrLabel(hasContainer) && hasContainer.getBiPredicate() instanceof Text || hasContainer.getBiPredicate() instanceof FullText is complex.,1093
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeTextContains,Long Statement,The length of the statement "if (hasContainerKeyNotIdOrLabel(hasContainer) && hasContainer.getBiPredicate() instanceof Text || hasContainer.getBiPredicate() instanceof FullText) {" is 150.,1093
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeArray,Complex Conditional,The conditional expression hasContainerKeyNotIdOrLabel(hasContainer) && (hasContainer.getBiPredicate() instanceof ArrayContains || hasContainer.getBiPredicate() instanceof ArrayOverlaps) is complex.,1106
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,optimizeArray,Long Statement,The length of the statement "if (hasContainerKeyNotIdOrLabel(hasContainer) && (hasContainer.getBiPredicate() instanceof ArrayContains || hasContainer.getBiPredicate() instanceof ArrayOverlaps)) {" is 166.,1106
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,containsWithMultipleColumnValue,Complex Conditional,The conditional expression value instanceof ZonedDateTime || value instanceof Period || value instanceof Duration is complex.,1119
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,isConnectivePWithMultipleColumnValue,Complex Conditional,The conditional expression predicate.getValue() instanceof ZonedDateTime || predicate.getValue() instanceof Period || predicate.getValue() instanceof Duration is complex.,1130
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,isConnectivePWithMultipleColumnValue,Long Statement,The length of the statement "if (predicate.getValue() instanceof ZonedDateTime || predicate.getValue() instanceof Period || predicate.getValue() instanceof Duration) {" is 138.,1130
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,canNotBeOptimized,Long Statement,The length of the statement "return toCome.stream().anyMatch(s -> s.getClass().equals(Order.class) || s.getClass().equals(LambdaCollectingBarrierStep.class) || s.getClass().equals(SackValueStep.class));" is 173.,1143
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableOptionalStep,Complex Conditional,The conditional expression !(internalOptionalStep instanceof VertexStep || internalOptionalStep instanceof EdgeVertexStep || internalOptionalStep instanceof EdgeOtherVertexStep|| internalOptionalStep instanceof ComputerAwareStep.EndStep|| internalOptionalStep instanceof OptionalStep|| internalOptionalStep instanceof HasStep|| internalOptionalStep instanceof OrderGlobalStep|| internalOptionalStep instanceof RangeGlobalStep) is complex.,1154
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableOptionalStep,Complex Method,Cyclomatic complexity of the method is 9,1154
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableOptionalStep,Long Statement,The length of the statement "List<Step> rangeGlobalSteps=optionalTraversalSteps.stream().filter(p -> p.getClass().equals(RangeGlobalStep.class)).collect(Collectors.toList());" is 145.,1154
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableOptionalStep,Long Statement,The length of the statement "if (!(internalOptionalStep instanceof VertexStep || internalOptionalStep instanceof EdgeVertexStep || internalOptionalStep instanceof EdgeOtherVertexStep|| internalOptionalStep instanceof ComputerAwareStep.EndStep|| internalOptionalStep instanceof OptionalStep|| internalOptionalStep instanceof HasStep|| internalOptionalStep instanceof OrderGlobalStep|| internalOptionalStep instanceof RangeGlobalStep)) {" is 406.,1154
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableOptionalStep,Long Statement,The length of the statement "List<Step> optionalSteps=optionalTraversalSteps.stream().filter(p -> p.getClass().equals(OptionalStep.class)).collect(Collectors.toList());" is 139.,1154
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableChooseStep,Complex Conditional,The conditional expression !(internalChooseStep instanceof VertexStep || internalChooseStep instanceof EdgeVertexStep || internalChooseStep instanceof EdgeOtherVertexStep|| internalChooseStep instanceof ComputerAwareStep.EndStep|| internalChooseStep instanceof ChooseStep|| internalChooseStep instanceof HasStep|| internalChooseStep instanceof OrderGlobalStep|| internalChooseStep instanceof RangeGlobalStep) is complex.,1195
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableChooseStep,Complex Method,Cyclomatic complexity of the method is 17,1195
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableChooseStep,Long Statement,The length of the statement "List<Step> localSteps=predicateSteps.stream().filter(p -> p.getClass().equals(LocalStep.class)).collect(Collectors.toList());" is 125.,1195
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableChooseStep,Long Statement,The length of the statement "List<Step> rangeGlobalSteps=predicateSteps.stream().filter(p -> p.getClass().equals(RangeGlobalStep.class)).collect(Collectors.toList());" is 137.,1195
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableChooseStep,Long Statement,The length of the statement "if (!(internalChooseStep instanceof VertexStep || internalChooseStep instanceof EdgeVertexStep || internalChooseStep instanceof EdgeOtherVertexStep|| internalChooseStep instanceof ComputerAwareStep.EndStep|| internalChooseStep instanceof ChooseStep|| internalChooseStep instanceof HasStep|| internalChooseStep instanceof OrderGlobalStep|| internalChooseStep instanceof RangeGlobalStep)) {" is 388.,1195
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableChooseStep,Long Statement,The length of the statement "List<Step> chooseSteps=globalChildTwo.getSteps().stream().filter(p -> p.getClass().equals(ChooseStep.class)).collect(Collectors.toList());" is 138.,1195
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableChooseStep,Magic Number,The method contains a magic number: 2,1195
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableRepeatStep,Long Statement,The length of the statement "boolean hasUntil=repeatSteps.stream().filter(s -> s.getClass().equals(RepeatStep.class)).allMatch(repeatStep -> repeatStep.getUntilTraversal() != null);" is 152.,1280
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableRepeatStep,Long Statement,The length of the statement "hasUnoptimizableUntil=repeatSteps.stream().filter(s -> s.getClass().equals(RepeatStep.class)).noneMatch(repeatStep -> repeatStep.getUntilTraversal() instanceof LoopTraversal);" is 175.,1280
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,unoptimizableRepeatStep,Long Statement,The length of the statement "return !collectedRepeatInternalSteps.stream().filter(s -> !s.getClass().equals(RepeatStep.RepeatEndStep.class)).allMatch((s) -> isReplaceableStep(s.getClass()));" is 161.,1280
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleAggregateGlobalStep,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@c0960e0,1328
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupCountStep,Long Statement,The length of the statement "SqlgGroupStep<?`?> sqlgGroupStep=new SqlgGroupStep<>(this.traversal`groupByKeys`GraphTraversal.Symbols.count`false`SqlgGroupStep.REDUCTION.COUNT);" is 146.,1372
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupStep,Complex Method,Cyclomatic complexity of the method is 19,1403
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupStep,Long Statement,The length of the statement "SqlgGroupStep<?`?> sqlgGroupStep=new SqlgGroupStep<>(this.traversal`groupByKeys`GraphTraversal.Symbols.count`isPropertiesStep`SqlgGroupStep.REDUCTION.COUNT);" is 157.,1403
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupStep,Long Statement,The length of the statement "replacedStep.setAggregateFunction(org.apache.commons.lang3.tuple.Pair.of(GraphTraversal.Symbols.max`aggregationFunctionProperty));" is 130.,1403
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupStep,Long Statement,The length of the statement "replacedStep.setAggregateFunction(org.apache.commons.lang3.tuple.Pair.of(GraphTraversal.Symbols.min`aggregationFunctionProperty));" is 130.,1403
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupStep,Long Statement,The length of the statement "SqlgGroupStep<?`?> sqlgGroupStep=new SqlgGroupStep<>(this.traversal`groupByKeys`aggregationFunctionProperty.get(0)`isPropertiesStep`reduction);" is 143.,1403
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupStep,Magic Number,The method contains a magic number: 2,1403
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleGroupStep,Magic Number,The method contains a magic number: 2,1403
pietermartin_sqlg,org.umlg.sqlg.strategy,BaseStrategy,handleFoldStep,Long Statement,The length of the statement "SqlgFoldStep<?`?> sqlgFoldStep=new SqlgFoldStep(this.traversal`foldStep.getSeedSupplier()`foldStep.isListFold()`foldStep.getBiOperator());" is 138.,1494
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgTraversalFilterStepStrategy,apply,Long Identifier,The length of the identifier sqlgTraversalFilterStepBarrier is 30.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgTraversalFilterStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgTraversalFilterStepStrategy,apply,Long Statement,The length of the statement "List<TraversalFilterStep> traversalFilterSteps=TraversalHelper.getStepsOfAssignableClass(TraversalFilterStep.class`traversal);" is 126.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgTraversalFilterStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClassRecursively(ReducingBarrierStep.class`filterTraversal);" is 143.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgTraversalFilterStepStrategy,apply,Long Statement,The length of the statement "SqlgTraversalFilterStepBarrier sqlgTraversalFilterStepBarrier=new SqlgTraversalFilterStepBarrier<>(traversal`filterTraversal);" is 126.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgLocalStepStrategy,apply,Complex Method,Cyclomatic complexity of the method is 13,39
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgLocalStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,39
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgLocalStepStrategy,apply,Long Statement,The length of the statement "for ( Class<? extends ReducingBarrierStep> aClass : Arrays.asList(FoldStep.class`GroupCountStep.class`CountGlobalStep.class`TreeStep.class)) {" is 142.,39
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgLocalStepStrategy,apply,Long Statement,The length of the statement "List<RangeGlobalStep> rangeGlobalSteps=TraversalHelper.getStepsOfAssignableClassRecursively(RangeGlobalStep.class`localChild);" is 126.,39
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgLocalStepStrategy,apply,Long Statement,The length of the statement "List<SampleGlobalStep> sampleGlobalSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SampleGlobalStep.class`localChild);" is 129.,39
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgOrStepStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgOrStepStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClassRecursively(ReducingBarrierStep.class`traversal);" is 137.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgWhereTraversalStepStrategy,apply,Long Identifier,The length of the identifier sqlgTraversalFilterStepBarrier is 30.,30
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgWhereTraversalStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,30
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgWhereTraversalStepStrategy,apply,Long Statement,The length of the statement "List<WhereTraversalStep> whereTraversalSteps=TraversalHelper.getStepsOfAssignableClass(WhereTraversalStep.class`traversal);" is 123.,30
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgWhereTraversalStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClassRecursively(ReducingBarrierStep.class`whereTraversal);" is 142.,30
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgWhereTraversalStepStrategy,apply,Long Statement,The length of the statement "SqlgWhereTraversalStepBarrier sqlgTraversalFilterStepBarrier=new SqlgWhereTraversalStepBarrier<>(traversal`whereTraversalStep);" is 127.,30
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,apply,Complex Method,Cyclomatic complexity of the method is 11,44
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,44
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClass(ReducingBarrierStep.class`predicateTraversal);" is 135.,44
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,apply,Long Statement,The length of the statement "List<LambdaFilterStep> lambdaFilterSteps=TraversalHelper.getStepsOfAssignableClass(LambdaFilterStep.class`predicateTraversal);" is 126.,44
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,apply,Long Statement,The length of the statement "SqlgLambdaFilterStep<?> sqlgLambdaFilterStep=new SqlgLambdaFilterStep<>(predicateTraversal`lambdaFilterStep.getPredicate());" is 124.,44
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,apply,Long Statement,The length of the statement "List<Pair<Traversal.Admin`Traversal.Admin<S`E>>> traversalOptions=(List<Pair<Traversal.Admin`Traversal.Admin<S`E>>>)traversalOptionsField.get(chooseStep);" is 154.,44
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,apply,Long Statement,The length of the statement "Map<TraversalOptionParent.Pick`List<Traversal.Admin<S`E>>> traversalPickOptions=(Map<TraversalOptionParent.Pick`List<Traversal.Admin<S`E>>>)traversalPickOptionsField.get(chooseStep);" is 182.,44
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgChooseStepStrategy,applyPost,Long Statement,The length of the statement "return Stream.of(MatchPredicateStrategy.class`RepeatUnrollStrategy.class`PathRetractionStrategy.class`MessagePassingReductionStrategy.class`IncidentToAdjacentStrategy.class).collect(Collectors.toSet());" is 202.,120
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgVertexStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,28
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgVertexStepStrategy,applyPost,Long Statement,The length of the statement "return Stream.of(MatchPredicateStrategy.class`RepeatUnrollStrategy.class`PathRetractionStrategy.class`MessagePassingReductionStrategy.class`IncidentToAdjacentStrategy.class).collect(Collectors.toSet());" is 202.,40
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgUnionStepStrategy,apply,Complex Method,Cyclomatic complexity of the method is 12,34
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgUnionStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,34
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgUnionStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClassRecursively(ReducingBarrierStep.class`globalChild);" is 139.,34
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgUnionStepStrategy,apply,Long Statement,The length of the statement "List<RangeGlobalStep> rangeGlobalSteps=TraversalHelper.getStepsOfAssignableClassRecursively(RangeGlobalStep.class`globalChild);" is 127.,34
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgUnionStepStrategy,apply,Long Statement,The length of the statement "List<SampleGlobalStep> sampleGlobalSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SampleGlobalStep.class`globalChild);" is 130.,34
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgRepeatStepStrategy,apply,Complex Method,Cyclomatic complexity of the method is 15,37
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgRepeatStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,37
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgRepeatStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClassRecursively(ReducingBarrierStep.class`localChild);" is 138.,37
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgRepeatStepStrategy,apply,Long Statement,The length of the statement "List<RangeGlobalStep> rangeGlobalSteps=TraversalHelper.getStepsOfAssignableClassRecursively(RangeGlobalStep.class`localChild);" is 126.,37
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgRepeatStepStrategy,apply,Long Statement,The length of the statement "List<SampleGlobalStep> sampleGlobalSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SampleGlobalStep.class`localChild);" is 129.,37
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgRepeatStepStrategy,apply,Long Statement,The length of the statement "if ((traversal.getSteps().size() > indexOfRepeatStep + 1) && traversal.getSteps().get(indexOfRepeatStep + 1) instanceof RangeGlobalStep) {" is 138.,37
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgFoldStepStrategy,apply,Complex Conditional,The conditional expression foldStepOptional.isPresent() && !(traversal.getParent().asStep() instanceof GroupStep) && !(traversal.getParent().asStep() instanceof GroupSideEffectStep) is complex.,32
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgFoldStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,32
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgFoldStepStrategy,apply,Long Statement,The length of the statement "if (foldStepOptional.isPresent() && !(traversal.getParent().asStep() instanceof GroupStep) && !(traversal.getParent().asStep() instanceof GroupSideEffectStep)) {" is 161.,32
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgFoldStepStrategy,apply,Long Statement,The length of the statement "SqlgFoldStep<?`?> sqlgFoldStep=new SqlgFoldStep(traversal`foldStep.getSeedSupplier()`foldStep.isListFold()`foldStep.getBiOperator());" is 133.,32
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgOptionalStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,34
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgOptionalStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClass(ReducingBarrierStep.class`optionalTraversal);" is 134.,34
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgOptionalStepStrategy,applyPost,Long Statement,The length of the statement "return Stream.of(MatchPredicateStrategy.class`RepeatUnrollStrategy.class`PathRetractionStrategy.class`MessagePassingReductionStrategy.class`IncidentToAdjacentStrategy.class).collect(Collectors.toSet());" is 202.,72
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgAndStepStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgAndStepStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClassRecursively(ReducingBarrierStep.class`traversal);" is 137.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgNotStepStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgNotStepStepStrategy,apply,Long Statement,The length of the statement "List<ReducingBarrierStep> reducingBarrierSteps=TraversalHelper.getStepsOfAssignableClassRecursively(ReducingBarrierStep.class`traversal);" is 137.,29
pietermartin_sqlg,org.umlg.sqlg.strategy.barrier,SqlgStartStepStrategy,apply,Long Statement,The length of the statement "if (traversal.getGraph().isEmpty() || !(traversal.getGraph().orElseThrow(IllegalStateException::new) instanceof SqlgGraph)) {" is 125.,30
pietermartin_sqlg,org.umlg.sqlg.step,SqlgPropertyMapStep,SqlgPropertyMapStep,Long Parameter List,The method has 5 parameters. ,27
pietermartin_sqlg,org.umlg.sqlg.step,SqlgPropertyMapStep,map,Complex Method,Cyclomatic complexity of the method is 12,36
pietermartin_sqlg,org.umlg.sqlg.step,SqlgPropertyMapStep,map,Long Statement,The length of the statement "final Iterator<? extends Property> properties=null == this.propertyTraversal ? element.properties(this.propertyKeys) : TraversalUtil.applyAll(traverser`this.propertyTraversal);" is 176.,36
pietermartin_sqlg,org.umlg.sqlg.step,SqlgPropertyMapStep,toString,Long Statement,The length of the statement "return null != this.propertyTraversal ? StringFactory.stepString(this`this.propertyTraversal`this.returnType.name().toLowerCase()) : StringFactory.stepString(this`Arrays.asList(this.propertyKeys)`this.returnType.name().toLowerCase());" is 234.,97
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,SqlgGraphStep,Long Parameter List,The method has 5 parameters. ,59
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,processNextStart,Complex Method,Cyclomatic complexity of the method is 11,67
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,applyRange,Complex Conditional,The conditional expression this.lastReplacedStep.hasRange() && this.lastReplacedStep.applyInStep() && this.lastReplacedStep.getDepth() == emit.getReplacedStepDepth() is complex.,113
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,applyRange,Long Statement,The length of the statement "if (this.lastReplacedStep.hasRange() && this.lastReplacedStep.applyInStep() && this.lastReplacedStep.getDepth() == emit.getReplacedStepDepth()) {" is 145.,113
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,applyRange,Long Statement,The length of the statement "Preconditions.checkState(this.lastReplacedStep.getSqlgRangeHolder().hasSkip()`"If not a range query then it must be a skip.");" is 126.,113
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,internalLoad,Complex Conditional,The conditional expression !isStart && previousHead != null && traverser == null is complex.,153
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,getRequirements,Long Statement,The length of the statement "return this.getSelfAndChildRequirements(TraverserRequirement.PATH`TraverserRequirement.SIDE_EFFECTS`TraverserRequirement.ONE_BULK);" is 131.,191
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,prepare,Complex Conditional,The conditional expression isForMultipleQueries() || !this.replacedStepTree.orderByIsOrder() || this.replacedStepTree.orderByIsBeforeLeftJoin() is complex.,207
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,prepare,Complex Method,Cyclomatic complexity of the method is 8,207
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,prepare,Long Statement,The length of the statement "if (isForMultipleQueries() || !this.replacedStepTree.orderByIsOrder() || this.replacedStepTree.orderByIsBeforeLeftJoin()) {" is 123.,207
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,parseForStrategy,Complex Conditional,The conditional expression this.sqlgGraph.tx().isOpen() && this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().getBatchManager().isStreaming() is complex.,266
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGraphStep,parseForStrategy,Long Statement,The length of the statement "if (this.sqlgGraph.tx().isOpen() && this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().getBatchManager().isStreaming()) {" is 144.,266
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGroupStep,SqlgGroupStep,Long Parameter List,The method has 5 parameters. ,39
pietermartin_sqlg,org.umlg.sqlg.step,SqlgGroupStep,reduce,Complex Method,Cyclomatic complexity of the method is 15,58
pietermartin_sqlg,org.umlg.sqlg.step,SqlgHasStep,filter,Long Statement,The length of the statement "else throw new IllegalStateException(String.format("Traverser to has() must be of type Property or Element` not %s"`traverser.get().getClass().getName()));" is 155.,28
pietermartin_sqlg,org.umlg.sqlg.step,SqlgAbstractStep,prepareTraversalForNextStep,Long Identifier,The length of the field traverserStepIdAndLabelsSetByChild is 34.,188
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,processNextStart,Complex Method,Cyclomatic complexity of the method is 13,87
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,processNextStart,Long Statement,The length of the statement "Iterator<Map.Entry<SchemaTable`ListIterator<List<Emit<E>>>>> schemaTableIteratorEntry=this.schemaTableElements.entries().iterator();" is 132.,87
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,internalLoad,Complex Method,Cyclomatic complexity of the method is 12,177
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,constructQueryPerSchemaTable,Complex Conditional,The conditional expression isForMultipleQueries() || !replacedStepTree.orderByIsOrder() || this.replacedStepTree.orderByHasSelectOneStepAndForLabelNotInTree() is complex.,240
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,constructQueryPerSchemaTable,Long Statement,The length of the statement "if (isForMultipleQueries() || !replacedStepTree.orderByIsOrder() || this.replacedStepTree.orderByHasSelectOneStepAndForLabelNotInTree()) {" is 138.,240
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,parseForStrategy,Long Statement,The length of the statement "Preconditions.checkState(this.replacedSteps.get(1).isVertexStep() || this.replacedSteps.get(1).isEdgeVertexStep() || this.replacedSteps.get(1).isEdgeOtherVertexStep()`"The first step must a VertexStep` EdgeVertexStep` EdgeOtherVertexStep or GraphStep` found " + this.replacedSteps.get(1).getStep().getClass().toString());" is 321.,344
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,parseForStrategy,Long Statement,The length of the statement "rootSchemaTableTree=this.sqlgGraph.getGremlinParser().parse(schemaTable`this.replacedStepTree`this.isSqlgLocalStepBarrierChild);" is 128.,344
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,parseForStrategy,Long Statement,The length of the statement "this.hasAggregateFunction=!distinctQueries.isEmpty() && distinctQueries.get(distinctQueries.size() - 1).getLast().hasAggregateFunction();" is 137.,344
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,parseForStrategy,Long Statement,The length of the statement "this.hasAggregateFunction=this.hasAggregateFunction || (!leftJoinResult.isEmpty() && leftJoinResult.get(leftJoinResult.size() - 1).getLeft().getLast().hasAggregateFunction());" is 175.,344
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,parseForStrategy,Long Statement,The length of the statement "this.hasAggregateFunction=this.hasAggregateFunction || (!leftJoinResultEmit.isEmpty() && leftJoinResultEmit.get(leftJoinResultEmit.size() - 1).getLast().hasAggregateFunction());" is 177.,344
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,applyRange,Complex Conditional,The conditional expression this.lastReplacedStep.hasRange() && this.lastReplacedStep.applyInStep() && this.lastReplacedStep.getDepth() == emit.getReplacedStepDepth() is complex.,390
pietermartin_sqlg,org.umlg.sqlg.step,SqlgVertexStep,applyRange,Long Statement,The length of the statement "if (this.lastReplacedStep.hasRange() && this.lastReplacedStep.applyInStep() && this.lastReplacedStep.getDepth() == emit.getReplacedStepDepth()) {" is 145.,390
pietermartin_sqlg,org.umlg.sqlg.step,SqlgAddVertexStartStep,processNextStart,Long Statement,The length of the statement "final Vertex vertex=this.getTraversal().getGraph().get().addVertex(this.parameters.getKeyValues(generator.generate(false`(Step)this`1L`false`false)));" is 150.,57
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgAndStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 15,38
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgNotStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 11,35
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgTraversalFilterStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 12,33
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgOptionalStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 10,34
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgRepeatStepBarrier,SqlgRepeatStepBarrier,Long Statement,The length of the statement "List<RepeatStep.RepeatEndStep> repeatEndSteps=TraversalHelper.getStepsOfAssignableClass(RepeatStep.RepeatEndStep.class`this.repeatTraversal);" is 141.,50
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgRepeatStepBarrier,getLocalChildren,Magic Number,The method contains a magic number: 2,92
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgRepeatStepBarrier,toString,Long Statement,The length of the statement "if (this.untilFirst && this.emitFirst) return StringFactory.stepString(this`untilString()`emitString()`this.repeatTraversal);" is 125.,110
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgRepeatStepBarrier,standardAlgorithm,Complex Method,Cyclomatic complexity of the method is 17,174
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgRepeatStepBarrier,barrierUntil,Long Statement,The length of the statement "return this.untilTraversal != null && !this.untilTraversal.getSteps().isEmpty() && this.untilTraversal.getSteps().get(0) instanceof SqlgAbstractStep;" is 149.,254
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgRepeatStepBarrier,doUntilBarrier,Complex Method,Cyclomatic complexity of the method is 10,408
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgOrStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 14,37
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 25,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Method,The method has 118 lines of code.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "Optional<VertexLabel> vertexLabelOptional=this.sqlgGraph.getTopology().getVertexLabel(schemaTable.getSchema()`schemaTable.getTable());" is 134.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "Optional<EdgeLabel> edgeLabelOptional=this.sqlgGraph.getTopology().getEdgeLabel(schemaTableEdge.getSchema()`schemaTableEdge.getTable());" is 136.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "Optional<EdgeLabel> edgeLabelOptional=this.sqlgGraph.getTopology().getEdgeLabel(schemaTableEdge.getSchema()`schemaTableEdge.getTable());" is 136.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "Optional<EdgeLabel> edgeLabelOptional=this.sqlgGraph.getTopology().getEdgeLabel(schemaTable.getSchema()`schemaTable.getTable());" is 128.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "removeEvent=new Event.EdgePropertyRemovedEvent(eventStrategy.detach((Edge)sqlgProperty.element())`eventStrategy.detach(sqlgProperty));" is 134.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "else if (sqlgProperty instanceof VertexProperty) removeEvent=new Event.VertexPropertyRemovedEvent(eventStrategy.detach((VertexProperty)sqlgProperty));" is 150.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "String sql=this.sqlgGraph.getSqlDialect().dropWithForeignKey(true`outEdgeLabel`vertexLabel`ids`!this.callbackRegistry.getCallbacks().isEmpty());" is 144.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgDropStepBarrier,processNextStart,Long Statement,The length of the statement "String sql=this.sqlgGraph.getSqlDialect().dropWithForeignKey(false`inEdgeLabel`vertexLabel`ids`!this.callbackRegistry.getCallbacks().isEmpty());" is 144.,62
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,SqlgWhereTraversalStepBarrier,Complex Method,Cyclomatic complexity of the method is 8,44
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,SqlgWhereTraversalStepBarrier,Long Statement,The length of the statement "List<WhereTraversalStep.WhereStartStep> whereStartSteps=TraversalHelper.getStepsOfAssignableClass(WhereTraversalStep.WhereStartStep.class`connectiveTraversal);" is 159.,44
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,SqlgWhereTraversalStepBarrier,Long Statement,The length of the statement "SqlgWhereStartStep sqlgWhereStartStep=new SqlgWhereStartStep(connectiveTraversal`(String)whereStartStep.getScopeKeys().iterator().next());" is 138.,44
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,SqlgWhereTraversalStepBarrier,Long Statement,The length of the statement "List<WhereTraversalStep.WhereEndStep> whereEndSteps=TraversalHelper.getStepsOfAssignableClass(WhereTraversalStep.WhereEndStep.class`connectiveTraversal);" is 153.,44
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,SqlgWhereTraversalStepBarrier,Long Statement,The length of the statement "List<WhereTraversalStep.WhereStartStep> whereStartSteps=TraversalHelper.getStepsOfAssignableClassRecursively(WhereTraversalStep.WhereStartStep.class`this.whereTraversal);" is 170.,44
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,SqlgWhereTraversalStepBarrier,Long Statement,The length of the statement "sqlgWhereStartStep=new SqlgWhereStartStep(whereStartStep.getTraversal()`(String)whereStartStep.getScopeKeys().iterator().next());" is 129.,44
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,SqlgWhereTraversalStepBarrier,Long Statement,The length of the statement "List<WhereTraversalStep.WhereEndStep> whereEndSteps=TraversalHelper.getStepsOfAssignableClass(WhereTraversalStep.WhereEndStep.class`whereStartStep.getTraversal());" is 163.,44
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,getMaxRequirement,Long Statement,The length of the statement "return TraversalHelper.getVariableLocations(this.whereTraversal).contains(Scoping.Variable.START) ? PathProcessor.super.getMaxRequirement() : ElementRequirement.ID;" is 164.,92
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgWhereTraversalStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 12,99
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgChooseStepBarrier,addGlobalChildOption,Long Statement,The length of the statement "if (Pick.any.equals(pickToken)) throw new IllegalArgumentException("Choose step can not have an any-option as only one option per traverser is allowed");" is 153.,16
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgChooseStepBarrier,addGlobalChildOption,Long Statement,The length of the statement "if (this.traversalPickOptions.containsKey(pickToken)) throw new IllegalArgumentException("Choose step can only have one traversal per pick token: " + pickToken);" is 161.,16
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgBranchStepBarrier,processNextStart,Complex Conditional,The conditional expression branchTraversalPathObject instanceof SqlgElement && ((SqlgElement)branchTraversalPathObject).getInternalStartTraverserIndex() == internalStartTraversalIndex && branchTraversalPathObject.equals(cachedStartObject) is complex.,65
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgBranchStepBarrier,processNextStart,Complex Method,Cyclomatic complexity of the method is 22,65
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgBranchStepBarrier,processNextStart,Long Statement,The length of the statement "boolean startsWith=m instanceof Boolean && (!((Boolean)m)) || !(branchTraverserPathObjects.get(0) instanceof SqlgElement);" is 122.,65
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgBranchStepBarrier,processNextStart,Long Statement,The length of the statement "if (branchTraversalPathObject instanceof SqlgElement && ((SqlgElement)branchTraversalPathObject).getInternalStartTraverserIndex() == internalStartTraversalIndex && branchTraversalPathObject.equals(cachedStartObject)) {" is 218.,65
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgBranchStepBarrier,getGlobalChildren,Long Statement,The length of the statement "return Collections.unmodifiableList(Stream.concat(this.traversalPickOptions.values().stream().flatMap(List::stream)`this.traversalOptions.stream().map(Pair::getValue1)).collect(Collectors.toList()));" is 199.,235
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgStartStepBarrier,processNextStart,Complex Conditional,The conditional expression start.get() instanceof Attachable && this.getTraversal().getGraph().isPresent() && (!(start.get() instanceof VertexProperty) || null != ((VertexProperty)start.get()).element()) is complex.,54
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgStartStepBarrier,processNextStart,Long Statement,The length of the statement "Iterator<Traverser.Admin<S>> traversers=SqlgTraverserGenerator.instance().generateIterator((Iterator<S>)this.start`this`1L`false`false);" is 136.,54
pietermartin_sqlg,org.umlg.sqlg.step.barrier,SqlgStartStepBarrier,processNextStart,Long Statement,The length of the statement "if (start.get() instanceof Attachable && this.getTraversal().getGraph().isPresent() && (!(start.get() instanceof VertexProperty) || null != ((VertexProperty)start.get()).element())) start.set(((Attachable<S>)start.get()).attach(Attachable.Method.get(this.getTraversal().getGraph().get())));" is 290.,54
pietermartin_sqlg,org.umlg.sqlg.util,SqlgTraversalUtil,lastLambdaHolderBefore,Long Statement,The length of the statement "List<Class<? extends Step>> lambdaHolders=Arrays.asList(SackValueStep.class`LambdaFilterStep.class`LambdaMapStep.class`LambdaFlatMapStep.class`LambdaCollectingBarrierStep.class`LambdaSideEffectStep.class);" is 205.,72
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadResultSetIntoResultIterator,Long Parameter List,The method has 7 parameters. ,59
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadResultSetIntoResultIterator,Long Statement,The length of the statement "return loadResultSetIntoResultIterator(sqlgGraph`resultSetMetaData`resultSet`rootSchemaTableTree`subQueryStacks`first`lastElementIdCountMap`false);" is 147.,59
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadResultSetIntoResultIterator,Complex Conditional,The conditional expression lastSchemaTableTree.getReplacedStepDepth() == lastSchemaTableTree.getStepDepth() && lastSchemaTableTree.isEmit() && lastSchemaTableTree.isUntilFirst() is complex.,72
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadResultSetIntoResultIterator,Complex Method,Cyclomatic complexity of the method is 8,72
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadResultSetIntoResultIterator,Long Parameter List,The method has 8 parameters. ,72
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadResultSetIntoResultIterator,Long Statement,The length of the statement "List<Emit<SqlgElement>> labeledElements=SqlgUtil.loadLabeledElements(sqlgGraph`resultSet`subQueryStack`subQueryDepth == subQueryStacks.size()`idColumnCountMap`forParent);" is 170.,72
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadResultSetIntoResultIterator,Long Statement,The length of the statement "if (lastSchemaTableTree.getReplacedStepDepth() == lastSchemaTableTree.getStepDepth() && lastSchemaTableTree.isEmit() && lastSchemaTableTree.isUntilFirst()) {" is 157.,72
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Complex Conditional,The conditional expression schemaTableTree.isEmit() && lastQueryStack && (count != subQueryStack.size()) is complex.,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Complex Method,Cyclomatic complexity of the method is 17,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Long Parameter List,The method has 6 parameters. ,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Long Statement,The length of the statement "emit=new Emit<>(resultSet.getLong(1)`sqlgElement`Collections.emptySet()`schemaTableTree.getStepDepth()`schemaTableTree.getSqlgComparatorHolder());" is 146.,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Long Statement,The length of the statement "emit=new Emit<>(sqlgElement`Collections.emptySet()`schemaTableTree.getStepDepth()`schemaTableTree.getSqlgComparatorHolder());" is 125.,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Long Statement,The length of the statement "emit=new Emit<>(resultSet.getLong(1)`sqlgElement`Collections.emptySet()`schemaTableTree.getStepDepth()`schemaTableTree.getSqlgComparatorHolder());" is 146.,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Long Statement,The length of the statement "emit=new Emit<>(sqlgElement`Collections.emptySet()`schemaTableTree.getStepDepth()`schemaTableTree.getSqlgComparatorHolder());" is 125.,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Long Statement,The length of the statement "emit=new Emit<>(resultSet.getLong(1)`sqlgElement`schemaTableTree.getRealLabels()`schemaTableTree.getStepDepth()`schemaTableTree.getSqlgComparatorHolder());" is 155.,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,loadLabeledElements,Long Statement,The length of the statement "emit=new Emit<>(sqlgElement`schemaTableTree.getRealLabels()`schemaTableTree.getStepDepth()`schemaTableTree.getSqlgComparatorHolder());" is 134.,155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,isBulkWithinAndOut,Long Statement,The length of the statement "return (p == Contains.within || p == Contains.without) && ((Collection<?>)hasContainer.getPredicate().getValue()).size() > sqlgGraph.configuration().getInt("bulk.within.count"`BULK_WITHIN_COUNT);" is 195.,262
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,isBulkWithin,Long Statement,The length of the statement "return p == Contains.within && ((Collection<?>)hasContainer.getPredicate().getValue()).size() > sqlgGraph.configuration().getInt("bulk.within.count"`BULK_WITHIN_COUNT);" is 168.,267
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setParametersOnStatement,Long Identifier,The length of the parameter includeAdditionalPartitionHasContainer is 38.,282
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setParametersOnStatement,Long Parameter List,The method has 5 parameters. ,282
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setKeyValuesAsParameterUsingPropertyColumn,Long Parameter List,The method has 5 parameters. ,318
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setKeyValuesAsParameterUsingPropertyColumn,Long Statement,The length of the statement "parameterStartIndex=setKeyValueAsParameter(sqlgGraph`mod`parameterStartIndex`preparedStatement`ImmutablePair.of(pair.getLeft()`pair.getRight()));" is 145.,318
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setKeyValuesAsParameter,Long Parameter List,The method has 5 parameters. ,325
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setKeyValueAsParameter,Complex Method,Cyclomatic complexity of the method is 50,332
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setKeyValueAsParameter,Long Parameter List,The method has 5 parameters. ,332
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,setKeyValueAsParameter,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3e627f40,332
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,parseLabel,Long Statement,The length of the statement "Preconditions.checkState(indexOfPeriod > -1`String.format("label must have a period to separate the schema from the table. label %s"`label));" is 141.,516
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,parseLabelMaybeNoSchema,Magic Number,The method contains a magic number: 2,525
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,mapTokeyValues,Magic Number,The method contains a magic number: 2,537
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,mapToStringKeyValues,Magic Number,The method contains a magic number: 2,547
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,transformToKeyList,Magic Number,The method contains a magic number: 2,557
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,transformToColumnDefinitionMap,Magic Number,The method contains a magic number: 2,569
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Magic Number,The method contains a magic number: 2,598
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Magic Number,The method contains a magic number: 2,598
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Complex Conditional,The conditional expression previousBatchModeKeys != null && !previousBatchModeKeys.isEmpty() && !key.equals(previousBatchModeKeys.get(keyCount++)) is complex.,641
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Complex Method,Cyclomatic complexity of the method is 9,641
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Long Statement,The length of the statement "if (previousBatchModeKeys != null && !previousBatchModeKeys.isEmpty() && !key.equals(previousBatchModeKeys.get(keyCount++))) {" is 126.,641
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Long Statement,The length of the statement "throw new IllegalStateException("Streaming batch mode must occur for the same keys in the same order. Expected " + previousBatchModeKeys.get(keyCount - 1) + " found "+ key);" is 173.,641
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Magic Number,The method contains a magic number: 2,641
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,validateVertexKeysValues,Magic Number,The method contains a magic number: 2,641
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,getArray,Complex Method,Cyclomatic complexity of the method is 8,737
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,getArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@28ffd9a7,737
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,dropDb,Complex Method,Cyclomatic complexity of the method is 14,786
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,dropSqlgReadOnlyUser,Complex Method,Cyclomatic complexity of the method is 8,864
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,convertByteArrayToPrimitiveArray,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,927
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyToLocalDateTime,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1075
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyObjectArrayOfOffsetDateTimeToLocalDateTime,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1085
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyObjectArrayOfTimestampToLocalDateTime,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1095
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyObjectArrayOfTimestampToLocalDate,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1105
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyToLocalDate,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1115
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyObjectArrayOfDateToLocalDate,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1125
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyToLocalDate,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1135
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyToLocalTime,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1145
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyObjectArrayOfOffsetTimeToLocalTime,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1155
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,copyObjectArrayOfTimeToLocalTime,Long Identifier,The length of the field PROPERTY_ARRAY_VALUE_ELEMENTS_MAY_NOT_BE_NULL is 45.,1165
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,getValue,Complex Method,Cyclomatic complexity of the method is 10,1187
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,getValue,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@55673e36,1187
pietermartin_sqlg,org.umlg.sqlg.util,SqlgUtil,stringValueToType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2ad20ebc,1227
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,remove,Complex Method,Cyclomatic complexity of the method is 8,123
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,remove,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes((this instanceof Vertex ? VERTEX_PREFIX : EDGE_PREFIX) + this.table));" is 130.,123
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,remove,Long Statement,The length of the statement "Schema schema=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found."`this.schema)));" is 162.,123
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,updateRow,Complex Method,Cyclomatic complexity of the method is 14,254
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,updateRow,Long Statement,The length of the statement "abstractLabel=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`this.schema))).getVertexLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found"`this.table)));" is 287.,254
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,updateRow,Long Statement,The length of the statement "abstractLabel=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`this.schema))).getEdgeLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel %s not found"`this.table)));" is 283.,254
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,equals,Complex Conditional,The conditional expression this.id() != null && (object instanceof SqlgElement) && ((SqlgElement)object).id() != null is complex.,350
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,writeColumnNames,Magic Number,The method contains a magic number: 2,416
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,loadProperty,Long Parameter List,The method has 6 parameters. ,467
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,loadProperty,Complex Conditional,The conditional expression propertyName.endsWith(Topology.ZONEID) || propertyName.endsWith(Topology.MONTHS) || propertyName.endsWith(Topology.DAYS)|| propertyName.endsWith(Topology.DURATION_NANOS) is complex.,478
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,loadProperty,Complex Method,Cyclomatic complexity of the method is 102,478
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,loadProperty,Long Parameter List,The method has 7 parameters. ,478
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,loadProperty,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@767ecd9,478
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,loadProperty,Complex Conditional,The conditional expression propertyName.endsWith(Topology.ZONEID) || propertyName.endsWith(Topology.MONTHS) || propertyName.endsWith(Topology.DAYS)|| propertyName.endsWith(Topology.DURATION_NANOS) is complex.,940
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgElement,loadProperty,Long Statement,The length of the statement "if (propertyName.endsWith(Topology.ZONEID) || propertyName.endsWith(Topology.MONTHS) || propertyName.endsWith(Topology.DAYS)|| propertyName.endsWith(Topology.DURATION_NANOS)) {" is 176.,940
pietermartin_sqlg,org.umlg.sqlg.structure,SchemaTable,withOutPrefix,Long Statement,The length of the statement "if (this.table.startsWith(VERTEX_PREFIX)) return SchemaTable.of(this.getSchema()`this.getTable().substring(VERTEX_PREFIX.length()));" is 132.,118
pietermartin_sqlg,org.umlg.sqlg.structure,SchemaTable,withPrefix,Long Statement,The length of the statement "Preconditions.checkArgument(prefix.equals(VERTEX_PREFIX) || prefix.equals(EDGE_PREFIX)`"Prefix must be either " + VERTEX_PREFIX + " or "+ EDGE_PREFIX+ " for "+ prefix);" is 168.,126
pietermartin_sqlg,org.umlg.sqlg.structure,SchemaTable,withPrefix,Long Statement,The length of the statement "Preconditions.checkState(!this.table.startsWith(VERTEX_PREFIX) && !this.table.startsWith(EDGE_PREFIX)`"SchemaTable is already prefixed.");" is 138.,126
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgProperty,remove,Complex Method,Cyclomatic complexity of the method is 14,60
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgProperty,remove,Long Statement,The length of the statement "abstractLabel=this.sqlgGraph.getTopology().getSchema(this.element.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found."`this.element.schema))).getVertexLabel(this.element.table).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found."`this.element.table)));" is 321.,60
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgProperty,remove,Long Statement,The length of the statement "abstractLabel=this.sqlgGraph.getTopology().getSchema(this.element.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found."`this.element.schema))).getEdgeLabel(this.element.table).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel %s not found."`this.element.table)));" is 317.,60
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgProperty,remove,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes((this.element instanceof Vertex ? VERTEX_PREFIX : EDGE_PREFIX) + this.element.table));" is 146.,60
pietermartin_sqlg,org.umlg.sqlg.structure,RecordId,recordIdFromIdentifiers,Long Statement,The length of the statement "Optional<VertexLabel> vertexLabel=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found."`schemaTable.getSchema()))).getVertexLabel(schemaTable.getTable());" is 240.,118
pietermartin_sqlg,org.umlg.sqlg.structure,RecordId,recordIdFromIdentifiers,Long Statement,The length of the statement "Optional<EdgeLabel> edgeLabel=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found."`schemaTable.getSchema()))).getEdgeLabel(schemaTable.getTable());" is 234.,118
pietermartin_sqlg,org.umlg.sqlg.structure,RecordId,recordIdFromIdentifiers,Long Statement,The length of the statement "Preconditions.checkArgument(abstractLabel.getIdentifiers().size() == identifiers.length`"%s identifiers expected in the RecordId. Found %s. given id = %s"`abstractLabel.getIdentifiers().size()`identifiers.length`label + id);" is 224.,118
pietermartin_sqlg,org.umlg.sqlg.structure,RecordId,from,Magic Number,The method contains a magic number: 2,151
pietermartin_sqlg,org.umlg.sqlg.structure,RecordId,from,Magic Number,The method contains a magic number: 2,151
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,open,Long Statement,The length of the statement "if (!configuration.containsKey(JDBC_URL)) throw new IllegalArgumentException(String.format("SqlgGraph configuration requires that the %s be set"`JDBC_URL));" is 156.,318
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,SqlgGraph,Empty catch clause,The method has an empty catch block.,332
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,SqlgGraph,Long Statement,The length of the statement "logger.debug(String.format("Opening graph. Connection url = %s` maxPoolSize = %d"`this.getJdbcUrl()`configuration.getInt("maxPoolSize"`100)));" is 142.,332
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,SqlgGraph,Long Statement,The length of the statement "this.sqlgTransaction.setDefaultFetchSize(this.configuration.getInteger("fetch.size"`this.sqlDialect.getDefaultFetchSize()));" is 124.,332
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,SqlgGraph,Magic Number,The method contains a magic number: 100,332
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addVertex,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode(String.format("Transaction is in %s` use streamVertex(Object ... keyValues)"`this.tx().getBatchModeType().toString()));" is 152.,408
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addVertex,Long Statement,The length of the statement "Triple<Map<String`PropertyType>`Map<String`Object>`Map<String`Object>> keyValueMapTriple=SqlgUtil.validateVertexKeysValues(this.sqlDialect`keyValues);" is 150.,408
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addVertex,Long Statement,The length of the statement "final Pair<Map<String`Object>`Map<String`Object>> keyValueMapPair=Pair.of(keyValueMapTriple.getMiddle()`keyValueMapTriple.getRight());" is 134.,408
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addVertex,Long Statement,The length of the statement "VertexLabel vertexLabel=this.getTopology().ensureVertexLabelExist(schemaTablePair.getSchema()`schemaTablePair.getTable()`columns);" is 130.,408
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addVertex,Long Statement,The length of the statement "Preconditions.checkArgument(columns.keySet().containsAll(vertexLabel.getIdentifiers())`"identifiers must be present %s"`vertexLabel.getIdentifiers());" is 150.,408
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addTemporaryVertex,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode(String.format("Transaction is in %s` use streamVertex(Object ... keyValues)"`this.tx().getBatchModeType().toString()));" is 152.,433
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addTemporaryVertex,Long Statement,The length of the statement "Triple<Map<String`PropertyType>`Map<String`Object>`Map<String`Object>> keyValueMapTriple=SqlgUtil.validateVertexKeysValues(this.sqlDialect`keyValues);" is 150.,433
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,addTemporaryVertex,Long Statement,The length of the statement "final Pair<Map<String`Object>`Map<String`Object>> keyValueMapPair=Pair.of(keyValueMapTriple.getMiddle()`keyValueMapTriple.getRight());" is 134.,433
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,streamVertex,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode(TRANSACTION_MUST_BE_IN + this.tx().getBatchModeType().toString() + MODE_FOR_STREAM_VERTEX);" is 124.,450
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,streamVertex,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode(TRANSACTION_MUST_BE_IN + this.tx().getBatchModeType().toString() + MODE_FOR_STREAM_VERTEX);" is 124.,457
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,streamTemporaryVertex,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode(TRANSACTION_MUST_BE_IN + this.tx().getBatchModeType().toString() + MODE_FOR_STREAM_VERTEX);" is 124.,467
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,streamTemporaryVertex,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode(TRANSACTION_MUST_BE_IN + this.tx().getBatchModeType().toString() + MODE_FOR_STREAM_VERTEX);" is 124.,477
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamTemporaryVertex,Long Identifier,The length of the identifier streamingBatchModeVertexSchemaTable is 35.,484
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamTemporaryVertex,Long Statement,The length of the statement "if (streamingBatchModeVertexSchemaTable != null && !streamingBatchModeVertexSchemaTable.toString().equals(schemaTablePair.toString())) {" is 136.,484
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamTemporaryVertex,Long Statement,The length of the statement "throw new IllegalStateException("Streaming batch mode must occur for one label at a time. Expected \"" + streamingBatchModeVertexSchemaTable + "\" found \""+ label+ "\". First commit the transaction or call SqlgGraph.flush() before streaming a different label");" is 262.,484
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamTemporaryVertex,Long Statement,The length of the statement "Triple<Map<String`PropertyType>`Map<String`Object>`Map<String`Object>> keyValuesTriple=SqlgUtil.validateVertexKeysValues(this.sqlDialect`keyValues`keys);" is 153.,484
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamVertex,Long Identifier,The length of the identifier streamingBatchModeVertexSchemaTable is 35.,502
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamVertex,Long Statement,The length of the statement "if (streamingBatchModeVertexSchemaTable != null && !streamingBatchModeVertexSchemaTable.toString().equals(schemaTablePair.toString())) {" is 136.,502
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamVertex,Long Statement,The length of the statement "throw new IllegalStateException("Streaming batch mode must occur for one label at a time. Expected \"" + streamingBatchModeVertexSchemaTable + "\" found \""+ label+ "\". First commit the transaction or call SqlgGraph.flush() before streaming a different label");" is 262.,502
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamVertex,Long Statement,The length of the statement "Triple<Map<String`PropertyType>`Map<String`Object>`Map<String`Object>> keyValueMapTriple=SqlgUtil.validateVertexKeysValues(this.sqlDialect`keyValues`keys);" is 155.,502
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,internalStreamVertex,Long Statement,The length of the statement "final Pair<Map<String`Object>`Map<String`Object>> keyValueMapPair=Pair.of(keyValueMapTriple.getMiddle()`keyValueMapTriple.getRight());" is 134.,502
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,bulkAddEdges,Long Parameter List,The method has 6 parameters. ,521
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,bulkAddEdges,Long Statement,The length of the statement "throw new UnsupportedOperationException(String.format("Bulk mode is not supported for %s"`this.sqlDialect.dialectName()));" is 122.,521
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,bulkAddEdges,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode(TRANSACTION_MUST_BE_IN + BatchManager.BatchModeType.STREAMING + " or "+ BatchManager.BatchModeType.STREAMING_WITH_LOCK+ " mode for bulkAddEdges");" is 179.,521
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,bulkAddEdges,Long Statement,The length of the statement "Triple<Map<String`PropertyType>`Map<String`Object>`Map<String`Object>> keyValueMapTriple=SqlgUtil.validateVertexKeysValues(this.sqlDialect`keyValues);" is 150.,521
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,bulkAddEdges,Long Statement,The length of the statement "sqlBulkDialect.bulkAddEdges(this`outSchemaTable`inSchemaTable`edgeLabel`idFields`uids`keyValueMapTriple.getLeft()`keyValueMapTriple.getRight());" is 144.,521
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,createElementIterator,Long Statement,The length of the statement "if (!Stream.of(ids).allMatch(id -> clazz.isAssignableFrom(id.getClass()))) throw Graph.Exceptions.idArgsMustBeEitherIdOrElement();" is 130.,566
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,createElementIterator,Long Statement,The length of the statement "if (!Stream.of(ids).map(Object::getClass).allMatch(firstClass::equals)) throw Graph.Exceptions.idArgsMustBeEitherIdOrElement();" is 127.,566
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,close,Empty catch clause,The method has an empty catch block.,599
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,close,Long Statement,The length of the statement "logger.debug(String.format("Closing graph. Connection url = %s` maxPoolSize = %d"`this.configuration.getString(JDBC_URL)`configuration.getInt("maxPoolSize"`100)));" is 163.,599
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,close,Magic Number,The method contains a magic number: 100,599
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,io,Long Statement,The length of the statement "if (builder.requiresVersion(GryoVersion.V1_0) || builder.requiresVersion(GraphSONVersion.V1_0)) return (I)builder.graph(this).onMapper(mapper -> mapper.addRegistry(SqlgIoRegistryV1.instance())).create();" is 203.,619
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,io,Long Statement,The length of the statement "else if (builder.requiresVersion(GraphSONVersion.V2_0)) return (I)builder.graph(this).onMapper(mapper -> mapper.addRegistry(SqlgIoRegistryV2.instance())).create();" is 163.,619
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,toString,Long Statement,The length of the statement "return StringFactory.graphString(this`"SqlGraph") + " (" + configuration.getProperty(JDBC_URL)+ ")"+ " (user = "+ configuration.getString("jdbc.username")+ ")";" is 160.,630
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgGraph,createVertexLabeledIndex,Long Statement,The length of the statement "VertexLabel vertexLabel=this.getTopology().ensureVertexLabelExist(schemaTablePair.getSchema()`schemaTablePair.getTable()`columns);" is 130.,1177
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,SqlgVertex,Long Parameter List,The method has 6 parameters. ,29
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,label,Complex Conditional,The conditional expression this.schema != null && this.schema.length() > 0 && !schema.equals(sqlgGraph.getSqlDialect().getPublicSchema()) is complex.,79
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,streamEdge,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode("Transaction must be in " + BatchManager.BatchModeType.STREAMING + " mode for streamEdge");" is 124.,96
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,streamEdge,Long Statement,The length of the statement "if (this.sqlgGraph.tx().isOpen() && this.sqlgGraph.tx().getBatchManager().getStreamingBatchModeVertexSchemaTable() != null) {" is 125.,96
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,streamEdge,Long Statement,The length of the statement "throw new IllegalStateException("Streaming vertex for label " + this.sqlgGraph.tx().getBatchManager().getStreamingBatchModeVertexSchemaTable().getTable() + " is in progress. Commit the transaction or call SqlgGraph.flush()");" is 225.,96
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,streamEdge,Long Statement,The length of the statement "if (streamingBatchModeEdgeLabel != null && !streamingBatchModeEdgeLabel.getTable().substring(EDGE_PREFIX.length()).equals(label)) {" is 131.,96
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,streamEdge,Long Statement,The length of the statement "throw new IllegalStateException("Streaming batch mode must occur for one label at a time. Expected \"" + streamingBatchModeEdgeLabel + "\" found \""+ label+ "\". First commit the transaction or call SqlgGraph.flush() before streaming a different label");" is 254.,96
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdge,Long Statement,The length of the statement "boolean streaming=this.sqlgGraph.getSqlDialect().supportsBatchMode() && (this.sqlgGraph.tx().isInStreamingBatchMode() || this.sqlgGraph.tx().isInStreamingWithLockBatchMode());" is 175.,112
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdge,Long Statement,The length of the statement "if (streamingBatchModeEdgeLabel != null && !streamingBatchModeEdgeLabel.getTable().substring(EDGE_PREFIX.length()).equals(label)) {" is 131.,112
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdge,Long Statement,The length of the statement "throw new IllegalStateException("Streaming batch mode must occur for one label at a time. Expected \"" + streamingBatchModeEdgeLabel + "\" found \""+ label+ "\". First commit the transaction or call SqlgGraph.flush() before streaming a different label");" is 254.,112
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Complex Method,Cyclomatic complexity of the method is 8,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "Preconditions.checkArgument(!label.contains(".")`String.format("Edge label may not contain a '.' ` the edge will be stored in the schema of the owning vertex. label = %s"`label));" is 179.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "Triple<Map<String`PropertyType>`Map<String`Object>`Map<String`Object>> keyValueMapTriple=SqlgUtil.validateVertexKeysValues(this.sqlgGraph.getSqlDialect()`keyValues`previousBatchModeKeys);" is 187.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "final Pair<Map<String`Object>`Map<String`Object>> keyValueMapPair=Pair.of(keyValueMapTriple.getMiddle()`keyValueMapTriple.getRight());" is 134.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "Optional<VertexLabel> inVertexLabelOptional=this.sqlgGraph.getTopology().getVertexLabel(((SqlgVertex)inVertex).schema`((SqlgVertex)inVertex).table);" is 148.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "Preconditions.checkState(outVertexLabelOptional.isPresent()`"Out VertexLabel must be present. Not found for %s"`this.schema + "." + this.table);" is 144.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "Preconditions.checkState(inVertexLabelOptional.isPresent()`"In VertexLabel must be present. Not found for %s"`((SqlgVertex)inVertex).schema + "." + ((SqlgVertex)inVertex).table);" is 178.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().ensureEdgeLabelExist(label`outVertexLabelOptional.get()`inVertexLabelOptional.get()`columns);" is 142.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,addEdgeInternal,Long Statement,The length of the statement "Preconditions.checkArgument(columns.keySet().containsAll(edgeLabel.getIdentifiers())`"identifiers must be present %s"`edgeLabel.getIdentifiers());" is 146.,125
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,internalEdges,Complex Conditional,The conditional expression this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().isInBatchMode() && this.sqlgGraph.tx().getBatchManager().vertexIsCached(this) is complex.,219
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,internalEdges,Long Statement,The length of the statement "if (this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().isInBatchMode() && this.sqlgGraph.tx().getBatchManager().vertexIsCached(this)) {" is 158.,219
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,remove,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> foreignKeys=this.sqlgGraph.getTopology().getTableLabels(this.getSchemaTablePrefixed());" is 127.,239
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,deleteEdges,Complex Method,Cyclomatic complexity of the method is 8,272
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,deleteEdges,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.schema + "." + this.table+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 188.,272
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,deleteEdges,Long Statement,The length of the statement "Schema schema=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found."`this.schema)));" is 162.,272
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,deleteEdges,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.schema + "." + this.table+ "."+ identifier+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 205.,272
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,internalAddVertex,Complex Method,Cyclomatic complexity of the method is 13,334
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,internalAddVertex,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().temporaryTablePrefix() + VERTEX_PREFIX + this.table));" is 145.,334
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,internalAddVertex,Long Statement,The length of the statement "vertexLabel=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`this.schema))).getVertexLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found"`this.table)));" is 285.,334
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,internalAddVertex,Long Statement,The length of the statement "Map<String`PropertyType> properties=this.sqlgGraph.getTopology().getPublicSchema().getTemporaryTable(VERTEX_PREFIX + this.table);" is 129.,334
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,load,Complex Conditional,The conditional expression this.recordId != null && this.recordId.hasSequenceId() && this.recordId.sequenceId() != -1 && (this.properties.isEmpty() && !this.sqlgGraph.tx().isInBatchMode()) || (this.properties.isEmpty() && this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().isInBatchMode()&& !this.sqlgGraph.tx().getBatchManager().vertexIsCached(this)) is complex.,414
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,load,Complex Conditional,The conditional expression this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().isOpen() && this.sqlgGraph.tx().getBatchManager().isStreaming() is complex.,414
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,load,Complex Method,Cyclomatic complexity of the method is 11,414
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,load,Long Statement,The length of the statement "if (this.recordId != null && this.recordId.hasSequenceId() && this.recordId.sequenceId() != -1 && (this.properties.isEmpty() && !this.sqlgGraph.tx().isInBatchMode()) || (this.properties.isEmpty() && this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().isInBatchMode()&& !this.sqlgGraph.tx().getBatchManager().vertexIsCached(this))) {" is 354.,414
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,load,Long Statement,The length of the statement "if (this.sqlgGraph.getSqlDialect().supportsBatchMode() && this.sqlgGraph.tx().isOpen() && this.sqlgGraph.tx().getBatchManager().isStreaming()) {" is 144.,414
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,load,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`this.schema))).getVertexLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found"`this.table)));" is 297.,414
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,load,Long Statement,The length of the statement "throw new IllegalStateException(String.format("Vertex with label %s and id %s does not exist."`this.schema + "." + this.table`this.recordId.getID().toString()));" is 161.,414
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,loadResultSet,Complex Conditional,The conditional expression !columnName.equals("ID") && !columnName.equals(Topology.VERTEX_SCHEMA) && !columnName.equals(VERTEX_TABLE)&& !this.sqlgGraph.getSqlDialect().columnsToIgnore().contains(columnName) is complex.,484
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,loadResultSet,Long Statement,The length of the statement "if (!columnName.equals("ID") && !columnName.equals(Topology.VERTEX_SCHEMA) && !columnName.equals(VERTEX_TABLE)&& !this.sqlgGraph.getSqlDialect().columnsToIgnore().contains(columnName)) {" is 186.,484
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgVertex,getAbstractLabel,Long Statement,The length of the statement "return schema.getVertexLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found."`this.table)));" is 141.,542
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,hasNextLazy,Complex Method,Cyclomatic complexity of the method is 25,92
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,hasNextLazy,Long Identifier,The length of the field optionalLeftJoinResultsIterator is 31.,92
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,hasNextLazy,Long Method,The method has 129 lines of code.,92
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,hasNextLazy,Long Statement,The length of the statement "if (this.currentDistinctQueryStack.getLast().isDrop() && !this.currentRootSchemaTableTree.duplicatesInStack(currentDistinctQueryStack)) {" is 137.,92
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,executeRegularQuery,Long Statement,The length of the statement "this.queryResult=SqlgSqlExecutor.executeRegularQuery(this.sqlgGraph`this.currentRootSchemaTableTree`this.currentDistinctQueryStack);" is 132.,250
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,executeOptionalQuery,Long Statement,The length of the statement "this.queryResult=SqlgSqlExecutor.executeOptionalQuery(this.sqlgGraph`this.currentRootSchemaTableTree`this.optionalCurrentLeftJoinResult);" is 137.,254
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,executeEmitQuery,Long Statement,The length of the statement "this.queryResult=SqlgSqlExecutor.executeEmitQuery(this.sqlgGraph`this.currentRootSchemaTableTree`this.emitCurrentLeftJoinResult);" is 129.,258
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,iterateRegularQueries,Long Statement,The length of the statement "result=SqlgUtil.loadResultSetIntoResultIterator(this.sqlgGraph`this.queryResult.getMiddle()`this.queryResult.getLeft()`this.currentRootSchemaTableTree`this.subQueryStacks`this.first`this.lastElementIdCountMap);" is 210.,262
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,iterateRegularQueries,Long Statement,The length of the statement "result=SqlgUtil.loadResultSetIntoResultIterator(this.sqlgGraph`this.queryResult.getMiddle()`this.queryResult.getLeft()`this.currentRootSchemaTableTree`this.subQueryStacks`this.first`this.lastElementIdCountMap`true);" is 215.,262
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,iterateOptionalQueries,Long Statement,The length of the statement "result=SqlgUtil.loadResultSetIntoResultIterator(this.sqlgGraph`this.queryResult.getMiddle()`this.queryResult.getLeft()`this.currentRootSchemaTableTree`this.subQueryStacks`this.first`this.lastElementIdCountMap);" is 210.,291
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,iterateOptionalQueries,Long Statement,The length of the statement "result=SqlgUtil.loadResultSetIntoResultIterator(this.sqlgGraph`this.queryResult.getMiddle()`this.queryResult.getLeft()`this.currentRootSchemaTableTree`this.subQueryStacks`this.first`this.lastElementIdCountMap`true);" is 215.,291
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,iterateEmitQueries,Long Statement,The length of the statement "result=SqlgUtil.loadResultSetIntoResultIterator(this.sqlgGraph`this.queryResult.getMiddle()`this.queryResult.getLeft()`this.currentRootSchemaTableTree`this.subQueryStacks`this.first`this.lastElementIdCountMap);" is 210.,320
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgCompiledResultIterator,iterateEmitQueries,Long Statement,The length of the statement "result=SqlgUtil.loadResultSetIntoResultIterator(this.sqlgGraph`this.queryResult.getMiddle()`this.queryResult.getLeft()`this.currentRootSchemaTableTree`this.subQueryStacks`this.first`this.lastElementIdCountMap`true);" is 215.,320
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgExceptions,invalidId,Long Statement,The length of the statement "return new InvalidIdException("Sqlg ids must be a String.\nFor sequence ids the format is 'label:::id' The id must be a long.\n" + "For user supplied identifiers the identifiers must be in array format. i.e. [x`y`z].\n" + "The given id " + invalidId + " is invalid.");" is 268.,39
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgExceptions,invalidFromRecordId,Long Statement,The length of the statement "throw new InvalidFromRecordIdException(String.format("To convert a String representation of an id for an user supplied identifier element use RecordId.from(SqlgGraph` Object). Given id is %s"`elementId));" is 204.,73
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgDataSourceFactory,create,Long Statement,The length of the statement "Preconditions.checkState(!configuration.containsKey("cache.vertices")`"\"cache.vertices\" is not supported from Sqlg 2.1.6");" is 125.,16
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgDataSourceFactory,create,Long Statement,The length of the statement "throw new RuntimeException(String.format("SqlgDataSourceFactory can only instantiate SqlgDataSource implementations from classes that have a static create() method that takes a single Apache Commons Configuration argument - [%s] does not seem to have one"`dataSourceClass.getName()));" is 284.,16
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgDataSourceFactory,create,Long Statement,The length of the statement "throw new RuntimeException(String.format("SqlgDataSourceFactory could not create this SqlgDataSource implementation [%s]"`dataSourceClass.getName())`e2);" is 153.,16
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgDataSourceFactory,create,Long Statement,The length of the statement "throw new RuntimeException(String.format("SqlgDataSourceFactory could not instantiate this SqlgDataSource implementation [%s]"`dataSourceClass.getName())`e3);" is 158.,16
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addTemporaryVertex,Long Identifier,The length of the field streamingVertexOutputStreamCache is 32.,88
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addVertex,Complex Method,Cyclomatic complexity of the method is 11,100
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addVertex,Long Identifier,The length of the field streamingBatchModeVertexSchemaTable is 35.,100
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addVertex,Long Identifier,The length of the field streamingVertexOutputStreamCache is 32.,100
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addVertex,Long Statement,The length of the statement "vertexLabel=sqlgGraph.getTopology().getVertexLabel(schemaTable.getSchema()`schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found."`schemaTable.toString())));" is 211.,100
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Complex Method,Cyclomatic complexity of the method is 10,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Identifier,The length of the field streamingBatchModeEdgeSchemaTable is 33.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Identifier,The length of the field streamingEdgeOutputStreamCache is 30.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Parameter List,The method has 5 parameters. ,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Statement,The length of the statement "VertexLabel outVertexLabel=sqlgGraph.getTopology().getVertexLabel(outVertexLabelSchemaTable.getSchema()`outVertexLabelSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`outVertexLabelSchemaTable.getSchema()`outVertexLabelSchemaTable.getTable())));" is 312.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Statement,The length of the statement "VertexLabel inVertexLabel=sqlgGraph.getTopology().getVertexLabel(inSchemaTable.getSchema()`inSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`inSchemaTable.getSchema()`inSchemaTable.getTable())));" is 263.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Statement,The length of the statement "EdgeLabel edgeLabel=sqlgGraph.getTopology().getEdgeLabel(outSchemaTable.getSchema()`sqlgEdge.getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel not found for %s.%s"`outSchemaTable.getSchema()`sqlgEdge.getTable())));" is 245.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Statement,The length of the statement "Pair<SortedSet<String>`Map<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>>> triples=this.edgeCache.get(metaEdge);" is 124.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Statement,The length of the statement "String sql=this.sqlDialect.constructCompleteCopyCommandSqlEdge(sqlgGraph`sqlgEdge`outVertexLabel`inVertexLabel`outVertex`inVertex`keyValueMap);" is 143.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,addEdge,Long Statement,The length of the statement "this.sqlDialect.writeStreamingEdge(writer`sqlgEdge`outVertexLabel`inVertexLabel`outVertex`inVertex`keyValueMap`edgeLabel);" is 122.,148
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,close,Long Identifier,The length of the field streamingVertexOutputStreamCache is 32.,219
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,close,Long Identifier,The length of the field streamingEdgeOutputStreamCache is 30.,219
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,close,Long Identifier,The length of the field streamingBatchModeVertexSchemaTable is 35.,219
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,close,Long Identifier,The length of the field streamingBatchModeEdgeSchemaTable is 33.,219
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,updateProperty,Complex Method,Cyclomatic complexity of the method is 10,249
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,updateProperty,Long Statement,The length of the statement "Pair<SortedSet<String>`Map<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>>> triples=this.edgeCache.get(metaEdge);" is 124.,249
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,removeProperty,Long Statement,The length of the statement "Pair<SortedSet<String>`Map<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>>> triples=this.edgeCache.get(metaEdge);" is 124.,308
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,vertexIsCached,Long Statement,The length of the statement "Pair<SortedSet<String>`Map<SqlgVertex`Map<String`Object>>> map=this.vertexCache.get(SchemaTable.of(vertex.getSchema()`vertex.getTable()));" is 138.,335
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,removeVertex,Complex Method,Cyclomatic complexity of the method is 9,349
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,removeVertex,Long Statement,The length of the statement "for ( Map.Entry<MetaEdge`Pair<SortedSet<String>`Map<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>>>> metaEdgePairEntry : this.edgeCache.entrySet()) {" is 161.,349
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,removeVertex,Long Statement,The length of the statement "Pair<SortedSet<String>`Map<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>>> edges=metaEdgePairEntry.getValue();" is 122.,349
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,removeVertex,Long Statement,The length of the statement "for ( Map.Entry<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>> sqlgEdgeTripleEntry : edges.getRight().entrySet()) {" is 127.,349
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,removeEdge,Long Statement,The length of the statement "Pair<SortedSet<String>`Map<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>>> sqlgEdgeTripleMap=this.edgeCache.get(metaEdge);" is 134.,388
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,getStreamingBatchModeVertexSchemaTable,Long Identifier,The length of the field streamingBatchModeVertexSchemaTable is 35.,407
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,getStreamingBatchModeEdgeSchemaTable,Long Identifier,The length of the field streamingBatchModeEdgeSchemaTable is 33.,415
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,isStreamingVertices,Long Identifier,The length of the field streamingVertexOutputStreamCache is 32.,427
pietermartin_sqlg,org.umlg.sqlg.structure,BatchManager,isStreamingEdges,Long Identifier,The length of the field streamingEdgeOutputStreamCache is 30.,431
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,doOpen,Long Statement,The length of the statement "tc=TransactionCache.of(connection`new BatchManager(this.sqlgGraph`((SqlBulkDialect)this.sqlgGraph.getSqlDialect()))`lazy);" is 122.,53
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,doOpen,Magic Number,The method contains a magic number: 63,53
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,doOpen,Magic Number,The method contains a magic number: 30,53
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,doOpen,Magic Number,The method contains a magic number: 30,53
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,doCommit,Complex Method,Cyclomatic complexity of the method is 8,86
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,doCommit,Long Identifier,The length of the field threadLocalPreparedStatementTx is 30.,86
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,doRollback,Long Identifier,The length of the field threadLocalPreparedStatementTx is 30.,130
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,batchMode,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2389d5fb,208
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,add,Long Identifier,The length of the field threadLocalPreparedStatementTx is 30.,314
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgTransaction,getPreparedStatementCache,Long Identifier,The length of the field threadLocalPreparedStatementTx is 30.,319
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchema,Complex Method,Cyclomatic complexity of the method is 14,49
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchema,Long Statement,The length of the statement "String message=badColumns.stream().map(c -> String.format("'%s.%s'"`c.getLeft()`c.getRight())).reduce((a`b) -> a + "` " + b).get();" is 131.,49
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchema,Long Statement,The length of the statement "throw new IllegalStateException("Columns` " + message + "` has date time columns with time zones that needs to be dropped.");" is 125.,49
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchema,Magic Number,The method contains a magic number: 203,49
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Complex Method,Cyclomatic complexity of the method is 8,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 5,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 2,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 2,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 4,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 2,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 5,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 2,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,updateTopology,Magic Number,The method contains a magic number: 6,153
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,removeGlobalUniqueIndexFromSqlgSchema,Long Statement,The length of the statement "String sql=String.format("delete from %s.%s where name = 'gui_schema';"`this.sqlDialect.maybeWrapInQoutes("sqlg_schema")`this.sqlDialect.maybeWrapInQoutes("V_schema"));" is 168.,201
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,removeGlobalUniqueIndexFromSqlgSchema,Long Statement,The length of the statement "sql=String.format("drop table %s.%s;"`this.sqlDialect.maybeWrapInQoutes("sqlg_schema")`this.sqlDialect.maybeWrapInQoutes("E_globalUniqueIndex_property"));" is 154.,201
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,removeGlobalUniqueIndexFromSqlgSchema,Long Statement,The length of the statement "sql=String.format("drop table %s.%s;"`this.sqlDialect.maybeWrapInQoutes("sqlg_schema")`this.sqlDialect.maybeWrapInQoutes("V_globalUniqueIndex"));" is 145.,201
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,correctSqlgSchemaDDLOnForeignKeyIndexes,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_identifier_property__I_idx\" ON \"sqlg_schema\".\"E_edge_identifier\" (\"sqlg_schema.property__I\");");" is 178.,229
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,correctSqlgSchemaDDLOnForeignKeyIndexes,Long Statement,The length of the statement "result.add("ALTER INDEX IF EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "_vertex_identifier_edge__O_idx\" RENAME TO \""+ Topology.EDGE_PREFIX+ "_edge_identifier_edge__O_idx\";");" is 185.,229
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,correctSqlgSchemaDDLOnForeignKeyIndexes,Long Statement,The length of the statement "result.add("ALTER INDEX IF EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "_vertex_partition_edge__O_idx\" RENAME TO \""+ Topology.EDGE_PREFIX+ "_edge_partition_edge__O_idx\";");" is 183.,229
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,correctSqlgSchemaDDLOnForeignKeyIndexes,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_edge_partition\" (\"sqlg_schema.partition__I\");");" is 178.,229
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,correctSqlgSchemaDDLOnForeignKeyIndexes,Long Statement,The length of the statement "result.add("ALTER INDEX IF EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "_vertex_partition_partition__O_idx\" RENAME TO \""+ Topology.EDGE_PREFIX+ "_partition_partition_partition__O_idx\";");" is 198.,229
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,correctSqlgSchemaDDLOnForeignKeyIndexes,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_partition_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_partition_partition\" (\"sqlg_schema.partition__I\");");" is 188.,229
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,upgradeForeignKeysToDeferrable,Magic Number,The method contains a magic number: 2,256
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,upgradeForeignKeysToDeferrable,Magic Number,The method contains a magic number: 3,256
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,createOrUpdateGraph,Long Statement,The length of the statement "try (ResultSet columnRs=metadata.getColumns(null`Schema.SQLG_SCHEMA`Topology.VERTEX_PREFIX + Topology.GRAPH`Topology.SQLG_SCHEMA_GRAPH_DB_VERSION)){" is 148.,287
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,upgradeIndexEdgeSequenceToExist,Long Statement,The length of the statement "@SuppressWarnings("ConstantConditions") List<Triple<String`Integer`String>> columns=this.sqlDialect.getTableColumns(metadata`catalog`Topology.SQLG_SCHEMA`Topology.EDGE_PREFIX + "index_property"`SQLG_SCHEMA_INDEX_PROPERTY_EDGE_SEQUENCE);" is 236.,333
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Conditional,The conditional expression schemaName.equals(SQLG_SCHEMA) || schemaName.equals(this.sqlDialect.getPublicSchema()) || this.sqlDialect.getGisSchemas().contains(schemaName) is complex.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Conditional,The conditional expression schema.equals(SQLG_SCHEMA) || schemasToIgnore.contains(schema) || this.sqlDialect.getGisSchemas().contains(schema) is complex.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Conditional,The conditional expression s.equalsIgnoreCase("ID") || s.equalsIgnoreCase("uid") || s.equalsIgnoreCase("uuid") is complex.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Conditional,The conditional expression schema.equals(SQLG_SCHEMA) || schemasToIgnore.contains(schema) || this.sqlDialect.getGisSchemas().contains(schema) is complex.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Conditional,The conditional expression s.getLeft().equalsIgnoreCase("ID") || s.getLeft().equalsIgnoreCase("uid") || s.getLeft().equalsIgnoreCase("uuid") is complex.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Conditional,The conditional expression table.startsWith(EDGE_PREFIX) && (column.endsWith(Topology.IN_VERTEX_COLUMN_END) || column.endsWith(Topology.OUT_VERTEX_COLUMN_END)) is complex.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Conditional,The conditional expression schema.equals(SQLG_SCHEMA) || schemasToIgnore.contains(schema) || this.sqlDialect.getGisSchemas().contains(schema) is complex.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Complex Method,Cyclomatic complexity of the method is 42,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Method,The method has 199 lines of code.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "if (schemaName.equals(SQLG_SCHEMA) || schemaName.equals(this.sqlDialect.getPublicSchema()) || this.sqlDialect.getGisSchemas().contains(schemaName)) {" is 149.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "if (schema.equals(SQLG_SCHEMA) || schemasToIgnore.contains(schema) || this.sqlDialect.getGisSchemas().contains(schema)) {" is 121.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "if (schema.equals(SQLG_SCHEMA) || schemasToIgnore.contains(schema) || this.sqlDialect.getGisSchemas().contains(schema)) {" is 121.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "edgeVertex=TopologyManager.addEdgeLabel(this.sqlgGraph`table`Collections.emptyMap()`new ListOrderedSet<>()`PartitionType.NONE`null);" is 132.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "edgeVertex=TopologyManager.addEdgeLabel(this.sqlgGraph`table`Collections.emptyMap()`identifiers`PartitionType.NONE`null);" is 121.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "edgeVertex=TopologyManager.addEdgeLabel(this.sqlgGraph`table`Collections.emptyMap()`ListOrderedSet.listOrderedSet(primaryKeys)`PartitionType.NONE`null);" is 152.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "if (table.startsWith(EDGE_PREFIX) && (column.endsWith(Topology.IN_VERTEX_COLUMN_END) || column.endsWith(Topology.OUT_VERTEX_COLUMN_END))) {" is 139.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Long Statement,The length of the statement "if (schema.equals(SQLG_SCHEMA) || schemasToIgnore.contains(schema) || this.sqlDialect.getGisSchemas().contains(schema)) {" is 121.,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Magic Number,The method contains a magic number: 3,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,loadSqlgSchemaFromInformationSchema,Magic Number,The method contains a magic number: 3,351
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractIndices,Long Parameter List,The method has 6 parameters. ,577
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractProperty,Complex Method,Cyclomatic complexity of the method is 10,612
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractProperty,Long Parameter List,The method has 7 parameters. ,612
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractProperty,Long Statement,The length of the statement "else if ((column2Type == Types.ARRAY && this.sqlDialect.sqlArrayTypeNameToPropertyType(typeName2`this.sqlgGraph`schema`table`column2Name`metaDataIter) == PropertyType.STRING_ARRAY)) {" is 183.,612
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractProperty,Long Statement,The length of the statement "Preconditions.checkState(sqlDialect.sqlArrayTypeNameToPropertyType(typeName3`this.sqlgGraph`schema`table`column3Name`metaDataIter) == PropertyType.INTEGER_ARRAY`"Only Period have a third column and it must be a Integer");" is 221.,612
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractProperty,Long Statement,The length of the statement "Preconditions.checkState(sqlDialect.sqlArrayTypeNameToPropertyType(typeName2`this.sqlgGraph`schema`table`column2Name`metaDataIter) == PropertyType.INTEGER_ARRAY`"Only Period have a third column and it must be a Integer");" is 221.,612
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractProperty,Long Statement,The length of the statement "Preconditions.checkState(column2Type == Types.INTEGER`"Only Duration and Period have a second column and it must be a Integer");" is 128.,612
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,extractProperty,Long Statement,The length of the statement "propertyType=this.sqlDialect.sqlTypeToPropertyType(this.sqlgGraph`schema`table`columnName`columnType`typeName`metaDataIter);" is 124.,612
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgStartupManager,addPublicSchema,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA`"name"`this.sqlDialect.getPublicSchema()`Topology.CREATED_ON`LocalDateTime.now());" is 154.,661
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,SqlgEdge,Long Parameter List,The method has 7 parameters. ,32
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Complex Method,Cyclomatic complexity of the method is 28,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Method,The method has 130 lines of code.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`this.schema))).getEdgeLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel %s not found in schema %s"`this.table`this.schema)));" is 314.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "VertexLabel inVertexLabel=this.sqlgGraph.getTopology().getSchema(inVertex.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`inVertex.getSchema()))).getVertexLabel(inVertex.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found in schema %s"`inVertex.getTable()`inVertex.getSchema())));" is 369.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "VertexLabel outVertexLabel=this.sqlgGraph.getTopology().getSchema(outVertex.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`outVertex.getSchema()))).getVertexLabel(outVertex.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found in schema %s"`outVertex.getTable()`outVertex.getSchema())));" is 375.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.inVertex.schema + "." + this.inVertex.table+ Topology.IN_VERTEX_COLUMN_END));" is 142.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.inVertex.schema + "." + this.inVertex.table+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END));" is 159.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.outVertex.schema + "." + this.outVertex.table+ Topology.OUT_VERTEX_COLUMN_END));" is 145.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.outVertex.schema + "." + this.outVertex.table+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 162.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "i=SqlgUtil.setKeyValueAsParameter(this.sqlgGraph`false`i`preparedStatement`ImmutablePair.of(inVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s not a property."`identifier))).getPropertyType()`inVertex.value(identifier)));" is 281.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,internalAddEdge,Long Statement,The length of the statement "i=SqlgUtil.setKeyValueAsParameter(this.sqlgGraph`false`i`preparedStatement`ImmutablePair.of(outVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s not a property."`identifier))).getPropertyType()`outVertex.value(identifier)));" is 283.,144
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,buildQuestionMark,Magic Number,The method contains a magic number: 2,286
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Complex Method,Cyclomatic complexity of the method is 25,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Method,The method has 120 lines of code.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Statement,The length of the statement "@SuppressWarnings("OptionalGetWithoutIsPresent") EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getSchema(this.schema).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`this.schema))).getEdgeLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel %s not found"`this.table)));" is 338.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Statement,The length of the statement "PropertyColumn propertyColumn=vertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 180.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(vertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.OUT_VERTEX_COLUMN_END));" is 174.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(vertexLabel.getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 134.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Statement,The length of the statement "PropertyColumn propertyColumn=vertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 180.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(vertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.IN_VERTEX_COLUMN_END));" is 173.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(vertexLabel.getFullName() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END));" is 133.,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Magic Number,The method contains a magic number: 2,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,load,Magic Number,The method contains a magic number: 2,301
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadInVertex,Long Statement,The length of the statement "this.inVertex=SqlgVertex.of(this.sqlgGraph`identifiers`column.getForeignSchemaTable().getSchema()`column.getForeignSchemaTable().getTable());" is 141.,438
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadOutVertex,Long Statement,The length of the statement "this.outVertex=SqlgVertex.of(this.sqlgGraph`identifiers`column.getForeignSchemaTable().getSchema()`column.getForeignSchemaTable().getTable());" is 142.,458
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Complex Conditional,The conditional expression !columnName.equals("ID") && !columnName.endsWith(Topology.OUT_VERTEX_COLUMN_END) && !columnName.endsWith(Topology.IN_VERTEX_COLUMN_END) is complex.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Complex Method,Cyclomatic complexity of the method is 17,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "if (!columnName.equals("ID") && !columnName.endsWith(Topology.OUT_VERTEX_COLUMN_END) && !columnName.endsWith(Topology.IN_VERTEX_COLUMN_END)) {" is 142.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "PropertyColumn propertyColumn=inVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 182.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "inComparables.add((Comparable)resultSet.getObject(inVertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.IN_VERTEX_COLUMN_END));" is 170.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "inComparables.add((Comparable)resultSet.getObject(inVertexLabel.getFullName() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END));" is 130.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "PropertyColumn propertyColumn=outVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 183.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "outComparables.add((Comparable)resultSet.getObject(outVertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.OUT_VERTEX_COLUMN_END));" is 173.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "outComparables.add((Comparable)resultSet.getObject(outVertexLabel.getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 133.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "this.inVertex=SqlgVertex.of(this.sqlgGraph`inId`inVertexColumnName.getSchema()`SqlgUtil.removeTrailingInId(inVertexColumnName.getTable()));" is 139.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "this.inVertex=SqlgVertex.of(this.sqlgGraph`inComparables`inVertexColumnName.getSchema()`SqlgUtil.removeTrailingInId(inVertexColumnName.getTable()));" is 148.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "this.outVertex=SqlgVertex.of(this.sqlgGraph`outId`outVertexColumnName.getSchema()`SqlgUtil.removeTrailingOutId(outVertexColumnName.getTable()));" is 144.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Long Statement,The length of the statement "this.outVertex=SqlgVertex.of(this.sqlgGraph`outComparables`outVertexColumnName.getSchema()`SqlgUtil.removeTrailingOutId(outVertexColumnName.getTable()));" is 153.,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Magic Number,The method contains a magic number: 2,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,loadResultSet,Magic Number,The method contains a magic number: 2,471
pietermartin_sqlg,org.umlg.sqlg.structure,SqlgEdge,getAbstractLabel,Long Statement,The length of the statement "return schema.getEdgeLabel(this.table).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found."`this.table)));" is 139.,578
pietermartin_sqlg,org.umlg.sqlg.structure,TransactionCache,getElementPropertyRollback,Long Identifier,The length of the field elementPropertyRollbackFunctions is 32.,68
pietermartin_sqlg,org.umlg.sqlg.structure,TransactionCache,clear,Long Identifier,The length of the field elementPropertyRollbackFunctions is 32.,76
pietermartin_sqlg,org.umlg.sqlg.structure,PropertyType,values,Long Statement,The length of the statement "return new PropertyType[]{PropertyType.BOOLEAN`PropertyType.BYTE`PropertyType.SHORT`PropertyType.INTEGER`PropertyType.LONG`PropertyType.FLOAT`PropertyType.DOUBLE`PropertyType.STRING`PropertyType.LOCALDATE`PropertyType.LOCALDATETIME`PropertyType.LOCALTIME`PropertyType.ZONEDDATETIME`PropertyType.PERIOD`PropertyType.DURATION`PropertyType.JSON`PropertyType.POINT`PropertyType.LINESTRING`PropertyType.POLYGON`PropertyType.GEOGRAPHY_POINT`PropertyType.GEOGRAPHY_POLYGON`PropertyType.UUID`PropertyType.boolean_ARRAY`PropertyType.BOOLEAN_ARRAY`PropertyType.byte_ARRAY`PropertyType.BYTE_ARRAY`PropertyType.short_ARRAY`PropertyType.SHORT_ARRAY`PropertyType.int_ARRAY`PropertyType.INTEGER_ARRAY`PropertyType.long_ARRAY`PropertyType.LONG_ARRAY`PropertyType.float_ARRAY`PropertyType.FLOAT_ARRAY`PropertyType.double_ARRAY`PropertyType.DOUBLE_ARRAY`PropertyType.STRING_ARRAY`PropertyType.LOCALDATETIME_ARRAY`PropertyType.LOCALDATE_ARRAY`PropertyType.LOCALTIME_ARRAY`PropertyType.ZONEDDATETIME_ARRAY`PropertyType.DURATION_ARRAY`PropertyType.PERIOD_ARRAY`PropertyType.JSON_ARRAY};" is 1065.,179
pietermartin_sqlg,org.umlg.sqlg.structure,MetaEdge,equals,Long Statement,The length of the statement "return other.schemaTable.equals(this.schemaTable) && other.outLabel.equals(this.outLabel) && other.inLabel.equals(this.inLabel);" is 128.,35
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,build,Complex Method,Cyclomatic complexity of the method is 8,37
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,build,Long Statement,The length of the statement "PartitionTree p=new PartitionTree(partition.get("schema") + "." + partition.get("child")`partition.get("schema")`partition.get("child")`partition.get("partitionType")`partition.get("partitionExpression1")`partition.get("partitionExpression2")`partition.get("fromToInModulusRemainder"));" is 286.,37
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,build,Long Statement,The length of the statement "PartitionTree p=new PartitionTree(partition.get("schema") + "." + partition.get("child")`partition.get("schema")`partition.get("child")`partition.get("partitionType")`partition.get("partitionExpression1")`partition.get("partitionExpression2")`partition.get("fromToInModulusRemainder"));" is 286.,37
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,PartitionTree,Long Parameter List,The method has 7 parameters. ,88
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Complex Method,Cyclomatic complexity of the method is 8,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.updateVertexLabelPartitionTypeAndExpression(sqlgGraph`this.schema`this.name.substring(Topology.VERTEX_PREFIX.length())`this.partitionType`this.getPartitionExpression());" is 185.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.updateEdgeLabelPartitionTypeAndExpression(sqlgGraph`this.schema`this.name.substring(Topology.EDGE_PREFIX.length())`this.partitionType`this.getPartitionExpression());" is 181.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`this.schema`this.name.substring(Topology.VERTEX_PREFIX.length())`child.name`child.fromExpression()`child.toExpression()`child.partitionType`child.getPartitionExpression());" is 222.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`this.schema`this.name.substring(Topology.VERTEX_PREFIX.length())`child.name`child.modulusExpression()`child.remainderExpression()`child.partitionType`child.getPartitionExpression());" is 232.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`this.schema`this.name.substring(Topology.VERTEX_PREFIX.length())`child.name`child.inExpression()`child.partitionType`child.getPartitionExpression());" is 199.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.addEdgeLabelPartition(sqlgGraph`this.schema`this.name.substring(Topology.EDGE_PREFIX.length())`child.name`child.fromExpression()`child.toExpression()`child.partitionType`child.getPartitionExpression());" is 218.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.addEdgeLabelPartition(sqlgGraph`this.schema`this.name.substring(Topology.EDGE_PREFIX.length())`child.name`child.modulusExpression()`child.remainderExpression()`child.partitionType`child.getPartitionExpression());" is 228.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,createPartitions,Long Statement,The length of the statement "TopologyManager.addEdgeLabelPartition(sqlgGraph`this.schema`this.name.substring(Topology.EDGE_PREFIX.length())`child.name`child.inExpression()`child.partitionType`child.getPartitionExpression());" is 195.,110
pietermartin_sqlg,org.umlg.sqlg.structure,PartitionTree,walk,Long Statement,The length of the statement "TopologyManager.addSubPartition(sqlgGraph`child.parentPartitionTree.parentPartitionTree.parentPartitionTree != null`isVertexLabel`schema`abstractLabel`child.parentPartitionTree.name`child.name`child.partitionType`child.getPartitionExpression()`child.fromExpression()`child.toExpression()`child.inExpression()`child.modulusExpression()`child.remainderExpression());" is 364.,222
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,AbstractLabel,Long Parameter List,The method has 6 parameters. ,104
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,AbstractLabel,Long Statement,The length of the statement "Preconditions.checkArgument(partitionType == PartitionType.RANGE || partitionType == PartitionType.LIST || partitionType == PartitionType.HASH`"Only RANGE and LIST partitions are supported. Found %s"`partitionType.name());" is 222.,104
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureRangePartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.RANGE`"ensureRangePartitionExists(String name` String from` String to) can only be called for a RANGE partitioned VertexLabel. Found %s"`this.partitionType.name());" is 225.,146
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureRangePartitionWithSubPartitionExists,Long Parameter List,The method has 5 parameters. ,171
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureRangePartitionWithSubPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.RANGE`"ensureRangePartitionExists(String name` String from` String to` PartitionType partitionType` String partitionExpression) can only be called for a RANGE partitioned VertexLabel. Found %s"`this.partitionType.name());" is 282.,171
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureRangePartitionWithSubPartitionExists,Long Statement,The length of the statement "return partitionOptional.orElseGet(() -> this.createRangePartitionWithSubPartition(name`from`to`partitionType`partitionExpression));" is 132.,171
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureHashPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.HASH`"ensureHashPartitionExists(String name` String ... in) can only be called for a LIST partitioned VertexLabel. Found %s"`this.partitionType.name());" is 213.,200
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureListPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.LIST`"ensureListPartitionExists(String name` String ... in) can only be called for a LIST partitioned VertexLabel. Found %s"`this.partitionType.name());" is 213.,225
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureListPartitionWithSubPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.LIST`"ensureRangePartitionExists(String name` String ... in) can only be called for a LIST partitioned VertexLabel. Found %s"`this.partitionType.name());" is 214.,248
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureListPartitionWithSubPartitionExists,Long Statement,The length of the statement "return partitionOptional.orElseGet(() -> this.createListPartitionWithSubPartition(name`in`partitionType`partitionExpression));" is 126.,248
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureHashPartitionWithSubPartitionExists,Long Parameter List,The method has 5 parameters. ,275
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureHashPartitionWithSubPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.HASH`"ensureHashPartitionWithSubPartitionExists can only be called for a HASH partitioned VertexLabel. Found %s"`this.partitionType.name());" is 201.,275
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureHashPartitionWithSubPartitionExists,Long Statement,The length of the statement "return partitionOptional.orElseGet(() -> this.createHashPartitionWithSubPartition(name`modulus`remainder`partitionType`partitionExpression));" is 141.,275
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createRangePartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getSchema().isSqlgSchema()`"createRangePartition may not be called for \"%s\""`SQLG_SCHEMA);" is 123.,325
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createRangePartitionWithSubPartition,Long Parameter List,The method has 5 parameters. ,334
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createRangePartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getSchema().isSqlgSchema()`"createRangePartitionWithSubPartition may not be called for \"%s\""`SQLG_SCHEMA);" is 139.,334
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createRangePartitionWithSubPartition,Long Statement,The length of the statement "Partition partition=Partition.createRangePartitionWithSubPartition(this.sqlgGraph`this`name`from`to`partitionType`partitionExpression);" is 135.,334
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createHashPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getSchema().isSqlgSchema()`"createListPartition may not be called for \"%s\""`SQLG_SCHEMA);" is 122.,343
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createListPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getSchema().isSqlgSchema()`"createListPartition may not be called for \"%s\""`SQLG_SCHEMA);" is 122.,352
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createListPartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getSchema().isSqlgSchema()`"createListPartitionWithSubPartition may not be called for \"%s\""`SQLG_SCHEMA);" is 138.,361
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createListPartitionWithSubPartition,Long Statement,The length of the statement "Partition partition=Partition.createListPartitionWithSubPartition(this.sqlgGraph`this`name`in`partitionType`partitionExpression);" is 129.,361
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createHashPartitionWithSubPartition,Long Parameter List,The method has 5 parameters. ,370
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createHashPartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getSchema().isSqlgSchema()`"createHashPartitionWithSubPartition may not be called for \"%s\""`SQLG_SCHEMA);" is 138.,370
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,createHashPartitionWithSubPartition,Long Statement,The length of the statement "Partition partition=Partition.createHashPartitionWithSubPartition(this.sqlgGraph`this`name`modulus`remainder`partitionType`partitionExpression);" is 144.,370
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureIndexExists,Complex Method,Cyclomatic complexity of the method is 8,379
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureIndexExists,Long Statement,The length of the statement "String indexName=this.sqlgGraph.getSqlDialect().indexName(schemaTable`prefix`properties.stream().map(PropertyColumn::getName).collect(Collectors.toList()));" is 156.,379
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,getPartition,Complex Method,Cyclomatic complexity of the method is 9,464
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,buildColumns,Complex Method,Cyclomatic complexity of the method is 12,594
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,buildColumns,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(identifier + propertyType.getPostFixes()[count - 2])).append(" ").append(sqlDefinition);" is 143.,594
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,buildColumns,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(column + propertyType.getPostFixes()[count - 2])).append(" ").append(sqlDefinition);" is 139.,594
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,buildColumns,Magic Number,The method contains a magic number: 2,594
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,buildColumns,Magic Number,The method contains a magic number: 2,594
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addColumn,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(keyValue.getLeft() + keyValue.getRight().getPostFixes()[count - 2]));" is 124.,646
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addColumn,Magic Number,The method contains a magic number: 2,646
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addProperty,Long Statement,The length of the statement "PropertyColumn property=new PropertyColumn(this`propertyVertex.value(SQLG_SCHEMA_PROPERTY_NAME)`PropertyType.valueOf(propertyVertex.value(SQLG_SCHEMA_PROPERTY_TYPE)));" is 167.,680
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addDistributionColocate,Long Identifier,The length of the field distributionColocateAbstractLabel is 33.,699
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addDistributionColocate,Long Statement,The length of the statement "this.distributionColocateAbstractLabel=getSchema().getVertexLabel(colocate.value(SQLG_SCHEMA_VERTEX_LABEL_NAME)).orElseThrow(() -> new IllegalStateException("Distribution Co-locate vertex label %s not found"`colocate.value(SQLG_SCHEMA_VERTEX_LABEL_NAME)));" is 256.,699
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addDistributionProperty,Long Statement,The length of the statement "this.distributionPropertyColumn=new PropertyColumn(this`distributionProperty.value(SQLG_SCHEMA_PROPERTY_NAME)`PropertyType.valueOf(distributionProperty.value(SQLG_SCHEMA_PROPERTY_TYPE)));" is 187.,704
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`from.value()`to.value()`PartitionType.from(partitionType.value())`partitionExpression.isPresent() ? partitionExpression.value() : null);" is 230.,709
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`in.value()`PartitionType.from(partitionType.value())`partitionExpression.isPresent() ? partitionExpression.value() : null);" is 217.,709
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`modulus.value()`remainder.value()`PartitionType.from(partitionType.value())`partitionExpression.isPresent() ? partitionExpression.value() : null);" is 240.,709
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterCommit,Complex Method,Cyclomatic complexity of the method is 13,760
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterCommit,Long Identifier,The length of the field uncommittedDistributionPropertyColumn is 37.,760
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterCommit,Long Identifier,The length of the field uncommittedDistributionColocateAbstractLabel is 44.,760
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterCommit,Long Identifier,The length of the field distributionColocateAbstractLabel is 33.,760
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterCommit,Long Statement,The length of the statement "Preconditions.checkState(this.getTopology().isSchemaChanged()`"AbstractLabel.afterCommit must have schemaChanged ThreadLocal var as true");" is 139.,760
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterRollback,Long Identifier,The length of the field uncommittedDistributionPropertyColumn is 37.,823
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterRollback,Long Identifier,The length of the field uncommittedDistributionColocateAbstractLabel is 44.,823
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,afterRollback,Long Statement,The length of the statement "Preconditions.checkState(this.getTopology().isSchemaChanged()`"AbstractLabel.afterRollback must have schemaChanged ThreadLocal var as true");" is 141.,823
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Complex Conditional,The conditional expression propertyArrayNode.size() == 0 && removedPropertyArrayNode.size() == 0 && identifierArrayNode.size() == 0 && uncommittedPartitionArrayNode.size() == 0 && removedPartitionArrayNode.size() == 0 && committedPartitionArrayNode.size() == 0 && indexArrayNode.size() == 0 && removedIndexArrayNode.size() == 0 && uncommittedDistributionPropertyColumnObjectNode == null && uncommittedShardCountObjectNode == null && uncommittedDistributionColocateAbstractLabelObjectNode == null is complex.,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Complex Method,Cyclomatic complexity of the method is 18,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Long Identifier,The length of the identifier uncommittedDistributionPropertyColumnObjectNode is 47.,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Long Identifier,The length of the identifier uncommittedDistributionColocateAbstractLabelObjectNode is 54.,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Long Identifier,The length of the identifier uncommittedShardCountObjectNode is 31.,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Long Identifier,The length of the field uncommittedDistributionPropertyColumn is 37.,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Long Identifier,The length of the field uncommittedDistributionColocateAbstractLabel is 44.,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,toNotifyJson,Long Statement,The length of the statement "if (propertyArrayNode.size() == 0 && removedPropertyArrayNode.size() == 0 && identifierArrayNode.size() == 0 && uncommittedPartitionArrayNode.size() == 0 && removedPartitionArrayNode.size() == 0 && committedPartitionArrayNode.size() == 0 && indexArrayNode.size() == 0 && removedIndexArrayNode.size() == 0 && uncommittedDistributionPropertyColumnObjectNode == null && uncommittedShardCountObjectNode == null && uncommittedDistributionColocateAbstractLabelObjectNode == null) {" is 475.,860
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Complex Method,Cyclomatic complexity of the method is 29,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Long Identifier,The length of the identifier distributionPropertyColumnObjectNode is 36.,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Long Identifier,The length of the identifier distributionColocateAbstractLabelObjectNode is 43.,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Long Identifier,The length of the field distributionColocateAbstractLabel is 33.,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Long Method,The method has 104 lines of code.,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Long Statement,The length of the statement "ObjectNode distributionPropertyColumnObjectNode=(ObjectNode)vertexLabelJson.get("uncommittedDistributionPropertyColumn");" is 121.,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Long Statement,The length of the statement "ObjectNode distributionColocateAbstractLabelObjectNode=(ObjectNode)vertexLabelJson.get("uncommittedDistributionColocateAbstractLabel");" is 135.,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,fromPropertyNotifyJson,Long Statement,The length of the statement "Optional<VertexLabel> colocateVertexLabelOpt=getSchema().getVertexLabel(distributionColocateAbstractLabelObjectNode.get("colocateLabel").asText());" is 147.,955
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,distribute,Long Statement,The length of the statement "Preconditions.checkArgument(getIdentifiers().contains(distributionPropertyColumn.getName())`"The distribution column must be part of the primary key");" is 151.,1238
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureDistributed,Long Identifier,The length of the field uncommittedDistributionPropertyColumn is 37.,1286
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureDistributed,Long Identifier,The length of the field uncommittedDistributionColocateAbstractLabel is 44.,1286
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureDistributed,Long Statement,The length of the statement "Preconditions.checkState(getProperty(distributionPropertyColumn.getName()).isPresent()`"distributionPropertyColumn \"%s\" not found."`distributionPropertyColumn.getName());" is 172.,1286
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureDistributed,Long Statement,The length of the statement "Preconditions.checkState(getProperty(distributionPropertyColumn.getName()).get().equals(distributionPropertyColumn)`"distributionPropertyColumn \"%s\" must be a property of \"%s\""`distributionPropertyColumn.getName()`this.getFullName());" is 238.,1286
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,ensureDistributed,Long Statement,The length of the statement "Preconditions.checkArgument(getIdentifiers().contains(distributionPropertyColumn.getName())`"The distribution column must be part of the primary key");" is 151.,1286
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,isDistributed,Long Identifier,The length of the field uncommittedDistributionPropertyColumn is 37.,1302
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,getDistributionPropertyColumn,Long Identifier,The length of the field uncommittedDistributionPropertyColumn is 37.,1306
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,getDistributionColocate,Long Identifier,The length of the field distributionColocateAbstractLabel is 33.,1314
pietermartin_sqlg,org.umlg.sqlg.structure.topology,AbstractLabel,getDistributionColocate,Long Identifier,The length of the field uncommittedDistributionColocateAbstractLabel is 44.,1314
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,createSqlgSchemaVertexLabel,Long Statement,The length of the statement "Preconditions.checkArgument(schema.isSqlgSchema()`"createSqlgSchemaVertexLabel may only be called for \"%s\""`SQLG_SCHEMA);" is 123.,58
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,createVertexLabel,Long Parameter List,The method has 5 parameters. ,69
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,renameVertexLabel,Long Parameter List,The method has 6 parameters. ,78
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,createPartitionedVertexLabel,Long Parameter List,The method has 8 parameters. ,94
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,createPartitionedVertexLabel,Long Statement,The length of the statement "Preconditions.checkArgument(!StringUtils.isEmpty(partitionExpression)`"partitionExpression may not be null or empty when creating a partitioned vertex label.");" is 160.,94
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,VertexLabel,Long Parameter List,The method has 6 parameters. ,149
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getInEdgeLabels,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,173
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getOutEdgeLabels,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,184
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getInEdgeRoles,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,196
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getOutEdgeRoles,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,212
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,loadSqlgSchemaEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(this.schema.isSqlgSchema()`"loadSqlgSchemaEdgeLabel must be called for \"%s\" found \"%s\""`SQLG_SCHEMA`this.schema.getName());" is 152.,283
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,ensurePartitionedEdgeLabelExist,Long Parameter List,The method has 7 parameters. ,340
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,ensurePartitionedEdgeLabelExist,Long Statement,The length of the statement "return this.getSchema().ensurePartitionedEdgeLabelExist(edgeLabelName`this`inVertexLabel`properties`identifiers`partitionType`partitionExpression`isForeignKeyPartition);" is 169.,340
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,ensurePartitionedEdgeLabelExist,Long Parameter List,The method has 6 parameters. ,361
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,ensurePartitionedEdgeLabelExist,Long Statement,The length of the statement "return this.getSchema().ensurePartitionedEdgeLabelExist(edgeLabelName`this`inVertexLabel`properties`identifiers`partitionType`partitionExpression);" is 147.,361
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,addPartitionedEdgeLabel,Long Parameter List,The method has 7 parameters. ,379
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,addPartitionedEdgeLabel,Long Statement,The length of the statement "EdgeLabel edgeLabel=EdgeLabel.createPartitionedEdgeLabel(edgeLabelName`this`inVertexLabel`properties`identifiers`partitionType`partitionExpression`isForeignKeyPartition);" is 170.,379
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,createVertexLabelOnDb,Complex Method,Cyclomatic complexity of the method is 8,481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,renameVertexLabelOnDb,Long Statement,The length of the statement "String sql=this.sqlgGraph.getSqlDialect().renameTable(this.schema.getName()`VERTEX_PREFIX + oldLabel`VERTEX_PREFIX + newLabel);" is 127.,523
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterCommit,Complex Method,Cyclomatic complexity of the method is 13,605
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterCommit,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,605
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterCommit,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,605
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterCommit,Long Statement,The length of the statement "Preconditions.checkState(this.schema.getTopology().isSchemaChanged()`"VertexLabel.afterCommit must have schemaChanged = true");" is 127.,605
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterCommit,Long Statement,The length of the statement "this.getSchema().getTopology().removeFromEdgeForeignKeyCache(lbl.getSchema().getName() + "." + EDGE_PREFIX+ lbl.getLabel()`foreignKey);" is 135.,605
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterCommit,Long Statement,The length of the statement "this.getSchema().getTopology().removeFromEdgeForeignKeyCache(lbl.getSchema().getName() + "." + EDGE_PREFIX+ lbl.getLabel()`foreignKey);" is 135.,605
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterRollbackForInEdges,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,679
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterRollbackForInEdges,Long Statement,The length of the statement "Preconditions.checkState(this.schema.getTopology().isSchemaChanged()`"VertexLabel.afterRollback must have schemaChanged = true");" is 129.,679
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterRollbackForOutEdges,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,693
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,afterRollbackForOutEdges,Long Statement,The length of the statement "Preconditions.checkState(this.schema.getTopology().isSchemaChanged()`"VertexLabel.afterRollback must have schemaChanged = true");" is 129.,693
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,toNotifyJson,Complex Method,Cyclomatic complexity of the method is 20,774
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,toNotifyJson,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,774
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,toNotifyJson,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,774
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,toNotifyJson,Long Statement,The length of the statement "vertexLabelNode.set("uncommittedDistributionPropertyColumn"`abstractLabelNode.get().get("uncommittedDistributionPropertyColumn"));" is 130.,774
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,toNotifyJson,Long Statement,The length of the statement "vertexLabelNode.set("uncommittedDistributionColocateAbstractLabel"`abstractLabelNode.get().get("uncommittedDistributionColocateAbstractLabel"));" is 144.,774
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,toNotifyJson,Long Statement,The length of the statement "Preconditions.checkState(jsonNodeOptional.isPresent()`"There must be data to notify as the edgeLabel itself is uncommitted");" is 125.,774
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,toNotifyJson,Long Statement,The length of the statement "Preconditions.checkState(jsonNodeOptional.isPresent()`"There must be data to notify as the edgeLabel itself is uncommitted");" is 125.,774
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,fromNotifyJsonOutEdge,Complex Method,Cyclomatic complexity of the method is 18,877
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,fromNotifyJsonOutEdge,Long Identifier,The length of the identifier uncommittedRemoveOutEdgeLabels is 30.,877
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,fromNotifyJsonOutEdge,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@334fbc81,877
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,fromNotifyJsonInEdge,Complex Method,Cyclomatic complexity of the method is 16,976
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,fromNotifyJsonInEdge,Long Statement,The length of the statement "this.getSchema().getTopology().addToEdgeForeignKeyCache(edgeLabel.getSchema().getName() + "." + EDGE_PREFIX+ edgeLabel.getLabel()`foreignKey);" is 142.,976
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,fromNotifyJsonInEdge,Long Statement,The length of the statement "this.getSchema().getTopology().removeFromEdgeForeignKeyCache(lbl.getSchema().getName() + "." + EDGE_PREFIX+ lbl.getLabel()`foreignKey);" is 135.,976
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,validateTopology,Long Statement,The length of the statement "List<Triple<String`Integer`String>> columns=this.sqlgGraph.getSqlDialect().getTableColumns(metadata`null`this.getSchema().getName()`"V_" + this.getLabel()`propertyColumn.getName());" is 181.,1088
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getUncommittedSchemaTableForeignKeys,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,1113
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getUncommittedSchemaTableForeignKeys,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,1113
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getUncommittedRemovedSchemaTableForeignKeys,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,1132
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getUncommittedRemovedSchemaTableForeignKeys,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,1132
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getUncommittedRemovedSchemaTableForeignKeys,Long Statement,The length of the statement "for ( Map.Entry<String`Pair<EdgeLabel`EdgeRemoveType>> uncommittedEdgeLabelEntry : this.uncommittedRemovedOutEdgeLabels.entrySet()) {" is 133.,1132
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,getUncommittedRemovedSchemaTableForeignKeys,Long Statement,The length of the statement "for ( Map.Entry<String`Pair<EdgeLabel`EdgeRemoveType>> uncommittedEdgeLabelEntry : this.uncommittedRemovedInEdgeLabels.entrySet()) {" is 132.,1132
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,removeProperty,Long Statement,The length of the statement "TopologyManager.removeVertexColumn(this.sqlgGraph`this.schema.getName()`VERTEX_PREFIX + getLabel()`propertyColumn.getName());" is 125.,1147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,renameProperty,Long Statement,The length of the statement "TopologyManager.renameVertexLabelPropertyColumn(this.sqlgGraph`this.schema.getName()`VERTEX_PREFIX + getLabel()`oldName`name);" is 126.,1168
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,renameProperty,Long Statement,The length of the statement "Preconditions.checkState(!this.renamedIdentifiers.contains(namePair)`"BUG! renamedIdentifiers may not yet contain '%s'"`oldName);" is 129.,1168
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,removeOutEdge,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,1199
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,removeInEdge,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,1203
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,removeEdgeRole,Complex Method,Cyclomatic complexity of the method is 10,1207
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,removeEdgeRole,Long Identifier,The length of the field uncommittedRemovedInEdgeLabels is 30.,1207
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,removeEdgeRole,Long Identifier,The length of the field uncommittedRemovedOutEdgeLabels is 31.,1207
pietermartin_sqlg,org.umlg.sqlg.structure.topology,VertexLabel,removeEdgeRole,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@15fe2c04,1207
pietermartin_sqlg,org.umlg.sqlg.structure.topology,PropertyColumn,afterCommit,Long Statement,The length of the statement "Preconditions.checkState(this.getParentLabel().getTopology().isSchemaChanged()`"PropertyColumn.afterCommit must have schemaChanged = true");" is 140.,57
pietermartin_sqlg,org.umlg.sqlg.structure.topology,PropertyColumn,afterRollback,Long Statement,The length of the statement "Preconditions.checkState(this.getParentLabel().getTopology().isSchemaChanged()`"PropertyColumn.afterRollback must have schemaChanged = true");" is 142.,62
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeLabel,Long Parameter List,The method has 5 parameters. ,55
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(!inVertexLabel.getSchema().isSqlgSchema()`"You may not create an edge to %s"`Topology.SQLG_SCHEMA);" is 124.,55
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createPartitionedEdgeLabel,Long Parameter List,The method has 8 parameters. ,70
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createPartitionedEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(!inVertexLabel.getSchema().isSqlgSchema()`"You may not create an edge to %s"`Topology.SQLG_SCHEMA);" is 124.,70
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createPartitionedEdgeLabel,Long Statement,The length of the statement "EdgeLabel edgeLabel=new EdgeLabel(false`edgeLabelName`outVertexLabel`inVertexLabel`properties`identifiers`partitionType`partitionExpression);" is 141.,70
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,EdgeLabel,Long Parameter List,The method has 8 parameters. ,104
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,EdgeLabel,Long Parameter List,The method has 6 parameters. ,133
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,ensurePropertiesExist,Long Statement,The length of the statement "TopologyManager.addEdgeColumn(this.sqlgGraph`this.getSchema().getName()`EDGE_PREFIX + getLabel()`column`new ListOrderedSet<>());" is 128.,200
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Complex Conditional,The conditional expression inVertexLabel.getPartitionType().isNone() && outVertexLabel.getPartitionType().isNone() && this.partitionType.isNone()&& this.sqlgGraph.getTopology().isImplementingForeignKeys() is complex.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Complex Conditional,The conditional expression partitionType.isNone() && sqlDialect.needForeignKeyIndex() && !sqlDialect.isIndexPartOfCreateTable() is complex.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Complex Method,Cyclomatic complexity of the method is 65,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Method,The method has 320 lines of code.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Parameter List,The method has 5 parameters. ,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "PropertyColumn propertyColumn=inVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 182.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(inVertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.IN_VERTEX_COLUMN_END)).append(" ").append(sqlDefinition);" is 209.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(inVertexLabel.getFullName() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END)).append(" ").append(sqlDefinition);" is 169.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "PropertyColumn propertyColumn=outVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 183.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(outVertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.OUT_VERTEX_COLUMN_END)).append(" ").append(sqlDefinition);" is 211.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(outVertexLabel.getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END)).append(" ").append(sqlDefinition);" is 171.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "if (inVertexLabel.getPartitionType().isNone() && outVertexLabel.getPartitionType().isNone() && this.partitionType.isNone()&& this.sqlgGraph.getTopology().isImplementingForeignKeys()) {" is 184.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(outVertexLabel.getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 122.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(inVertexLabel.getSchema().getName() + "." + inVertexLabel.getLabel()+ Topology.IN_VERTEX_COLUMN_END));" is 142.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(outVertexLabel.getSchema().getName() + "." + outVertexLabel.getLabel()+ Topology.OUT_VERTEX_COLUMN_END));" is 145.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(sqlDialect.indexName(SchemaTable.of(schema`tableName).withOutPrefix()`EDGE_PREFIX`"_idx"`Collections.singletonList(inVertexLabel.getSchema().getName() + "_" + inVertexLabel.getLabel()+ Topology.IN_VERTEX_COLUMN_END))));" is 259.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(sqlDialect.indexName(SchemaTable.of(schema`tableName).withOutPrefix()`EDGE_PREFIX`"_idx"`Collections.singletonList(outVertexLabel.getSchema().getName() + "_" + outVertexLabel.getLabel()+ Topology.OUT_VERTEX_COLUMN_END))));" is 262.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(outVertexLabel.getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 122.,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Magic Number,The method contains a magic number: 2,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,createEdgeTableOnDb,Magic Number,The method contains a magic number: 2,220
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,afterCommit,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,556
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,afterCommit,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,556
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,afterRollbackInEdges,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,581
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,afterRollbackOutEdges,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,588
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,foreignKeysContains,Complex Method,Cyclomatic complexity of the method is 11,600
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getAllEdgeForeignKeys,Complex Method,Cyclomatic complexity of the method is 11,633
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getAllEdgeForeignKeys,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,633
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getAllEdgeForeignKeys,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,633
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getUncommittedEdgeForeignKeys,Complex Method,Cyclomatic complexity of the method is 12,669
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getUncommittedEdgeForeignKeys,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,669
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getUncommittedEdgeForeignKeys,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,669
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getUncommittedRemovedEdgeForeignKeys,Complex Method,Cyclomatic complexity of the method is 10,707
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getUncommittedRemovedEdgeForeignKeys,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,707
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getUncommittedRemovedEdgeForeignKeys,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,707
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getOutVertexLabels,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,745
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getInVertexLabels,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,754
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getOutEdgeRoles,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,763
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,getInEdgeRoles,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,780
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,ensureEdgeVertexLabelExist,Long Statement,The length of the statement "Preconditions.checkState(vertexLabel.getSchema().equals(getSchema())`"For Direction.OUT the VertexLabel must be in the same schema as the edge. Found %s and %s"`vertexLabel.getSchema().getName()`getSchema().getName());" is 218.,798
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,ensureEdgeVertexLabelExist,Long Statement,The length of the statement "TopologyManager.addLabelToEdge(this.sqlgGraph`this.getSchema().getName()`EDGE_PREFIX + getLabel()`direction == Direction.IN`foreignKeySchemaTable);" is 147.,798
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,ensureEdgeVertexLabelExist,Long Statement,The length of the statement "SchemaTable foreignKey=SchemaTable.of(vertexLabel.getSchema().getName()`vertexLabel.getLabel() + (direction == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END));" is 191.,798
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Complex Method,Cyclomatic complexity of the method is 21,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Method,The method has 123 lines of code.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Parameter List,The method has 5 parameters. ,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "Preconditions.checkState(!this.getSchema().isSqlgSchema()`"BUG: ensureEdgeVertexLabelExist may not be called for %s"`SQLG_SCHEMA);" is 130.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "addEdgeSqls.add(this.sqlgGraph.getSqlDialect().addColumnStatement(schema`table`foreignVertexLabel.getSchema().getName() + "." + foreignVertexLabel.getLabel()+ (direction == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)`this.sqlgGraph.getSqlDialect().getForeignKeyTypeDefinition()));" is 315.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "PropertyColumn propertyColumn=foreignVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 187.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "addEdgeSqls.add(this.sqlgGraph.getSqlDialect().addColumnStatement(schema`table`foreignVertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)`foreignKeyType));" is 283.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "addEdgeSqls.add(this.sqlgGraph.getSqlDialect().addColumnStatement(schema`table`foreignVertexLabel.getFullName() + "." + identifier+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)`foreignKeyType));" is 243.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(table + "_" + foreignKey.getSchema()+ "."+ foreignKey.getTable()+ "_fkey"));" is 136.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().indexName(SchemaTable.of(schema`table).withOutPrefix()`EDGE_PREFIX`"_idx"`Collections.singletonList(foreignKey.getSchema() + "_" + foreignKey.getTable()))));" is 248.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "PropertyColumn propertyColumn=foreignVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 187.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(foreignVertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 249.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(foreignVertexLabel.getFullName() + "." + identifier+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 209.,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Magic Number,The method contains a magic number: 2,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,addEdgeForeignKey,Magic Number,The method contains a magic number: 2,826
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,equals,Long Statement,The length of the statement "return vertexLabel.getSchema().equals(otherVertexLabel.getSchema()) && otherEdgeLabel.getLabel().equals(this.getLabel());" is 121.,1002
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,equals,Long Statement,The length of the statement "return vertexLabel.getSchema().equals(otherVertexLabel.getSchema()) && otherEdgeLabel.getLabel().equals(this.getLabel());" is 121.,1002
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,deepEquals,Complex Method,Cyclomatic complexity of the method is 9,1025
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,toNotifyJson,Complex Method,Cyclomatic complexity of the method is 10,1110
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,toNotifyJson,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,1110
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,toNotifyJson,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,1110
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,toNotifyJson,Long Statement,The length of the statement "edgeLabelNode.set("uncommittedDistributionPropertyColumn"`abstractLabelNode.get().get("uncommittedDistributionPropertyColumn"));" is 128.,1110
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,toNotifyJson,Long Statement,The length of the statement "edgeLabelNode.set("uncommittedDistributionColocateAbstractLabel"`abstractLabelNode.get().get("uncommittedDistributionColocateAbstractLabel"));" is 142.,1110
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,validateTopology,Long Statement,The length of the statement "List<Triple<String`Integer`String>> columns=this.sqlgGraph.getSqlDialect().getTableColumns(metadata`null`this.getSchema().getName()`"E_" + this.getLabel()`propertyColumn.getName());" is 181.,1165
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,removeProperty,Long Statement,The length of the statement "TopologyManager.removeEdgeColumn(this.sqlgGraph`this.getSchema().getName()`EDGE_PREFIX + getLabel()`propertyColumn.getName());" is 126.,1182
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameProperty,Long Statement,The length of the statement "TopologyManager.renameEdgeLabelPropertyColumn(this.sqlgGraph`getSchema().getName()`EDGE_PREFIX + getLabel()`oldName`name);" is 122.,1195
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameProperty,Long Statement,The length of the statement "Preconditions.checkState(!this.renamedIdentifiers.contains(namePair)`"BUG! renamedIdentifiers may not yet contain '%s'"`oldName);" is 129.,1195
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,removeOutVertexLabel,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,1258
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,removeOutVertexLabel,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel(lbl.getSchema().getName() + "." + lbl.getLabel()).outE(getLabel()).drop().iterate();" is 124.,1258
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,removeInVertexLabel,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,removeInVertexLabel,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel(lbl.getSchema().getName() + "." + lbl.getLabel()).inE(getLabel()).drop().iterate();" is 123.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,readOnlyCopy,Long Statement,The length of the statement "Optional<VertexLabel> foreignInVertexLabelOptional=foreignSchemas.stream().filter(s -> s.getName().equals(inVertexLabel.getSchema().getName()) && s.getVertexLabel(inVertexLabel.getLabel()).isPresent()).map(s -> s.getVertexLabel(inVertexLabel.getLabel()).orElseThrow()).findAny();" is 279.,1304
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameInOutForeignKeyIdentifier,Long Statement,The length of the statement "Optional<String> newIdentifierOptional=oldVertexLabel.getIdentifiers().stream().filter(i -> i.equals(newName)).findAny();" is 121.,1338
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameInOutForeignKeyIdentifier,Long Statement,The length of the statement "renameColumn(getSchema().getName()`EDGE_PREFIX + getLabel()`oldVertexLabel.getFullName() + "." + oldName+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : IN_VERTEX_COLUMN_END)`oldVertexLabel.getFullName() + "." + newName+ (direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : IN_VERTEX_COLUMN_END));" is 323.,1338
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameOutVertexLabel,Long Identifier,The length of the field uncommittedRemovedOutVertexLabels is 33.,1351
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameOutVertexLabel,Long Statement,The length of the statement "renameColumn(getSchema().getName()`EDGE_PREFIX + getLabel()`oldVertexLabel.getFullName() + Topology.OUT_VERTEX_COLUMN_END`renamedVertexLabel.getFullName() + Topology.OUT_VERTEX_COLUMN_END);" is 189.,1351
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameOutVertexLabel,Long Statement,The length of the statement "renameColumn(getSchema().getName()`EDGE_PREFIX + getLabel()`oldVertexLabel.getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END`renamedVertexLabel.getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END);" is 225.,1351
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameInVertexLabel,Long Identifier,The length of the field uncommittedRemovedInVertexLabels is 32.,1374
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameInVertexLabel,Long Statement,The length of the statement "renameColumn(getSchema().getName()`EDGE_PREFIX + getLabel()`oldVertexLabel.getFullName() + Topology.IN_VERTEX_COLUMN_END`renamedVertexLabel.getFullName() + Topology.IN_VERTEX_COLUMN_END);" is 187.,1374
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameInVertexLabel,Long Statement,The length of the statement "renameColumn(getSchema().getName()`EDGE_PREFIX + getLabel()`oldVertexLabel.getFullName() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END`renamedVertexLabel.getFullName() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END);" is 223.,1374
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameEdgeLabel,Long Parameter List,The method has 8 parameters. ,1406
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameEdgeLabel,Long Statement,The length of the statement "TopologyManager.renameEdgeLabel(sqlgGraph`schema.getName()`EDGE_PREFIX + oldEdgeLabel.getLabel()`EDGE_PREFIX + newLabel);" is 121.,1406
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeLabel,renameEdgeLabelOnDb,Long Statement,The length of the statement "String sql=this.sqlgGraph.getSqlDialect().renameTable(getSchema().getName()`EDGE_PREFIX + oldLabel`EDGE_PREFIX + newLabel);" is 123.,1439
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Index,createIndex,Complex Method,Cyclomatic complexity of the method is 12,130
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Index,toNotifyJson,Long Statement,The length of the statement "Preconditions.checkState(this.abstractLabel.getSchema().getTopology().isSchemaChanged() && !this.uncommittedProperties.isEmpty());" is 130.,197
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Index,fromNotifyJson,Long Statement,The length of the statement "Preconditions.checkState(propertyColumnOptional.isPresent()`"BUG: property %s for PropertyType %s not found."`propertyName`propertyType.name());" is 144.,210
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Index,createIndex,Long Parameter List,The method has 5 parameters. ,226
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Index,validateTopology,Long Statement,The length of the statement "try (ResultSet propertyRs=metadata.getIndexInfo(null`this.abstractLabel.getSchema().getName()`this.abstractLabel.getPrefix() + this.abstractLabel.getLabel()`false`false)){" is 171.,244
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,Partition,Long Parameter List,The method has 7 parameters. ,53
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,Partition,Long Parameter List,The method has 6 parameters. ,71
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,Partition,Long Parameter List,The method has 7 parameters. ,87
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,Partition,Long Parameter List,The method has 7 parameters. ,105
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,Partition,Long Parameter List,The method has 6 parameters. ,123
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,Partition,Long Parameter List,The method has 7 parameters. ,139
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartition,Long Parameter List,The method has 5 parameters. ,234
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartition,Long Statement,The length of the statement "Preconditions.checkArgument(!abstractLabel.getSchema().isSqlgSchema()`"createRangePartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 144.,234
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartition,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`from`to`PartitionType.NONE`null);" is 148.,234
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartition,Long Parameter List,The method has 5 parameters. ,265
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!abstractLabel.getSchema().isSqlgSchema()`"createHashPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 143.,265
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartition,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`modulus`remainder`PartitionType.NONE`null);" is 158.,265
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!abstractLabel.getSchema().isSqlgSchema()`"createListPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 143.,296
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartition,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`in`PartitionType.NONE`null);" is 143.,296
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionWithSubPartition,Long Parameter List,The method has 7 parameters. ,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!abstractLabel.getSchema().isSqlgSchema()`"createRangePartitionWithSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 160.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionWithSubPartition,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`from`to`subPartitionType`partitionExpression);" is 161.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionWithSubPartition,Long Parameter List,The method has 6 parameters. ,368
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!abstractLabel.getSchema().isSqlgSchema()`"createListSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 146.,368
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionWithSubPartition,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`in`subPartitionType`partitionExpression);" is 156.,368
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionWithSubPartition,Long Parameter List,The method has 7 parameters. ,407
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!abstractLabel.getSchema().isSqlgSchema()`"createListSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 146.,407
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionWithSubPartition,Long Statement,The length of the statement "TopologyManager.addVertexLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`modulus`remainder`subPartitionType`partitionExpression);" is 171.,407
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionWithSubPartition,Long Statement,The length of the statement "TopologyManager.addEdgeLabelPartition(sqlgGraph`abstractLabel`name`modulus`remainder`subPartitionType`partitionExpression);" is 123.,407
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangeSubPartition,Long Parameter List,The method has 5 parameters. ,449
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangeSubPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!parentPartition.getAbstractLabel().getSchema().isSqlgSchema()`"createRangeSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 168.,449
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangeSubPartitionWithPartition,Long Parameter List,The method has 7 parameters. ,461
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangeSubPartitionWithPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!parentPartition.getAbstractLabel().getSchema().isSqlgSchema()`"createRangeSubPartitionWithPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 181.,461
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListSubPartitionWithPartition,Long Parameter List,The method has 6 parameters. ,481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListSubPartitionWithPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!parentPartition.getAbstractLabel().getSchema().isSqlgSchema()`"createListSubPartitionWithPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 180.,481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListSubPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!parentPartition.getAbstractLabel().getSchema().isSqlgSchema()`"createPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 160.,497
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashSubPartition,Long Parameter List,The method has 5 parameters. ,509
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashSubPartition,Long Statement,The length of the statement "Preconditions.checkArgument(!parentPartition.getAbstractLabel().getSchema().isSqlgSchema()`"createPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 160.,509
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionOnDb,Complex Method,Cyclomatic complexity of the method is 10,518
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionOnDb,Long Statement,The length of the statement "Preconditions.checkState(this.abstractLabel != null`"If Partition.parentPartition is null it must have an abstractLabel.");" is 123.,518
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionOnDb,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.abstractLabel.getPrefix() + this.abstractLabel.getLabel()));" is 125.,518
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionOnDb,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.parentPartition.getAbstractLabel().getSchema().getName()));" is 124.,518
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,foreignKeyIndexSql,Complex Method,Cyclomatic complexity of the method is 11,578
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,foreignKeyIndexSql,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(sqlDialect.indexName(SchemaTable.of(schema`tableName).withOutPrefix()`EDGE_PREFIX`"_idx"`Collections.singletonList(inEdgeRole.getVertexLabel().getSchema().getName() + "_" + inEdgeRole.getVertexLabel().getLabel()+ Topology.IN_VERTEX_COLUMN_END))));" is 287.,578
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,foreignKeyIndexSql,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(inEdgeRole.getVertexLabel().getSchema().getName() + "." + inEdgeRole.getVertexLabel().getLabel()+ Topology.IN_VERTEX_COLUMN_END));" is 170.,578
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,foreignKeyIndexSql,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(inEdgeRole.getVertexLabel().getSchema().getName() + "." + inEdgeRole.getVertexLabel().getLabel()+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END));" is 187.,578
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,foreignKeyIndexSql,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(sqlDialect.indexName(SchemaTable.of(schema`tableName).withOutPrefix()`EDGE_PREFIX`"_idx"`Collections.singletonList(outEdgeRole.getVertexLabel().getSchema().getName() + "_" + outEdgeRole.getVertexLabel().getLabel()+ Topology.OUT_VERTEX_COLUMN_END))));" is 290.,578
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,foreignKeyIndexSql,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(outEdgeRole.getVertexLabel().getSchema().getName() + "." + outEdgeRole.getVertexLabel().getLabel()+ Topology.OUT_VERTEX_COLUMN_END));" is 173.,578
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,foreignKeyIndexSql,Long Statement,The length of the statement "sql.append(sqlDialect.maybeWrapInQoutes(outEdgeRole.getVertexLabel().getSchema().getName() + "." + outEdgeRole.getVertexLabel().getLabel()+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 190.,578
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionOnDb,Complex Method,Cyclomatic complexity of the method is 11,651
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionOnDb,Long Statement,The length of the statement "Preconditions.checkState(this.abstractLabel != null`"If Partition.parentPartition is null it must have an abstractLabel.");" is 123.,651
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionOnDb,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.abstractLabel.getPrefix() + this.abstractLabel.getLabel()));" is 125.,651
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionOnDb,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.parentPartition.getAbstractLabel().getSchema().getName()));" is 124.,651
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionOnDb,Complex Method,Cyclomatic complexity of the method is 11,712
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionOnDb,Long Statement,The length of the statement "Preconditions.checkState(this.abstractLabel != null`"If Partition.parentPartition is null it must have an abstractLabel.");" is 123.,712
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionOnDb,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.abstractLabel.getPrefix() + this.abstractLabel.getLabel()));" is 125.,712
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartitionOnDb,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.parentPartition.getAbstractLabel().getSchema().getName()));" is 124.,712
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,detach,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.abstractLabel.getPrefix() + this.abstractLabel.getName()));" is 124.,795
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,afterCommit,Long Statement,The length of the statement "Preconditions.checkState(this.getAbstractLabel().getSchema().getTopology().isSchemaChanged()`"Partition.afterCommit must have schemaChanged = true");" is 149.,817
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,afterRollback,Long Statement,The length of the statement "Preconditions.checkState(this.getAbstractLabel().getSchema().getTopology().isSchemaChanged()`"Partition.afterRollback must have schemaChanged = true");" is 151.,835
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,toNotifyJson,Complex Method,Cyclomatic complexity of the method is 10,851
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,toJson,Complex Method,Cyclomatic complexity of the method is 8,899
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromUncommittedPartitionNotifyJson,Long Statement,The length of the statement "p=new Partition(abstractLabel.getSchema().getSqlgGraph()`abstractLabel`partitionNode.get("name").asText()`partitionNode.get("from").asText()`partitionNode.get("to").asText()`PartitionType.from(partitionNode.get("partitionType").asText())`partitionNode.get("partitionExpression").asText().equals("null") ? null : partitionNode.get("partitionExpression").asText());" is 363.,937
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromUncommittedPartitionNotifyJson,Long Statement,The length of the statement "p=new Partition(abstractLabel.getSchema().getSqlgGraph()`abstractLabel`partitionNode.get("name").asText()`partitionNode.get("in").asText()`PartitionType.from(partitionNode.get("partitionType").asText())`partitionNode.get("partitionExpression").asText().equals("null") ? null : partitionNode.get("partitionExpression").asText());" is 328.,937
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromUncommittedPartitionNotifyJson,Long Statement,The length of the statement "p=new Partition(abstractLabel.getSchema().getSqlgGraph()`abstractLabel`partitionNode.get("name").asText()`partitionNode.get("modulus").asInt()`partitionNode.get("remainder").asInt()`PartitionType.from(partitionNode.get("partitionType").asText())`partitionNode.get("partitionExpression").asText().equals("null") ? null : partitionNode.get("partitionExpression").asText());" is 371.,937
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromUncommittedPartitionNotifyJson,Long Statement,The length of the statement "p=new Partition(this.sqlgGraph`this`partitionNode.get("name").asText()`partitionNode.get("from").asText()`partitionNode.get("to").asText()`PartitionType.from(partitionNode.get("partitionType").asText())`partitionNode.get("partitionExpression").asText().equals("null") ? null : partitionNode.get("partitionExpression").asText());" is 328.,992
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromUncommittedPartitionNotifyJson,Long Statement,The length of the statement "p=new Partition(this.sqlgGraph`this`partitionNode.get("name").asText()`partitionNode.get("in").asText()`PartitionType.from(partitionNode.get("partitionType").asText())`partitionNode.get("partitionExpression").asText().equals("null") ? null : partitionNode.get("partitionExpression").asText());" is 293.,992
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromUncommittedPartitionNotifyJson,Long Statement,The length of the statement "p=new Partition(this.sqlgGraph`this`partitionNode.get("name").asText()`partitionNode.get("modulus").asInt()`partitionNode.get("remainder").asInt()`PartitionType.from(partitionNode.get("partitionType").asText())`partitionNode.get("partitionExpression").asText().equals("null") ? null : partitionNode.get("partitionExpression").asText());" is 336.,992
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromNotifyJson,Complex Method,Cyclomatic complexity of the method is 8,1052
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,fromNotifyJson,Long Statement,The length of the statement "Preconditions.checkState(optionalPartition.isPresent()`"committed partition %s on partition %s must be present"`jsonNode.get("name").asText()`this.getName());" is 158.,1052
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureRangePartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.RANGE`"ensureRangePartitionExists(String name` String from` String to) can only be called for a RANGE partitioned VertexLabel. Found %s"`this.partitionType.name());" is 225.,1088
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureListPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.LIST`"ensureListPartitionExists(String name` String in) can only be called for a LIST partitioned VertexLabel. Found %s"`this.partitionType.name());" is 209.,1101
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureHashPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(this.partitionType == PartitionType.HASH`"ensureHashPartitionExists(String name` String in) can only be called for a HASH partitioned VertexLabel. Found %s"`this.partitionType.name());" is 209.,1113
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureRangePartitionWithSubPartitionExists,Long Parameter List,The method has 5 parameters. ,1126
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureRangePartitionWithSubPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(partitionType != PartitionType.NONE`"ensureRangePartitionWithSubPartitionExists(String name` String from` String to` PartitionType partitionType` String partitionExpression) may not be called with partitionType NONE partition");" is 253.,1126
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureRangePartitionWithSubPartitionExists,Long Statement,The length of the statement "return partitionOptional.orElseGet(() -> this.createRangePartitionWithSubPartition(name`from`to`partitionType`partitionExpression));" is 132.,1126
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureListPartitionWithSubPartitionExists,Long Statement,The length of the statement "Preconditions.checkState(partitionType == PartitionType.LIST`"ensureListPartitionWithSubPartitionExists(String name` String in` PartitionType partitionType` String partitionExpression) can only be called with a LIST partition. Found %s"`partitionType.name());" is 259.,1149
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,ensureListPartitionWithSubPartitionExists,Long Statement,The length of the statement "return partitionOptional.orElseGet(() -> this.createListPartitionWithSubPartition(name`in`partitionType`partitionExpression));" is 126.,1149
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getAbstractLabel().getSchema().isSqlgSchema()`"createSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 149.,1170
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getAbstractLabel().getSchema().isSqlgSchema()`"createSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 149.,1179
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createHashPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getAbstractLabel().getSchema().isSqlgSchema()`"createSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 149.,1188
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionWithSubPartition,Long Parameter List,The method has 5 parameters. ,1197
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getAbstractLabel().getSchema().isSqlgSchema()`"createRangePartitionWithSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 167.,1197
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createRangePartitionWithSubPartition,Long Statement,The length of the statement "Partition partition=Partition.createRangeSubPartitionWithPartition(this.sqlgGraph`this`name`from`to`partitionType`partitionExpression);" is 135.,1197
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionWithSubPartition,Long Statement,The length of the statement "Preconditions.checkState(!this.getAbstractLabel().getSchema().isSqlgSchema()`"createListPartitionWithSubPartition may not be called for \"%s\""`Topology.SQLG_SCHEMA);" is 166.,1219
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,createListPartitionWithSubPartition,Long Statement,The length of the statement "Partition partition=Partition.createListSubPartitionWithPartition(this.sqlgGraph`this`name`in`partitionType`partitionExpression);" is 129.,1219
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,getPartition,Complex Method,Cyclomatic complexity of the method is 9,1250
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,getPartition,Long Statement,The length of the statement "if (getAbstractLabel().getSchema().getTopology().isSchemaChanged() && this.uncommittedRemovedPartitions.contains(name)) {" is 121.,1250
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`from.value()`to.value()`partitionType1`partitionExpression.value());" is 162.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`from.value()`to.value()`partitionType1`null);" is 139.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`in.value()`partitionType1`partitionExpression.value());" is 149.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`in.value()`partitionType1`null);" is 126.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`modulus.value()`remainder.value()`partitionType1`partitionExpression.value());" is 172.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Partition,addPartition,Long Statement,The length of the statement "partition=new Partition(this.sqlgGraph`this`partitionVertex.value(SQLG_SCHEMA_PARTITION_NAME)`modulus.value()`remainder.value()`partitionType1`null);" is 149.,1278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeRole,hashCode,Magic Number,The method contains a magic number: 31,47
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeRole,equals,Complex Method,Cyclomatic complexity of the method is 9,57
pietermartin_sqlg,org.umlg.sqlg.structure.topology,EdgeRole,getName,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6fc8ed13,96
pietermartin_sqlg,org.umlg.sqlg.structure.topology,IndexType,hashCode,Magic Number,The method contains a magic number: 31,52
pietermartin_sqlg,org.umlg.sqlg.structure.topology,IndexType,equals,Complex Method,Cyclomatic complexity of the method is 8,61
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_LABEL_PARTITION_TYPE is 39.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_LABEL_PARTITION_EXPRESSION is 45.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_LABEL_DISTRIBUTION_SHARD_COUNT is 49.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_LABEL_PARTITION_TYPE is 37.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_LABEL_PARTITION_EXPRESSION is 43.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_LABEL_DISTRIBUTION_SHARD_COUNT is 47.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_PARTITION_REMAINDER is 31.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_PARTITION_PARTITION_TYPE is 36.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION is 42.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_SCHEMA_VERTEX_EDGE is 30.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_PARTITION_EDGE is 33.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_PARTITION_EDGE is 31.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_PARTITION_PARTITION_EDGE is 36.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_DISTRIBUTION_COLUMN_EDGE is 43.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_DISTRIBUTION_COLOCATE_EDGE is 45.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_DISTRIBUTION_COLUMN_EDGE is 41.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_DISTRIBUTION_COLOCATE_EDGE is 43.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE is 34.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_PROPERTIES_EDGE is 32.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_IDENTIFIER_INDEX_EDGE is 40.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_VERTEX_IDENTIFIER_EDGE is 34.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_IDENTIFIER_INDEX_EDGE is 38.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_EDGE_IDENTIFIER_EDGE is 32.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_INDEX_PROPERTY_EDGE_SEQUENCE is 40.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Identifier,The length of the field SQLG_SCHEMA_INDEX_PROPERTY_EDGE is 31.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Method,The method has 117 lines of code.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Statement,The length of the statement "this.schemas.put(sqlgGraph.getSqlDialect().getPublicSchema()`Schema.createPublicSchema(sqlgGraph`this`sqlgGraph.getSqlDialect().getPublicSchema()));" is 148.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Statement,The length of the statement "sqlgSchema.getVertexLabels().values().forEach((v) -> this.sqlgSchemaTableCache.put(v.getSchema().getName() + "." + VERTEX_PREFIX+ v.getLabel()`v.getPropertyTypeMap()));" is 168.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Statement,The length of the statement "sqlgSchema.getEdgeLabels().values().forEach((e) -> this.sqlgSchemaTableCache.put(e.getSchema().getName() + "." + EDGE_PREFIX+ e.getLabel()`e.getPropertyTypeMap()));" is 164.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Statement,The length of the statement "v.getInEdgeLabels().forEach((edgeLabelName`edgeLabel) -> this.schemaTableForeignKeyCache.get(vertexLabelSchemaTable).getLeft().add(SchemaTable.of(edgeLabel.getSchema().getName()`EDGE_PREFIX + edgeLabel.getLabel())));" is 216.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,Topology,Long Statement,The length of the statement "v.getOutEdgeLabels().forEach((edgeLabelName`edgeLabel) -> this.schemaTableForeignKeyCache.get(vertexLabelSchemaTable).getRight().add(SchemaTable.of(v.getSchema().getName()`EDGE_PREFIX + edgeLabel.getLabel())));" is 210.,326
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,startSchemaChange,Long Statement,The length of the statement "throw new IllegalStateException("The topology is locked! Changes are not allowed` first unlock it. Either globally or for the transaction.");" is 141.,517
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignSchemas,Complex Method,Cyclomatic complexity of the method is 9,580
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignSchemas,Long Statement,The length of the statement "Preconditions.checkState(this.schemas.containsKey(originalSchema.getName())`"'%s' not found in the schemas."`originalSchema.getName());" is 135.,580
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignSchemas,Long Statement,The length of the statement "SchemaTable vertexLabelSchemaTable=SchemaTable.of(vertexLabel.getSchema().getName()`VERTEX_PREFIX + vertexLabel.getLabel());" is 124.,580
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignSchemas,Long Statement,The length of the statement "this.schemaTableForeignKeyCache.get(vertexLabelSchemaTable).getLeft().add(SchemaTable.of(edgeLabel.getSchema().getName()`EDGE_PREFIX + edgeLabel.getLabel()));" is 158.,580
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignSchemas,Long Statement,The length of the statement "this.schemaTableForeignKeyCache.get(vertexLabelSchemaTable).getRight().add(SchemaTable.of(vertexLabel.getSchema().getName()`EDGE_PREFIX + edgeLabel.getLabel()));" is 161.,580
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,clearForeignSchemas,Complex Method,Cyclomatic complexity of the method is 9,635
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,clearForeignSchemas,Long Statement,The length of the statement "Preconditions.checkState(this.edgeForeignKeyCache.remove(schemaNameToRemove + "." + EDGE_PREFIX+ edgeLabel.getLabel()) != null`"Failed to remove '%s' from 'edgeForeignKeyCache'"`key);" is 183.,635
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,clearForeignSchemas,Long Statement,The length of the statement "Preconditions.checkState(this.schemaTableForeignKeyCache.remove(schemaTable) != null`"Failed to remove '%s' from 'schemaTableForeignKeyCache'"`key);" is 148.,635
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,clearForeignSchemas,Long Statement,The length of the statement "Preconditions.checkState(this.allTableCache.remove(vertex.getLeft()) != null`"Failed to remove '%s' from 'allTableCache"`vertex.getLeft());" is 139.,635
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,clearForeignSchemas,Long Statement,The length of the statement "Preconditions.checkState(this.schemaTableForeignKeyCache.remove(schemaTable) != null`"Failed to remove '%s' from 'schemaTableForeignKeyCache'"`schemaTable.toString());" is 167.,635
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,clearForeignSchemas,Long Statement,The length of the statement "Preconditions.checkState(this.allTableCache.remove(edge.getLeft()) != null`"Failed to remove '%s' from 'allTableCache"`edge.getLeft());" is 135.,635
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,clearForeignSchemas,Long Statement,The length of the statement "Preconditions.checkState(this.edgeForeignKeyCache.remove(schemaNameToRemove + "." + EDGE_PREFIX+ edge.getRight()) != null`"Failed to remove '%s' from 'edgeForeignKeyCache'"`edge);" is 179.,635
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignVertexEdgeLabels,Long Statement,The length of the statement "this.allTableCache.put(importIntoSchema.getName() + "." + VERTEX_PREFIX+ vertexLabel.getLabel()`vertexLabel.getPropertyTypeMap());" is 130.,685
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignVertexEdgeLabels,Long Statement,The length of the statement "this.allTableCache.put(importIntoSchema.getName() + "." + EDGE_PREFIX+ edgeLabel.getLabel()`edgeLabel.getPropertyTypeMap());" is 124.,685
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignVertexEdgeLabels,Long Statement,The length of the statement "this.edgeForeignKeyCache.put(importIntoSchema.getName() + "." + EDGE_PREFIX+ edgeLabel.getLabel()`edgeLabel.getAllEdgeForeignKeys());" is 133.,685
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignVertexEdgeLabels,Long Statement,The length of the statement "v.getInEdgeLabels().forEach((edgeLabelName`edgeLabel) -> this.schemaTableForeignKeyCache.get(vertexLabelSchemaTable).getLeft().add(SchemaTable.of(edgeLabel.getSchema().getName()`EDGE_PREFIX + edgeLabel.getLabel())));" is 216.,685
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,importForeignVertexEdgeLabels,Long Statement,The length of the statement "v.getOutEdgeLabels().forEach((edgeLabelName`edgeLabel) -> this.schemaTableForeignKeyCache.get(vertexLabelSchemaTable).getRight().add(SchemaTable.of(v.getSchema().getName()`EDGE_PREFIX + edgeLabel.getLabel())));" is 210.,685
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,ensureTemporaryVertexTableExist,Long Statement,The length of the statement "Preconditions.checkState(schema.equals(this.sqlgGraph.getSqlDialect().getPublicSchema())`"Temporary vertices may only be created in the '" + this.sqlgGraph.getSqlDialect().getPublicSchema() + "' schema. Found + "+ schema);" is 222.,790
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,ensureEdgeLabelExist,Long Parameter List,The method has 5 parameters. ,815
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,ensureEdgeLabelExist,Long Statement,The length of the statement "Preconditions.checkState(getVertexLabel(foreignKeyOut.getSchema()`foreignKeyOut.getTable()).isPresent()`"The out vertex must already exist before invoking 'ensureEdgeLabelExist'. \"%s\" does not exist"`foreignKeyIn.toString());" is 227.,842
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,ensureEdgeLabelExist,Long Statement,The length of the statement "Preconditions.checkState(getVertexLabel(foreignKeyIn.getSchema()`foreignKeyIn.getTable()).isPresent()`"The in vertex must already exist before invoking 'ensureEdgeLabelExist'. \"%s\" does not exist"`foreignKeyIn.toString());" is 224.,842
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,ensureEdgePropertiesExist,Long Statement,The length of the statement "Preconditions.checkState(!schemaName.equals(SQLG_SCHEMA)`"Topology.ensureEdgePropertiesExist may not be called for \"%s\""`SQLG_SCHEMA);" is 136.,919
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,afterCommit,Complex Method,Cyclomatic complexity of the method is 13,958
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,afterCommit,Long Identifier,The length of the identifier uncommittedSchemaTableForeignKeys is 33.,958
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,afterCommit,Long Identifier,The length of the identifier uncommittedRemovedEdgeForeignKeys is 33.,958
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,afterCommit,Long Statement,The length of the statement "Map<SchemaTable`Pair<Set<SchemaTable>`Set<SchemaTable>>> uncommittedSchemaTableForeignKeys=getUncommittedSchemaTableForeignKeys();" is 130.,958
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,afterCommit,Long Statement,The length of the statement "for ( Map.Entry<SchemaTable`Pair<Set<SchemaTable>`Set<SchemaTable>>> schemaTablePairEntry : uncommittedSchemaTableForeignKeys.entrySet()) {" is 139.,958
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,cacheTopology,Long Statement,The length of the statement "List<Vertex> logs=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_LOG).order().by(SQLG_SCHEMA_LOG_TIMESTAMP`Order.desc).limit(1).toList();" is 151.,1054
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,toNotifyJson,Complex Method,Cyclomatic complexity of the method is 15,1140
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,fromNotifyJson,Long Statement,The length of the statement "List<Vertex> logs=this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_LOG).has(SQLG_SCHEMA_LOG_PID`pid).has(SQLG_SCHEMA_LOG_TIMESTAMP`notifyTimestamp).toList();" is 179.,1200
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,fromNotifyJson,Complex Method,Cyclomatic complexity of the method is 12,1219
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getUncommittedSchemaTableForeignKeys,Long Statement,The length of the statement "Preconditions.checkState(isSchemaChanged()`"Topology.getUncommittedSchemaTableForeignKeys must have schemaChanged = true");" is 123.,1353
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getUncommittedRemovedSchemaTableForeignKeys,Long Statement,The length of the statement "Preconditions.checkState(isSchemaChanged()`"Topology.getUncommittedRemovedSchemaTableForeignKeys must have schemaChanged = true");" is 130.,1367
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getUncommittedRemovedEdgeForeignKeys,Long Statement,The length of the statement "Preconditions.checkState(isSchemaChanged()`"Topology.getUncommittedRemovedEdgeForeignKeys must have schemaChanged = true");" is 123.,1396
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getAllTables,Complex Method,Cyclomatic complexity of the method is 10,1420
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getPropertiesFor,Long Statement,The length of the statement "return schemaOptional.map(schema -> Collections.unmodifiableMap(schema.getPropertiesFor(schemaTable))).orElse(Collections.emptyMap());" is 134.,1466
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getTableFor,Long Statement,The length of the statement "Map<String`PropertyType> result=getAllTables(schemaTable.getSchema().equals(Topology.SQLG_SCHEMA)).get(schemaTable.toString());" is 127.,1472
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getTableLabels,Long Identifier,The length of the identifier uncommittedSchemaTableForeignKeys is 33.,1481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getTableLabels,Long Identifier,The length of the identifier uncommittedRemovedSchemaTableForeignKeys is 40.,1481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getTableLabels,Long Statement,The length of the statement "Map<SchemaTable`Pair<Set<SchemaTable>`Set<SchemaTable>>> uncommittedSchemaTableForeignKeys=getUncommittedSchemaTableForeignKeys();" is 130.,1481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getTableLabels,Long Statement,The length of the statement "Map<SchemaTable`Pair<Set<SchemaTable>`Set<SchemaTable>>> uncommittedRemovedSchemaTableForeignKeys=getUncommittedRemovedSchemaTableForeignKeys();" is 144.,1481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getTableLabels,Long Statement,The length of the statement "for ( Map.Entry<SchemaTable`Pair<Set<SchemaTable>`Set<SchemaTable>>> schemaTablePairEntry : this.schemaTableForeignKeyCache.entrySet()) {" is 137.,1481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> uncommittedRemovedForeignKeys=uncommittedRemovedSchemaTableForeignKeys.get(schemaTable);" is 128.,1481
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getEdgeForeignKeys,Long Identifier,The length of the identifier originalPlusUncommittedForeignKeys is 34.,1535
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,getEdgeForeignKeys,Long Identifier,The length of the identifier uncommittedRemovedEdgeForeignKeys is 33.,1535
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,addOutForeignKeysToVertexLabel,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> foreignKeys=this.schemaTableForeignKeyCache.computeIfAbsent(schemaTable`k -> Pair.of(new HashSet<>()`new HashSet<>()));" is 159.,1603
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,addInForeignKeysToVertexLabel,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> foreignKeys=this.schemaTableForeignKeyCache.computeIfAbsent(schemaTable`k -> Pair.of(new HashSet<>()`new HashSet<>()));" is 159.,1617
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,removeVertexLabel,Complex Method,Cyclomatic complexity of the method is 8,1659
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Topology,removeSchema,Complex Method,Cyclomatic complexity of the method is 10,1713
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addGraph,Long Statement,The length of the statement "sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_GRAPH`SQLG_SCHEMA_GRAPH_VERSION`version`SQLG_SCHEMA_GRAPH_DB_VERSION`metadata.getDatabaseProductVersion()`CREATED_ON`now`UPDATED_ON`now);" is 197.,33
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,updateGraph,Long Statement,The length of the statement "Preconditions.checkState(graphVertices.size() == 1`"BUG: There can only ever be one graph vertex` found %s"`graphVertices.size());" is 130.,50
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeSchema,Long Statement,The length of the statement "List<Vertex> schemas=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has("name"`schema).toList();" is 127.,90
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeSchema,Long Statement,The length of the statement "traversalSource.V(vs).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).out(SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).drop().iterate();" is 145.,90
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeSchema,Long Statement,The length of the statement "traversalSource.V(vs).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).out(SQLG_SCHEMA_EDGE_INDEX_EDGE).drop().iterate();" is 140.,90
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Parameter List,The method has 5 parameters. ,143
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Parameter List,The method has 7 parameters. ,147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Statement,The length of the statement "List<Vertex> schemas=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has("name"`schema).toList();" is 127.,147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Statement,The length of the statement "Preconditions.checkState(partitionType != PartitionType.NONE`"If the partitionExpression is not null then the PartitionType may not be NONE. Found %s"`partitionType.name());" is 173.,147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Statement,The length of the statement "vertex=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_VERTEX_LABEL`SQLG_SCHEMA_VERTEX_LABEL_NAME`tableName`SCHEMA_VERTEX_DISPLAY`schema + "." + VERTEX_PREFIX+ tableName`Topology.CREATED_ON`LocalDateTime.now()`Topology.SQLG_SCHEMA_VERTEX_LABEL_PARTITION_TYPE`partitionType.name()`Topology.SQLG_SCHEMA_VERTEX_LABEL_PARTITION_EXPRESSION`partitionExpression);" is 368.,147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Statement,The length of the statement "Preconditions.checkState(partitionType == PartitionType.NONE`"If the partitionExpression is null then the PartitionType must be NONE. Found %s"`partitionType.name());" is 166.,147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Statement,The length of the statement "vertex=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_VERTEX_LABEL`SQLG_SCHEMA_VERTEX_LABEL_NAME`tableName`SCHEMA_VERTEX_DISPLAY`schema + "." + VERTEX_PREFIX+ tableName`Topology.CREATED_ON`LocalDateTime.now()`Topology.SQLG_SCHEMA_VERTEX_LABEL_PARTITION_TYPE`PartitionType.NONE.name());" is 298.,147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabel,Long Statement,The length of the statement "Vertex property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PROPERTY`"name"`columnEntry.getKey()`"type"`columnEntry.getValue().name()`Topology.CREATED_ON`LocalDateTime.now());" is 191.,147
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameVertexLabel,Long Statement,The length of the statement "Preconditions.checkArgument(oldVertexLabel.startsWith(VERTEX_PREFIX)`"prefixedTable must be for a vertex. prefixedTable = " + oldVertexLabel);" is 142.,214
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameVertexLabel,Long Statement,The length of the statement "List<Vertex> vertexLabelsToRename=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`oldVertexLabel.substring(VERTEX_PREFIX.length())).toList();" is 268.,214
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameVertexLabel,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelsToRename.size() == 1`String.format("Expected exactly one VertexLabel in %s.%s. Found %d"`schema`oldVertexLabel`vertexLabelsToRename.size()));" is 178.,214
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameEdgeLabel,Long Statement,The length of the statement "Preconditions.checkArgument(oldEdgeLabel.startsWith(EDGE_PREFIX)`"prefixedTable must be for a edge. prefixedTable = " + oldEdgeLabel);" is 134.,232
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameEdgeLabel,Long Statement,The length of the statement "List<Vertex> edgeLabelsToRename=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`oldEdgeLabel.substring(EDGE_PREFIX.length())).toList();" is 292.,232
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(edgeLabelsToRename.size() == 1`String.format("Expected exactly one VertexLabel in %s.%s. Found %d"`schema`oldEdgeLabel`edgeLabelsToRename.size()));" is 172.,232
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeVertexLabel,Long Statement,The length of the statement "List<Vertex> schemas=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has("name"`vertexLabel.getSchema().getName()).toList();" is 154.,251
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeVertexLabel,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V(schemaVertex).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`vertexLabel.getLabel()).toList();" is 157.,251
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Parameter List,The method has 8 parameters. ,278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel).toList();" is 181.,278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "partition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_FROM`from`SQLG_SCHEMA_PARTITION_TO`to`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression`CREATED_ON`LocalDateTime.now());" is 325.,278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "partition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_FROM`from`SQLG_SCHEMA_PARTITION_TO`to`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`CREATED_ON`LocalDateTime.now());" is 262.,278
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Parameter List,The method has 7 parameters. ,335
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel).toList();" is 181.,335
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "partition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_IN`in`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression`CREATED_ON`LocalDateTime.now());" is 293.,335
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "partition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_IN`in`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`CREATED_ON`LocalDateTime.now());" is 230.,335
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Parameter List,The method has 8 parameters. ,389
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel).toList();" is 181.,389
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "partition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_MODULUS`modulus`SQLG_SCHEMA_PARTITION_REMAINDER`remainder`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression`CREATED_ON`LocalDateTime.now());" is 345.,389
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexLabelPartition,Long Statement,The length of the statement "partition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_MODULUS`modulus`SQLG_SCHEMA_PARTITION_REMAINDER`remainder`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`CREATED_ON`LocalDateTime.now());" is 282.,389
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Parameter List,The method has 7 parameters. ,446
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "addEdgeLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`from`to`partitionType`partitionExpression);" is 140.,446
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Parameter List,The method has 8 parameters. ,466
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`abstractLabel).toList();" is 213.,466
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_FROM`from`SQLG_SCHEMA_PARTITION_TO`to`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression`CREATED_ON`LocalDateTime.now());" is 324.,466
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_FROM`from`SQLG_SCHEMA_PARTITION_TO`to`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`CREATED_ON`LocalDateTime.now());" is 261.,466
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Parameter List,The method has 6 parameters. ,524
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "addEdgeLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`in`partitionType`partitionExpression);" is 135.,524
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Parameter List,The method has 7 parameters. ,543
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "addEdgeLabelPartition(sqlgGraph`abstractLabel.getSchema().getName()`abstractLabel.getName()`name`modulus`remainder`partitionType`partitionExpression);" is 150.,543
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Parameter List,The method has 7 parameters. ,564
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`abstractLabel).toList();" is 213.,564
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_IN`in`CREATED_ON`LocalDateTime.now()`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression);" is 292.,564
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_IN`in`CREATED_ON`LocalDateTime.now()`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name());" is 229.,564
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Parameter List,The method has 8 parameters. ,620
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`abstractLabel).toList();" is 213.,620
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_MODULUS`modulus`SQLG_SCHEMA_PARTITION_REMAINDER`remainder`CREATED_ON`LocalDateTime.now()`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression);" is 344.,620
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabelPartition,Long Statement,The length of the statement "property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`name`SQLG_SCHEMA_PARTITION_MODULUS`modulus`SQLG_SCHEMA_PARTITION_REMAINDER`remainder`CREATED_ON`LocalDateTime.now()`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name());" is 281.,620
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Parameter List,The method has 7 parameters. ,679
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Parameter List,The method has 9 parameters. ,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "List<Vertex> outVertices=traversalSource.V(schemaVertex).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`foreignKeyOut.getTable()).toList();" is 139.,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(!outVertices.isEmpty()`"Schema %s does not contain vertex label %s "`schema`foreignKeyOut.getTable());" is 127.,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(outVertices.size() == 1`"Multiple out vertices %s found in Sqlg's topology. BUG!!!"`foreignKeyOut.toString());" is 135.,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "schemas=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`foreignKeyIn.getSchema()).toList();" is 123.,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "List<Vertex> inVertices=traversalSource.V(schemaInVertex).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`foreignKeyIn.getTable()).toList();" is 139.,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(!inVertices.isEmpty()`"In vertex %s does not exist in Sqlg's topology. BUG!!!"`foreignKeyIn.toString());" is 129.,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(inVertices.size() == 1`"Multiple in vertices %s found in Sqlg's topology. BUG!!!"`foreignKeyIn.toString());" is 132.,691
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Parameter List,The method has 6 parameters. ,748
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(partitionType != PartitionType.NONE`"If the partitionExpression is not null then the PartitionType may not be NONE. Found %s"`partitionType.name());" is 173.,748
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "edgeVertex=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_EDGE_LABEL`"name"`prefixedTable.substring(EDGE_PREFIX.length())`CREATED_ON`LocalDateTime.now()`Topology.SQLG_SCHEMA_EDGE_LABEL_PARTITION_TYPE`partitionType.name()`Topology.SQLG_SCHEMA_EDGE_LABEL_PARTITION_EXPRESSION`partitionExpression);" is 308.,748
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(partitionType == PartitionType.NONE`"If the partitionExpression is null then the PartitionType must be NONE. Found %s"`partitionType.name());" is 166.,748
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "edgeVertex=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_EDGE_LABEL`"name"`prefixedTable.substring(EDGE_PREFIX.length())`CREATED_ON`LocalDateTime.now()`Topology.SQLG_SCHEMA_EDGE_LABEL_PARTITION_TYPE`PartitionType.NONE.name());" is 240.,748
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeLabel,Long Statement,The length of the statement "Vertex property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PROPERTY`"name"`columnEntry.getKey()`"type"`columnEntry.getValue().name()`CREATED_ON`LocalDateTime.now());" is 182.,748
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeEdgeLabel,Long Statement,The length of the statement "List<Vertex> edges=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`edge.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`edge.getName()).toList();" is 231.,799
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeOutEdgeRole,Long Statement,The length of the statement "traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`vertexLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`vertexLabel.getLabel()).outE(SQLG_SCHEMA_OUT_EDGES_EDGE).drop().iterate();" is 276.,827
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeInEdgeRole,Long Statement,The length of the statement "traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`vertexLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`vertexLabel.getLabel()).outE(SQLG_SCHEMA_IN_EDGES_EDGE).drop().iterate();" is 275.,845
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Parameter List,The method has 5 parameters. ,862
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "List<Vertex> edgeVertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_EDGE_LABEL).has("name"`prefixedTable.substring(EDGE_PREFIX.length())).as("a").in(SQLG_SCHEMA_OUT_EDGES_EDGE).in(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`schema).<Vertex>select("a").dedup().toList();" is 287.,862
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "Preconditions.checkState(!edgeVertices.isEmpty()`"Edge vertex '%s' does not exist in schema '%s'"`prefixedTable.substring(EDGE_PREFIX.length())`schema);" is 152.,862
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "Preconditions.checkState(edgeVertices.size() == 1`"Multiple edge vertices %s found in Sqlg's topology. BUG!!!"`foreignKey.toString());" is 134.,862
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "List<Vertex> foreignKeyVertices=traversalSource.V(foreignKeySchemaVertex).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`foreignKeyVertexTable).toList();" is 153.,862
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "Preconditions.checkState(!foreignKeyVertices.isEmpty()`"Out vertex %s does not exist in Sqlg's topology. BUG!!!"`foreignKey.toString());" is 136.,862
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "Preconditions.checkState(foreignKeyVertices.size() == 1`"Multiple out vertices %s found in Sqlg's topology. BUG!!!"`foreignKey.toString());" is 139.,862
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Parameter List,The method has 6 parameters. ,924
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "foreignKeyVertexTable=foreignKey.getTable().substring(0`foreignKey.getTable().length() - Topology.IN_VERTEX_COLUMN_END.length());" is 129.,924
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "foreignKeyVertexTable=foreignKey.getTable().substring(0`foreignKey.getTable().length() - Topology.OUT_VERTEX_COLUMN_END.length());" is 130.,924
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "List<Vertex> foreignKeyVertices=traversalSource.V(foreignKeySchemaVertex).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`foreignKeyVertexTable).toList();" is 153.,924
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "Preconditions.checkState(!foreignKeyVertices.isEmpty()`"Out vertex %s does not exist in Sqlg's topology. BUG!!!"`foreignKey.toString());" is 136.,924
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addLabelToEdge,Long Statement,The length of the statement "Preconditions.checkState(foreignKeyVertices.size() == 1`"Multiple out vertices %s found in Sqlg's topology. BUG!!!"`foreignKey.toString());" is 139.,924
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexColumn,Long Statement,The length of the statement "Preconditions.checkArgument(prefixedTable.startsWith(VERTEX_PREFIX)`"prefixedTable must be for a vertex. prefixedTable = " + prefixedTable);" is 140.,972
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexColumn,Long Statement,The length of the statement "List<Vertex> vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`prefixedTable.substring(VERTEX_PREFIX.length())).toList();" is 215.,972
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addVertexColumn,Long Statement,The length of the statement "Vertex property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PROPERTY`"name"`column.getKey()`"type"`column.getValue().name()`CREATED_ON`LocalDateTime.now());" is 172.,972
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeVertexColumn,Long Statement,The length of the statement "Preconditions.checkArgument(prefixedTable.startsWith(VERTEX_PREFIX)`"prefixedTable must be for a vertex. prefixedTable = " + prefixedTable);" is 140.,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeVertexColumn,Long Statement,The length of the statement "traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`prefixedTable.substring(VERTEX_PREFIX.length())).out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).has("name"`column).drop().iterate();" is 260.,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameVertexLabelPropertyColumn,Long Parameter List,The method has 5 parameters. ,1027
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameVertexLabelPropertyColumn,Long Statement,The length of the statement "Preconditions.checkArgument(prefixedTable.startsWith(VERTEX_PREFIX)`"prefixedTable must be for a vertex. prefixedTable = " + prefixedTable);" is 140.,1027
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameVertexLabelPropertyColumn,Long Statement,The length of the statement "List<Vertex> propertiesToRename=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`prefixedTable.substring(VERTEX_PREFIX.length())).out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`column).toList();" is 343.,1027
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameVertexLabelPropertyColumn,Long Statement,The length of the statement "Preconditions.checkState(propertiesToRename.size() == 1`String.format("Expected exactly one property in %s.%s.%s. Found %d"`schema`propertiesToRename`column`propertiesToRename.size()));" is 185.,1027
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameEdgeLabelPropertyColumn,Long Parameter List,The method has 5 parameters. ,1049
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameEdgeLabelPropertyColumn,Long Statement,The length of the statement "Preconditions.checkArgument(prefixedTable.startsWith(EDGE_PREFIX)`"prefixedTable must be for a edge. prefixedTable = " + prefixedTable);" is 136.,1049
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameEdgeLabelPropertyColumn,Long Statement,The length of the statement "List<Vertex> propertiesToRename=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`prefixedTable.substring(EDGE_PREFIX.length())).out(SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`column).toList();" is 369.,1049
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,renameEdgeLabelPropertyColumn,Long Statement,The length of the statement "Preconditions.checkState(propertiesToRename.size() == 1`String.format("Expected exactly one property in %s.%s.%s. Found %d"`schema`propertiesToRename`column`propertiesToRename.size()));" is 185.,1049
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeEdgeColumn,Long Statement,The length of the statement "Preconditions.checkArgument(prefixedTable.startsWith(EDGE_PREFIX)`"prefixedTable must be for an edge. prefixedTable = " + prefixedTable);" is 137.,1071
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeEdgeColumn,Long Statement,The length of the statement "traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_EDGE_LABEL).has("name"`prefixedTable.substring(EDGE_PREFIX.length())).as("a").in(SQLG_SCHEMA_OUT_EDGES_EDGE).in(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`schema).select("a").out(SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has("name"`column).drop().iterate();" is 310.,1071
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "abstractLabelVertexes=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`abstractLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel.getLabel()).toList();" is 238.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "abstractLabelVertexes=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`abstractLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`abstractLabel.getLabel()).dedup().toList();" is 278.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "Preconditions.checkState(!abstractLabelVertexes.isEmpty()`"AbstractLabel %s.%s does not exists"`abstractLabel.getSchema().getName()`abstractLabel.getLabel());" is 158.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "Preconditions.checkState(abstractLabelVertexes.size() == 1`"BUG: multiple AbstractLabels found for %s.%s"`abstractLabel.getSchema().getName()`abstractLabel.getLabel());" is 168.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "Vertex indexVertex=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_INDEX`SQLG_SCHEMA_INDEX_NAME`index.getName()`SQLG_SCHEMA_INDEX_INDEX_TYPE`index.getIndexType().toString()`CREATED_ON`LocalDateTime.now());" is 217.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "List<Vertex> propertyVertexes=traversalSource.V(abstractLabelVertex).out(abstractLabel instanceof VertexLabel ? SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE : SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has("name"`property.getName()).toList();" is 223.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "Preconditions.checkState(!propertyVertexes.isEmpty()`"Property %s for AbstractLabel %s.%s does not exists"`property.getName()`abstractLabel.getSchema().getName()`abstractLabel.getLabel());" is 188.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "Preconditions.checkState(propertyVertexes.size() == 1`"BUG: multiple Properties %s found for AbstractLabels found for %s.%s"`property.getName()`abstractLabel.getSchema().getName()`abstractLabel.getLabel());" is 206.,1095
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeIndex,Long Statement,The length of the statement "abstractLabelVertexes=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`abstractLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel.getLabel()).toList();" is 238.,1152
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeIndex,Long Statement,The length of the statement "abstractLabelVertexes=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`abstractLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`abstractLabel.getLabel()).dedup().toList();" is 278.,1152
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removeIndex,Long Statement,The length of the statement "traversalSource.V(v.id()).out(abstractLabel instanceof VertexLabel ? SQLG_SCHEMA_VERTEX_INDEX_EDGE : SQLG_SCHEMA_EDGE_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`index.getName()).drop().iterate();" is 191.,1152
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Parameter List,The method has 7 parameters. ,1189
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "abstractLabelVertexes=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`label).toList();" is 190.,1189
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "abstractLabelVertexes=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`label).dedup().toList();" is 230.,1189
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "List<Vertex> propertyVertexes=traversalSource.V(abstractLabelVertex).out(vertex ? SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE : SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has("name"`property).toList();" is 183.,1189
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "indexVertex=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_INDEX`SQLG_SCHEMA_INDEX_NAME`index`SQLG_SCHEMA_INDEX_INDEX_TYPE`indexType.toString()`CREATED_ON`LocalDateTime.now());" is 189.,1189
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addIndex,Long Statement,The length of the statement "Preconditions.checkState(propertyVertexes.size() == 1`"BUG: multiple Properties %s found for AbstractLabels found for %s.%s"`property`schema`label);" is 148.,1189
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeColumn,Long Parameter List,The method has 5 parameters. ,1265
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeColumn,Long Parameter List,The method has 5 parameters. ,1271
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeColumn,Long Statement,The length of the statement "Preconditions.checkArgument(prefixedTable.startsWith(EDGE_PREFIX)`"prefixedTable must be for an edge. prefixedTable = " + prefixedTable);" is 137.,1271
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeColumn,Long Statement,The length of the statement "Set<Vertex> edges=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_EDGE_LABEL).has("name"`prefixedTable.substring(EDGE_PREFIX.length())).as("a").in(SQLG_SCHEMA_OUT_EDGES_EDGE).in(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`schema).<Vertex>select("a").toSet();" is 270.,1271
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addEdgeColumn,Long Statement,The length of the statement "Vertex property=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PROPERTY`"name"`column.getKey()`"type"`column.getValue().name()`CREATED_ON`LocalDateTime.now());" is 172.,1271
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removePartition,Long Statement,The length of the statement "partitions=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has("name"`abstractLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`abstractLabel.getName()).repeat(__.out(SQLG_SCHEMA_VERTEX_PARTITION_EDGE`SQLG_SCHEMA_PARTITION_PARTITION_EDGE)).until(__.has(SQLG_SCHEMA_PARTITION_NAME`partition.getName())).toList();" is 390.,1324
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,removePartition,Long Statement,The length of the statement "partitions=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has("name"`abstractLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`abstractLabel.getName()).repeat(__.out(SQLG_SCHEMA_EDGE_PARTITION_EDGE`SQLG_SCHEMA_PARTITION_PARTITION_EDGE)).until(__.has(SQLG_SCHEMA_PARTITION_NAME`partition.getName())).toList();" is 418.,1324
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "addSubPartition(sqlgGraph`partition.getParentPartition().getParentPartition() != null`abstractLabel instanceof VertexLabel`abstractLabel.getSchema().getName()`abstractLabel.getName()`partition.getParentPartition().getName()`partition.getName()`partition.getPartitionType()`partition.getPartitionExpression()`partition.getFrom()`partition.getTo()`partition.getIn()`partition.getModulus()`partition.getRemainder());" is 413.,1360
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Complex Method,Cyclomatic complexity of the method is 11,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Parameter List,The method has 14 parameters. ,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel).out(SQLG_SCHEMA_VERTEX_PARTITION_EDGE).has("name"`partitionParent).toList();" is 235.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel).out(SQLG_SCHEMA_VERTEX_PARTITION_EDGE).repeat(__.out(SQLG_SCHEMA_PARTITION_PARTITION_EDGE)).until(__.has("name"`partitionParent)).toList();" is 298.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`abstractLabel).out(SQLG_SCHEMA_EDGE_PARTITION_EDGE).has("name"`partitionParent).toList();" is 265.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`abstractLabel).out(SQLG_SCHEMA_EDGE_PARTITION_EDGE).repeat(__.out(SQLG_SCHEMA_PARTITION_PARTITION_EDGE)).until(__.has("name"`partitionParent)).toList();" is 328.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "throw new IllegalStateException(String.format("Found more than one vertex for %s.%s#%s"`schema`abstractLabel`partitionParent));" is 127.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "subPartition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`partitionName`SQLG_SCHEMA_PARTITION_FROM`from`SQLG_SCHEMA_PARTITION_TO`to`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression`CREATED_ON`LocalDateTime.now());" is 337.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "subPartition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`partitionName`SQLG_SCHEMA_PARTITION_IN`in`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression`CREATED_ON`LocalDateTime.now());" is 305.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "subPartition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`partitionName`SQLG_SCHEMA_PARTITION_MODULUS`modulus`SQLG_SCHEMA_PARTITION_REMAINDER`remainder`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`SQLG_SCHEMA_PARTITION_PARTITION_EXPRESSION`partitionExpression`CREATED_ON`LocalDateTime.now());" is 357.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "subPartition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`partitionName`SQLG_SCHEMA_PARTITION_FROM`from`SQLG_SCHEMA_PARTITION_TO`to`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`CREATED_ON`LocalDateTime.now());" is 274.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "subPartition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`partitionName`SQLG_SCHEMA_PARTITION_IN`in`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`CREATED_ON`LocalDateTime.now());" is 242.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,addSubPartition,Long Statement,The length of the statement "subPartition=sqlgGraph.addVertex(T.label`SQLG_SCHEMA + "." + SQLG_SCHEMA_PARTITION`SQLG_SCHEMA_PARTITION_NAME`partitionName`SQLG_SCHEMA_PARTITION_MODULUS`modulus`SQLG_SCHEMA_PARTITION_REMAINDER`remainder`SQLG_SCHEMA_PARTITION_PARTITION_TYPE`partitionType.name()`CREATED_ON`LocalDateTime.now());" is 294.,1387
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,updateVertexLabelPartitionTypeAndExpression,Long Parameter List,The method has 5 parameters. ,1535
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,updateVertexLabelPartitionTypeAndExpression,Long Statement,The length of the statement "List<Vertex> vertexLabels=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`name).toList();" is 243.,1535
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,updateVertexLabelPartitionTypeAndExpression,Long Statement,The length of the statement "Preconditions.checkState(vertexLabels.size() == 1`"BUG: There can only ever be one VertexLabel vertex` found %s"`vertexLabels.size());" is 134.,1535
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,updateEdgeLabelPartitionTypeAndExpression,Long Parameter List,The method has 5 parameters. ,1553
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,updateEdgeLabelPartitionTypeAndExpression,Long Statement,The length of the statement "List<Vertex> edgeLabels=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(Topology.SQLG_SCHEMA_EDGE_LABEL_NAME`name).toList();" is 271.,1553
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,updateEdgeLabelPartitionTypeAndExpression,Long Statement,The length of the statement "Preconditions.checkState(edgeLabels.size() == 1`"BUG: There can only ever be one EdgeLabel vertex` found %s"`edgeLabels.size());" is 128.,1553
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Complex Method,Cyclomatic complexity of the method is 9,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Long Identifier,The length of the identifier distributionColumnPropertyVertices is 34.,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Long Parameter List,The method has 5 parameters. ,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Long Statement,The length of the statement "vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`abstractLabel.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel.getName()).toList();" is 207.,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Long Statement,The length of the statement "vertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_EDGE_LABEL).has("name"`abstractLabel.label).as("a").in(SQLG_SCHEMA_OUT_EDGES_EDGE).in(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`abstractLabel.getSchema().getName()).<Vertex>select("a").toList();" is 265.,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Long Statement,The length of the statement "List<Vertex> distributionColumnPropertyVertices=traversalSource.V(vertex).out((abstractLabel instanceof VertexLabel ? SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE : SQLG_SCHEMA_EDGE_PROPERTIES_EDGE)).has(SQLG_SCHEMA_PROPERTY_NAME`distributionPropertyColumn.getName()).toList();" is 267.,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Long Statement,The length of the statement "Preconditions.checkState(distributionColumnPropertyVertices.size() == 1`"VertexLabel %s must have one and only only one property with name %s"`abstractLabel.getFullName()`distributionPropertyColumn.getName());" is 209.,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,TopologyManager,distributeAbstractLabel,Long Statement,The length of the statement "List<Vertex> colocateVertices=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has("name"`colocate.getSchema().getName()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`colocate.getName()).toList();" is 218.,1573
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createSchema,Long Statement,The length of the statement "Preconditions.checkArgument(!name.equals(SQLG_SCHEMA) && !sqlgGraph.getSqlDialect().getPublicSchema().equals(name)`"createSchema may not be called for 'sqlg_schema' or 'public'");" is 179.,94
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureVertexLabelExist,Long Statement,The length of the statement "Preconditions.checkState(columns.containsKey(identifier)`"The identifiers must be in the specified columns. \"%s\" not found"`identifier);" is 138.,167
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,renameVertexLabel,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,192
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,renameVertexLabel,Long Statement,The length of the statement "VertexLabel renamedVertexLabel=VertexLabel.renameVertexLabel(this.sqlgGraph`this`vertexLabel.label`label`vertexLabel.getPropertyTypeMap()`vertexLabel.getIdentifiers());" is 168.,192
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,renameEdgeLabel,Long Statement,The length of the statement "EdgeLabel renamedEdgeLabel=EdgeLabel.renameEdgeLabel(this.sqlgGraph`this`edgeLabel`label`outVertexLabels`inVertexLabels`edgeLabel.getPropertyTypeMap()`edgeLabel.getIdentifiers());" is 179.,212
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedVertexLabelExist,Long Parameter List,The method has 5 parameters. ,238
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedVertexLabelExist,Long Parameter List,The method has 6 parameters. ,248
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedVertexLabelExist,Long Statement,The length of the statement "return vertexLabelOptional.orElseGet(() -> this.createPartitionedVertexLabel(label`columns`identifiers`partitionType`partitionExpression`addPrimaryKeyConstraint));" is 163.,248
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureEdgeLabelExist,Long Parameter List,The method has 5 parameters. ,283
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureEdgeLabelExist,Long Statement,The length of the statement "Preconditions.checkState(columns.containsKey(identifier)`"The identifiers must be in the specified columns. \"%s\" not found"`identifier);" is 138.,283
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureEdgeLabelExist,Long Statement,The length of the statement "Preconditions.checkState((outVertexLabel.isDistributed() && inVertexLabel.isDistributed()) || (!outVertexLabel.isDistributed() && !inVertexLabel.isDistributed())`"The in and out vertex labels must both either be distributed or not.");" is 234.,283
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureEdgeLabelExist,Long Statement,The length of the statement "Preconditions.checkState(outVertexLabel.getDistributionPropertyColumn().getName().equals(inVertexLabel.getDistributionPropertyColumn().getName())`"The in and out vertex label's distribution columns must have the same name.");" is 225.,283
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureEdgeLabelExist,Long Parameter List,The method has 8 parameters. ,330
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureEdgeLabelExist,Long Statement,The length of the statement "Preconditions.checkState(columns.containsKey(identifier)`"The identifiers must be in the specified columns. \"%s\" not found"`identifier);" is 138.,330
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Long Parameter List,The method has 7 parameters. ,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Long Statement,The length of the statement "Preconditions.checkState(foreignKeyVertexLabel.equals(outVertexLabel) || foreignKeyVertexLabel.equals(inVertexLabel)`"foreignKeyVertexLabel must be either the outVertexLabel or inVertexLabel!");" is 194.,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Long Statement,The length of the statement "partitionExpression.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(foreignKeyVertexLabel.getSchema().getName() + "." + foreignKeyVertexLabel.getLabel()+ (direction == Direction.OUT ? OUT_VERTEX_COLUMN_END : IN_VERTEX_COLUMN_END)));" is 240.,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Long Statement,The length of the statement "PropertyColumn propertyColumn=foreignKeyVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 190.,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Long Statement,The length of the statement "partitionExpression.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(foreignKeyVertexLabel.getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ (direction == Direction.OUT ? OUT_VERTEX_COLUMN_END : IN_VERTEX_COLUMN_END)));" is 250.,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Long Statement,The length of the statement "partitionExpression.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(foreignKeyVertexLabel.getFullName() + "." + identifier+ (direction == Direction.OUT ? OUT_VERTEX_COLUMN_END : IN_VERTEX_COLUMN_END)));" is 210.,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Long Statement,The length of the statement "return ensurePartitionedEdgeLabelExist(edgeLabelName`outVertexLabel`inVertexLabel`columns`identifiers`partitionType`partitionExpression.toString()`true);" is 153.,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExist,Long Parameter List,The method has 7 parameters. ,433
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExist,Long Statement,The length of the statement "return ensurePartitionedEdgeLabelExist(edgeLabelName`outVertexLabel`inVertexLabel`columns`identifiers`partitionType`partitionExpression`false);" is 143.,433
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExist,Long Parameter List,The method has 8 parameters. ,453
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensurePartitionedEdgeLabelExist,Long Statement,The length of the statement "edgeLabel=this.createPartitionedEdgeLabel(edgeLabelName`outVertexLabel`inVertexLabel`columns`identifiers`partitionType`partitionExpression`isForeignKeyPartition);" is 162.,453
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedEdgeLabel,Long Parameter List,The method has 8 parameters. ,503
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedEdgeLabel,Long Statement,The length of the statement "Preconditions.checkArgument(this.topology.isSchemaChanged()`"Schema.createPartitionedEdgeLabel must have schemaChanged = true");" is 128.,503
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedEdgeLabel,Long Statement,The length of the statement "TopologyManager.addEdgeLabel(this.sqlgGraph`this.getName()`EDGE_PREFIX + edgeLabelName`foreignKeyOut`foreignKeyIn`columns`identifiers`partitionType`partitionExpression);" is 169.,503
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedEdgeLabel,Long Statement,The length of the statement "return outVertexLabel.addPartitionedEdgeLabel(edgeLabelName`inVertexLabel`columns`identifiers`partitionType`partitionExpression`isForeignKeyPartition);" is 151.,503
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createEdgeLabel,Long Parameter List,The method has 5 parameters. ,554
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createEdgeLabel,Long Statement,The length of the statement "TopologyManager.addEdgeLabel(this.sqlgGraph`this.getName()`EDGE_PREFIX + edgeLabelName`foreignKeyOut`foreignKeyIn`columns`identifiers);" is 135.,554
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createSqlgSchemaVertexLabel,Long Statement,The length of the statement "Preconditions.checkArgument(!vertexLabelName.startsWith(VERTEX_PREFIX)`"vertex label may not start with " + VERTEX_PREFIX);" is 123.,584
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createVertexLabel,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,592
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createVertexLabel,Long Statement,The length of the statement "Preconditions.checkArgument(!vertexLabelName.startsWith(VERTEX_PREFIX)`"vertex label may not start with " + VERTEX_PREFIX);" is 123.,592
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedVertexLabel,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,607
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedVertexLabel,Long Parameter List,The method has 6 parameters. ,607
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedVertexLabel,Long Statement,The length of the statement "Preconditions.checkArgument(!vertexLabelName.startsWith(VERTEX_PREFIX)`"vertex label may not start with " + VERTEX_PREFIX);" is 123.,607
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createPartitionedVertexLabel,Long Statement,The length of the statement "VertexLabel vertexLabel=VertexLabel.createPartitionedVertexLabel(this.sqlgGraph`this`vertexLabelName`columns`identifiers`partitionType`partitionExpression`addPrimaryKeyConstraint);" is 180.,607
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,ensureVertexColumnsExist,Long Statement,The length of the statement "Preconditions.checkState(!isSqlgSchema()`"Schema.ensureVertexLabelPropertiesExist may not be called for \"%s\""`SQLG_SCHEMA);" is 125.,638
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getVertexLabel,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,700
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getVertexLabel,Long Statement,The length of the statement "Preconditions.checkArgument(!vertexLabelName.startsWith(VERTEX_PREFIX)`"vertex label may not start with \"%s\""`Topology.VERTEX_PREFIX);" is 136.,700
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getVertexLabel,Long Statement,The length of the statement "if (this.topology.isSchemaChanged() && this.uncommittedRemovedVertexLabels.contains(this.name + "." + VERTEX_PREFIX+ vertexLabelName)) {" is 136.,700
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getEdgeLabel,Long Statement,The length of the statement "Preconditions.checkArgument(!edgeLabelName.startsWith(Topology.EDGE_PREFIX)`"edge label may not start with \"%s\""`Topology.EDGE_PREFIX);" is 137.,742
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getEdgeLabel,Long Statement,The length of the statement "if (this.topology.isSchemaChanged() && this.uncommittedRemovedEdgeLabels.contains(this.name + "." + EDGE_PREFIX+ edgeLabelName)) {" is 130.,742
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getVertexLabels,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,781
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedLabels,Long Statement,The length of the statement "Preconditions.checkState(this.topology.isSchemaChanged()`"Schema.getUncommittedAllTables must have schemaChanged = true");" is 122.,792
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedSchemaTableForeignKeys,Long Identifier,The length of the identifier uncommittedSchemaTableForeignKeys is 33.,814
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedSchemaTableForeignKeys,Long Identifier,The length of the identifier uncommittedSchemaTableForeignKeys is 33.,814
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedSchemaTableForeignKeys,Long Statement,The length of the statement "Preconditions.checkState(getTopology().isSchemaChanged()`"Schema.getUncommittedSchemaTableForeignKeys must have schemaChanged = true");" is 135.,814
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedSchemaTableForeignKeys,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> uncommittedSchemaTableForeignKeys=vertexLabelEntry.getValue().getUncommittedSchemaTableForeignKeys();" is 141.,814
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedSchemaTableForeignKeys,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> uncommittedSchemaTableForeignKeys=uncommittedVertexLabelEntry.getValue().getUncommittedSchemaTableForeignKeys();" is 152.,814
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedRemovedSchemaTableForeignKeys,Long Identifier,The length of the identifier uncommittedSchemaTableForeignKeys is 33.,834
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedRemovedSchemaTableForeignKeys,Long Identifier,The length of the identifier uncommittedSchemaTableForeignKeys is 33.,834
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedRemovedSchemaTableForeignKeys,Long Statement,The length of the statement "Preconditions.checkState(getTopology().isSchemaChanged()`"Schema.getUncommittedRemovedSchemaTableForeignKeys must have schemaChanged = true");" is 142.,834
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedRemovedSchemaTableForeignKeys,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> uncommittedSchemaTableForeignKeys=vertexLabelEntry.getValue().getUncommittedRemovedSchemaTableForeignKeys();" is 148.,834
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedRemovedSchemaTableForeignKeys,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> uncommittedSchemaTableForeignKeys=uncommittedVertexLabelEntry.getValue().getUncommittedRemovedSchemaTableForeignKeys();" is 159.,834
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedEdgeForeignKeys,Long Statement,The length of the statement "result.put(this.getName() + "." + Topology.EDGE_PREFIX+ outEdgeLabel.getLabel()`outEdgeLabel.getUncommittedEdgeForeignKeys());" is 126.,854
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedEdgeForeignKeys,Long Statement,The length of the statement "result.put(this.getName() + "." + Topology.EDGE_PREFIX+ outEdgeLabel.getLabel()`outEdgeLabel.getUncommittedEdgeForeignKeys());" is 126.,854
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedRemovedEdgeForeignKeys,Long Statement,The length of the statement "result.put(this.getName() + "." + Topology.EDGE_PREFIX+ outEdgeLabel.getLabel()`outEdgeLabel.getUncommittedRemovedEdgeForeignKeys());" is 133.,868
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getUncommittedRemovedEdgeForeignKeys,Long Statement,The length of the statement "result.put(this.getName() + "." + Topology.EDGE_PREFIX+ outEdgeLabel.getLabel()`outEdgeLabel.getUncommittedRemovedEdgeForeignKeys());" is 133.,868
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getPropertiesFor,Long Statement,The length of the statement "Preconditions.checkArgument(schemaTable.getTable().startsWith(VERTEX_PREFIX) || schemaTable.getTable().startsWith(EDGE_PREFIX)`"label must start with \"%s\" or \"%s\""`Topology.VERTEX_PREFIX`Topology.EDGE_PREFIX);" is 213.,879
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getTableFor,Long Statement,The length of the statement "Preconditions.checkArgument(schemaTable.getTable().startsWith(VERTEX_PREFIX) || schemaTable.getTable().startsWith(EDGE_PREFIX)`"label must start with \"%s\" or \"%s\""`VERTEX_PREFIX`EDGE_PREFIX);" is 195.,895
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getTableLabels,Long Statement,The length of the statement "Preconditions.checkState(!vertexLabelEntry.getValue().getLabel().startsWith(VERTEX_PREFIX)`"vertexLabel may not start with " + VERTEX_PREFIX);" is 142.,911
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getTableLabels,Long Statement,The length of the statement "Preconditions.checkState(!vertexLabelEntry.getValue().getLabel().startsWith(VERTEX_PREFIX)`"vertexLabel may not start with " + VERTEX_PREFIX);" is 142.,911
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,getTableLabels,Long Statement,The length of the statement "for ( Map.Entry<SchemaTable`Pair<Set<SchemaTable>`Set<SchemaTable>>> schemaTablePairEntry : uncommittedResult.entrySet()) {" is 123.,911
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,afterCommit,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,953
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,afterRollback,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,981
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Complex Conditional,The conditional expression !partitionMap.containsKey(vertexPropertyPartitionVertex.<String>value(SQLG_SCHEMA_PARTITION_NAME)) && (partitionParentParentElement == null || partitionParentParentElement.label().equals("vertex_partition")) is complex.,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Complex Conditional,The conditional expression !partitionMap.containsKey(edgePropertyPartitionVertex.<String>value(SQLG_SCHEMA_PARTITION_NAME)) && (partitionParentParentElement == null || partitionParentParentElement.label().equals("edge_partition")) is complex.,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Complex Method,Cyclomatic complexity of the method is 46,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Magic Number,The method contains a magic number: 2,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Magic Number,The method contains a magic number: 3,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Magic Number,The method contains a magic number: 2,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Magic Number,The method contains a magic number: 3,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@283db1c,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexOutEdgesAndProperties,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4c66d479,1006
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexIndices,Complex Method,Cyclomatic complexity of the method is 14,1240
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadVertexIndices,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@289c5ffd,1240
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadInEdgeLabels,Complex Method,Cyclomatic complexity of the method is 11,1306
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadInEdgeLabels,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@949f88,1306
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadEdgeIndices,Complex Method,Cyclomatic complexity of the method is 17,1376
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,loadEdgeIndices,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1c53ffbd,1376
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,toNotifyJson,Complex Conditional,The conditional expression notifyJson.get("uncommittedProperties") != null || notifyJson.get("uncommittedOutEdgeLabels") != null || notifyJson.get("uncommittedInEdgeLabels") != null || notifyJson.get("outEdgeLabels") != null || notifyJson.get("inEdgeLabels") != null || notifyJson.get("uncommittedRemovedOutEdgeLabels") != null || notifyJson.get("uncommittedRemovedInEdgeLabels") != null is complex.,1467
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,toNotifyJson,Complex Method,Cyclomatic complexity of the method is 15,1467
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,toNotifyJson,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,1467
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,toNotifyJson,Long Statement,The length of the statement "if (notifyJson.get("uncommittedProperties") != null || notifyJson.get("uncommittedOutEdgeLabels") != null || notifyJson.get("uncommittedInEdgeLabels") != null || notifyJson.get("outEdgeLabels") != null || notifyJson.get("inEdgeLabels") != null || notifyJson.get("uncommittedRemovedOutEdgeLabels") != null || notifyJson.get("uncommittedRemovedInEdgeLabels") != null) {" is 367.,1467
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,fromNotifyJsonOutEdges,Complex Method,Cyclomatic complexity of the method is 18,1537
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,fromNotifyJsonOutEdges,Long Statement,The length of the statement "this.getTopology().addToAllTables(this.getName() + "." + VERTEX_PREFIX+ vertexLabelName`vertexLabel.getPropertyTypeMap());" is 122.,1537
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,remove,Long Statement,The length of the statement "throw new IllegalArgumentException(String.format("Public schema ('%s') cannot be deleted"`sqlgGraph.getSqlDialect().getPublicSchema()));" is 136.,1695
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,removeVertexLabel,Long Identifier,The length of the field uncommittedRemovedVertexLabels is 30.,1730
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,createTempTable,Long Statement,The length of the statement "sql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().temporaryTablePrefix() + tableName));" is 128.,1782
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,removeTemporaryTables,Long Statement,The length of the statement "for ( Map.Entry<String`Map<String`PropertyType>> temporaryTableEntry : this.threadLocalTemporaryTables.get().entrySet()) {" is 122.,1816
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,removeTemporaryTables,Long Statement,The length of the statement "String sql="DROP TEMPORARY TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(tableName);" is 203.,1816
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,readOnlyCopyVertexLabels,Long Statement,The length of the statement "Preconditions.checkState(!getTopology().isSchemaChanged()`"To make a schema copy the topology must not have any pending changes!");" is 131.,1842
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,readOnlyCopyEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(!getTopology().isSchemaChanged()`"To make a schema copy the topology must not have any pending changes!");" is 131.,1853
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,importForeignVertexAndEdgeLabels,Complex Method,Cyclomatic complexity of the method is 10,1863
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,importForeignVertexAndEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(!getTopology().isSchemaChanged()`"To import a foreign VertexLabel there must not be any pending changes!");" is 132.,1863
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,importForeignVertexAndEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(fullEdgeLabels.contains(inEdgeLabel.getFullName())`"'%s' is not present in the foreign EdgeLabels"`this.name + "." + EDGE_PREFIX+ inEdgeLabel.getFullName());" is 182.,1863
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,importForeignVertexAndEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(fullEdgeLabels.contains(outEdgeLabel.getFullName())`"'%s' is not present in the foreign EdgeLabels"`this.name + "." + EDGE_PREFIX+ outEdgeLabel.getFullName());" is 184.,1863
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,importForeignVertexAndEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(fullVertexLabels.contains(vertexLabel.getFullName())`"'%s' is not present in the foreign VertexLabels"`this.name + "." + VERTEX_PREFIX+ vertexLabel.getFullName());" is 188.,1863
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,importForeignVertexAndEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(this.vertexLabels.containsKey(l)`"VertexLabel '%s' not found in schema '%s'."`l`this.getName());" is 121.,1863
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,importForeignVertexAndEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(this.vertexLabels.containsKey(l)`"VertexLabel '%s' not found in schema '%s'."`l`this.getName());" is 121.,1863
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,validateImportingVertexLabels,Long Statement,The length of the statement "throw new IllegalStateException(String.format("VertexLabel '%s' has an outEdgeLabel '%s' that is not present in a foreign schema"`label`edgeLabel.getLabel()));" is 159.,1906
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,validateImportingVertexLabels,Long Statement,The length of the statement "throw new IllegalStateException(String.format("VertexLabel '%s' has an inEdgeLabel '%s' that is not present in a foreign schema"`label`edgeLabel.getLabel()));" is 158.,1906
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,validateImportingEdgeLabels,Long Statement,The length of the statement "throw new IllegalStateException(String.format("EdgeLabel '%s' has a inVertexLabel '%s' that is not present in a foreign schema"`label`inVertexLabel.getLabel()));" is 161.,1930
pietermartin_sqlg,org.umlg.sqlg.structure.topology,Schema,validateImportingEdgeLabels,Long Statement,The length of the statement "throw new IllegalStateException(String.format("EdgeLabel '%s' has a outVertexLabel '%s' that is not present in a foreign schema"`label`outVertexLabel.getLabel()));" is 163.,1930
pietermartin_sqlg,org.umlg.sqlg.structure.traverser,SqlgTraverser,SqlgTraverser,Long Parameter List,The method has 5 parameters. ,19
pietermartin_sqlg,org.umlg.sqlg.structure.traverser,SqlgTraverser,merge,Long Statement,The length of the statement "if (null != this.sack && null != this.sideEffects.getSackMerger()) this.sack=this.sideEffects.getSackMerger().apply(this.sack`other.sack());" is 140.,54
pietermartin_sqlg,org.umlg.sqlg.structure.traverser,SqlgTraverser,equals,Long Statement,The length of the statement "return (object instanceof SqlgTraverser) && ((SqlgTraverser)object).t.equals(this.t) && ((SqlgTraverser)object).future.equals(this.future)&& ((SqlgTraverser)object).loops == this.loops && (null == this.sack || null != this.sideEffects.getSackMerger());" is 252.,85
pietermartin_sqlg,org.umlg.sqlg.structure.traverser,SqlgTraverserGenerator,generate,Long Parameter List,The method has 5 parameters. ,31
pietermartin_sqlg,org.umlg.sqlg.structure.traverser,SqlgTraverserGenerator,generateIterator,Long Parameter List,The method has 5 parameters. ,35
pietermartin_sqlg,org.umlg.sqlg.structure.traverser,SqlgTraverserGenerator,generate,Long Statement,The length of the statement "throw new IllegalStateException("SqlgTraverserGenerator.generate(final S start` final Step<S` ?> startStep` final long initialBulk) should not be called.");" is 156.,49
pietermartin_sqlg,org.umlg.sqlg.structure.io.binary,RecordIdBinarySerializer,readValue,Long Statement,The length of the statement "throw new SerializationException(String.format("Not enough readable bytes: %d (expected %d)"`valueLength`buffer.readableBytes()));" is 130.,40
pietermartin_sqlg,org.umlg.sqlg.structure.io.binary,RecordIdBinarySerializer,writeValue,Magic Number,The method contains a magic number: 4,78
pietermartin_sqlg,org.umlg.sqlg.structure.io.binary,RecordIdBinarySerializer,writeValue,Magic Number,The method contains a magic number: 8,78
pietermartin_sqlg,org.umlg.sqlg.structure.ds,SqlgC3P0DataSource,create,Complex Conditional,The conditional expression SqlgDataSource.isPostgres(configuration) || SqlgDataSource.isHsqldb(configuration) || SqlgDataSource.isH2(configuration) is complex.,32
pietermartin_sqlg,org.umlg.sqlg.structure.ds,SqlgC3P0DataSource,create,Complex Method,Cyclomatic complexity of the method is 8,32
pietermartin_sqlg,org.umlg.sqlg.structure.ds,SqlgC3P0DataSource,create,Long Statement,The length of the statement "if (SqlgDataSource.isPostgres(configuration) || SqlgDataSource.isHsqldb(configuration) || SqlgDataSource.isH2(configuration)) {" is 127.,32
pietermartin_sqlg,org.umlg.sqlg.structure.ds,SqlgC3P0DataSource,create,Long Statement,The length of the statement "comboPooledDataSource.setDataSourceName(jdbcUrl.substring(jdbcUrl.lastIndexOf("databaseName=") + "databaseName=".length()));" is 124.,32
pietermartin_sqlg,org.umlg.sqlg.structure.ds,SqlgC3P0DataSource,getPoolStatsAsJson,Long Statement,The length of the statement "return "[" + "{\"jdbcUrl\":\"" + jdbcUrl + "\"`"+ "\"jndi\": false`"+ "\"numConnections\":\""+ dss.getNumConnections()+ "\"`"+ "\"numBusyConnections\":\""+ dss.getNumConnections()+ "\"`"+ "\"numIdleConnections\":\""+ dss.getNumConnections()+ "\"`"+ "\"numUnclosedOrphanedConnections\":\""+ dss.getNumConnections()+ "\"`"+ "\"numMinPoolSize\":\""+ dss.getMinPoolSize()+ "\"`"+ "\"numMaxPoolSize\":\""+ dss.getMaxPoolSize()+ "\"`"+ "\"numMaxIdleTime\":\""+ dss.getMaxIdleTime()+ "\""+ "}"+ "]";" is 492.,119
pietermartin_sqlg,org.umlg.sqlg.structure.ds,SqlgHikariDataSource,getPoolStatsAsJson,Long Statement,The length of the statement "return "[" + "{\"jdbcUrl\":\"" + jdbcUrl + "\"`"+ "\"jndi\": false`"+ "\"numMaxPoolSize\":\""+ dss.getMaximumPoolSize()+ "\"`"+ "}"+ "]";" is 137.,110
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Complex Conditional,The conditional expression (!sqlgGraph.getSqlDialect().supportsBulkWithinOut() || (!SqlgUtil.isBulkWithinAndOut(sqlgGraph`hasContainer)) || isInAndOrHsContainer) && p.getBiPredicate() instanceof Contains is complex.,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Complex Method,Cyclomatic complexity of the method is 24,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Long Method,The method has 128 lines of code.,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Long Parameter List,The method has 5 parameters. ,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Long Statement,The length of the statement "String column=prefix + "." + sqlgGraph.getSqlDialect().maybeWrapInQoutes(((PropertyReference)p.getValue()).getColumnName());" is 124.,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Long Statement,The length of the statement "else if ((!sqlgGraph.getSqlDialect().supportsBulkWithinOut() || (!SqlgUtil.isBulkWithinAndOut(sqlgGraph`hasContainer)) || isInAndOrHsContainer) && p.getBiPredicate() instanceof Contains) {" is 188.,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Magic Number,The method contains a magic number: 2,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,toSql,Magic Number,The method contains a magic number: 2,57
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,compareToSql,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@666c3552,181
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,compareToSql,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2c45edd5,200
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,containsToSql,Complex Method,Cyclomatic complexity of the method is 8,220
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,containsToSql,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@8895f0a,220
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,containsToSql,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@b24f7b1,220
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,textToSql,Complex Method,Cyclomatic complexity of the method is 13,256
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,textToSql,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@ce58522,256
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,putKeyValueMap,Complex Conditional,The conditional expression p.getBiPredicate() == Text.contains || p.getBiPredicate() == Text.ncontains || p.getBiPredicate() == Text.containsCIS || p.getBiPredicate() == Text.ncontainsCIS is complex.,303
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,putKeyValueMap,Complex Conditional,The conditional expression hasContainer.getKey().equals(T.id.getAccessor()) && hasContainer.getValue() instanceof RecordId && !((RecordId)hasContainer.getValue()).hasSequenceId() is complex.,303
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,putKeyValueMap,Complex Method,Cyclomatic complexity of the method is 17,303
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,putKeyValueMap,Long Statement,The length of the statement "else if (p.getBiPredicate() == Text.contains || p.getBiPredicate() == Text.ncontains || p.getBiPredicate() == Text.containsCIS || p.getBiPredicate() == Text.ncontainsCIS) {" is 172.,303
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,putKeyValueMap,Long Statement,The length of the statement "else if (hasContainer.getKey().equals(T.id.getAccessor()) && hasContainer.getValue() instanceof RecordId && !((RecordId)hasContainer.getValue()).hasSequenceId()) {" is 163.,303
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,putKeyValueMap,Magic Number,The method contains a magic number: 2,303
pietermartin_sqlg,org.umlg.sqlg.sql.parse,WhereClause,putKeyValueMap,Magic Number,The method contains a magic number: 2,303
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,SchemaTableTree,Long Parameter List,The method has 18 parameters. ,128
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructDistinctEmitBeforeQueries,Complex Conditional,The conditional expression !current.isLocalStep() && current.isEmit() && (current.getStepDepth() < current.getReplacedStepDepth()) is complex.,197
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructOuterGroupByClause,Complex Conditional,The conditional expression lastSchemaTableTree.groupBy != null && !lastSchemaTableTree.groupBy.isEmpty() && !lastSchemaTableTree.groupBy.get(0).equals(T.label.getAccessor()) is complex.,218
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructOuterGroupByClause,Complex Conditional,The conditional expression lastSchemaTableTree.hasAggregateFunction() && !dropStep && subQueryLinkedLists.get(0).getFirst().stepType != STEP_TYPE.GRAPH_STEP is complex.,218
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructOuterGroupByClause,Long Statement,The length of the statement "if (lastSchemaTableTree.groupBy != null && !lastSchemaTableTree.groupBy.isEmpty() && !lastSchemaTableTree.groupBy.get(0).equals(T.label.getAccessor())) {" is 153.,218
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructOuterGroupByClause,Long Statement,The length of the statement "else if (lastSchemaTableTree.hasAggregateFunction() && !dropStep && subQueryLinkedLists.get(0).getFirst().stepType != STEP_TYPE.GRAPH_STEP) {" is 141.,218
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Complex Method,Cyclomatic complexity of the method is 21,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Method,The method has 109 lines of code.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ toSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawToLabel+ (toSchemaTableTree.direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 390.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasId()));" is 139.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ identifier));" is 224.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasIdentifier(identifier)));" is 157.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ toSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawToLabel+ "."+ identifier+ (toSchemaTableTree.direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 407.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasIdentifier(identifier)));" is 157.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ toSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawToLabel+ Topology.IN_VERTEX_COLUMN_END));" is 308.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasId()));" is 139.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ identifier));" is 224.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasIdentifier(identifier)));" is 157.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ toSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawToLabel+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END));" is 325.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasIdentifier(identifier)));" is 157.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ toSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawToLabel+ Topology.OUT_VERTEX_COLUMN_END));" is 309.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasId()));" is 139.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ identifier));" is 224.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasIdentifier(identifier)));" is 157.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ toSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawToLabel+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 326.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.lastMappedAliasIdentifier(identifier)));" is 157.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ Topology.ID));" is 225.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.mappedAliasVertexForeignKeyColumnEnd(fromSchemaTableTree`toSchemaTableTree.direction`rawFromLabel)));" is 218.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append("a").append(count - 1).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTableTree.getSchemaTable().getSchema() + "." + fromSchemaTableTree.getSchemaTable().getTable()+ "."+ identifier));" is 224.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSectionedJoin,Long Statement,The length of the statement "result.append(" = a").append(count).append(".").append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(toSchemaTableTree.mappedAliasVertexForeignKeyColumnEnd(fromSchemaTableTree`toSchemaTableTree.direction`rawFromLabel`identifier)));" is 229.,265
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,getHasContainerSchemaTable,Long Statement,The length of the statement "hasContainerLabelSchemaTable=SchemaTable.of(predicateSchemaTable.getSchema()`VERTEX_PREFIX + predicateSchemaTable.getTable());" is 126.,407
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,getHasContainerSchemaTable,Long Statement,The length of the statement "hasContainerLabelSchemaTable=SchemaTable.of(predicateSchemaTable.getSchema()`EDGE_PREFIX + predicateSchemaTable.getTable());" is 124.,407
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,invalidateByHas,Complex Method,Cyclomatic complexity of the method is 15,431
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,invalidateByHas,Long Statement,The length of the statement "if (!hasContainer.getKey().equals(TopologyStrategy.TOPOLOGY_SELECTION_SQLG_SCHEMA) && !hasContainer.getKey().equals(TopologyStrategy.TOPOLOGY_SELECTION_GLOBAL_UNIQUE_INDEX)) {" is 175.,431
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,invalidateByHas,Long Statement,The length of the statement "if (!schemaTableTree.getFilteredAllTables().get(schemaTableTree.getSchemaTable().toString()).containsKey(hasContainer.getKey())) {" is 130.,431
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,invalidateByRestrictedProperty,Long Statement,The length of the statement "if (schemaTableTree.getFilteredAllTables().get(schemaTableTree.getSchemaTable().toString()).containsKey(restrictedProperty)) {" is 126.,488
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,setIdentifiersAndDistributionColumn,Long Statement,The length of the statement "Supplier<IllegalStateException> illegalStateExceptionSupplier=() -> new IllegalStateException(String.format("Label '%s' must be present."`this.schemaTable.toString()));" is 168.,535
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,setIdentifiersAndDistributionColumn,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getVertexLabel(this.schemaTable.withOutPrefix().getSchema()`this.schemaTable.withOutPrefix().getTable()).orElseThrow(illegalStateExceptionSupplier);" is 201.,535
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,setIdentifiersAndDistributionColumn,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getEdgeLabel(this.schemaTable.withOutPrefix().getSchema()`this.schemaTable.withOutPrefix().getTable()).orElseThrow(illegalStateExceptionSupplier);" is 195.,535
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Long Statement,The length of the statement "return addChild(schemaTable`direction`Vertex.class`replacedStep.getHasContainers()`replacedStep.getAndOrHasContainers()`replacedStep.getSqlgComparatorHolder()`replacedStep.getSqlgComparatorHolder().getComparators()`replacedStep.getSqlgRangeHolder()`replacedStep.getRestrictedProperties()`replacedStep.getAggregateFunction()`replacedStep.getGroupBy()`replacedStep.getDepth()`true`replacedStep.isEmit()`replacedStep.isUntilFirst()`replacedStep.isLeftJoin()`replacedStep.isDrop()`labels);" is 485.,562
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Long Parameter List,The method has 5 parameters. ,588
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Long Statement,The length of the statement "Preconditions.checkState(replacedStep.getStep() instanceof VertexStep`"addChild can only be called for a VertexStep` found %s"`replacedStep.getStep().getClass().getSimpleName());" is 178.,588
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Long Statement,The length of the statement "throw new IllegalStateException(String.format("BUG: Expected %s` instead found %s"`"Edge or Vertex"`elementClass.getSimpleName()));" is 131.,588
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Long Statement,The length of the statement "return addChild(schemaTable`direction`elementClass`replacedStep.getHasContainers()`replacedStep.getAndOrHasContainers()`replacedStep.getSqlgComparatorHolder()`replacedStep.getSqlgComparatorHolder().getComparators()`replacedStep.getSqlgRangeHolder()`replacedStep.getRestrictedProperties()`replacedStep.getAggregateFunction()`replacedStep.getGroupBy()`replacedStep.getDepth()`false`emit`replacedStep.isUntilFirst()`replacedStep.isLeftJoin()`replacedStep.isDrop()`labels);" is 469.,588
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Complex Conditional,The conditional expression (elementClass.isAssignableFrom(Edge.class) && schemaTable.getTable().startsWith(EDGE_PREFIX)) || (elementClass.isAssignableFrom(Vertex.class) && schemaTable.getTable().startsWith(VERTEX_PREFIX)) is complex.,627
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Long Parameter List,The method has 18 parameters. ,627
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,addChild,Long Statement,The length of the statement "if ((elementClass.isAssignableFrom(Edge.class) && schemaTable.getTable().startsWith(EDGE_PREFIX)) || (elementClass.isAssignableFrom(Vertex.class) && schemaTable.getTable().startsWith(VERTEX_PREFIX))) {" is 201.,627
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSql,Long Identifier,The length of the field CONSTRUCT_SQL_MAY_ONLY_BE_CALLED_ON_THE_ROOT_OBJECT is 51.,742
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSqlForOptional,Long Identifier,The length of the field CONSTRUCT_SQL_MAY_ONLY_BE_CALLED_ON_THE_ROOT_OBJECT is 51.,757
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructDropSql,Complex Conditional,The conditional expression distinctQueryStack.size() == 1 && distinctQueryStack.getFirst().getHasContainers().isEmpty() && distinctQueryStack.getFirst().getAndOrHasContainers().isEmpty() && ((this.sqlgGraph.getSqlDialect().supportsTruncateMultipleTablesTogether() && hasOnlyOneInOutEdgeLabel(distinctQueryStack.getFirst().getSchemaTable())) || (!this.sqlgGraph.getSqlDialect().supportsTruncateMultipleTablesTogether() && hasNoEdgeLabels(distinctQueryStack.getFirst().getSchemaTable()))) is complex.,768
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructDropSql,Long Identifier,The length of the field CONSTRUCT_SQL_MAY_ONLY_BE_CALLED_ON_THE_ROOT_OBJECT is 51.,768
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructDropSql,Long Statement,The length of the statement "if (distinctQueryStack.size() == 1 && distinctQueryStack.getFirst().getHasContainers().isEmpty() && distinctQueryStack.getFirst().getAndOrHasContainers().isEmpty() && ((this.sqlgGraph.getSqlDialect().supportsTruncateMultipleTablesTogether() && hasOnlyOneInOutEdgeLabel(distinctQueryStack.getFirst().getSchemaTable())) || (!this.sqlgGraph.getSqlDialect().supportsTruncateMultipleTablesTogether() && hasNoEdgeLabels(distinctQueryStack.getFirst().getSchemaTable())))) {" is 466.,768
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructDropSql,Long Statement,The length of the statement "return this.sqlgGraph.getSqlDialect().drop(this.sqlgGraph`leafNodeToDelete`edgesToDelete.orElse(null)`distinctQueryStack);" is 122.,768
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructOuterFromClause,Long Statement,The length of the statement "result.append("a1.").append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("index")).append(" as ").append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("index")).append("`\n\r");" is 184.,861
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Complex Conditional,The conditional expression !dropStep && lastOfPrevious == null && distinctQueryStack.getFirst().stepType != STEP_TYPE.GRAPH_STEP is complex.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Complex Conditional,The conditional expression (this.sqlgGraph.getSqlDialect().isMssqlServer() || this.parentIdsAndIndexes.size() != 1) && this.sqlgGraph.getSqlDialect().supportsValuesExpression() is complex.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Complex Conditional,The conditional expression lastSchemaTableTree.groupBy != null && !lastSchemaTableTree.groupBy.isEmpty() && !lastSchemaTableTree.groupBy.get(0).equals(T.label.getAccessor()) is complex.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Complex Conditional,The conditional expression !dropStep && lastOfPrevious == null && distinctQueryStack.getFirst().stepType != STEP_TYPE.GRAPH_STEP is complex.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Complex Conditional,The conditional expression lastSchemaTableTree.hasAggregateFunction() && !dropStep && lastOfPrevious == null && distinctQueryStack.getFirst().stepType != STEP_TYPE.GRAPH_STEP is complex.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Complex Conditional,The conditional expression !dropStep && lastOfPrevious == null && distinctQueryStack.getFirst().stepType != STEP_TYPE.GRAPH_STEP is complex.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Complex Method,Cyclomatic complexity of the method is 47,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Identifier,The length of the identifier previousLeftJoinSchemaTableTree is 31.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Method,The method has 288 lines of code.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Parameter List,The method has 6 parameters. ,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "Preconditions.checkState(this.parent == null`"constructSelectSinglePathSql may only be called on the root SchemaTableTree");" is 124.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "singlePathSql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes("C" + (firstSchemaTableTree.getIdentifiers().size() + 1)));" is 124.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "singlePathSql.append(constructSelectClause(dropStep`currentColumnList`distinctQueryStack`lastOfPrevious`firstOfNextStack`partOfDuplicateQuery));" is 144.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "singlePathSql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(firstSchemaTableTree.getSchemaTable().getSchema()));" is 122.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "singlePathSql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(firstSchemaTableTree.getSchemaTable().getTable()));" is 121.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "if (previousLeftJoinSchemaTableTree == null || !previousLeftJoinSchemaTableTree.getSchemaTable().equals(schemaTableTree.getSchemaTable())) {" is 140.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "if ((this.sqlgGraph.getSqlDialect().isMssqlServer() || this.parentIdsAndIndexes.size() != 1) && this.sqlgGraph.getSqlDialect().supportsValuesExpression()) {" is 156.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "this.sqlgGraph.addTemporaryVertex(T.label`tmpTableIdentified`"tmpId"`parentIdsAndIndex.getLeft().getSequenceId()`"index"`parentIdsAndIndex.getRight());" is 151.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "singlePathSql.append(this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()));" is 121.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "PropertyType propertyType=this.filteredAllTables.get(firstSchemaTable.getSchema() + "." + firstSchemaTable.getTable()).get(identifier);" is 135.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "singlePathSql.append(this.sqlgGraph.getSqlDialect().toRDBSStringLiteral(propertyType`this.parentIdsAndIndexes.get(0).getLeft().getIdentifiers().get(cnt - 1)));" is 159.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "if (lastSchemaTableTree.groupBy != null && !lastSchemaTableTree.groupBy.isEmpty() && !lastSchemaTableTree.groupBy.get(0).equals(T.label.getAccessor())) {" is 153.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Long Statement,The length of the statement "else if (lastSchemaTableTree.hasAggregateFunction() && !dropStep && lastOfPrevious == null && distinctQueryStack.getFirst().stepType != STEP_TYPE.GRAPH_STEP) {" is 159.,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSinglePathSql,Magic Number,The method contains a magic number: 6,895
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,bulkWithJoin,Complex Method,Cyclomatic complexity of the method is 22,1252
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,bulkWithJoin,Long Method,The method has 130 lines of code.,1252
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,bulkWithJoin,Long Statement,The length of the statement "List<HasContainer> bulkHasContainers=this.hasContainers.stream().filter(h -> SqlgUtil.isBulkWithinAndOut(this.sqlgGraph`h)).collect(Collectors.toList());" is 153.,1252
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOptionalLeftJoinWhereClause,Complex Method,Cyclomatic complexity of the method is 12,1376
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOptionalLeftJoinWhereClause,Long Statement,The length of the statement "Preconditions.checkState(this.parent.getSchemaTable().isEdgeTable()`"Optional left join drop queries must be for an edge!");" is 124.,1376
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOptionalLeftJoinWhereClause,Long Statement,The length of the statement "result.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.getSchemaTable().getSchema() + "." + rawLabel+ (this.getDirection() == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 216.,1376
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOptionalLeftJoinWhereClause,Long Statement,The length of the statement "result.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.getSchemaTable().getSchema() + "." + rawLabel+ "."+ identifier+ (this.getDirection() == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 233.,1376
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOptionalLeftJoinWhereClause,Long Statement,The length of the statement "Preconditions.checkState(this.parent.getSchemaTable().isVertexTable()`"Optional left join non drop queries must be for an vertex!");" is 132.,1376
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOptionalLeftJoinWhereClause,Long Statement,The length of the statement "result.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.parent.getSchemaTable().getSchema() + "." + rawLabel+ (this.getDirection() == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 222.,1376
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOptionalLeftJoinWhereClause,Long Statement,The length of the statement "result.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.parent.getSchemaTable().getSchema() + "." + rawLabel+ "."+ identifier+ (this.getDirection() == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 239.,1376
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toWhereClause,Complex Method,Cyclomatic complexity of the method is 10,1475
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Complex Conditional,The conditional expression (comparator.getValue0() instanceof ValueTraversal<?`?> || comparator.getValue0() instanceof TokenTraversal<?`?>) && comparator.getValue1() instanceof Order is complex.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Complex Method,Cyclomatic complexity of the method is 22,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Method,The method has 146 lines of code.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Statement,The length of the statement "throw new RuntimeException("Only handle Order.incr and Order.decr` not " + elementValueComparator.getValueComparator().toString());" is 131.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Statement,The length of the statement "else if ((comparator.getValue0() instanceof ValueTraversal<?`?> || comparator.getValue0() instanceof TokenTraversal<?`?>) && comparator.getValue1() instanceof Order) {" is 167.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Statement,The length of the statement "Preconditions.checkState(comparator.getValue0().getSteps().size() == 1`"toOrderByClause expects a TraversalComparator to have exactly one step!");" is 146.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Statement,The length of the statement "Preconditions.checkState(comparator.getValue0().getSteps().get(0) instanceof SelectOneStep`"toOrderByClause expects a TraversalComparator to have exactly one SelectOneStep!");" is 175.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getScopeKeys().size() == 1`"toOrderByClause expects the selectOneStep to have one scopeKey!");" is 133.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getLocalChildren().size() == 1`"toOrderByClause expects the selectOneStep to have one traversal!");" is 138.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toOrderByClause,Long Statement,The length of the statement "Preconditions.checkState(t instanceof ValueTraversal || t instanceof TokenTraversal`"toOrderByClause expects the selectOneStep's traversal to be a ElementValueTraversal or TokenTraversal!");" is 190.,1517
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toRangeClause,Complex Conditional,The conditional expression mutableOrderBy.isFalse() && sqlgGraph.getSqlDialect().isMssqlServer() && this.getDbComparators().isEmpty() is complex.,1670
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Complex Conditional,The conditional expression !dropStep && lastSchemaTableTree.getSchemaTable().isEdgeTable() && !lastSchemaTableTree.hasAggregateFunction() is complex.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Complex Method,Cyclomatic complexity of the method is 26,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Method,The method has 121 lines of code.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Parameter List,The method has 6 parameters. ,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(!(previousSchemaTableTree != null && previousSchemaTableTree.direction == Direction.BOTH)`"Direction should never be BOTH");" is 149.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(!(nextSchemaTableTree != null && nextSchemaTableTree.direction == Direction.BOTH)`"Direction should never be BOTH");" is 141.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(!(nextSchemaTableTree != null && lastSchemaTable.getTable().startsWith(VERTEX_PREFIX) && nextSchemaTableTree.getSchemaTable().getTable().startsWith(VERTEX_PREFIX))`"Join can not be between 2 vertex tables!");" is 233.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(!(nextSchemaTableTree != null && lastSchemaTable.getTable().startsWith(EDGE_PREFIX) && nextSchemaTableTree.getSchemaTable().getTable().startsWith(EDGE_PREFIX))`"Join can not be between 2 edge tables!");" is 227.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(!(previousSchemaTableTree != null && firstSchemaTable.getTable().startsWith(VERTEX_PREFIX) && previousSchemaTableTree.getSchemaTable().getTable().startsWith(VERTEX_PREFIX))`"Join can not be between 2 vertex tables!");" is 242.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(!(previousSchemaTableTree != null && firstSchemaTable.getTable().startsWith(EDGE_PREFIX) && previousSchemaTableTree.getSchemaTable().getTable().startsWith(EDGE_PREFIX))`"Join can not be between 2 edge tables!");" is 236.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(previousSchemaTableTree.getSchemaTable().getTable().startsWith(VERTEX_PREFIX)`"Expected table to start with %s"`VERTEX_PREFIX);" is 152.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(firstSchemaTable`previousSchemaTableTree.getSchemaTable().getSchema() + "." + previousRawLabel+ Topology.OUT_VERTEX_COLUMN_END`previousSchemaTableTree.stepDepth`firstSchemaTableTree.calculatedAliasVertexForeignKeyColumnEnd(previousSchemaTableTree`firstSchemaTableTree.direction));" is 295.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(firstSchemaTable`identifier`previousSchemaTableTree.stepDepth`firstSchemaTableTree.calculatedAliasVertexForeignKeyColumnEnd(previousSchemaTableTree`firstSchemaTableTree.direction`identifier));" is 207.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(firstSchemaTable`previousSchemaTableTree.getSchemaTable().getSchema() + "." + previousRawLabel+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END`previousSchemaTableTree.stepDepth`firstSchemaTableTree.calculatedAliasVertexForeignKeyColumnEnd(previousSchemaTableTree`firstSchemaTableTree.direction`identifier));" is 323.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(firstSchemaTable`previousSchemaTableTree.getSchemaTable().getSchema() + "." + previousRawLabel+ Topology.IN_VERTEX_COLUMN_END`previousSchemaTableTree.stepDepth`firstSchemaTableTree.calculatedAliasVertexForeignKeyColumnEnd(previousSchemaTableTree`firstSchemaTableTree.direction));" is 294.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(firstSchemaTable`identifier`previousSchemaTableTree.stepDepth`firstSchemaTableTree.calculatedAliasVertexForeignKeyColumnEnd(previousSchemaTableTree`firstSchemaTableTree.direction`identifier));" is 207.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(firstSchemaTable`previousSchemaTableTree.getSchemaTable().getSchema() + "." + previousRawLabel+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END`previousSchemaTableTree.stepDepth`firstSchemaTableTree.calculatedAliasVertexForeignKeyColumnEnd(previousSchemaTableTree`firstSchemaTableTree.direction`identifier));" is 322.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(firstSchemaTable`identifier`firstSchemaTableTree.stepDepth`firstSchemaTableTree.calculateLabeledAliasPropertyName(identifier));" is 142.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "Preconditions.checkState(nextSchemaTableTree.getSchemaTable().getTable().startsWith(VERTEX_PREFIX)`"Expected table to start with %s"`VERTEX_PREFIX);" is 148.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`nextSchemaTableTree.getSchemaTable().getSchema() + "." + nextRawLabel+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ nextSchemaTableTree.getSchemaTable().getSchema()+ "."+ nextRawLabel+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END));" is 499.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`identifier`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ identifier);" is 153.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`nextSchemaTableTree.getSchemaTable().getSchema() + "." + nextRawLabel+ "."+ identifier+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ nextSchemaTableTree.getSchemaTable().getSchema()+ "."+ nextRawLabel+ "."+ identifier+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END));" is 533.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`nextSchemaTableTree.getSchemaTable().getSchema() + "." + nextRawLabel+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ nextSchemaTableTree.getSchemaTable().getSchema()+ "."+ nextRawLabel+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END));" is 499.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`identifier`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ identifier);" is 153.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`nextSchemaTableTree.getSchemaTable().getSchema() + "." + nextRawLabel+ "."+ identifier+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ nextSchemaTableTree.getSchemaTable().getSchema()+ "."+ nextRawLabel+ "."+ identifier+ (nextSchemaTableTree.direction == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END));" is 533.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`Topology.ID`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ Topology.ID);" is 155.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "columnList.add(lastSchemaTable`identifier`nextSchemaTableTree.stepDepth`lastSchemaTable.getSchema() + "." + lastSchemaTable.getTable()+ "."+ identifier);" is 153.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructSelectClause,Long Statement,The length of the statement "lastSchemaTableTree.addLabel(lastSchemaTableTree.getStepDepth() + BaseStrategy.PATH_LABEL_SUFFIX + BaseStrategy.SQLG_PATH_TEMP_FAKE_LABEL);" is 139.,1720
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructAllLabeledFromClause,Long Statement,The length of the statement "List<SchemaTableTree> labeled=distinctQueryStack.stream().filter(d -> !d.getLabels().isEmpty()).collect(Collectors.toList());" is 125.,1917
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructEmitFromClause,Complex Conditional,The conditional expression schemaTableTree.parent != null && !schemaTableTree.getSchemaTable().isEdgeTable() && schemaTableTree.isEmit() is complex.,1939
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructEmitFromClause,Long Statement,The length of the statement "columnList.add(schemaTableTree.parent.getSchemaTable()`Topology.ID`schemaTableTree.parent.getStepDepth()`schemaTableTree.parent.calculatedAliasId());" is 149.,1939
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printLabeledIDFromClauseFor,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=lastSchemaTableTree.getFilteredAllTables().get(lastSchemaTableTree.getSchemaTable().toString());" is 137.,1958
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printLabeledFromClauseFor,Long Statement,The length of the statement "if (lastSchemaTableTree.hasAggregateFunction() && lastSchemaTableTree.getAggregateFunction().getLeft().equals(GraphTraversal.Symbols.count)) {" is 142.,1977
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printLabeledFromClauseFor,Long Statement,The length of the statement "cols.add(lastSchemaTableTree.getSchemaTable()`"count"`lastSchemaTableTree.getStepDepth()`"count"`lastSchemaTableTree.aggregateFunction.getLeft());" is 146.,1977
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printLabeledFromClauseFor,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=lastSchemaTableTree.getFilteredAllTables().get(lastSchemaTableTree.getSchemaTable().toString());" is 137.,1977
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printColumn,Complex Conditional,The conditional expression lastSchemaTableTree.hasAggregateFunction() && !lastSchemaTableTree.getAggregateFunction().getLeft().equals("count") && (lastSchemaTableTree.aggregateFunction.getRight().isEmpty() || lastSchemaTableTree.aggregateFunction.getRight().contains(col)) is complex.,2000
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printColumn,Long Statement,The length of the statement "if (lastSchemaTableTree.hasAggregateFunction() && !lastSchemaTableTree.getAggregateFunction().getLeft().equals("count") && (lastSchemaTableTree.aggregateFunction.getRight().isEmpty() || lastSchemaTableTree.aggregateFunction.getRight().contains(col))) {" is 252.,2000
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printColumn,Long Statement,The length of the statement "cols.add(lastSchemaTableTree.getSchemaTable()`col`lastSchemaTableTree.getStepDepth()`alias`lastSchemaTableTree.aggregateFunction.getLeft());" is 140.,2000
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printColumn,Long Statement,The length of the statement "cols.add(lastSchemaTableTree.getSchemaTable()`postFixedCol`lastSchemaTableTree.getStepDepth()`alias`lastSchemaTableTree.aggregateFunction.getLeft());" is 149.,2000
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printEdgeInOutVertexIdFromClauseFor,Complex Conditional,The conditional expression firstSchemaTableTree == null || !firstSchemaTableTree.equals(lastSchemaTableTree) || firstSchemaTableTree.getDirection() != edgeForeignKey.getDirection() is complex.,2053
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printEdgeInOutVertexIdFromClauseFor,Long Statement,The length of the statement "Set<ForeignKey> edgeForeignKeys=sqlgGraph.getTopology().getEdgeForeignKeys().get(lastSchemaTableTree.getSchemaTable().toString());" is 130.,2053
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printEdgeInOutVertexIdFromClauseFor,Long Statement,The length of the statement "if (firstSchemaTableTree == null || !firstSchemaTableTree.equals(lastSchemaTableTree) || firstSchemaTableTree.getDirection() != edgeForeignKey.getDirection()) {" is 160.,2053
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,printLabeledEdgeInOutVertexIdFromClauseFor,Long Statement,The length of the statement "String alias=cols.getAlias(this.getSchemaTable()`foreignKey`this.stepDepth`getAggregateFunction() == null ? null : getAggregateFunction().getLeft());" is 149.,2068
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculatedAliasId,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ Topology.ID;" is 154.,2083
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculateLabeledAliasId,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + reducedLabels+ ALIAS_SEPARATOR+ getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ Topology.ID;" is 186.,2091
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculateLabeledAliasId,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + reducedLabels+ ALIAS_SEPARATOR+ getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ Topology.ID;" is 186.,2100
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculateLabeledAliasPropertyName,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + reducedLabels+ ALIAS_SEPARATOR+ getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ propertyName;" is 187.,2107
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculateLabeledAliasPropertyName,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + reducedLabels+ ALIAS_SEPARATOR+ getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ propertyName;" is 187.,2116
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculateAliasPropertyName,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ propertyName;" is 155.,2123
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculatedAliasVertexForeignKeyColumnEnd,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ previousSchemaTableTree.getSchemaTable().getSchema()+ "."+ previousRawLabel+ (direction == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END);" is 312.,2131
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculatedAliasVertexForeignKeyColumnEnd,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ previousSchemaTableTree.getSchemaTable().getSchema()+ "."+ previousRawLabel+ "."+ identifier+ (direction == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END);" is 329.,2143
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,mappedAliasVertexForeignKeyColumnEnd,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ previousSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawFromLabel+ (direction == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END);" is 308.,2155
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,mappedAliasVertexForeignKeyColumnEnd,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ previousSchemaTableTree.getSchemaTable().getSchema()+ "."+ rawFromLabel+ "."+ identifier+ (direction == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END);" is 325.,2163
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,lastMappedAliasId,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ Topology.ID;" is 154.,2171
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,labeledAliasId,Long Statement,The length of the statement "this.labeledAliasId=this.stepDepth + ALIAS_SEPARATOR + reducedLabels+ ALIAS_SEPARATOR+ getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ Topology.ID;" is 192.,2176
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,lastMappedAliasIdentifier,Long Statement,The length of the statement "String result=this.stepDepth + ALIAS_SEPARATOR + reducedLabels+ ALIAS_SEPARATOR+ getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ identifier;" is 185.,2184
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,labeledAliasIdentifier,Long Statement,The length of the statement "return this.stepDepth + ALIAS_SEPARATOR + reducedLabels+ ALIAS_SEPARATOR+ getSchemaTable().getSchema()+ ALIAS_SEPARATOR+ getSchemaTable().getTable()+ ALIAS_SEPARATOR+ identifier;" is 178.,2190
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Complex Method,Cyclomatic complexity of the method is 17,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Method,The method has 141 lines of code.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Statement,The length of the statement "Preconditions.checkState((fromSchemaTable.isVertexTable() && !labelToTravers.isVertexTable()) || (!fromSchemaTable.isVertexTable() && labelToTravers.isVertexTable()));" is 167.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTable.getSchema() + "." + rawLabel+ (labelToTraversTree.getDirection() == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 224.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTable.getSchema() + "." + rawLabel+ "."+ identifier+ (labelToTraversTree.getDirection() == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 241.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(labelToTravers.getSchema() + "." + rawLabelToTravers+ (labelToTraversTree.getDirection() == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 233.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(labelToTravers.getSchema() + "." + rawLabelToTravers+ (labelToTraversTree.getDirection() == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 233.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(labelToTravers.getSchema() + "." + rawLabelToTravers+ "."+ identifier+ (labelToTraversTree.getDirection() == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 250.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,constructJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(labelToTravers.getSchema() + "." + rawLabelToTravers+ "."+ identifier+ (labelToTraversTree.getDirection() == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END)));" is 250.,2228
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,appendToJoinBetweenSchemaTables,Long Statement,The length of the statement "Preconditions.checkState((fromSchemaTable.isVertexTable() && !labelToTravers.isVertexTable()) || (!fromSchemaTable.isVertexTable() && labelToTravers.isVertexTable()));" is 167.,2378
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,appendToJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql+=sqlgGraph.getSqlDialect().maybeWrapInQoutes(fromSchemaTable.getSchema() + "." + rawLabel+ (labelToTraversTree.getDirection() == Direction.IN ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END));" is 217.,2378
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,appendToJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql+=sqlgGraph.getSqlDialect().maybeWrapInQoutes(labelToTravers.getSchema() + "." + rawLabelToTravers+ (labelToTraversTree.getDirection() == Direction.OUT ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END));" is 226.,2378
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,appendToJoinBetweenSchemaTables,Long Statement,The length of the statement "joinSql+=sqlgGraph.getSqlDialect().maybeWrapInQoutes(labelToTravers.getSchema() + "." + rawLabelToTravers+ (labelToTraversTree.getDirection() == Direction.OUT ? Topology.IN_VERTEX_COLUMN_END : Topology.OUT_VERTEX_COLUMN_END));" is 226.,2378
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,removeAllButDeepestAndAddCacheLeafNodes,Complex Conditional,The conditional expression current.stepDepth < depth && current.children.isEmpty() && !current.isEmit() && !current.isOptionalLeftJoin() is complex.,2441
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,removeAllButDeepestAndAddCacheLeafNodes,Complex Conditional,The conditional expression (current.stepDepth == depth && current.children.isEmpty()) || (current.isEmit() && current.children.isEmpty()) || current.isOptionalLeftJoin() && current.children.isEmpty() is complex.,2441
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,removeAllButDeepestAndAddCacheLeafNodes,Long Statement,The length of the statement "if ((current.stepDepth == depth && current.children.isEmpty()) || (current.isEmit() && current.children.isEmpty()) || current.isOptionalLeftJoin() && current.children.isEmpty()) {" is 179.,2441
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,internalToString,Long Statement,The length of the statement "sb.append(this.schemaTable.toString()).append(" ").append(this.stepDepth).append(" ").append(this.hasContainers.toString()).append(" ").append("Comparators = ").append(this.sqlgComparatorHolder.toString()).append(" ").append("Range = ").append(String.valueOf(this.sqlgRangeHolder.getRange())).append(" ").append(this.direction != null ? this.direction.toString() : "").append(" ").append("isVertexStep = ").append(this.isEdgeVertexStep()).append(" isUntilFirst = ").append(this.isUntilFirst()).append(" labels = ").append(this.labels);" is 535.,2558
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,getAdditionalPartitionHasContainers,Long Identifier,The length of the field additionalPartitionHasContainers is 32.,2593
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,equals,Complex Method,Cyclomatic complexity of the method is 8,2634
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,getRealLabels,Long Statement,The length of the statement "this.realLabels.add(label.substring(label.indexOf(BaseStrategy.PATH_LABEL_SUFFIX) + BaseStrategy.PATH_LABEL_SUFFIX.length()));" is 126.,2667
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,getRealLabels,Long Statement,The length of the statement "this.realLabels.add(label.substring(label.indexOf(BaseStrategy.EMIT_LABEL_SUFFIX) + BaseStrategy.EMIT_LABEL_SUFFIX.length()));" is 126.,2667
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,getRealLabels,Long Statement,The length of the statement "throw new IllegalStateException("label must contain " + BaseStrategy.PATH_LABEL_SUFFIX + " or "+ BaseStrategy.EMIT_LABEL_SUFFIX);" is 129.,2667
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadProperty,Complex Conditional,The conditional expression !column.getColumn().equals("index") && !column.isID() && !column.isForeignKey() is complex.,2703
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadProperty,Complex Method,Cyclomatic complexity of the method is 10,2703
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadProperty,Long Statement,The length of the statement "settedProperty=sqlgElement.loadProperty(resultSet`propertyName`column.getColumnIndex() - 1`getColumnNameAliasMap()`this.stepDepth`PropertyType.DOUBLE`true);" is 156.,2703
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadProperty,Long Statement,The length of the statement "settedProperty=sqlgElement.loadProperty(resultSet`propertyName`column.getColumnIndex()`getColumnNameAliasMap()`this.stepDepth`becomes);" is 135.,2703
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadProperty,Long Statement,The length of the statement "settedProperty=sqlgElement.loadProperty(resultSet`propertyName`column.getColumnIndex()`getColumnNameAliasMap()`this.stepDepth`becomes);" is 135.,2703
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadProperty,Long Statement,The length of the statement "settedProperty=sqlgElement.loadProperty(resultSet`propertyName`column.getColumnIndex()`getColumnNameAliasMap()`this.stepDepth`propertyType);" is 140.,2703
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadProperty,Long Statement,The length of the statement "settedProperty=sqlgElement.loadProperty(resultSet`propertyName`column.getColumnIndex()`getColumnNameAliasMap()`this.stepDepth`propertyType);" is 140.,2703
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadEdgeInOutVertices,Long Statement,The length of the statement "Map<SchemaTable`List<ColumnList.Column>> inForeignKeyColumns=columnList.getInForeignKeys(this.stepDepth`this.schemaTable);" is 122.,2746
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,loadEdgeInOutVertices,Long Statement,The length of the statement "Map<SchemaTable`List<ColumnList.Column>> outForeignKeyColumns=columnList.getOutForeignKeys(this.stepDepth`this.schemaTable);" is 124.,2746
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,idProperty,Long Statement,The length of the statement "this.idProperty=this.stepDepth + ALIAS_SEPARATOR + schemaTable.getSchema()+ SchemaTableTree.ALIAS_SEPARATOR+ schemaTable.getTable()+ SchemaTableTree.ALIAS_SEPARATOR+ Topology.ID;" is 178.,2789
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,shouldSelectProperty,Long Statement,The length of the statement "else if (this.getAggregateFunction() != null && this.getAggregateFunction().getLeft().equals(GraphTraversal.Symbols.count)) {" is 125.,2879
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculatePropertyRestrictions,Complex Conditional,The conditional expression (comparator.getValue0() instanceof ValueTraversal<?`?> || comparator.getValue0() instanceof TokenTraversal<?`?>) && comparator.getValue1() instanceof Order is complex.,2905
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculatePropertyRestrictions,Complex Method,Cyclomatic complexity of the method is 8,2905
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,calculatePropertyRestrictions,Long Statement,The length of the statement "else if ((comparator.getValue0() instanceof ValueTraversal<?`?> || comparator.getValue0() instanceof TokenTraversal<?`?>) && comparator.getValue1() instanceof Order) {" is 167.,2905
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,hasOnlyOneInOutEdgeLabel,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"BUG: %s not found in the topology."`schemaTable.withOutPrefix().getTable());" is 134.,2941
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,hasNoEdgeLabels,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"BUG: %s not found in the topology."`schemaTable.withOutPrefix().getTable());" is 134.,2971
pietermartin_sqlg,org.umlg.sqlg.sql.parse,SchemaTableTree,toGroupByClause,Long Statement,The length of the statement "return "\nGROUP BY\n\t" + this.groupBy.stream().map(a -> sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.schemaTable.getSchema()) + "." + sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.schemaTable.getTable())+ "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes(a)).reduce((a`b) -> a + "`\n\t" + b).orElseThrow(IllegalStateException::new);" is 339.,3009
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,internalAdd,Long Parameter List,The method has 6 parameters. ,70
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,internalAdd,Long Statement,The length of the statement "Column c=new Column(schema`table`column`this.filteredAllTables.get(schema + "." + table).get(column)`stepDepth`aggregateFunction);" is 130.,70
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,add,Long Parameter List,The method has 5 parameters. ,87
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Long Parameter List,The method has 6 parameters. ,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Long Statement,The length of the statement "Map<String`PropertyType> properties=this.filteredAllTables.get(foreignKeyParts[0] + "." + Topology.VERTEX_PREFIX+ foreignKeyParts[1]);" is 134.,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Long Statement,The length of the statement "c.propertyType=properties.get(foreignKeyParts[2].substring(0`foreignKeyParts[2].length() - Topology.IN_VERTEX_COLUMN_END.length()));" is 132.,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Long Statement,The length of the statement "c.propertyType=properties.get(foreignKeyParts[2].substring(0`foreignKeyParts[2].length() - Topology.OUT_VERTEX_COLUMN_END.length()));" is 133.,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Long Statement,The length of the statement "c.foreignSchemaTable=SchemaTable.of(foreignKeyParts[0]`foreignKeyParts[1].substring(0`foreignKeyParts[1].length() - Topology.IN_VERTEX_COLUMN_END.length()));" is 157.,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 3,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Long Statement,The length of the statement "Preconditions.checkState(foreignKeyParts.length == 2 || foreignKeyParts.length == 3`"Edge table foreign must be schema.table__I\\O or schema.table.property__I\\O. Found %s"`column);" is 181.,138
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Long Statement,The length of the statement "addForeignKey(stt.getSchemaTable().getSchema()`stt.getSchemaTable().getTable()`column`stt.getStepDepth()`alias`foreignKeyParts);" is 128.,138
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 2,138
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,addForeignKey,Magic Number,The method contains a magic number: 3,138
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,getAlias,Long Parameter List,The method has 5 parameters. ,144
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,getAlias,Long Statement,The length of the statement "return getAlias(stt.getSchemaTable()`column`stt.getStepDepth()`stt.getAggregateFunction() == null ? null : stt.getAggregateFunction().getLeft());" is 145.,158
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,toSelectString,Complex Conditional,The conditional expression this.drop && (this.identifiers.isEmpty() || countIdentifiers++ == this.identifiers.size()) is complex.,181
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,removeColumns,Complex Conditional,The conditional expression column.aggregateFunction == null && !(schemaTableTree.getGroupBy() != null && schemaTableTree.getGroupBy().contains(column.column)) is complex.,221
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,removeColumns,Long Statement,The length of the statement "if (column.aggregateFunction == null && !(schemaTableTree.getGroupBy() != null && schemaTableTree.getGroupBy().contains(column.column))) {" is 138.,221
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,toOuterFromString,Complex Conditional,The conditional expression stackContainsAggregate && (c.isID() || c.isForeignKey()) is complex.,243
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,toOuterFromString,Complex Method,Cyclomatic complexity of the method is 8,243
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,toOuterFromString,Long Statement,The length of the statement "List<String> fromAliases=this.aliases.keySet().stream().filter((alias) -> !alias.endsWith(Topology.IN_VERTEX_COLUMN_END) && !alias.endsWith(Topology.OUT_VERTEX_COLUMN_END)).collect(Collectors.toList());" is 202.,243
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,toOuterFromString,Magic Number,The method contains a magic number: 2,243
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,getForeignKeys,Complex Conditional,The conditional expression column.isForeignKey && column.foreignKeyDirection == direction && column.isFor(stepDepth`schemaTable) is complex.,285
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,reindexColumnsExcludeForeignKey,Complex Conditional,The conditional expression stackContainsAggregate && (column.isID() || column.isForeignKey()) || alias.endsWith(Topology.IN_VERTEX_COLUMN_END) || alias.endsWith(Topology.OUT_VERTEX_COLUMN_END) is complex.,321
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,reindexColumnsExcludeForeignKey,Complex Conditional,The conditional expression stackContainsAggregate && column.aggregateFunction != null && column.aggregateFunction.equalsIgnoreCase("avg") is complex.,321
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ColumnList,reindexColumnsExcludeForeignKey,Long Statement,The length of the statement "if (stackContainsAggregate && (column.isID() || column.isForeignKey()) || alias.endsWith(Topology.IN_VERTEX_COLUMN_END) || alias.endsWith(Topology.OUT_VERTEX_COLUMN_END)) {" is 172.,321
pietermartin_sqlg,org.umlg.sqlg.sql.parse,AndOrHasContainer,toSql,Complex Method,Cyclomatic complexity of the method is 20,93
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,from,Long Statement,The length of the statement "replacedStep.labels=step.getLabels().stream().map(l -> pathCount + BaseStrategy.PATH_LABEL_SUFFIX + l).collect(Collectors.toSet());" is 131.,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPath,Long Statement,The length of the statement "throw new IllegalStateException("Only VertexStep` EdgeVertexStep and EdgeOtherVertexStep are handled! Found " + this.step.getClass().getName());" is 144.,144
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPathForEdgeOtherVertexStep,Long Statement,The length of the statement "Preconditions.checkArgument(schemaTableTree.getDirection() != Direction.BOTH`"ReplacedStep.appendPathForEdgeOtherVertexStep schemaTableTree may not have direction BOTH");" is 170.,161
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPathForEdgeOtherVertexStep,Long Statement,The length of the statement "Preconditions.checkState(schemaTableTree.getDirection() != null`"SchemaTableTree must have an Direction to execute the EdgeOtherVertexStep");" is 141.,161
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPathForEdgeOtherVertexStep,Long Statement,The length of the statement "return calculatePathFromEdgeToVertex(schemaTableTree`schemaTableTree.getSchemaTable()`(schemaTableTree.getDirection() == Direction.IN ? Direction.OUT : Direction.IN));" is 167.,161
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPathForVertexStep,Complex Conditional,The conditional expression schemaTables.add(schemaTableTo) && passesLabelHasContainers(this.topology.getSqlgGraph()`true`schemaTableTo.toString()) && passesRestrictedProperties(filteredAllTables.get(schemaTableTo.toString())) is complex.,167
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPathForVertexStep,Complex Method,Cyclomatic complexity of the method is 18,167
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPathForVertexStep,Long Identifier,The length of the identifier inAndOutLabelsFromCurrentPosition is 33.,167
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,appendPathForVertexStep,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@fcdfa2e,167
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,calculatePathFromEdgeToVertex,Complex Conditional,The conditional expression (direction == Direction.BOTH || direction == Direction.OUT) && foreignKey.isOut() is complex.,311
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,calculatePathFromEdgeToVertex,Complex Conditional,The conditional expression (direction == Direction.BOTH || direction == Direction.IN) && foreignKey.isIn() is complex.,311
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,toString,Long Statement,The length of the statement "return this.step + " :: " + this.hasContainers+ " :: leftJoin = "+ this.leftJoin+ " :: joinToLeftJoin = "+ this.joinToLeftJoin;" is 127.,439
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,toString,Long Statement,The length of the statement "return "fakeStep :: " + this.hasContainers + " :: leftJoin = "+ this.leftJoin+ " :: joinToLeftJoin = "+ this.joinToLeftJoin;" is 124.,439
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,getRootSchemaTableTrees,Complex Conditional,The conditional expression isVertex && this.labelHasContainers.size() == 1 && this.labelHasContainers.get(0).getBiPredicate() == Compare.eq is complex.,464
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,getRootSchemaTableTrees,Complex Conditional,The conditional expression (isVertex && table.substring(table.indexOf(".") + 1).startsWith(VERTEX_PREFIX)) || (isEdge && table.substring(table.indexOf(".") + 1).startsWith(EDGE_PREFIX)) is complex.,464
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,getRootSchemaTableTrees,Long Statement,The length of the statement "if ((isVertex && table.substring(table.indexOf(".") + 1).startsWith(VERTEX_PREFIX)) || (isEdge && table.substring(table.indexOf(".") + 1).startsWith(EDGE_PREFIX))) {" is 165.,464
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,collectSchemaTableTrees,Long Parameter List,The method has 5 parameters. ,511
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,collectSchemaTableTrees,Long Statement,The length of the statement "SchemaTableTree schemaTableTree=new SchemaTableTree(sqlgGraph`schemaTable`0`schemaTableTreeHasContainers`this.andOrHasContainers`this.sqlgComparatorHolder`this.sqlgComparatorHolder.getComparators()`this.sqlgRangeHolder`SchemaTableTree.STEP_TYPE.GRAPH_STEP`this.emit`this.untilFirst`this.leftJoin`this.drop`replacedStepDepth`this.labels`aggregateFunction`groupBy`idOnly);" is 370.,511
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,passesLabelHasContainers,Long Identifier,The length of the identifier edgeTableWithoutSchemaAndPrefixes is 33.,568
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,passesLabelHasContainers,Long Identifier,The length of the identifier predicateValueAsSchemaTableWithPrefix is 37.,568
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,passesLabelHasContainers,Long Identifier,The length of the identifier predicateValueAsSchemaTableWithPrefix is 37.,568
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,passesLabelHasContainers,Long Statement,The length of the statement "SchemaTable predicateValueAsSchemaTableWithPrefix=SchemaTable.from(sqlgGraph`value).withPrefix(isVertex ? VERTEX_PREFIX : EDGE_PREFIX);" is 135.,568
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,passesLabelHasContainers,Long Statement,The length of the statement "return biPredicate.test(table`tableWithPrefixes) || biPredicate.test(schemaTableWithOutPrefix.getTable()`edgeTableWithoutSchemaAndPrefixes);" is 140.,568
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,passesLabelHasContainers,Long Statement,The length of the statement "Preconditions.checkState(predicateValue instanceof String`"Label HasContainer's value must be an Collection of Strings or a String. Found " + predicateValue.getClass().toString());" is 180.,568
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,passesLabelHasContainers,Long Statement,The length of the statement "SchemaTable predicateValueAsSchemaTableWithPrefix=SchemaTable.from(sqlgGraph`(String)predicateValue).withPrefix(isVertex ? VERTEX_PREFIX : EDGE_PREFIX);" is 152.,568
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,groupIdsBySchemaTable,Complex Conditional,The conditional expression biPredicate == Compare.eq && idPredicate.getValue() instanceof Collection && ((Collection)idPredicate.getValue()).size() > 1 is complex.,622
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,groupIdsBySchemaTable,Long Statement,The length of the statement "if (biPredicate == Compare.eq && idPredicate.getValue() instanceof Collection && ((Collection)idPredicate.getValue()).size() > 1) {" is 131.,622
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,groupIdsBySchemaTable,Long Statement,The length of the statement "List<Multimap<BiPredicate<?`?>`RecordId>> biPredicateRecordIdList=result.computeIfAbsent(recordId.getSchemaTable()`k -> new ArrayList<>());" is 139.,622
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,addIdHasContainer,Complex Method,Cyclomatic complexity of the method is 15,716
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,addIdHasContainer,Long Statement,The length of the statement "Preconditions.checkState(BaseStrategy.SUPPORTED_ID_BI_PREDICATE.contains(hasContainer.getBiPredicate())`"Only " + BaseStrategy.SUPPORTED_ID_BI_PREDICATE.toString() + " is supported` found "+ hasContainer.getBiPredicate().getClass().toString());" is 244.,716
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,addIdHasContainer,Long Statement,The length of the statement "this.labelHasContainers.set(this.labelHasContainers.size() - 1`new HasContainer(T.label.getAccessor()`P.within(mergedLabels)));" is 127.,716
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,addIdHasContainer,Long Statement,The length of the statement "this.labelHasContainers.set(this.labelHasContainers.size() - 1`new HasContainer(T.label.getAccessor()`P.within(mergedLabels)));" is 127.,716
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStep,addLabelHasContainer,Long Statement,The length of the statement "Preconditions.checkState(hasContainer.getKey().equals(T.label.getAccessor())`"ReplacedStep.addLabelHasContainer may only be called for HasContainers with T.label as key.");" is 172.,797
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStepTree,walkReplacedSteps,Complex Conditional,The conditional expression !replacedStep.isFake() && !(replacedStep.getStep() instanceof OrderGlobalStep) && !(replacedStep.getStep() instanceof RangeGlobalStep) is complex.,74
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStepTree,walkReplacedSteps,Long Statement,The length of the statement "if (!replacedStep.isFake() && !(replacedStep.getStep() instanceof OrderGlobalStep) && !(replacedStep.getStep() instanceof RangeGlobalStep)) {" is 141.,74
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStepTree,maybeAddLabelToLeafNodes,Complex Conditional,The conditional expression !replacedStep.isEmit() && !replacedStep.hasLabels() && !replacedStep.hasAggregateFunction() is complex.,103
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStepTree,orderByHasSelectOneStepAndForLabelNotInTree,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getScopeKeys().size() == 1`"toOrderByClause expects the selectOneStep to have one scopeKey!");" is 133.,128
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStepTree,orderByHasSelectOneStepAndForLabelNotInTree,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getLocalChildren().size() == 1`"toOrderByClause expects the selectOneStep to have one traversal!");" is 138.,128
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStepTree,orderByHasSelectOneStepAndForLabelNotInTree,Long Statement,The length of the statement "Preconditions.checkState(selectOneStep.getLocalChildren().get(0) instanceof ValueTraversal || selectOneStep.getLocalChildren().get(0) instanceof TokenTraversal`"toOrderByClause expects the selectOneStep's traversal to be a ElementValueTraversal or a TokenTraversal!");" is 268.,128
pietermartin_sqlg,org.umlg.sqlg.sql.parse,ReplacedStepTree,applyComparatorsOnDb,Long Statement,The length of the statement "for ( Pair<Traversal.Admin<?`?>`Comparator<?>> comparatorPair : replacedStep.getSqlgComparatorHolder().getComparators()) {" is 122.,186
pietermartin_sqlg,org.umlg.sqlg.sql.parse,GremlinParser,parse,Long Statement,The length of the statement "Set<SchemaTableTree> rootSchemaTableTrees=startReplacedStep.getRootSchemaTableTrees(this.sqlgGraph`replacedStepTree.getDepth());" is 128.,22
pietermartin_sqlg,org.umlg.sqlg.sql.parse,GremlinParser,parse,Long Statement,The length of the statement "rootSchemaTableTree.setStepType(schemaTable.isVertexTable() ? SchemaTableTree.STEP_TYPE.VERTEX_STEP : SchemaTableTree.STEP_TYPE.EDGE_VERTEX_STEP);" is 146.,50
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,validateColumnName,Long Statement,The length of the statement "throw SqlgExceptions.invalidColumnName("Column names may not end with " + IN_VERTEX_COLUMN_END + " or "+ OUT_VERTEX_COLUMN_END+ ". column = "+ column);" is 151.,35
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getVertexTables,Magic Number,The method contains a magic number: 2,60
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getVertexTables,Magic Number,The method contains a magic number: 3,60
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getEdgeTables,Magic Number,The method contains a magic number: 2,85
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getEdgeTables,Magic Number,The method contains a magic number: 3,85
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Complex Method,Cyclomatic complexity of the method is 28,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Long Method,The method has 136 lines of code.,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Long Statement,The length of the statement "for ( Map.Entry<SchemaTable`Pair<SortedSet<String>`Map<SqlgVertex`Map<String`Object>>>> entry : vertexCache.entrySet()) {" is 121.,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(sqlgGraph.getSqlDialect().temporaryTablePrefix() + VERTEX_PREFIX + schemaTable.getTable()));" is 147.,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Long Statement,The length of the statement "vertexLabel=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`schemaTable.getSchema()))).getVertexLabel(schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found"`schemaTable.getTable())));" is 328.,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Long Statement,The length of the statement "try (PreparedStatement preparedStatement=(vertexLabel != null && !vertexLabel.hasIDPrimaryKey() ? conn.prepareStatement(sql.toString()) : conn.prepareStatement(sql.toString()`Statement.RETURN_GENERATED_KEYS))){" is 210.,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Long Statement,The length of the statement "sqlgVertex.setInternalPrimaryKey(RecordId.from(SchemaTable.of(schemaTable.getSchema()`schemaTable.getTable())`identifiers));" is 124.,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexCache,Magic Number,The method contains a magic number: 2,109
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Complex Method,Cyclomatic complexity of the method is 38,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Method,The method has 174 lines of code.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "EdgeLabel edgeLabel=sqlgGraph.getTopology().getEdgeLabel(metaEdge.getSchemaTable().getSchema()`metaEdge.getSchemaTable().getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel not found for %s.%s"`metaEdge.getSchemaTable().getSchema()`metaEdge.getSchemaTable().getTable())));" is 301.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "VertexLabel outVertexLabel=sqlgGraph.getTopology().getVertexLabel(outSchemaTable.getSchema()`outSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`outSchemaTable.getSchema()`outSchemaTable.getTable())));" is 268.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "VertexLabel inVertexLabel=sqlgGraph.getTopology().getVertexLabel(inSchemaTable.getSchema()`inSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`inSchemaTable.getSchema()`inSchemaTable.getTable())));" is 263.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph.getTopology().getTableFor(metaEdge.getSchemaTable().withPrefix(EDGE_PREFIX));" is 128.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "Map<String`PropertyColumn> propertyColumns=sqlgGraph.getTopology().getSchema(metaEdge.getSchemaTable().getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`metaEdge.getSchemaTable().getSchema()))).getEdgeLabel(metaEdge.getSchemaTable().getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel %s not found"`metaEdge.getSchemaTable().getTable()))).getProperties();" is 427.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "sql.append(sqlgGraph.getSqlDialect().maybeWrapInQoutes(metaEdge.getOutLabel() + "." + identifier+ OUT_VERTEX_COLUMN_END));" is 122.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "i=SqlgUtil.setKeyValueAsParameter(sqlgGraph`false`i`preparedStatement`ImmutablePair.of(outVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("Property for identifier %s not found"`identifier))).getPropertyType()`parameterValueMap.getLeft().value(identifier)));" is 303.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "i=SqlgUtil.setKeyValueAsParameter(sqlgGraph`false`i`preparedStatement`ImmutablePair.of(inVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("Property for identifier %s not found"`identifier))).getPropertyType()`parameterValueMap.getMiddle().value(identifier)));" is 304.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Long Statement,The length of the statement "sqlgEdge.setInternalPrimaryKey(RecordId.from(SchemaTable.of(metaEdge.getSchemaTable().getSchema()`metaEdge.getSchemaTable().getTable())`identifiers));" is 150.,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgeCache,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexPropertyCache,Complex Method,Cyclomatic complexity of the method is 20,443
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexPropertyCache,Long Method,The method has 102 lines of code.,443
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexPropertyCache,Long Statement,The length of the statement "for ( Map.Entry<SchemaTable`Pair<SortedSet<String>`Map<SqlgVertex`Map<String`Object>>>> entry : vertexPropertyCache.entrySet()) {" is 129.,443
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexPropertyCache,Long Statement,The length of the statement "VertexLabel vertexLabel=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`schemaTable.getSchema()))).getVertexLabel(schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found"`schemaTable.getTable())));" is 340.,443
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushVertexPropertyCache,Magic Number,The method contains a magic number: 2,443
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgePropertyCache,Complex Method,Cyclomatic complexity of the method is 20,548
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgePropertyCache,Long Method,The method has 102 lines of code.,548
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgePropertyCache,Long Statement,The length of the statement "for ( Map.Entry<SchemaTable`Pair<SortedSet<String>`Map<SqlgEdge`Map<String`Object>>>> entry : edgePropertyCache.entrySet()) {" is 125.,548
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgePropertyCache,Long Statement,The length of the statement "EdgeLabel edgeLabel=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`schemaTable.getSchema()))).getEdgeLabel(schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel %s not found"`schemaTable.getTable())));" is 332.,548
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushEdgePropertyCache,Magic Number,The method contains a magic number: 2,548
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushRemovedVertices,Complex Method,Cyclomatic complexity of the method is 9,653
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushRemovedVertices,Long Statement,The length of the statement "VertexLabel vertexLabel=sqlgGraph.getTopology().getVertexLabel(schemaTable.getSchema()`schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`schemaTable.getSchema()`schemaTable.getTable())));" is 253.,653
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,flushRemovedEdges,Long Statement,The length of the statement "EdgeLabel edgeLabel=sqlgGraph.getTopology().getEdgeLabel(schemaTable.getSchema()`schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel not found for %s.%s"`schemaTable.getSchema()`schemaTable.getTable())));" is 245.,764
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,sqlInParameterLimit,Magic Number,The method contains a magic number: 1000,795
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getTableColumns,Long Parameter List,The method has 5 parameters. ,800
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getTableColumns,Magic Number,The method contains a magic number: 4,800
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getTableColumns,Magic Number,The method contains a magic number: 5,800
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getPrimaryKeys,Magic Number,The method contains a magic number: 4,818
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getPrimaryKeys,Magic Number,The method contains a magic number: 5,818
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,getIndexInfo,Long Parameter List,The method has 6 parameters. ,833
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,BaseSqlDialect,handleOther,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4d7e95d2,859
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlBulkDialect,bulkAddEdges,Long Parameter List,The method has 8 parameters. ,39
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlBulkDialect,constructCompleteCopyCommandSqlEdge,Long Parameter List,The method has 7 parameters. ,55
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlBulkDialect,writeStreamingEdge,Long Parameter List,The method has 8 parameters. ,67
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,sqlTypeToPropertyType,Long Parameter List,The method has 7 parameters. ,43
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,sqlArrayTypeNameToPropertyType,Long Parameter List,The method has 6 parameters. ,45
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,putJsonObject,Complex Method,Cyclomatic complexity of the method is 23,171
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,putJsonObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@614b7ab3,171
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,putJsonObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@41273f2d,171
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,putJsonMetaObject,Complex Method,Cyclomatic complexity of the method is 16,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,putJsonMetaObject,Long Parameter List,The method has 5 parameters. ,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,putJsonMetaObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@21dba1ad,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,putJsonMetaObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@18b26041,250
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,dropSchemaStatement,Long Statement,The length of the statement "return "DROP SCHEMA IF EXISTS " + maybeWrapInQoutes(schema) + (supportsCascade() ? " CASCADE" : "")+ (needsSemicolon() ? ";" : "");" is 131.,357
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,indexName,Long Statement,The length of the statement "String sb=schemaTable.getSchema() + "_" + prefix+ schemaTable.getTable()+ "_"+ columns.stream().reduce((a`b) -> a + "_" + b).orElseThrow()+ postfix;" is 148.,386
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,getTableColumns,Long Parameter List,The method has 5 parameters. ,678
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,getIndexInfo,Long Parameter List,The method has 6 parameters. ,698
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Complex Method,Cyclomatic complexity of the method is 23,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Method,The method has 141 lines of code.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(schemaOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().getSchema());" is 124.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().withOutPrefix().getTable());" is 144.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(edgeSchema.isPresent()`"BUG: %s not found in the topology."`lastEdge.getSchemaTable().getSchema());" is 124.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "Optional<EdgeLabel> edgeLabelOptional=edgeSchema.get().getEdgeLabel(lastEdge.getSchemaTable().withOutPrefix().getTable());" is 122.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(edgeLabelOptional.isPresent()`"BUG: %s not found in the topology."`lastEdge.getSchemaTable().getTable());" is 130.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ Topology.OUT_VERTEX_COLUMN_END));" is 134.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 151.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ Topology.IN_VERTEX_COLUMN_END));" is 133.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END));" is 150.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "String edgeTableName=(maybeWrapInQoutes(lastEdge.getSchemaTable().getSchema())) + "." + maybeWrapInQoutes(lastEdge.getSchemaTable().getTable());" is 144.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Long Statement,The length of the statement "String edgeTableName=(maybeWrapInQoutes(lastEdge.getSchemaTable().getSchema())) + "." + maybeWrapInQoutes(lastEdge.getSchemaTable().getTable());" is 144.,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Magic Number,The method contains a magic number: 2,807
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Complex Method,Cyclomatic complexity of the method is 10,972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,drop,Complex Method,Cyclomatic complexity of the method is 10,1020
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,dropWithForeignKey,Complex Method,Cyclomatic complexity of the method is 10,1067
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,dropWithForeignKey,Long Parameter List,The method has 5 parameters. ,1067
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 167.,1067
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ "."+ identifier+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 184.,1067
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,sqlTruncate,Long Statement,The length of the statement "Preconditions.checkState(schemaTable.isWithPrefix()`"SqlDialect.sqlTruncate' schemaTable must start with a prefix %s or %s"`Topology.VERTEX_PREFIX`Topology.EDGE_PREFIX);" is 169.,1152
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,sqlTruncate,Long Statement,The length of the statement "return Collections.singletonList(Triple.of(SqlgSqlExecutor.DROP_QUERY.TRUNCATE`"TRUNCATE TABLE " + maybeWrapInQoutes(schemaTable.getSchema()) + "."+ maybeWrapInQoutes(schemaTable.getTable())`false));" is 199.,1152
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,addDbVersionToGraph,Long Statement,The length of the statement "return "ALTER TABLE \"sqlg_schema\".\"V_graph\" ADD COLUMN \"dbVersion\" TEXT DEFAULT '" + metadata.getDatabaseProductVersion() + "';";" is 135.,1183
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,toRDBSStringLiteral,Complex Method,Cyclomatic complexity of the method is 43,1214
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,toSelectString,Complex Conditional,The conditional expression !partOfDuplicateQuery && column.getAggregateFunction() != null && column.getAggregateFunction().equals(GraphTraversal.Symbols.count) is complex.,1326
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,SqlDialect,toSelectString,Long Statement,The length of the statement "if (!partOfDuplicateQuery && column.getAggregateFunction() != null && column.getAggregateFunction().equals(GraphTraversal.Symbols.count)) {" is 139.,1326
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,valueToValuesString,Complex Method,Cyclomatic complexity of the method is 29,44
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,valueToValuesString,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@22961f06,44
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,existIndexQuery,Long Statement,The length of the statement "return "SELECT * FROM INFORMATION_SCHEMA.SYSTEM_INDEXINFO WHERE TABLE_SCHEM = '" + schemaTable.getSchema() + "' AND TABLE_NAME = '"+ prefix+ schemaTable.getTable()+ "' AND INDEX_NAME = '"+ indexName+ "'";" is 204.,197
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,validateProperty,Complex Method,Cyclomatic complexity of the method is 39,218
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,validateProperty,Long Method,The method has 117 lines of code.,218
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,propertyTypeToSqlDefinition,Complex Method,Cyclomatic complexity of the method is 42,352
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,propertyTypeToSqlDefinition,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@5a30822e,352
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,propertyTypeToJavaSqlType,Complex Method,Cyclomatic complexity of the method is 37,442
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,propertyTypeToJavaSqlType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@269a860c,442
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlTypeToPropertyType,Complex Method,Cyclomatic complexity of the method is 13,522
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlTypeToPropertyType,Long Parameter List,The method has 7 parameters. ,522
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlTypeToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2da14af6,522
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlArrayTypeNameToPropertyType,Complex Method,Cyclomatic complexity of the method is 11,554
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlArrayTypeNameToPropertyType,Long Parameter List,The method has 6 parameters. ,554
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlArrayTypeNameToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3fdd0e6b,554
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,getArrayDriverType,Complex Method,Cyclomatic complexity of the method is 15,609
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,getArrayDriverType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@61a2da4c,609
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_graph\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"updatedOn\" TIMESTAMP` "+ "\"version\" LONGVARCHAR` "+ "\"dbVersion\" LONGVARCHAR);");" is 255.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_schema\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" LONGVARCHAR);");" is 193.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_vertex\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" LONGVARCHAR` "+ "\"schemaVertex\" LONGVARCHAR`"+ "\"partitionType\" LONGVARCHAR` "+ "\"partitionExpression\" LONGVARCHAR` "+ "\"shardCount\" INTEGER);");" is 330.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_edge\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" LONGVARCHAR` "+ "\"partitionType\" LONGVARCHAR` "+ "\"partitionExpression\" LONGVARCHAR` "+ "\"shardCount\" INTEGER);");" is 295.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_partition\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" LONGVARCHAR` "+ "\"from\" LONGVARCHAR` "+ "\"to\" LONGVARCHAR` "+ "\"in\" LONGVARCHAR` "+ "\"modulus\" INTEGER` "+ "\"remainder\" INTEGER` "+ "\"partitionType\" LONGVARCHAR` "+ "\"partitionExpression\" LONGVARCHAR);");" is 398.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_property\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" LONGVARCHAR` "+ "\"type\" LONGVARCHAR);");" is 221.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_index\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" LONGVARCHAR` "+ "\"index_type\" LONGVARCHAR);");" is 224.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_schema_vertex\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.schema__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.schema__O\") REFERENCES \"sqlg_schema\".\"V_schema\" (\"ID\") ON DELETE CASCADE);");" is 444.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_in_edges\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 433.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_out_edges\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 434.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_property\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 452.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_property\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);");" is 440.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_identifier\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 488.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_identifier\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);");" is 480.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 456.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);");" is 448.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_partition_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") ON DELETE CASCADE);");" is 468.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_distribution\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 456.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_colocate\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 446.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_distribution\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);");" is 448.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_colocate\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);");" is 438.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_index\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.index__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);");" is 440.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_index\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.index__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);");" is 432.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_index_property\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.index__O\" BIGINT` "+ "\"sequence\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.index__O\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\") ON DELETE CASCADE);");" is 474.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_log\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"timestamp\" TIMESTAMP` "+ "\"pid\" INTEGER` "+ "\"log\" LONGVARCHAR);");" is 210.,752
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,createArrayOf,Complex Method,Cyclomatic complexity of the method is 19,943
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,createArrayOf,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@137a9a92,943
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,convertArray,Complex Method,Cyclomatic complexity of the method is 19,1006
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,convertArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@34ab94f1,1006
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,supportsType,Complex Method,Cyclomatic complexity of the method is 29,1079
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,supportsType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@63d26a59,1079
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,addPartitionTables,Long Statement,The length of the statement "return Arrays.asList("ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"partitionType\" LONGVARCHAR DEFAULT 'NONE';"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"partitionExpression\" LONGVARCHAR;"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"shardCount\" INTEGER;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"partitionType\" LONGVARCHAR DEFAULT 'NONE';"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"partitionExpression\" LONGVARCHAR;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"shardCount\" INTEGER;"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_partition\" (" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" LONGVARCHAR` "+ "\"from\" LONGVARCHAR` "+ "\"to\" LONGVARCHAR` "+ "\"in\" LONGVARCHAR` "+ "\"partitionType\" LONGVARCHAR` "+ "\"partitionExpression\" LONGVARCHAR);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_partition_partition\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\"));"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_identifier\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_identifier\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_distribution\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_colocate\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_distribution\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_colocate\"(" + "\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") ON DELETE CASCADE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") ON DELETE CASCADE);");" is 4800.,1165
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,addHashPartitionColumns,Long Statement,The length of the statement "return List.of("ALTER TABLE \"sqlg_schema\".\"V_partition\" ADD COLUMN \"modulus\" INTEGER;"`"ALTER TABLE \"sqlg_schema\".\"V_partition\" ADD COLUMN \"remainder\" INTEGER;");" is 174.,1244
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,addDbVersionToGraph,Long Statement,The length of the statement "return "ALTER TABLE \"sqlg_schema\".\"V_graph\" ADD COLUMN \"dbVersion\" LONGVARCHAR DEFAULT '" + metadata.getDatabaseProductVersion() + "';";" is 142.,1252
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,HsqldbDialect,isTimestampz,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@14d5bcd5,1298
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getInternalSchemas,Long Statement,The length of the statement "return ImmutableSet.copyOf(Arrays.asList("pg_catalog"`"information_schema"`"tiger"`"tiger_data"`"topology"`"citus"`"citus_internal"`"columnar"));" is 145.,101
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,assertTableName,Long Statement,The length of the statement "throw SqlgExceptions.invalidTableName(String.format("Postgres table names must be 63 characters or less! Given table name is %s"`tableName));" is 141.,141
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,assertTableName,Magic Number,The method contains a magic number: 63,141
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getArrayDriverType,Complex Method,Cyclomatic complexity of the method is 21,147
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getArrayDriverType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@53bc0ad7,147
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,existIndexQuery,Long Statement,The length of the statement "return "SELECT 1 FROM pg_class c JOIN pg_namespace n ON n.oid = c.relnamespace" + " WHERE c.relname = '" + indexName + "' AND n.nspname = '"+ schemaTable.getSchema()+ "'";" is 171.,188
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushVertexCache,Complex Method,Cyclomatic complexity of the method is 12,198
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushVertexCache,Long Statement,The length of the statement "vertexLabel=sqlgGraph.getTopology().getVertexLabel(schemaTable.getSchema()`schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found."`schemaTable)));" is 200.,198
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushVertexCache,Long Statement,The length of the statement "String sql="SELECT NEXTVAL('" + maybeWrapInQoutes(schemaTable.getSchema()) + "."+ maybeWrapInQoutes(VERTEX_PREFIX + schemaTable.getTable() + "_ID_seq")+ "') from generate_series(1`"+ vertices.getRight().values().size()+ ") ;";" is 226.,198
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushVertexCache,Long Statement,The length of the statement "String sql=internalConstructCompleteCopyCommandSqlVertex(sqlgGraph`schemaTable.isTemporary()`schemaTable.getSchema()`schemaTable.getTable()`vertexLabel != null && vertexLabel.hasIDPrimaryKey()`vertices.getLeft());" is 213.,198
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushVertexCache,Long Statement,The length of the statement "sqlgVertex.setInternalPrimaryKey(RecordId.from(SchemaTable.of(schemaTable.getSchema()`schemaTable.getTable())`identifiers));" is 124.,198
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Complex Method,Cyclomatic complexity of the method is 21,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Method,The method has 119 lines of code.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "VertexLabel outVertexLabel=sqlgGraph.getTopology().getVertexLabel(outSchemaTable.getSchema()`outSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`outSchemaTable.getSchema()`outSchemaTable.getTable())));" is 268.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "VertexLabel inVertexLabel=sqlgGraph.getTopology().getVertexLabel(inSchemaTable.getSchema()`inSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`inSchemaTable.getSchema()`inSchemaTable.getTable())));" is 263.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "EdgeLabel edgeLabel=sqlgGraph.getTopology().getEdgeLabel(metaEdge.getSchemaTable().getSchema()`metaEdge.getSchemaTable().getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel not found for %s.%s"`metaEdge.getSchemaTable().getSchema()`metaEdge.getSchemaTable().getTable())));" is 301.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph.getTopology().getTableFor(metaEdge.getSchemaTable().withPrefix(EDGE_PREFIX));" is 128.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "String seqsql="SELECT NEXTVAL('" + maybeWrapInQoutes(metaEdge.getSchemaTable().getSchema()) + "."+ maybeWrapInQoutes(EDGE_PREFIX + metaEdge.getSchemaTable().getTable() + "_ID_seq")+ "') from generate_series(1`"+ triples.getRight().values().size()+ ") ;";" is 254.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(triple.getLeft().getSchema() + "." + triple.getLeft().getTable()+ Topology.OUT_VERTEX_COLUMN_END));" is 128.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(triple.getLeft().getSchema() + "." + triple.getLeft().getTable()+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 145.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(triple.getMiddle().getSchema() + "." + triple.getMiddle().getTable()+ Topology.IN_VERTEX_COLUMN_END));" is 131.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(triple.getMiddle().getSchema() + "." + triple.getMiddle().getTable()+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END));" is 148.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "for ( Map.Entry<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>> sqlgEdgeTripleEntry : triples.getRight().entrySet()) {" is 129.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "writeStreamingEdge(writer`sqlgEdge`outVertexLabel`inVertexLabel`outInVertexKeyValueMap.getLeft()`outInVertexKeyValueMap.getMiddle()`values`edgeLabel);" is 150.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushEdgeCache,Long Statement,The length of the statement "sqlgEdge.setInternalPrimaryKey(RecordId.from(SchemaTable.of(metaEdge.getSchemaTable().getSchema()`metaEdge.getSchemaTable().getTable())`identifiers));" is 150.,282
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,appendSqlValue,Complex Method,Cyclomatic complexity of the method is 126,428
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,appendSqlValue,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3bd8104d,428
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlCastArray,Complex Method,Cyclomatic complexity of the method is 16,971
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlCastArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4b2835cd,971
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushElementPropertyCache,Complex Method,Cyclomatic complexity of the method is 27,1025
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushElementPropertyCache,Long Method,The method has 135 lines of code.,1025
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushElementPropertyCache,Long Statement,The length of the statement "Map<String`PropertyType> keyPropertyTypes=sqlgGraph.getTopology().getTableFor(schemaTable.withPrefix(forVertices ? VERTEX_PREFIX : EDGE_PREFIX));" is 145.,1025
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushElementPropertyCache,Long Statement,The length of the statement "abstractLabel=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow().getVertexLabel(schemaTable.getTable()).orElseThrow();" is 140.,1025
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,flushElementPropertyCache,Long Statement,The length of the statement "abstractLabel=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow().getEdgeLabel(schemaTable.getTable()).orElseThrow();" is 138.,1025
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,internalConstructCompleteCopyCommandSqlVertex,Long Statement,The length of the statement "return internalConstructCompleteCopyCommandSqlVertex(sqlgGraph`isTemp`vertex.getSchema()`vertex.getTable()`false`keyValueMap.keySet());" is 135.,1179
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,internalConstructCompleteCopyCommandSqlVertex,Complex Method,Cyclomatic complexity of the method is 10,1183
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,internalConstructCompleteCopyCommandSqlVertex,Long Parameter List,The method has 6 parameters. ,1183
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,constructCompleteCopyCommandSqlEdge,Complex Method,Cyclomatic complexity of the method is 10,1246
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,constructCompleteCopyCommandSqlEdge,Long Parameter List,The method has 7 parameters. ,1246
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,constructCompleteCopyCommandSqlEdge,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph.getTopology().getTableFor(SchemaTable.of(sqlgEdge.getSchema()`EDGE_PREFIX + sqlgEdge.getTable()));" is 149.,1246
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,constructCompleteCopyCommandSqlEdge,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(outVertex.getSchema() + "." + outVertex.getTable()+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 131.,1246
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,constructCompleteCopyCommandSqlEdge,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(inVertex.getSchema() + "." + inVertex.getTable()+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END));" is 128.,1246
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,appendKeyForStream,Magic Number,The method contains a magic number: 2,1301
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,appendKeyForBatchUpdate,Magic Number,The method contains a magic number: 2,1316
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,writeStreamingEdge,Complex Method,Cyclomatic complexity of the method is 9,1436
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,writeStreamingEdge,Long Parameter List,The method has 8 parameters. ,1436
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,writeStreamingEdge,Long Statement,The length of the statement "PropertyType propertyType=outVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s must be present on %s"`identifier`outVertexLabel.getFullName()))).getPropertyType();" is 222.,1436
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,writeStreamingEdge,Long Statement,The length of the statement "PropertyType propertyType=inVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s must be present on %s"`identifier`inVertexLabel.getFullName()))).getPropertyType();" is 220.,1436
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,valueToStringForBulkLoad,Complex Method,Cyclomatic complexity of the method is 36,1511
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,valueToStringForBulkLoad,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@72221b69,1511
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,mapVertexToInputStream,Complex Method,Cyclomatic complexity of the method is 8,1682
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,mapVertexToInputStream,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@417b4d48,1682
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,escapeSpecialCharactersForArray,Complex Conditional,The conditional expression c == '\n' || c == '\r' || c == 0 || c == COPY_COMMAND_DELIMITER.charAt(0) is complex.,1759
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,escapeSpecialCharactersForArray,Complex Conditional,The conditional expression c == ESCAPE || c == QUOTE || c == '{' || c == '}' || c == ' ' is complex.,1759
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,escapeSpecialCharacters,Complex Conditional,The conditional expression c == '\n' || c == '\r' || c == 0 || c == COPY_COMMAND_DELIMITER.charAt(0) is complex.,1779
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,propertyTypeToSqlDefinition,Complex Method,Cyclomatic complexity of the method is 44,1806
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,propertyTypeToSqlDefinition,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3ada7752,1806
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTypeToPropertyType,Complex Method,Cyclomatic complexity of the method is 17,1900
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTypeToPropertyType,Long Parameter List,The method has 7 parameters. ,1900
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTypeToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3056ab99,1900
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTypeToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@52cd07a9,1900
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlArrayTypeNameToPropertyType,Complex Method,Cyclomatic complexity of the method is 13,1949
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlArrayTypeNameToPropertyType,Long Parameter List,The method has 6 parameters. ,1949
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlArrayTypeNameToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@49c711b5,1949
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,propertyTypeToJavaSqlType,Complex Method,Cyclomatic complexity of the method is 37,1987
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,propertyTypeToJavaSqlType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@204e9f38,1987
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,validateProperty,Complex Method,Cyclomatic complexity of the method is 46,2068
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,validateProperty,Long Method,The method has 138 lines of code.,2068
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,validateProperty,Magic Number,The method contains a magic number: 63,2068
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,validateSchemaName,Long Statement,The length of the statement "throw SqlgExceptions.invalidSchemaName("Postgresql schema names can only be 63 characters. " + schema + " exceeds that");" is 121.,2234
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,validateColumnName,Long Statement,The length of the statement "throw SqlgExceptions.invalidColumnName("Postgresql column names can only be 63 characters. " + column + " exceeds that");" is 121.,2246
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getMaximumSchemaNameLength,Magic Number,The method contains a magic number: 63,2254
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getMaximumTableNameLength,Magic Number,The method contains a magic number: 63,2259
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getMaximumColumnNameLength,Magic Number,The method contains a magic number: 63,2264
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getMaximumIndexNameLength,Magic Number,The method contains a magic number: 63,2269
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,setLineString,Long Statement,The length of the statement "Preconditions.checkArgument(lineString instanceof LineString`"lineString must be an instance of " + LineString.class.getName());" is 128.,2306
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,setGeographyPoint,Long Statement,The length of the statement "Preconditions.checkArgument(point instanceof GeographyPoint`"point must be an instance of " + GeographyPoint.class.getName());" is 126.,2326
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,handleOther,Complex Method,Cyclomatic complexity of the method is 9,2336
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,handleOther,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@25c1e2cb,2336
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,copyInBulkTempEdges,Long Parameter List,The method has 5 parameters. ,2467
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,copyInBulkTempEdges,Magic Number,The method contains a magic number: 2,2467
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Complex Method,Cyclomatic complexity of the method is 26,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Method,The method has 181 lines of code.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Parameter List,The method has 8 parameters. ,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "throw SqlgExceptions.invalidMode("Transaction must be in " + BatchManager.BatchModeType.STREAMING + " or "+ BatchManager.BatchModeType.STREAMING_WITH_LOCK+ " mode for bulkAddEdges");" is 182.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "this.copyInBulkTempEdges(sqlgGraph`SchemaTable.of(out.getSchema()`tmpTableIdentified)`uids`outPropertyType`inPropertyType);" is 123.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "Preconditions.checkState(outVertexLabelOptional.isPresent()`"Out VertexLabel must be present. Not found for %s"`out.toString());" is 128.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "Preconditions.checkState(inVertexLabelOptional.isPresent()`"In VertexLabel must be present. Not found for %s"`in.toString());" is 125.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sqlgGraph.getTopology().ensureEdgeLabelExist(edgeLabel`outVertexLabelOptional.get()`inVertexLabelOptional.get()`edgeColumns);" is 125.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "PropertyColumn propertyColumn=outVertexLabelOptional.get().getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 197.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(outVertexLabelOptional.get().getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.OUT_VERTEX_COLUMN_END));" is 165.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(outVertexLabelOptional.get().getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 125.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "PropertyColumn propertyColumn=inVertexLabelOptional.get().getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 196.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(inVertexLabelOptional.get().getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.IN_VERTEX_COLUMN_END));" is 163.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(inVertexLabelOptional.get().getFullName() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END));" is 123.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "PropertyColumn propertyColumn=outVertexLabelOptional.get().getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 197.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(outVertexLabelOptional.get().getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.OUT_VERTEX_COLUMN_END));" is 165.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(outVertexLabelOptional.get().getFullName() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 125.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "PropertyColumn propertyColumn=inVertexLabelOptional.get().getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("identifier %s column must be a property"`identifier)));" is 196.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(inVertexLabelOptional.get().getFullName() + "." + identifier+ propertyType.getPostFixes()[count - 2]+ Topology.IN_VERTEX_COLUMN_END));" is 163.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(inVertexLabelOptional.get().getFullName() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END));" is 123.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Long Statement,The length of the statement "sql.append(this.maybeWrapInQoutes(tmpTableIdentified)).append(" ab ON ab.in = _in.").append(this.maybeWrapInQoutes(idFields.getRight())).append(" JOIN\n\t");" is 157.,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Magic Number,The method contains a magic number: 6,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Magic Number,The method contains a magic number: 2,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Magic Number,The method contains a magic number: 2,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Magic Number,The method contains a magic number: 2,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Magic Number,The method contains a magic number: 2,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Magic Number,The method contains a magic number: 2,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,bulkAddEdges,Magic Number,The method contains a magic number: 2,2507
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,lockTable,Long Statement,The length of the statement "Preconditions.checkArgument(prefix.equals(VERTEX_PREFIX) || prefix.equals(EDGE_PREFIX)`"prefix must be " + VERTEX_PREFIX + " or "+ EDGE_PREFIX);" is 144.,2712
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,nextSequenceVal,Long Statement,The length of the statement "Preconditions.checkArgument(prefix.equals(VERTEX_PREFIX) || prefix.equals(EDGE_PREFIX)`"prefix must be " + VERTEX_PREFIX + " or "+ EDGE_PREFIX);" is 144.,2758
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,nextSequenceVal,Long Statement,The length of the statement "sql.append("SELECT NEXTVAL('\"").append(schemaTable.getSchema()).append("\".\"").append(prefix).append(schemaTable.getTable()).append("_ID_seq\"');");" is 150.,2758
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,currSequenceVal,Long Statement,The length of the statement "Preconditions.checkArgument(prefix.equals(VERTEX_PREFIX) || prefix.equals(EDGE_PREFIX)`"prefix must be " + VERTEX_PREFIX + " or "+ EDGE_PREFIX);" is 144.,2780
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,currSequenceVal,Long Statement,The length of the statement "sql.append("SELECT CURRVAL('\"").append(schemaTable.getSchema()).append("\".\"").append(prefix).append(schemaTable.getTable()).append("_ID_seq\"');");" is 150.,2780
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sequenceName,Long Statement,The length of the statement "Preconditions.checkArgument(prefix.equals(VERTEX_PREFIX) || prefix.equals(EDGE_PREFIX)`"prefix must be " + VERTEX_PREFIX + " or "+ EDGE_PREFIX);" is 144.,2802
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "graph\" ("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"createdOn\" TIMESTAMP` "+ "\"updatedOn\" TIMESTAMP` "+ "\"version\" TEXT` "+ "\"dbVersion\" TEXT);");" is 234.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "schema\" ("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"createdOn\" TIMESTAMP` "+ "\"name\" TEXT);");" is 179.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "vertex\" ("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"createdOn\" TIMESTAMP` "+ "\"name\" TEXT` \"schemaVertex\" TEXT` "+ "\"partitionType\" TEXT` "+ "\"partitionExpression\" TEXT`"+ "\"shardCount\" INTEGER);");" is 291.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "edge\" ("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"createdOn\" TIMESTAMP` "+ "\"name\" TEXT` "+ "\"partitionType\" TEXT` "+ "\"partitionExpression\" TEXT` "+ "\"shardCount\" INTEGER);");" is 267.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "partition\" ("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"createdOn\" TIMESTAMP` "+ "\"name\" TEXT` "+ "\"from\" TEXT` "+ "\"to\" TEXT` "+ "\"in\" TEXT` "+ "\"modulus\" BIGINT` "+ "\"remainder\" BIGINT` "+ "\"partitionType\" TEXT` "+ "\"partitionExpression\" TEXT);");" is 347.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "property\" ("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"createdOn\" TIMESTAMP` "+ "\"name\" TEXT` "+ "\"type\" TEXT);");" is 200.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "index\" ("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"createdOn\" TIMESTAMP` "+ "\"name\" TEXT` "+ "\"index_type\" TEXT);");" is 203.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "schema_vertex\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.schema__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.schema__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "schema\" (\"ID\") DEFERRABLE);");" is 473.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_schema_vertex_vertex__I_idx\" ON \"sqlg_schema\".\"E_schema_vertex\" (\"sqlg_schema.vertex__I\");");" is 170.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_schema_vertex_schema__O_idx\" ON \"sqlg_schema\".\"E_schema_vertex\" (\"sqlg_schema.schema__O\");");" is 170.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "in_edges\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 462.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_in_edges_edge__I_ix\" ON \"sqlg_schema\".\"E_in_edges\" (\"sqlg_schema.edge__I\");");" is 155.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_in_edges_vertex__O_idx\" ON \"sqlg_schema\".\"E_in_edges\" (\"sqlg_schema.vertex__O\");");" is 160.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "out_edges\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 463.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_out_edges_edge__I_idx\" ON \"sqlg_schema\".\"E_out_edges\" (\"sqlg_schema.edge__I\");");" is 158.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_out_edges_vertex__O_idx\" ON \"sqlg_schema\".\"E_out_edges\" (\"sqlg_schema.vertex__O\");");" is 162.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_property\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 481.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_property_property__I_idx\" ON \"sqlg_schema\".\"E_vertex_property\" (\"sqlg_schema.property__I\");");" is 178.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_property_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_property\" (\"sqlg_schema.vertex__O\");");" is 174.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_property\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);");" is 473.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_property_property__I_idx\" ON \"sqlg_schema\".\"E_edge_property\" (\"sqlg_schema.property__I\");");" is 174.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_property_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_property\" (\"sqlg_schema.edge__O\");");" is 166.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_identifier\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 517.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_identifier_property__I_idx\" ON \"sqlg_schema\".\"E_vertex_identifier\" (\"sqlg_schema.property__I\");");" is 182.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_identifier_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_identifier\" (\"sqlg_schema.vertex__O\");");" is 178.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_identifier\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);");" is 509.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_identifier_property__I_idx\" ON \"sqlg_schema\".\"E_edge_identifier\" (\"sqlg_schema.property__I\");");" is 178.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_identifier_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_identifier\" (\"sqlg_schema.edge__O\");");" is 170.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_partition\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "partition\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 485.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_vertex_partition\" (\"sqlg_schema.partition__I\");");" is 182.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_partition_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_partition\" (\"sqlg_schema.vertex__O\");");" is 176.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_partition\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "partition\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);");" is 477.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_edge_partition\" (\"sqlg_schema.partition__I\");");" is 178.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_partition_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_partition\" (\"sqlg_schema.edge__O\");");" is 168.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "partition_partition\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "partition\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "partition\" (\"ID\") DEFERRABLE);");" is 497.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_partition_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_partition_partition\" (\"sqlg_schema.partition__I\");");" is 188.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_partition_partition_partition__O_idx\" ON \"sqlg_schema\".\"E_partition_partition\" (\"sqlg_schema.partition__O\");");" is 188.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_distribution\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 485.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"E_vertex_distribution_property__I_idx\" ON \"sqlg_schema\".\"E_vertex_distribution\" (\"sqlg_schema.property__I\");");" is 159.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"E_vertex_distribution_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_distribution\" (\"sqlg_schema.vertex__O\");");" is 155.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_colocate\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 475.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_colocate_vertex__I_idx\" ON \"sqlg_schema\".\"E_vertex_colocate\" (\"sqlg_schema.vertex__I\");");" is 174.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_colocate_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_colocate\" (\"sqlg_schema.vertex__O\");");" is 174.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_distribution\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);");" is 477.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_distribution_property__I_idx\" ON \"sqlg_schema\".\"E_edge_distribution\" (\"sqlg_schema.property__I\");");" is 182.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_distribution_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_distribution\" (\"sqlg_schema.edge__O\");");" is 174.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_colocate\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);");" is 467.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_colocate_vertex__I_idx\" ON \"sqlg_schema\".\"E_edge_colocate\" (\"sqlg_schema.vertex__I\");");" is 170.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_colocate_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_colocate\" (\"sqlg_schema.edge__O\");");" is 166.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_index\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.index__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "index\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);");" is 469.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_index_index__I_idx\" ON \"sqlg_schema\".\"E_vertex_index\" (\"sqlg_schema.index__I\");");" is 166.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_index_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_index\" (\"sqlg_schema.vertex__O\");");" is 168.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_index\"(\"ID\" SERIAL PRIMARY KEY` \"sqlg_schema.index__I\" BIGINT` \"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "index\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);");" is 449.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_index_index__I_idx\" ON \"sqlg_schema\".\"E_edge_index\" (\"sqlg_schema.index__I\");");" is 162.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_index_vertex__O_idx\" ON \"sqlg_schema\".\"E_edge_index\" (\"sqlg_schema.edge__O\");");" is 162.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "index_property\"(\"ID\" SERIAL PRIMARY KEY` \"sqlg_schema.property__I\" BIGINT` \"sqlg_schema.index__O\" BIGINT` \"sequence\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.index__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "index\" (\"ID\") DEFERRABLE);");" is 487.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_index_property_property__I_idx\" ON \"sqlg_schema\".\"E_index_property\" (\"sqlg_schema.property__I\");");" is 176.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_index_property_index__O_idx\" ON \"sqlg_schema\".\"E_index_property\" (\"sqlg_schema.index__O\");");" is 170.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.VERTEX_PREFIX + "log\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"timestamp\" TIMESTAMP` "+ "\"pid\" INTEGER` "+ "\"log\" JSONB);");" is 196.,2856
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlgCreateTopologyGraph,Long Statement,The length of the statement "return "CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_graph\" (\"ID\" SERIAL PRIMARY KEY` \"createdOn\" TIMESTAMP` \"updatedOn\" TIMESTAMP` \"version\" TEXT` \"dbVersion\" TEXT);";" is 181.,3063
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,addHashPartitionColumns,Long Statement,The length of the statement "return List.of("ALTER TABLE \"sqlg_schema\".\"V_partition\" ADD COLUMN \"modulus\" INTEGER;"`"ALTER TABLE \"sqlg_schema\".\"V_partition\" ADD COLUMN \"remainder\" INTEGER;");" is 174.,3073
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,addPartitionTables,Long Statement,The length of the statement "return List.of("ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"partitionType\" TEXT DEFAULT 'NONE';"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"partitionExpression\" TEXT;"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD COLUMN \"shardCount\" INTEGER;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"partitionType\" TEXT DEFAULT 'NONE';"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"partitionExpression\" TEXT;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD COLUMN \"shardCount\" INTEGER;"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"V_partition\" (" + "\"ID\" SERIAL PRIMARY KEY` " + "\"createdOn\" TIMESTAMP` "+ "\"name\" TEXT` "+ "\"from\" TEXT` "+ "\"to\" TEXT` "+ "\"in\" TEXT` "+ "\"partitionType\" TEXT` "+ "\"partitionExpression\" TEXT);"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_vertex_partition\"(\"ID\" SERIAL PRIMARY KEY` \"sqlg_schema.partition__I\" BIGINT` \"sqlg_schema.vertex__O\" BIGINT` FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") DEFERRABLE` FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"E_vertex_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_vertex_partition\" (\"sqlg_schema.partition__I\");"`"CREATE INDEX IF NOT EXISTS \"E_vertex_partition_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_partition\" (\"sqlg_schema.vertex__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_edge_partition\"(\"ID\" SERIAL PRIMARY KEY` \"sqlg_schema.partition__I\" BIGINT` \"sqlg_schema.edge__O\" BIGINT` FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") DEFERRABLE` FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"E_edge_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_edge_partition\" (\"sqlg_schema.partition__I\");"`"CREATE INDEX IF NOT EXISTS \"E_edge_partition_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_partition\" (\"sqlg_schema.edge__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"E_partition_partition\"(" + "\"ID\" SERIAL PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"E_partition_partition_partition__I_idx\" ON \"sqlg_schema\".\"E_partition_partition\" (\"sqlg_schema.partition__I\");"`"CREATE INDEX IF NOT EXISTS \"E_partition_partition_partition__O_idx\" ON \"sqlg_schema\".\"E_partition_partition\" (\"sqlg_schema.partition__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_identifier\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_identifier_property__I_idx\" ON \"sqlg_schema\".\"E_vertex_identifier\" (\"sqlg_schema.property__I\");"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_identifier_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_identifier\" (\"sqlg_schema.vertex__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_identifier\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_identifier_property__I_idx\" ON \"sqlg_schema\".\"E_edge_identifier\" (\"sqlg_schema.property__I\");"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_identifier_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_identifier\" (\"sqlg_schema.edge__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_distribution\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"E_vertex_distribution_property__I_idx\" ON \"sqlg_schema\".\"E_vertex_distribution\" (\"sqlg_schema.property__I\");"`"CREATE INDEX IF NOT EXISTS \"E_vertex_distribution_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_distribution\" (\"sqlg_schema.vertex__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_colocate\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_colocate_vertex__I_idx\" ON \"sqlg_schema\".\"E_vertex_colocate\" (\"sqlg_schema.vertex__I\");"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_vertex_colocate_vertex__O_idx\" ON \"sqlg_schema\".\"E_vertex_colocate\" (\"sqlg_schema.vertex__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_distribution\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_distribution_property__I_idx\" ON \"sqlg_schema\".\"E_edge_distribution\" (\"sqlg_schema.property__I\");"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_distribution_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_distribution\" (\"sqlg_schema.edge__O\");"`"CREATE TABLE IF NOT EXISTS \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_colocate\"("+ "\"ID\" SERIAL PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\") DEFERRABLE` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\") DEFERRABLE);"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_colocate_vertex__I_idx\" ON \"sqlg_schema\".\"E_edge_colocate\" (\"sqlg_schema.vertex__I\");"`"CREATE INDEX IF NOT EXISTS \"" + Topology.EDGE_PREFIX + "_edge_colocate_edge__O_idx\" ON \"sqlg_schema\".\"E_edge_colocate\" (\"sqlg_schema.edge__O\");");" is 7552.,3081
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,createArrayOf,Complex Method,Cyclomatic complexity of the method is 21,3174
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,createArrayOf,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1f0b5995,3174
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,convertArray,Complex Method,Cyclomatic complexity of the method is 19,3213
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,convertArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6e30a978,3213
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getPostGisGeometryType,Long Statement,The length of the statement "try (PreparedStatement statement=connection.prepareStatement("SELECT type FROM geometry_columns WHERE f_table_schema = ? and f_table_name = ? and f_geometry_column = ?")){" is 171.,3315
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getPostGisGeometryType,Magic Number,The method contains a magic number: 2,3315
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getPostGisGeometryType,Magic Number,The method contains a magic number: 3,3315
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getPostGisGeographyType,Magic Number,The method contains a magic number: 2,3333
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getPostGisGeographyType,Magic Number,The method contains a magic number: 3,3333
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getPostGisGeographyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3a534cd9,3333
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getBlocked,Long Identifier,The length of the identifier current_statement_in_blocking_process is 37.,3368
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getBlocked,Long Statement,The length of the statement "String sql="SELECT blocked_locks.pid AS blocked_pid`\n" + " blocked_activity.usename AS blocked_user`\n" + " blocking_locks.pid AS blocking_pid`\n"+ " blocking_activity.usename AS blocking_user`\n"+ " blocked_activity.query AS blocked_statement`\n"+ " blocking_activity.query AS current_statement_in_blocking_process\n"+ " FROM pg_catalog.pg_locks blocked_locks\n"+ " JOIN pg_catalog.pg_stat_activity blocked_activity ON blocked_activity.pid = blocked_locks.pid\n"+ " JOIN pg_catalog.pg_locks blocking_locks \n"+ " ON blocking_locks.locktype = blocked_locks.locktype\n"+ " AND blocking_locks.DATABASE IS NOT DISTINCT FROM blocked_locks.DATABASE\n"+ " AND blocking_locks.relation IS NOT DISTINCT FROM blocked_locks.relation\n"+ " AND blocking_locks.page IS NOT DISTINCT FROM blocked_locks.page\n"+ " AND blocking_locks.tuple IS NOT DISTINCT FROM blocked_locks.tuple\n"+ " AND blocking_locks.virtualxid IS NOT DISTINCT FROM blocked_locks.virtualxid\n"+ " AND blocking_locks.transactionid IS NOT DISTINCT FROM blocked_locks.transactionid\n"+ " AND blocking_locks.classid IS NOT DISTINCT FROM blocked_locks.classid\n"+ " AND blocking_locks.objid IS NOT DISTINCT FROM blocked_locks.objid\n"+ " AND blocking_locks.objsubid IS NOT DISTINCT FROM blocked_locks.objsubid\n"+ " AND blocking_locks.pid != blocked_locks.pid\n"+ " \n"+ " JOIN pg_catalog.pg_stat_activity blocking_activity ON blocking_activity.pid = blocking_locks.pid\n"+ " WHERE NOT blocked_locks.GRANTED\n"+ " AND blocking_locks.pid = ?";" is 1493.,3368
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,registerListener,Long Statement,The length of the statement "this.executorService=Executors.newSingleThreadExecutor(r -> new Thread(r`"Sqlg notification merge " + sqlgGraph.toString()));" is 125.,3455
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,registerListener,Long Statement,The length of the statement "this.scheduledExecutorService=Executors.newSingleThreadScheduledExecutor(r -> new Thread(r`"Sqlg notification listener " + sqlgGraph.toString()));" is 146.,3455
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,registerListener,Magic Number,The method contains a magic number: 500,3455
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,registerListener,Magic Number,The method contains a magic number: 5,3455
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,notifyChange,Long Statement,The length of the statement "statement.execute("NOTIFY " + SQLG_NOTIFICATION_CHANNEL + "` '"+ timestamp.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)+ "'");" is 127.,3483
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getFullTextQueryText,Long Statement,The length of the statement "return "to_tsvector('" + fullText.getConfiguration() + "'` "+ leftHand+ ") @@ "+ toQuery+ "('"+ fullText.getConfiguration()+ "'`?)";" is 132.,3619
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,extractIndices,Complex Conditional,The conditional expression lastIndexName != null && !lastIndexName.endsWith("_pkey") && !lastIndexName.endsWith("_idx") is complex.,3641
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,extractIndices,Long Statement,The length of the statement "String sql="SELECT NULL AS TABLE_CAT` n.nspname AS TABLE_SCHEM` " + " ct.relname AS TABLE_NAME` NOT i.indisunique AS NON_UNIQUE` " + " NULL AS INDEX_QUALIFIER` ci.relname AS INDEX_NAME` "+ " CASE i.indisclustered "+ " WHEN true THEN " + java.sql.DatabaseMetaData.tableIndexClustered + " ELSE CASE am.amname "+ " WHEN 'hash' THEN "+ java.sql.DatabaseMetaData.tableIndexHashed+ " ELSE "+ java.sql.DatabaseMetaData.tableIndexOther+ " END "+ " END AS TYPE` "+ " (i.keys).n AS ORDINAL_POSITION` "+ " trim(both '\"' from pg_catalog.pg_get_indexdef(ci.oid` (i.keys).n` false)) AS COLUMN_NAME "+ "FROM pg_catalog.pg_class ct "+ " JOIN pg_catalog.pg_namespace n ON (ct.relnamespace = n.oid) "+ " JOIN (SELECT i.indexrelid` i.indrelid` i.indoption` "+ " i.indisunique` i.indisclustered` i.indpred` "+ " i.indexprs` "+ " information_schema._pg_expandarray(i.indkey) AS keys "+ " FROM pg_catalog.pg_index i) i "+ " ON (ct.oid = i.indrelid) "+ " JOIN pg_catalog.pg_class ci ON (ci.oid = i.indexrelid) "+ " JOIN pg_catalog.pg_am am ON (ci.relam = am.oid) "+ "WHERE true ";" is 1058.,3641
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,valueToValuesString,Complex Method,Cyclomatic complexity of the method is 46,3727
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,valueToValuesString,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@10ae36e2,3727
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,supportsType,Complex Method,Cyclomatic complexity of the method is 42,3878
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Complex Method,Cyclomatic complexity of the method is 29,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Method,The method has 186 lines of code.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(schemaOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().getSchema());" is 124.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().withOutPrefix().getTable());" is 144.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(schemaOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().getSchema());" is 124.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(edgeLabelOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().withOutPrefix().getTable());" is 142.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(edgeSchema.isPresent()`"BUG: %s not found in the topology."`lastEdge.getSchemaTable().getSchema());" is 124.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "Optional<EdgeLabel> edgeLabelOptional=edgeSchema.get().getEdgeLabel(lastEdge.getSchemaTable().withOutPrefix().getTable());" is 122.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(edgeLabelOptional.isPresent()`"BUG: %s not found in the topology."`lastEdge.getSchemaTable().getTable());" is 130.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ Topology.OUT_VERTEX_COLUMN_END));" is 134.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 151.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ Topology.IN_VERTEX_COLUMN_END));" is 133.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ "."+ identifier+ Topology.IN_VERTEX_COLUMN_END));" is 150.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Long Statement,The length of the statement "MutableTriple<SqlgSqlExecutor.DROP_QUERY`String`Boolean> triple=MutableTriple.of(SqlgSqlExecutor.DROP_QUERY.NORMAL`sb.toString()`false);" is 136.,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Magic Number,The method contains a magic number: 2,3972
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Complex Method,Cyclomatic complexity of the method is 11,4173
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,drop,Complex Method,Cyclomatic complexity of the method is 11,4231
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,dropWithForeignKey,Complex Method,Cyclomatic complexity of the method is 12,4289
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,dropWithForeignKey,Long Parameter List,The method has 5 parameters. ,4289
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 167.,4289
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ "."+ identifier+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 184.,4289
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ "."+ identifier+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 184.,4289
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ "."+ identifier+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 184.,4289
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlToGetAllForeignKeys,Long Statement,The length of the statement "return "select \n" + " con.schema`\n" + " con.table`\n"+ " con.fk\n"+ "from\n"+ " (select \n"+ " \tns.nspname as \"schema\"`\n"+ " unnest(con1.conkey) as \"parent\"` \n"+ " unnest(con1.confkey) as \"child\"` \n"+ " con1.confrelid` \n"+ " con1.conrelid`\n"+ " con1.conname as \"fk\"`\n"+ " cl.relname as \"table\"\n"+ " from \n"+ " pg_class cl\n"+ " join pg_namespace ns on cl.relnamespace = ns.oid\n"+ " join pg_constraint con1 on con1.conrelid = cl.oid\n"+ " where\n"+ " cl.relname like '%E_%' AND\n"+ " con1.contype = 'f'\n"+ " ) con\n"+ " join pg_attribute att on\n"+ " att.attrelid = con.confrelid and att.attnum = con.child\n"+ " join pg_class cl on\n"+ " cl.oid = con.confrelid\n"+ " join pg_attribute att2 on\n"+ " att2.attrelid = con.conrelid and att2.attnum = con.parent";" is 781.,4359
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,alterForeignKeyToDeferrable,Long Statement,The length of the statement "return "ALTER TABLE \n" + "\t\"" + schema + "\".\""+ table+ "\" \n"+ "ALTER CONSTRAINT \n"+ "\t\""+ foreignKeyName+ "\" DEFERRABLE;";" is 133.,4390
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTruncate,Long Statement,The length of the statement "Preconditions.checkState(schemaTable.isWithPrefix()`"SqlDialect.sqlTruncate' schemaTable must start with a prefix %s or %s"`Topology.VERTEX_PREFIX`Topology.EDGE_PREFIX);" is 169.,4398
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTruncate,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"BUG: %s not found in the topology."`schemaTable.withOutPrefix().getTable());" is 134.,4398
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTruncate,Long Statement,The length of the statement "edgesToTruncate.add(maybeWrapInQoutes(edgeLabel.getSchema().getName()) + "." + maybeWrapInQoutes(Topology.EDGE_PREFIX + edgeLabel.getName()));" is 142.,4398
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTruncate,Long Statement,The length of the statement "throw new IllegalStateException("BUG: sqlTruncate should not be called when an edge has more than one out edge labels.");" is 121.,4398
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,sqlTruncate,Long Statement,The length of the statement "edgesToTruncate.add(maybeWrapInQoutes(edgeLabel.getSchema().getName()) + "." + maybeWrapInQoutes(Topology.EDGE_PREFIX + edgeLabel.getName()));" is 142.,4398
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getPartitions,Long Statement,The length of the statement "String sql="with pg_partitioned_table as (select \n" + " p.partrelid`\n" + " p.partstrat as partitionType`\n"+ " p.partnatts`\n"+ " string_agg(a.attname` '`' order by a.attnum) \"partitionExpression1\"`\n"+ " pg_get_expr(p.partexprs` p.partrelid) \"partitionExpression2\"\n"+ "from \n"+ "(select \n"+ "\tpartrelid`\n"+ " partstrat`\n"+ " partnatts`\n"+ " unnest(partattrs) partattrs`\n"+ " partexprs\n"+ "from \n"+ "\tpg_catalog.pg_partitioned_table\n"+ ") p left join\n"+ "\tpg_catalog.pg_attribute a on partrelid = a.attrelid and p.partattrs = a.attnum\n"+ "group by \n"+ "\t1`2`3`5\n"+ ")\n"+ "SELECT\n"+ "\tn.nspname as schema`\n"+ "\t(i.inhparent::regclass)::text as parent`\n"+ "\t(cl.oid::regclass)::text as child`\n"+ " p.partitionType`\n"+ " p.\"partitionExpression1\"`\n"+ " p.\"partitionExpression2\"`\n"+ " pg_get_expr(cl.relpartbound` cl.oid` true) as \"fromToInModulusRemainder\"\n"+ "FROM\n"+ " sqlg_schema.\"" + VERTEX_PREFIX + "schema\" s join\n"+ "\tpg_catalog.pg_namespace n on s.name = n.nspname join\n"+ " pg_catalog.pg_class cl on cl.relnamespace = n.oid left join\n"+ " pg_catalog.pg_inherits i on i.inhrelid = cl.oid left join\n"+ " pg_partitioned_table p on p.partrelid = cl.oid\n"+ "WHERE\n"+ "\tcl.relkind <> 'S' AND "+ "("+ "p.\"partitionExpression1\" is not null "+ "or p.\"partitionExpression2\" is not null "+ "or cl.relpartbound is not null"+ ")";" is 1379.,4457
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,getShardCount,Long Statement,The length of the statement "ResultSet resultSet=statement.executeQuery("SELECT COUNT(*) FROM pg_dist_shard " + "WHERE logicalrelid = '\"" + label.getSchema().getName() + "\".\""+ label.getPrefix()+ label.getLabel()+ "\"'::regclass;");" is 206.,4531
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,PostgresDialect,isTimestampz,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@552c1293,4567
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getMaximumSchemaNameLength,Magic Number,The method contains a magic number: 63,31
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getMaximumTableNameLength,Magic Number,The method contains a magic number: 63,36
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getMaximumColumnNameLength,Magic Number,The method contains a magic number: 63,41
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getMaximumIndexNameLength,Magic Number,The method contains a magic number: 63,46
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,createSchemaStatement,Long Statement,The length of the statement "return "CREATE DATABASE IF NOT EXISTS " + maybeWrapInQoutes(schemaName) + " DEFAULT CHARACTER SET latin1 COLLATE latin1_general_cs";" is 132.,71
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getVertexTables,Magic Number,The method contains a magic number: 3,91
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getEdgeTables,Magic Number,The method contains a magic number: 3,117
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getTableColumns,Long Parameter List,The method has 5 parameters. ,139
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getTableColumns,Magic Number,The method contains a magic number: 4,139
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getTableColumns,Magic Number,The method contains a magic number: 5,139
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getIndexInfo,Long Parameter List,The method has 6 parameters. ,156
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,validateProperty,Complex Method,Cyclomatic complexity of the method is 38,248
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,validateProperty,Long Method,The method has 114 lines of code.,248
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,propertyTypeToSqlDefinition,Complex Method,Cyclomatic complexity of the method is 22,379
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,propertyTypeToSqlDefinition,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3ebc1a27,379
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,propertyTypeToJavaSqlType,Complex Method,Cyclomatic complexity of the method is 17,430
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,propertyTypeToJavaSqlType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1ea9acad,430
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlTypeToPropertyType,Complex Method,Cyclomatic complexity of the method is 13,470
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlTypeToPropertyType,Long Parameter List,The method has 7 parameters. ,470
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlTypeToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7f5190bc,470
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlArrayTypeNameToPropertyType,Complex Method,Cyclomatic complexity of the method is 11,502
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlArrayTypeNameToPropertyType,Long Parameter List,The method has 6 parameters. ,502
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlArrayTypeNameToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4a5cbd4f,502
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getArrayDriverType,Complex Method,Cyclomatic complexity of the method is 15,542
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,getArrayDriverType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@14effb01,542
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,addPartitionTables,Long Statement,The length of the statement "return Arrays.asList("ALTER TABLE `sqlg_schema`.`V_vertex` ADD COLUMN `partitionType` TEXT;"`"UPDATE `sqlg_schema`.`V_vertex` SET `partitionType` = 'NONE';"`"ALTER TABLE `sqlg_schema`.`V_vertex` ADD COLUMN `partitionExpression` TEXT;"`"ALTER TABLE `sqlg_schema`.`V_vertex` ADD COLUMN `shardCount` INTEGER;"`"ALTER TABLE `sqlg_schema`.`V_edge` ADD COLUMN `partitionType` TEXT;"`"UPDATE `sqlg_schema`.`V_edge` SET `partitionType` = 'NONE';"`"ALTER TABLE `sqlg_schema`.`V_edge` ADD COLUMN `partitionExpression` TEXT;"`"ALTER TABLE `sqlg_schema`.`V_edge` ADD COLUMN `shardCount` INTEGER;"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_partition` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT` "+ "`from` TEXT` "+ "`to` TEXT` "+ "`in` TEXT` "+ "`partitionType` TEXT` "+ "`partitionExpression` TEXT);"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_vertex_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_edge_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`V_edge` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_partition_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.partition__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.partition__O`) REFERENCES `sqlg_schema`.`V_partition` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_identifier`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "`identifier_index` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_identifier`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "`identifier_index` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_distribution`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_colocate`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_distribution`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_colocate`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));");" is 4603.,643
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_graph` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `updatedOn` DATETIME` `version` TEXT` `dbVersion` TEXT);");" is 170.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_schema` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `name` TEXT);");" is 128.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_vertex` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `name` TEXT` `schemaVertex` TEXT);");" is 149.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_edge` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `name` TEXT);");" is 126.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_property` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `name` TEXT` `type` TEXT);");" is 143.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_index` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `name` TEXT` `index_type` TEXT);");" is 146.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_schema_vertex`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.schema__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.schema__O`) REFERENCES `sqlg_schema`.`V_schema` (`ID`)"+ ");");" is 371.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_in_edges`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.edge__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.edge__I`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 360.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_out_edges`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.edge__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.edge__I`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 361.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_vertex_property`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`V_property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 379.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_edge_property`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`V_property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)"+ ");");" is 371.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_vertex_index`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.index__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.index__I`) REFERENCES `sqlg_schema`.`V_index` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 367.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_edge_index`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.index__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.index__I`) REFERENCES `sqlg_schema`.`V_index` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)"+ ");");" is 359.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_index_property`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.index__O` BIGINT UNSIGNED` "+ "`sequence` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`V_property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.index__O`) REFERENCES `sqlg_schema`.`V_index` (`ID`)"+ ");");" is 399.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_log`(`ID` SERIAL PRIMARY KEY` `timestamp` DATETIME` `pid` INTEGER` `log` TEXT);");" is 138.,729
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,sqlgCreateTopologyGraph,Long Statement,The length of the statement "return "CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_graph` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `updatedOn` DATETIME` `version` TEXT);";" is 147.,812
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,createArrayOf,Complex Method,Cyclomatic complexity of the method is 19,822
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,createArrayOf,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@4770e1f5,822
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,convertArray,Complex Method,Cyclomatic complexity of the method is 17,852
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,convertArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@34d75dd7,852
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MysqlDialect,isSystemIndex,Long Statement,The length of the statement "return indexName.contains("_ibfk_") || indexName.equals("PRIMARY") || indexName.endsWith(Topology.IN_VERTEX_COLUMN_END)|| indexName.endsWith(Topology.OUT_VERTEX_COLUMN_END);" is 173.,901
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getMaximumSchemaNameLength,Magic Number,The method contains a magic number: 63,30
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getMaximumTableNameLength,Magic Number,The method contains a magic number: 63,35
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getMaximumColumnNameLength,Magic Number,The method contains a magic number: 63,40
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getMaximumIndexNameLength,Magic Number,The method contains a magic number: 63,45
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,createSchemaStatement,Long Statement,The length of the statement "return "CREATE DATABASE IF NOT EXISTS " + maybeWrapInQoutes(schemaName) + " DEFAULT CHARACTER SET latin1 COLLATE latin1_general_cs";" is 132.,70
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getVertexTables,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getEdgeTables,Magic Number,The method contains a magic number: 3,116
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getTableColumns,Long Parameter List,The method has 5 parameters. ,138
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getTableColumns,Magic Number,The method contains a magic number: 4,138
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getTableColumns,Magic Number,The method contains a magic number: 5,138
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getIndexInfo,Long Parameter List,The method has 6 parameters. ,155
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,validateProperty,Complex Method,Cyclomatic complexity of the method is 23,247
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,propertyTypeToSqlDefinition,Complex Method,Cyclomatic complexity of the method is 24,333
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,propertyTypeToSqlDefinition,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1bce38c7,333
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,propertyTypeToJavaSqlType,Complex Method,Cyclomatic complexity of the method is 17,388
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,propertyTypeToJavaSqlType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7012ff4c,388
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlTypeToPropertyType,Complex Method,Cyclomatic complexity of the method is 14,428
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlTypeToPropertyType,Long Parameter List,The method has 7 parameters. ,428
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlTypeToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@302dd7f2,428
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlArrayTypeNameToPropertyType,Complex Method,Cyclomatic complexity of the method is 11,472
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlArrayTypeNameToPropertyType,Long Parameter List,The method has 6 parameters. ,472
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlArrayTypeNameToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3e1a1dc5,472
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getArrayDriverType,Complex Method,Cyclomatic complexity of the method is 15,512
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,getArrayDriverType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@547802c1,512
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_graph` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`updatedOn` DATETIME` "+ "`version` TEXT` "+ "`dbVersion` TEXT);");" is 192.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_schema` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT);");" is 142.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_vertex` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT` "+ "`schemaVertex` TEXT` "+ "`partitionType` TEXT` "+ "`partitionExpression` TEXT` "+ "`shardCount` INTEGER);");" is 251.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_edge` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT` "+ "`partitionType` TEXT` "+ "`partitionExpression` TEXT` "+ "`shardCount` INTEGER);");" is 224.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_partition` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT`"+ "`from` TEXT` "+ "`to` TEXT` "+ "`in` TEXT` "+ "`modulus` INTEGER` "+ "`remainder` INTEGER` "+ "`partitionType` TEXT` "+ "`partitionExpression` TEXT);");" is 297.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_property` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT` "+ "`type` TEXT);");" is 161.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_index` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT` "+ "`index_type` TEXT);");" is 164.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_schema_vertex`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.schema__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.schema__O`) REFERENCES `sqlg_schema`.`V_schema` (`ID`)"+ ");");" is 371.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_in_edges`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.edge__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.edge__I`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 360.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_out_edges`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.edge__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.edge__I`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 361.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_vertex_property`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`V_property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 379.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_edge_property`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`V_property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)"+ ");");" is 371.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_identifier`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "`identifier_index` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));");" is 485.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_identifier`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "`identifier_index` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));");" is 477.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_vertex_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`));");" is 379.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_edge_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`V_edge` (`ID`));");" is 371.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_partition_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.partition__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.partition__O`) REFERENCES `sqlg_schema`.`V_partition` (`ID`));");" is 391.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_distribution`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));");" is 455.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_colocate`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));");" is 445.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_distribution`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));");" is 447.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_colocate`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));");" is 437.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_vertex_index`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.index__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.index__I`) REFERENCES `sqlg_schema`.`V_index` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`)"+ ");");" is 367.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_edge_index`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.index__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.index__I`) REFERENCES `sqlg_schema`.`V_index` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`V_edge` (`ID`)"+ ");");" is 359.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_index_property`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.index__O` BIGINT UNSIGNED` "+ "`sequence` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`V_property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.index__O`) REFERENCES `sqlg_schema`.`V_index` (`ID`)"+ ");");" is 399.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_log`(`ID` SERIAL PRIMARY KEY` `timestamp` DATETIME` `pid` INTEGER` `log` TEXT);");" is 138.,608
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,sqlgCreateTopologyGraph,Long Statement,The length of the statement "return "CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_graph` (`ID` SERIAL PRIMARY KEY` `createdOn` DATETIME` `updatedOn` DATETIME` `version` TEXT` `dbVersion` TEXT);";" is 165.,794
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,createArrayOf,Complex Method,Cyclomatic complexity of the method is 19,804
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,createArrayOf,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@33f76f9d,804
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,convertArray,Complex Method,Cyclomatic complexity of the method is 17,834
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,convertArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@6dbbac56,834
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,isSystemIndex,Long Statement,The length of the statement "return indexName.contains("_ibfk_") || indexName.equals("PRIMARY") || indexName.endsWith(Topology.IN_VERTEX_COLUMN_END)|| indexName.endsWith(Topology.OUT_VERTEX_COLUMN_END);" is 173.,883
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,addPartitionTables,Long Statement,The length of the statement "return Arrays.asList("ALTER TABLE `sqlg_schema`.`V_vertex` ADD COLUMN `partitionType` TEXT;"`"UPDATE `sqlg_schema`.`V_vertex` SET `partitionType` = 'NONE';"`"ALTER TABLE `sqlg_schema`.`V_vertex` ADD COLUMN `partitionExpression` TEXT;"`"ALTER TABLE `sqlg_schema`.`V_vertex` ADD COLUMN `shardCount` INTEGER;"`"ALTER TABLE `sqlg_schema`.`V_edge` ADD COLUMN `partitionType` TEXT;"`"UPDATE `sqlg_schema`.`V_edge` SET `partitionType` = 'NONE';"`"ALTER TABLE `sqlg_schema`.`V_edge` ADD COLUMN `partitionExpression` TEXT;"`"ALTER TABLE `sqlg_schema`.`V_edge` ADD COLUMN `shardCount` INTEGER;"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`V_partition` (" + "`ID` SERIAL PRIMARY KEY` " + "`createdOn` DATETIME` "+ "`name` TEXT` "+ "`from` TEXT` "+ "`to` TEXT` "+ "`in` TEXT` "+ "`partitionType` TEXT` "+ "`partitionExpression` TEXT);"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_vertex_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`V_vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_edge_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`V_edge` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`E_partition_partition`(" + "`ID` SERIAL PRIMARY KEY` " + "`sqlg_schema.partition__I` BIGINT UNSIGNED` "+ "`sqlg_schema.partition__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.partition__I`) REFERENCES `sqlg_schema`.`V_partition` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.partition__O`) REFERENCES `sqlg_schema`.`V_partition` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_identifier`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "`identifier_index` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_identifier`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "`identifier_index` INTEGER` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_distribution`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "vertex_colocate`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.vertex__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.vertex__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_distribution`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.property__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.property__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "property` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));"`"CREATE TABLE IF NOT EXISTS `sqlg_schema`.`" + Topology.EDGE_PREFIX + "edge_colocate`("+ "`ID` SERIAL PRIMARY KEY` "+ "`sqlg_schema.vertex__I` BIGINT UNSIGNED` "+ "`sqlg_schema.edge__O` BIGINT UNSIGNED` "+ "FOREIGN KEY (`sqlg_schema.vertex__I`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "vertex` (`ID`)` "+ "FOREIGN KEY (`sqlg_schema.edge__O`) REFERENCES `sqlg_schema`.`"+ Topology.VERTEX_PREFIX+ "edge` (`ID`));");" is 4603.,994
pietermartin_sqlg,org.umlg.sqlg.sql.dialect,MariadbDialect,addHashPartitionColumns,Long Statement,The length of the statement "return List.of("ALTER TABLE `sqlg_schema`.`V_partition` ADD COLUMN `modulus` INTEGER;"`"ALTER TABLE `sqlg_schema`.`V_partition` ADD COLUMN `remainder` INTEGER;");" is 162.,1080
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerBaseCacheBulkRecord,addMetaData,Complex Method,Cyclomatic complexity of the method is 21,57
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerBaseCacheBulkRecord,addMetaData,Magic Number,The method contains a magic number: 2,57
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerBaseCacheBulkRecord,addMetaData,Magic Number,The method contains a magic number: 8000,57
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerBaseCacheBulkRecord,addMetaData,Magic Number,The method contains a magic number: 8000,57
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerBaseCacheBulkRecord,addMetaData,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3216011,57
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerBaseCacheBulkRecord,addValues,Complex Method,Cyclomatic complexity of the method is 32,276
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerBaseCacheBulkRecord,addValues,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@175b04be,276
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Parameter List,The method has 5 parameters. ,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "this.outVertexLabel=sqlgGraph.getTopology().getVertexLabel(outSchemaTable.getSchema()`outSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`outSchemaTable.getSchema()`outSchemaTable.getTable())));" is 261.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "this.inVertexLabel=sqlgGraph.getTopology().getVertexLabel(inSchemaTable.getSchema()`inSchemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel not found for %s.%s"`inSchemaTable.getSchema()`inSchemaTable.getTable())));" is 256.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "this.propertyColumns=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema '%s' not found"`schemaTable.getSchema()))).getEdgeLabel(schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel '%s' not found"`schemaTable.getTable()))).getProperties();" is 353.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "this.columnMetadata.put(i++`new ColumnMetadata(metaEdge.getInLabel() + Topology.IN_VERTEX_COLUMN_END`sqlgGraph.getSqlDialect().propertyTypeToJavaSqlType(PropertyType.LONG)[0]`0`0`null`PropertyType.LONG));" is 204.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "PropertyType propertyType=inVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("BUG: Did not find the identifier property %s."`identifier))).getPropertyType();" is 202.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "this.columnMetadata.put(i++`new ColumnMetadata(metaEdge.getInLabel() + "." + identifier+ Topology.IN_VERTEX_COLUMN_END`sqlgGraph.getSqlDialect().propertyTypeToJavaSqlType(propertyType)[0]`0`0`null`propertyType));" is 212.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "this.columnMetadata.put(i++`new ColumnMetadata(metaEdge.getOutLabel() + Topology.OUT_VERTEX_COLUMN_END`sqlgGraph.getSqlDialect().propertyTypeToJavaSqlType(PropertyType.LONG)[0]`0`0`null`PropertyType.LONG));" is 206.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "PropertyType propertyType=outVertexLabel.getProperty(identifier).orElseThrow(() -> new IllegalStateException(String.format("BUG: Did not find the identifier property %s."`identifier))).getPropertyType();" is 203.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerEdgeCacheBulkRecord,SQLServerEdgeCacheBulkRecord,Long Statement,The length of the statement "this.columnMetadata.put(i++`new ColumnMetadata(metaEdge.getOutLabel() + "." + identifier+ Topology.OUT_VERTEX_COLUMN_END`sqlgGraph.getSqlDialect().propertyTypeToJavaSqlType(propertyType)[0]`0`0`null`propertyType));" is 214.,25
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerVertexCacheBulkRecord,SQLServerVertexCacheBulkRecord,Long Statement,The length of the statement "this.propertyColumns=sqlgGraph.getTopology().getSchema(schemaTable.getSchema()).orElseThrow(() -> new IllegalStateException(String.format("Schema %s not found"`schemaTable.getSchema()))).getVertexLabel(schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found"`schemaTable.getTable()))).getProperties();" is 353.,23
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,SQLServerVertexCacheBulkRecord,SQLServerVertexCacheBulkRecord,Long Statement,The length of the statement "this.columnMetadata.put(i`new ColumnMetadata("dummy"`sqlgGraph.getSqlDialect().propertyTypeToJavaSqlType(PropertyType.INTEGER)[0]`0`0`null`PropertyType.INTEGER));" is 162.,23
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,getInternalSchemas,Long Statement,The length of the statement "return ImmutableSet.copyOf(Arrays.asList("db_accessadmin"`"db_backupoperator"`"db_datareader"`"db_ddladmin"`"db_debydatareader"`"db_denydatawriter"`"db_owner"`"db_scurityadmin"`"dbo"`"guest"`"INFORMATION_SCHEMA"`"sys"));" is 220.,55
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlTypeToPropertyType,Complex Method,Cyclomatic complexity of the method is 13,94
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlTypeToPropertyType,Long Parameter List,The method has 7 parameters. ,94
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlTypeToPropertyType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@1fd80a4f,94
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlArrayTypeNameToPropertyType,Long Parameter List,The method has 6 parameters. ,129
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,validateProperty,Complex Conditional,The conditional expression value instanceof Byte || value instanceof Byte[] || value instanceof byte[] is complex.,134
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,validateProperty,Complex Method,Cyclomatic complexity of the method is 16,134
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,propertyTypeToSqlDefinition,Complex Method,Cyclomatic complexity of the method is 22,199
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,propertyTypeToSqlDefinition,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@2fb1ccfe,199
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,propertyTypeToJavaSqlType,Complex Method,Cyclomatic complexity of the method is 38,249
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,propertyTypeToJavaSqlType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@279810f1,249
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,putJsonObject,Complex Method,Cyclomatic complexity of the method is 12,326
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,putJsonObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@68298e48,326
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,putJsonMetaObject,Complex Method,Cyclomatic complexity of the method is 10,379
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,putJsonMetaObject,Long Parameter List,The method has 5 parameters. ,379
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,putJsonMetaObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@377c7b70,379
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,putJsonMetaObject,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@168b875d,379
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,existIndexQuery,Long Statement,The length of the statement "return "SELECT * FROM sys.indexes i JOIN sys.tables t ON i.object_id = t.object_id JOIN sys.schemas s ON t.schema_id = s.schema_id WHERE s.name = '" + schemaTable.getSchema() + "' AND t.name = '"+ prefix+ schemaTable.getTable()+ "' AND i.name = '"+ indexName+ "'";" is 264.,429
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_graph\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"updatedOn\" DATETIME` "+ "\"version\" VARCHAR(255)` "+ "\"dbVersion\" VARCHAR(255));");" is 217.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_schema\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"name\" VARCHAR(255));");" is 155.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_vertex\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"name\" VARCHAR(255)` "+ "\"schemaVertex\" VARCHAR(255)` "+ "\"partitionType\" VARCHAR(255)` "+ "\"partitionExpression\" VARCHAR(255)` "+ "\"shardCount\" INTEGER);");" is 296.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_edge\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"name\" VARCHAR(255)` "+ "\"partitionType\" VARCHAR(255)` "+ "\"partitionExpression\" VARCHAR(255)` "+ "\"shardCount\" INTEGER);");" is 259.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_partition\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"name\" VARCHAR(255)` "+ "\"from\" VARCHAR(255)` "+ "\"to\" VARCHAR(255)` "+ "\"in\" VARCHAR(255)` "+ "\"partitionType\" VARCHAR(255)` "+ "\"partitionExpression\" VARCHAR(255)"+ ");");" is 317.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_property\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"name\" VARCHAR(255)` "+ "\"type\" VARCHAR(255));");" is 184.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_index\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"name\" VARCHAR(255)` "+ "\"index_type\" VARCHAR(255));");" is 187.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_schema_vertex\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.schema__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.schema__O\") REFERENCES \"sqlg_schema\".\"V_schema\" (\"ID\"));");" is 370.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_in_edges\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 359.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_out_edges\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.edge__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.edge__I\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 360.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_vertex_property\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 378.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_edge_property\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 370.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_identifier\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\"));");" is 490.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_identifier\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\"));");" is 482.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_vertex_partition\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 382.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_edge_partition\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 374.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_partition_partition\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\"));");" is 394.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_distribution\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\"));");" is 458.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_colocate\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\"));");" is 448.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_distribution\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\"));");" is 450.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_colocate\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\"));");" is 440.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_vertex_index\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.index__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));");" is 366.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_edge_index\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.index__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.index__I\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));");" is 358.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"E_index_property\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.index__O\" BIGINT` "+ "\"sequence\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\"V_property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.index__O\") REFERENCES \"sqlg_schema\".\"V_index\" (\"ID\"));");" is 400.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgTopologyCreationScripts,Long Statement,The length of the statement "result.add("CREATE TABLE \"sqlg_schema\".\"V_log\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"timestamp\" TIMESTAMP` "+ "\"pid\" INTEGER` "+ "\"log\" VARCHAR);");" is 168.,521
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,sqlgCreateTopologyGraph,Long Statement,The length of the statement "return "CREATE TABLE \"sqlg_schema\".\"V_graph\" (\"ID\" BIGINT IDENTITY PRIMARY KEY` \"createdOn\" DATETIME` \"updatedOn\" DATETIME` \"version\" VARCHAR(255)` \"dbVersion\" VARCHAR(255));";" is 190.,692
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,convertArray,Complex Method,Cyclomatic complexity of the method is 18,703
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,convertArray,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@71f312e5,703
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,supportsType,Complex Method,Cyclomatic complexity of the method is 14,776
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,supportsType,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@558c995d,776
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushVertexCache,Complex Method,Cyclomatic complexity of the method is 11,900
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushVertexCache,Long Statement,The length of the statement "for ( Map.Entry<SchemaTable`Pair<SortedSet<String>`Map<SqlgVertex`Map<String`Object>>>> entry : vertexCache.entrySet()) {" is 121.,900
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushVertexCache,Long Statement,The length of the statement "vertexLabel=sqlgGraph.getTopology().getVertexLabel(schemaTable.getSchema()`schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("VertexLabel %s not found."`schemaTable.toString())));" is 211.,900
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushVertexCache,Long Statement,The length of the statement "bulkCopy.setDestinationTableName(sqlgGraph.getSqlDialect().maybeWrapInQoutes(sqlgGraph.getSqlDialect().temporaryTablePrefix() + VERTEX_PREFIX + schemaTable.getTable()));" is 169.,900
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushVertexCache,Long Statement,The length of the statement "bulkCopy.setDestinationTableName(sqlgGraph.getSqlDialect().maybeWrapInQoutes(schemaTable.getSchema()) + "." + sqlgGraph.getSqlDialect().maybeWrapInQoutes(VERTEX_PREFIX + schemaTable.getTable()));" is 195.,900
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushVertexCache,Long Statement,The length of the statement "try (PreparedStatement preparedStatement=connection.prepareStatement("SELECT IDENT_CURRENT('" + schemaTable.getSchema() + "."+ VERTEX_PREFIX+ schemaTable.getTable()+ "')")){" is 173.,900
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushEdgeCache,Long Statement,The length of the statement "EdgeLabel edgeLabel=sqlgGraph.getTopology().getEdgeLabel(schemaTable.getSchema()`schemaTable.getTable()).orElseThrow(() -> new IllegalStateException(String.format("EdgeLabel not found for %s.%s"`schemaTable.getSchema()`schemaTable.getTable())));" is 245.,975
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushEdgeCache,Long Statement,The length of the statement "bulkCopy.setDestinationTableName(sqlgGraph.getSqlDialect().maybeWrapInQoutes(schemaTable.getSchema()) + "." + sqlgGraph.getSqlDialect().maybeWrapInQoutes(EDGE_PREFIX + schemaTable.getTable()));" is 193.,975
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushEdgeCache,Long Statement,The length of the statement "try (PreparedStatement preparedStatement=connection.prepareStatement("SELECT IDENT_CURRENT('" + schemaTable.getSchema() + "."+ EDGE_PREFIX+ schemaTable.getTable()+ "')")){" is 171.,975
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,flushEdgeCache,Long Statement,The length of the statement "for ( Map.Entry<SqlgEdge`Triple<SqlgVertex`SqlgVertex`Map<String`Object>>> sqlgEdgeTripleEntry : triples.getRight().entrySet()) {" is 129.,975
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,valueToValuesString,Complex Method,Cyclomatic complexity of the method is 15,1059
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,valueToValuesString,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@17fdf67,1059
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Complex Method,Cyclomatic complexity of the method is 27,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Method,The method has 175 lines of code.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(schemaOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().getSchema());" is 124.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"BUG: %s not found in the topology."`last.getSchemaTable().withOutPrefix().getTable());" is 144.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(edgeSchema.isPresent()`"BUG: %s not found in the topology."`lastEdge.getSchemaTable().getSchema());" is 124.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "Optional<EdgeLabel> edgeLabelOptional=edgeSchema.get().getEdgeLabel(lastEdge.getSchemaTable().withOutPrefix().getTable());" is 122.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "Preconditions.checkState(edgeLabelOptional.isPresent()`"BUG: %s not found in the topology."`lastEdge.getSchemaTable().getTable());" is 130.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ Topology.OUT_VERTEX_COLUMN_END));" is 134.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "sb.append(".").append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ "."+ identifier+ Topology.OUT_VERTEX_COLUMN_END));" is 163.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "sb.append(maybeWrapInQoutes(lastVertexLabel.getSchema().getName() + "." + lastVertexLabel.getName()+ Topology.IN_VERTEX_COLUMN_END));" is 133.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "String edgeTableName=(maybeWrapInQoutes(edgeLabel.getSchema().getName())) + "." + maybeWrapInQoutes(EDGE_PREFIX + edgeLabel.getLabel());" is 136.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "String edgeTableName=(maybeWrapInQoutes(edgeLabel.getSchema().getName())) + "." + maybeWrapInQoutes(EDGE_PREFIX + edgeLabel.getLabel());" is 136.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "String edgeTableName=(maybeWrapInQoutes(edgeLabel.getSchema().getName())) + "." + maybeWrapInQoutes(EDGE_PREFIX + edgeLabel.getLabel());" is 136.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Long Statement,The length of the statement "String edgeTableName=(maybeWrapInQoutes(edgeLabel.getSchema().getName())) + "." + maybeWrapInQoutes(EDGE_PREFIX + edgeLabel.getLabel());" is 136.,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Magic Number,The method contains a magic number: 2,1114
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,dropWithForeignKey,Complex Method,Cyclomatic complexity of the method is 18,1312
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,dropWithForeignKey,Long Parameter List,The method has 5 parameters. ,1312
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 167.,1312
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,dropWithForeignKey,Long Statement,The length of the statement "sql.append(maybeWrapInQoutes(vertexLabel.getSchema().getName() + "." + vertexLabel.getName()+ "."+ identifier+ (out ? Topology.OUT_VERTEX_COLUMN_END : Topology.IN_VERTEX_COLUMN_END)));" is 184.,1312
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,addPartitionTables,Long Statement,The length of the statement "return Arrays.asList("ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD \"partitionType\" VARCHAR(255) DEFAULT 'NONE' WITH VALUES;"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD \"partitionExpression\" VARCHAR(255);"`"ALTER TABLE \"sqlg_schema\".\"V_vertex\" ADD \"shardCount\" INTEGER;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD \"partitionType\" VARCHAR(255) DEFAULT 'NONE' WITH VALUES;"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD \"partitionExpression\" VARCHAR(255);"`"ALTER TABLE \"sqlg_schema\".\"V_edge\" ADD \"shardCount\" INTEGER;"`"CREATE TABLE \"sqlg_schema\".\"V_partition\" (" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"createdOn\" DATETIME` "+ "\"name\" VARCHAR(255)` "+ "\"from\" VARCHAR(255)` "+ "\"to\" VARCHAR(255)` "+ "\"in\" VARCHAR(255)` "+ "\"partitionType\" VARCHAR(255)` "+ "\"partitionExpression\" VARCHAR(255)"+ ");"`"CREATE TABLE \"sqlg_schema\".\"E_vertex_partition\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\"V_vertex\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"E_edge_partition\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\"V_edge\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"E_partition_partition\"(" + "\"ID\" BIGINT IDENTITY PRIMARY KEY` " + "\"sqlg_schema.partition__I\" BIGINT` "+ "\"sqlg_schema.partition__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.partition__I\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.partition__O\") REFERENCES \"sqlg_schema\".\"V_partition\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_identifier\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_identifier\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "\"identifier_index\" INTEGER` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_distribution\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "vertex_colocate\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.vertex__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.vertex__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_distribution\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.property__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.property__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "property\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\"));"`"CREATE TABLE \"sqlg_schema\".\"" + Topology.EDGE_PREFIX + "edge_colocate\"("+ "\"ID\" BIGINT IDENTITY PRIMARY KEY` "+ "\"sqlg_schema.vertex__I\" BIGINT` "+ "\"sqlg_schema.edge__O\" BIGINT` "+ "FOREIGN KEY (\"sqlg_schema.vertex__I\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "vertex\" (\"ID\")` "+ "FOREIGN KEY (\"sqlg_schema.edge__O\") REFERENCES \"sqlg_schema\".\""+ Topology.VERTEX_PREFIX+ "edge\" (\"ID\"));");" is 4655.,1404
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,addDbVersionToGraph,Long Statement,The length of the statement "return "ALTER TABLE \"sqlg_schema\".\"V_graph\" ADD \"dbVersion\" VARCHAR(255) DEFAULT '" + metadata.getDatabaseProductVersion() + "';";" is 136.,1488
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Complex Method,Cyclomatic complexity of the method is 17,1497
pietermartin_sqlg,org.umlg.sqlg.mssqlserver,MSSqlServerDialect,drop,Complex Method,Cyclomatic complexity of the method is 17,1580
pietermartin_sqlg,org.umlg.sqlg.test,TestForeignSchemaDocs,main,Long Statement,The length of the statement "String sql=String.format("CREATE SERVER \"%s\" FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '%s'` dbname '%s'` port '%d');"`"sqlgraph_fwd_server"`"localhost"`"sqlgraphdb_fdw"`5432);" is 184.,25
pietermartin_sqlg,org.umlg.sqlg.test,TestForeignSchemaDocs,main,Long Statement,The length of the statement "sql=String.format("CREATE USER MAPPING FOR %s SERVER \"%s\" OPTIONS (user '%s'` password '%s');"`"postgres"`"sqlgraph_fwd_server"`"postgres"`"postgres");" is 153.,25
pietermartin_sqlg,org.umlg.sqlg.test,TestForeignSchemaDocs,main,Magic Number,The method contains a magic number: 5432,25
pietermartin_sqlg,org.umlg.sqlg.test,TestForeignSchemaDocs,main4,Long Statement,The length of the statement "String sql=String.format("CREATE SERVER \"%s\" FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '%s'` dbname '%s'` port '%d');"`"sqlgraph_fwd_server"`"localhost"`"sqlgraphdb_fdw"`5432);" is 184.,126
pietermartin_sqlg,org.umlg.sqlg.test,TestForeignSchemaDocs,main4,Long Statement,The length of the statement "sql=String.format("CREATE USER MAPPING FOR %s SERVER \"%s\" OPTIONS (user '%s'` password '%s');"`"postgres"`"sqlgraph_fwd_server"`"postgres"`"postgres");" is 153.,126
pietermartin_sqlg,org.umlg.sqlg.test,TestForeignSchemaDocs,main4,Magic Number,The method contains a magic number: 5432,126
pietermartin_sqlg,org.umlg.sqlg.test,TestEdgeToDifferentLabeledVertexes,testEdgeIsToDifferentLabeledVertexes,Magic Number,The method contains a magic number: 2,17
pietermartin_sqlg,org.umlg.sqlg.test,TestLoadArrayProperties,testLoadSchemaWithArrays,Long Statement,The length of the statement "Assume.assumeTrue(this.sqlgGraph.getSqlDialect().supportsBooleanArrayValues() && this.sqlgGraph.getSqlDialect().supportsFloatArrayValues() && this.sqlgGraph.getSqlDialect().supportsLongArrayValues()&& this.sqlgGraph.getSqlDialect().supportsIntegerArrayValues()&& this.sqlgGraph.getSqlDialect().supportsDoubleArrayValues()&& this.sqlgGraph.getSqlDialect().supportsStringArrayValues());" is 384.,19
pietermartin_sqlg,org.umlg.sqlg.test,TestLoadArrayProperties,testLoadSchemaWithArrays,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"aBoolean"`new boolean[]{true}`"aShort"`new short[]{(short)1}`"aInteger"`new int[]{1}`"aLong"`new long[]{1L}`"aFloat"`new float[]{1F}`"aDouble"`new double[]{1D}`"aString"`new String[]{"aaaaaaaaaaaaa"});" is 244.,19
pietermartin_sqlg,org.umlg.sqlg.test,TestLoadArrayProperties,testLoadSchemaWithArraysWithoutFloat,Long Statement,The length of the statement "Assume.assumeTrue(this.sqlgGraph.getSqlDialect().supportsBooleanArrayValues() && this.sqlgGraph.getSqlDialect().supportsLongArrayValues() && this.sqlgGraph.getSqlDialect().supportsIntegerArrayValues()&& this.sqlgGraph.getSqlDialect().supportsDoubleArrayValues()&& this.sqlgGraph.getSqlDialect().supportsStringArrayValues());" is 324.,67
pietermartin_sqlg,org.umlg.sqlg.test,TestLoadArrayProperties,testLoadSchemaWithArraysWithoutFloat,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"aBoolean"`new boolean[]{true}`"aShort"`new short[]{(short)1}`"aInteger"`new int[]{1}`"aLong"`new long[]{1L}`"aDouble"`new double[]{1D}`"aString"`new String[]{"aaaaaaaaaaaaa"});" is 219.,67
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdHasCommas,Magic Number,The method contains a magic number: 100,21
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdHasCommas,Magic Number,The method contains a magic number: 100,21
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdHasCommas,Magic Number,The method contains a magic number: 100,21
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdHasCommas,Magic Number,The method contains a magic number: 100,21
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElement,Long Statement,The length of the statement "RecordId recordId=RecordId.from(this.sqlgGraph.getTopology().getPublicSchema().getName() + ".A" + RecordId.RECORD_ID_DELIMITER+ this.sqlgGraph.getSqlDialect().getPrimaryKeyStartValue());" is 186.,65
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElement,Long Statement,The length of the statement "Assert.assertEquals(SchemaTable.of(this.sqlgGraph.getTopology().getPublicSchema().getName()`"A")`recordId.getSchemaTable());" is 124.,65
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK,Long Statement,The length of the statement "RecordId recordId=RecordId.from(this.sqlgGraph`this.sqlgGraph.getTopology().getPublicSchema().getName() + ".A" + RecordId.RECORD_ID_DELIMITER+ "["+ uid1+ "]");" is 159.,80
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK,Long Statement,The length of the statement "Assert.assertEquals(SchemaTable.of(this.sqlgGraph.getTopology().getPublicSchema().getName()`"A")`recordId.getSchemaTable());" is 124.,80
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK,Magic Number,The method contains a magic number: 100,80
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With2Ids,Long Statement,The length of the statement "RecordId recordId=RecordId.from(this.sqlgGraph`this.sqlgGraph.getTopology().getPublicSchema().getName() + ".A" + RecordId.RECORD_ID_DELIMITER+ "["+ uid1+ "` "+ uid2+ "]");" is 171.,102
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With2Ids,Long Statement,The length of the statement "Assert.assertEquals(SchemaTable.of(this.sqlgGraph.getTopology().getPublicSchema().getName()`"A")`recordId.getSchemaTable());" is 124.,102
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With2Ids,Magic Number,The method contains a magic number: 100,102
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With2Ids,Magic Number,The method contains a magic number: 100,102
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With2Ids,Magic Number,The method contains a magic number: 2,102
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With3Ids,Long Statement,The length of the statement "RecordId recordId=RecordId.from(this.sqlgGraph`this.sqlgGraph.getTopology().getPublicSchema().getName() + ".A" + RecordId.RECORD_ID_DELIMITER+ "["+ uid1+ "` "+ uid2+ "` "+ uid3+ "]");" is 183.,127
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With3Ids,Long Statement,The length of the statement "Assert.assertEquals(SchemaTable.of(this.sqlgGraph.getTopology().getPublicSchema().getName()`"A")`recordId.getSchemaTable());" is 124.,127
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With3Ids,Magic Number,The method contains a magic number: 100,127
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With3Ids,Magic Number,The method contains a magic number: 100,127
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With3Ids,Magic Number,The method contains a magic number: 100,127
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With3Ids,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test,TestRecordId,testRecordIdFromElementUserSuppliedPK_With3Ids,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test,TestAddVertexViaMap,testMapUserSuppliedPK,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 138.,47
pietermartin_sqlg,org.umlg.sqlg.test,TestAddVertexViaMap,testMapUserSuppliedPK,Magic Number,The method contains a magic number: 100,47
pietermartin_sqlg,org.umlg.sqlg.test,TestAddVertexViaMap,testMapUserSuppliedPK,Magic Number,The method contains a magic number: 100,47
pietermartin_sqlg,org.umlg.sqlg.test,TinkerpopTest,testTail,Magic Number,The method contains a magic number: 72,34
pietermartin_sqlg,org.umlg.sqlg.test,TinkerpopTest,testTail,Magic Number,The method contains a magic number: 3,34
pietermartin_sqlg,org.umlg.sqlg.test,TinkerpopTest,checkResults,Long Statement,The length of the statement "Assert.assertTrue("Checking map result existence: " + t`expectedResults.stream().filter(e -> e instanceof Map).anyMatch(e -> checkMap((Map)e`(Map)t)));" is 151.,82
pietermartin_sqlg,org.umlg.sqlg.test,TinkerpopTest,checkMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> actualList=actualMap.entrySet().stream().sorted((a`b) -> a.getKey().toString().compareTo(b.getKey().toString())).collect(Collectors.toList());" is 169.,108
pietermartin_sqlg,org.umlg.sqlg.test,TinkerpopTest,checkMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> expectedList=expectedMap.entrySet().stream().sorted((a`b) -> a.getKey().toString().compareTo(b.getKey().toString())).collect(Collectors.toList());" is 173.,108
pietermartin_sqlg,org.umlg.sqlg.test,TestVarChar,testVarChar,Empty catch clause,The method has an empty catch block.,18
pietermartin_sqlg,org.umlg.sqlg.test,TestVarChar,testVarChar,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"A"`new HashMap<String`PropertyType>(){" is 165.,18
pietermartin_sqlg,org.umlg.sqlg.test,TestVarChar,testVarChar,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"B"`new HashMap<String`PropertyType>(){" is 165.,18
pietermartin_sqlg,org.umlg.sqlg.test,TestVarChar,testVarChar,Magic Number,The method contains a magic number: 10,18
pietermartin_sqlg,org.umlg.sqlg.test,TestVarChar,testVarChar,Magic Number,The method contains a magic number: 10,18
pietermartin_sqlg,org.umlg.sqlg.test,TestVarChar,testVarChar,Magic Number,The method contains a magic number: 10,18
pietermartin_sqlg,org.umlg.sqlg.test,TestVarChar,testVarChar,Magic Number,The method contains a magic number: 2,18
pietermartin_sqlg,org.umlg.sqlg.test,TestAllEdges,testAllEdges,Magic Number,The method contains a magic number: 2L,15
pietermartin_sqlg,org.umlg.sqlg.test,TestAllEdges,shouldNotGetConcurrentModificationException,Magic Number,The method contains a magic number: 25,25
pietermartin_sqlg,org.umlg.sqlg.test,TestAllEdges,shouldNotGetConcurrentModificationException,Magic Number,The method contains a magic number: 25,25
pietermartin_sqlg,org.umlg.sqlg.test,TestAllEdges,shouldNotGetConcurrentModificationException,Magic Number,The method contains a magic number: 25,25
pietermartin_sqlg,org.umlg.sqlg.test,TestAllEdges,shouldNotGetConcurrentModificationException,Magic Number,The method contains a magic number: 25,25
pietermartin_sqlg,org.umlg.sqlg.test,TestAllVertices,testAllVertices,Magic Number,The method contains a magic number: 4L,24
pietermartin_sqlg,org.umlg.sqlg.test,TestAllVertices,testVertexIterator,Magic Number,The method contains a magic number: 8,35
pietermartin_sqlg,org.umlg.sqlg.test,TestAllVertices,testSqlgGraphVertices,Magic Number,The method contains a magic number: 10,71
pietermartin_sqlg,org.umlg.sqlg.test,TestAllVertices,testSqlgGraphVertices,Magic Number,The method contains a magic number: 10,71
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,g_V_bothE_properties_dedup_hasKeyXweightX_hasValueXltX0d3XX_value,Long Statement,The length of the statement "final Traversal<Vertex`Double> traversal=this.sqlgGraph.traversal().V().bothE().properties().dedup().hasKey("weight").hasValue(P.lt(0.3)).value();" is 146.,27
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,g_V_bothE_properties_dedup_hasKeyXweightX_hasValueXltX0d3XX_value,Magic Number,The method contains a magic number: 0.3,27
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,g_V_bothE_properties_dedup_hasKeyXweightX_hasValueXltX0d3XX_value,Magic Number,The method contains a magic number: 0.2,27
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,testHasProperty,Magic Number,The method contains a magic number: 2,47
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,testHasNotProperty,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,g_V_in_hasIdXneqX1XX,Magic Number,The method contains a magic number: 3,69
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,testHasIDDifferentLabels,Long Statement,The length of the statement "edges=this.sqlgGraph.traversal().V(a1.id()).outE("ab").as("e").inV().hasId(P.within(a1.id()`c1.id())).select("e").toList();" is 123.,121
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,testHasIDDifferentLabels,Long Statement,The length of the statement "edges=this.sqlgGraph.traversal().V(a1.id()).outE("ab").as("e").inV().hasId(P.within(a1.id()`b2.id())).select("e").toList();" is 123.,121
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,g_V_hasXk_withinXcXX_valuesXkX,Long Statement,The length of the statement "this.sqlgGraph.traversal().addV().property("k"`"轉注").addV().property("k"`"✦").addV().property("k"`"♠").addV().property("k"`"A").iterate();" is 138.,194
pietermartin_sqlg,org.umlg.sqlg.test,TestHas,testHasOnEmptyProperty,Magic Number,The method contains a magic number: 2,237
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetByteArrayProperty,Long Statement,The length of the statement "Assert.assertEquals("I pack some weirdness:'\"`:/?"`new String((byte[])marko.property("bytesText").value()`StandardCharsets.UTF_8));" is 132.,42
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetByteArrayProperty,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetByteArrayProperty,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetBytePrimitiveArrayProperty,Long Statement,The length of the statement "Assert.assertEquals("I pack some weirdness:'\"`:/?"`new String((byte[])marko.property("bytesText").value()`StandardCharsets.UTF_8));" is 132.,110
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetBytePrimitiveArrayProperty,Magic Number,The method contains a magic number: 2,110
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetBytePrimitiveArrayProperty,Magic Number,The method contains a magic number: 2,110
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetDoublePrimitiveArrayProperty,Magic Number,The method contains a magic number: 0.00001,124
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testSetFloatPrimitiveArrayProperty,Magic Number,The method contains a magic number: 0.00001f,133
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testObjectProperties,Long Statement,The length of the statement "Vertex v=this.sqlgGraph.addVertex(T.label`"Person"`"age2"`Short.valueOf((short)1)`"age3"`Integer.valueOf(1)`"age4"`Long.valueOf(1L)`"age5"`Float.valueOf(1f)`"age6"`Double.valueOf(1d)`"ok"`Boolean.TRUE);" is 202.,291
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testObjectPropertiesNoFloat,Long Statement,The length of the statement "Vertex v=this.sqlgGraph.addVertex(T.label`"Person"`"age2"`Short.valueOf((short)1)`"age3"`Integer.valueOf(1)`"age4"`Long.valueOf(1L)`"age6"`Double.valueOf(1d)`"ok"`Boolean.TRUE);" is 177.,311
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testDateTimeProperties,Long Statement,The length of the statement "ZonedDateTime zdt1Fixed=ZonedDateTime.of(zdt.toLocalDateTime()`ZoneId.of("Africa/Johannesburg")).truncatedTo(ChronoUnit.MILLIS);" is 128.,328
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testDateTimeProperties,Magic Number,The method contains a magic number: 3,328
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testDateTimeProperties,Magic Number,The method contains a magic number: 12,328
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testEdgeDateTimeProperties,Magic Number,The method contains a magic number: 3,410
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testEdgeDateTimeProperties,Magic Number,The method contains a magic number: 12,410
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testDateTimeArrayProperties,Magic Number,The method contains a magic number: 3,449
pietermartin_sqlg,org.umlg.sqlg.test,TestSetProperty,testDateTimeArrayProperties,Magic Number,The method contains a magic number: 12,449
pietermartin_sqlg,org.umlg.sqlg.test,TestGetById,testByCollectionOfIds,Magic Number,The method contains a magic number: 1_000,45
pietermartin_sqlg,org.umlg.sqlg.test,TestLoadElementProperties,testLoadVertexPropertyProperly,Magic Number,The method contains a magic number: 2,30
pietermartin_sqlg,org.umlg.sqlg.test,TestLoadElementProperties,testLoadVertexPropertyProperlyUserSuppliedPK,Magic Number,The method contains a magic number: 100,43
pietermartin_sqlg,org.umlg.sqlg.test,TestLoadElementProperties,testLoadVertexPropertyProperlyUserSuppliedPK,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test,TestCountVerticesAndEdges,testCountVertices,Magic Number,The method contains a magic number: 6L,14
pietermartin_sqlg,org.umlg.sqlg.test,TestCountVerticesAndEdges,testCountEdges,Magic Number,The method contains a magic number: 9L,26
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,finished,Long Statement,The length of the statement "String time=String.format("%02d min` %02d sec` %02d mil"`TimeUnit.MILLISECONDS.toMinutes(millis)`TimeUnit.MILLISECONDS.toSeconds(millis) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis))`TimeUnit.MILLISECONDS.toMillis(millis) - TimeUnit.SECONDS.toMillis(TimeUnit.MILLISECONDS.toSeconds(millis)));" is 316.,76
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,finished,Long Statement,The length of the statement "LOGGER.info(String.format("Finished test: %s.%s Time taken: %s"`description.getClassName()`description.getMethodName()`time));" is 126.,76
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_schema_vertex")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 214.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_in_edges")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 209.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_out_edges")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 210.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_vertex_property")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 216.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_vertex_partition")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 217.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_edge_partition")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 215.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_partition_partition")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 220.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_edge_property")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 214.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_vertex_identifier")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 218.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_edge_identifier")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 216.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_vertex_distribution")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 220.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_edge_distribution")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 218.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_vertex_colocate")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 216.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_edge_colocate")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 214.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_vertex_index")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 213.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_edge_index")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 211.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_index_property")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 215.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_graph")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 206.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_log")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 204.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_schema")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 207.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_vertex")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 207.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_edge")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 205.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_partition")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 210.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_property")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 209.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,dropSqlgSchema,Long Statement,The length of the statement "result.add("DROP TABLE " + sqlgGraph.getSqlDialect().maybeWrapInQoutes("sqlg_schema") + "."+ sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_index")+ (sqlgGraph.getSqlDialect().needsSemicolon() ? ";" : ""));" is 206.,185
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,convertToEdgeId,Long Statement,The length of the statement "return graph.traversal().V().has("name"`outVertexName).outE(edgeLabel).as("e").inV().has("name"`inVertexName).<Edge>select("e").next().id();" is 140.,352
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Complex Method,Cyclomatic complexity of the method is 25,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Long Method,The method has 166 lines of code.,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 6,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 6,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 29,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.5d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.5f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 7,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 8,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 9,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 27,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.5d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.5f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 7,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.2d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.2f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 12,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 11,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 9,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 32,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 4,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 10,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.4f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 11,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 8,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 5,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 10,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 35,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 6,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.2d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001d,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.2f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 0.0001f,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertToyGraph,Magic Number,The method contains a magic number: 12,360
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,checkResults,Long Statement,The length of the statement "MatcherAssert.assertThat("Checking map result existence: " + t`expectedResults.stream().filter(e -> e instanceof Map).anyMatch(e -> internalCheckMap((Map)e`(Map)t))`CoreMatchers.is(true));" is 188.,555
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,internalCheckMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> actualList=actualMap.entrySet().stream().sorted(Comparator.comparing(a -> a.getKey().toString())).collect(Collectors.toList());" is 154.,583
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,internalCheckMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> expectedList=expectedMap.entrySet().stream().sorted(Comparator.comparing(a -> a.getKey().toString())).collect(Collectors.toList());" is 158.,583
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Parameter List,The method has 6 parameters. ,603
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Statement,The length of the statement "Assert.assertEquals("isForMultipleQueries should be " + isForMultipleQueries`isForMultipleQueries`sqlgStep.isForMultipleQueries());" is 131.,603
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Statement,The length of the statement "Assert.assertEquals("comparatorsNotOnDb should be " + comparatorsNotOnDb`comparatorsNotOnDb`sqlgStep.getReplacedSteps().stream().allMatch(r -> r.getDbComparators().isEmpty()));" is 176.,603
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Statement,The length of the statement "Assert.assertEquals("rangeOnDb should be " + rangeOnDb`rangeOnDb`sqlgStep.getReplacedSteps().get(sqlgStep.getReplacedSteps().size() - 1).getSqlgRangeHolder().isApplyOnDb());" is 173.,603
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Parameter List,The method has 5 parameters. ,624
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Statement,The length of the statement "Assert.assertEquals("isForMultipleQueries should be " + isForMultipleQueries`isForMultipleQueries`sqlgStep.isForMultipleQueries());" is 131.,624
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Statement,The length of the statement "Assert.assertEquals("comparatorsNotOnDb should be " + comparatorsNotOnDb`comparatorsNotOnDb`sqlgStep.getReplacedSteps().stream().allMatch(r -> r.getDbComparators().isEmpty()));" is 176.,624
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,assertStep,Long Statement,The length of the statement "Assert.assertEquals("comparatorsNotOnDb should be " + comparatorsNotOnDb`comparatorsNotOnDb`sqlgStep.getReplacedSteps().stream().allMatch(r -> r.getDbComparators().isEmpty()));" is 176.,636
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,makeMapList,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,makeMapList,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test,BaseTest,makeMapList,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test,TestVertexNavToEdges,testFromVertexGetEdges,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test,TestVertexNavToEdges,testOutE,Magic Number,The method contains a magic number: 3L,47
pietermartin_sqlg,org.umlg.sqlg.test,TestVertexNavToEdges,testOutEAllLabels,Magic Number,The method contains a magic number: 3L,60
pietermartin_sqlg,org.umlg.sqlg.test,TestPool,testSqlGraphConnectionsDoesNotExhaustPool,Magic Number,The method contains a magic number: 1000,13
pietermartin_sqlg,org.umlg.sqlg.test,TestPool,testSqlGraphConnectionsDoesNotExhaustPool,Magic Number,The method contains a magic number: 1000,13
pietermartin_sqlg,org.umlg.sqlg.test.tp3,SqlgMSSqlServerProvider,getBaseConfiguration,Magic Number,The method contains a magic number: 10,17
pietermartin_sqlg,org.umlg.sqlg.test.tp3,SqlgPostgresProvider,getBaseConfiguration,Magic Number,The method contains a magic number: 10,24
pietermartin_sqlg,org.umlg.sqlg.test.tp3,SqlgPostgresProvider,getBaseConfiguration,Magic Number,The method contains a magic number: 3,24
pietermartin_sqlg,org.umlg.sqlg.test.tp3,SqlgMysqlProvider,getBaseConfiguration,Magic Number,The method contains a magic number: 10,24
pietermartin_sqlg,org.umlg.sqlg.test.tp3,SqlgMariaDBProvider,getBaseConfiguration,Magic Number,The method contains a magic number: 10,24
pietermartin_sqlg,org.umlg.sqlg.doc,AsciiDoctor,createDocs,Long Statement,The length of the statement "Map<String`Object> options=OptionsBuilder.options().attributes(attributes).toFile(new File(html.getPath())).headerFooter(true).safe(SafeMode.SERVER).asMap();" is 157.,25
pietermartin_sqlg,org.umlg.sqlg.gis,GeographyPoint,GeographyPoint,Magic Number,The method contains a magic number: 4326,24
pietermartin_sqlg,org.umlg.sqlg.gis,GeographyPolygon,GeographyPolygon,Magic Number,The method contains a magic number: 4326,24
pietermartin_sqlg,org.umlg.sqlg.gis,Gis,distanceBetween,Long Statement,The length of the statement "if (statement.execute("SELECT ST_Distance('" + johannesburg.toString() + "'::geography` '"+ pretoria.toString()+ "':: geography)")) {" is 133.,38
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Gis").has("point"`P.within(point1`point3`point4)).toList();" is 122.,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 26.2044,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 28.0456,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 26.2045,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 28.0457,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 26.2046,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 28.0458,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 26.2047,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 28.0459,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPoint,Magic Number,The method contains a magic number: 3,26
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Gis").has("line"`P.within(lineString1`lineString3`lineString4)).toList();" is 136.,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 26.2044,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 28.0456,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 26.2045,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 28.0457,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 26.2046,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 28.0458,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 26.2047,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 28.0459,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinLineString,Magic Number,The method contains a magic number: 3,42
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPolygon,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Gis").has("polygon"`P.within(polygon1`polygon3`polygon4)).toList();" is 130.,65
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinPolygon,Magic Number,The method contains a magic number: 3,65
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Gis").has("point"`P.within(point1`point3`point4)).toList();" is 122.,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 26.2044,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 28.0456,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 26.2045,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 28.0457,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 26.2046,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 28.0458,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 26.2047,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 28.0459,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPoint,Magic Number,The method contains a magic number: 3,86
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPolygon,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Gis").has("polygon"`P.within(polygon1`polygon3`polygon4)).toList();" is 130.,102
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGisBulkWithin,testBulkWithinGeographyPolygon,Magic Number,The method contains a magic number: 3,102
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testPoint,Magic Number,The method contains a magic number: 26.2044,27
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testPoint,Magic Number,The method contains a magic number: 28.0456,27
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testPoint,Magic Number,The method contains a magic number: 25.7461,27
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testPoint,Magic Number,The method contains a magic number: 28.1881,27
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testPoint,Magic Number,The method contains a magic number: 26.2055,27
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testPoint,Magic Number,The method contains a magic number: 28.0477,27
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 26.2044,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 28.0456,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 25.7461,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 28.1881,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 26.55,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 30.0456,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 26.7461,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testLine,Magic Number,The method contains a magic number: 29.1881,44
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testGeographyPoint,Magic Number,The method contains a magic number: 26.2044,61
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testGeographyPoint,Magic Number,The method contains a magic number: 28.0456,61
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testGeographyPoint,Magic Number,The method contains a magic number: 25.7461,61
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testGeographyPoint,Magic Number,The method contains a magic number: 28.1881,61
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testGeographyPoint,Magic Number,The method contains a magic number: 25.7461,61
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testGeographyPoint,Magic Number,The method contains a magic number: 28.1881,61
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Long Statement,The length of the statement "List<Vertex> schemaVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`sqlgGraph1.getSqlDialect().getPublicSchema()).toList();" is 151.,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`sqlgGraph1.getSqlDialect().getPublicSchema()).out("schema_vertex").has("name"`"Gis").out("vertex_property").has("name"`"point").toList();" is 235.,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Long Statement,The length of the statement "Assert.assertEquals(geographyPointJohannesburg`sqlgGraph1.traversal().V(johannesburgGeographyPoint.id()).next().value("geographyPoint"));" is 137.,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Long Statement,The length of the statement "Assert.assertEquals(geographyPolygon`sqlgGraph1.traversal().V(johannesburgGeographyPolygon.id()).next().value("geographyPolygon"));" is 131.,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Magic Number,The method contains a magic number: 26.2044,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Magic Number,The method contains a magic number: 28.0456,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Magic Number,The method contains a magic number: 25.7461,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Magic Number,The method contains a magic number: 28.1881,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Magic Number,The method contains a magic number: 26.2044,117
pietermartin_sqlg,org.umlg.sqlg.test.gis,TestGis,testUpgradePostGisTypes,Magic Number,The method contains a magic number: 28.0456,117
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,retrieveRootNodes,Complex Method,Cyclomatic complexity of the method is 10,21
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,retrieveRootNodes,Long Identifier,The length of the identifier metaVertexEdgeChildrenArrayNode is 31.,21
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,retrieveRootNodes,Long Identifier,The length of the identifier propertyColumnChildrenArrayNode is 31.,21
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,retrieveRootNodes,Long Identifier,The length of the identifier propertyColumnChildrenArrayNode is 31.,21
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,createMetaVertexEdgeTreeItem,Magic Number,The method contains a magic number: 2,154
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,createVertexLabelTreeItem,Long Parameter List,The method has 5 parameters. ,178
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,createVertexLabelTreeItem,Magic Number,The method contains a magic number: 3,178
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,createEdgeLabelTreeItem,Long Parameter List,The method has 5 parameters. ,206
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,createEdgeLabelTreeItem,Magic Number,The method contains a magic number: 3,206
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaTreeBuilder,createPropertyColumnTreeItem,Magic Number,The method contains a magic number: 3,234
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.get("/sqlg/data/v1/schema/:schemaName/:abstractLabel/:vertexOrEdge"`(req`res) -> SchemaResource.retrieveVertexEdgeLabelDetails(req));" is 138.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.delete("/sqlg/data/v1/delete/schema/:schemaName/:abstractLabel/:vertexOrEdge"`(req`res) -> SchemaResource.deleteAbstractLabel(req));" is 137.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.delete("/sqlg/data/v1/delete/schema/:schemaName/:abstractLabel/:vertexOrEdge/properties"`(req`res) -> SchemaResource.deleteProperties(req));" is 145.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.delete("/sqlg/data/v1/delete/schema/:schemaName/:abstractLabel/:vertexOrEdge/indexes"`(req`res) -> SchemaResource.deleteIndexes(req));" is 139.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.delete("/sqlg/data/v1/delete/schema/:schemaName/:abstractLabel/vertex/inEdgeLabels"`(req`res) -> SchemaResource.deleteInEdgeLabels(req));" is 142.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.delete("/sqlg/data/v1/delete/schema/:schemaName/:abstractLabel/vertex/outEdgeLabels"`(req`res) -> SchemaResource.deleteOutEdgeLabels(req));" is 144.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.delete("/sqlg/data/v1/delete/schema/:schemaName/:abstractLabel/:vertexOrEdge/partitions"`(req`res) -> SchemaResource.deletePartitions(req));" is 145.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.put("/sqlg/data/v1/rename/schema/:schemaName/:vertexLabel/:newVertexLabel"`(req`res) -> SchemaResource.renameVertexLabel(req));" is 132.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "http.put("/sqlg/data/v1/rename/schema/:schemaName/:abstractLabel/:vertexOrEdge/properties"`(req`res) -> SchemaResource.renameProperties(req));" is 142.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Long Statement,The length of the statement "res.cookie("/"`AuthUtil.SQLG_TOKEN`token`SqlgUI.INSTANCE.getSqlgGraph().configuration().getInt("sqlg.ui.cookie.expiry"`3600)`true`false);" is 137.,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Magic Number,The method contains a magic number: 3600,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Magic Number,The method contains a magic number: 401,35
pietermartin_sqlg,org.umlg.sqlg.ui,SparkResources,resources,Magic Number,The method contains a magic number: 500,35
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,userAllowedToEdit,Long Statement,The length of the statement "return mapper.createObjectNode().put("userAllowedToEdit"`SqlgUI.INSTANCE.getSqlgGraph().configuration().getBoolean(edit`false));" is 128.,54
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,login,Complex Conditional,The conditional expression username != null && !StringUtils.isEmpty(passwordInPropertyFile) && passwordInPropertyFile.equals(password) is complex.,64
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,login,Long Statement,The length of the statement "res.cookie("/"`AuthUtil.SQLG_TOKEN`token`SqlgUI.INSTANCE.getSqlgGraph().configuration().getInt("sqlg.ui.cookie.expiry"`3600)`true`false);" is 137.,64
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,login,Magic Number,The method contains a magic number: 3600,64
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveTopologyTree,Long Statement,The length of the statement "Pair<ListOrderedSet<SlickLazyTree>`ListOrderedSet<SlickLazyTree>> rootNodes=SchemaTreeBuilder.retrieveRootNodes(selectedItemId);" is 128.,112
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveTopologyTree,Long Statement,The length of the statement "@SuppressWarnings("UnnecessaryLocalVariable") ArrayNode result=treeContainer.complete(new SchemaTreeBuilder.SchemaTreeSlickLazyTreeHelper(initialEntries));" is 155.,112
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveSchemas,Long Statement,The length of the statement "schemaColumnsColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(220).build().toJson(objectMapper));" is 150.,123
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveSchemas,Magic Number,The method contains a magic number: 220,123
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexLabels,Long Statement,The length of the statement "vertexLabelColumnsColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(220).build().toJson(objectMapper));" is 155.,144
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexLabels,Magic Number,The method contains a magic number: 220,144
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveEdgeLabels,Long Statement,The length of the statement "edgeLabelColumnsColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(220).build().toJson(objectMapper));" is 153.,168
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveEdgeLabels,Magic Number,The method contains a magic number: 220,168
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveSchemaDetails,Long Statement,The length of the statement "List<Vertex> schemaVertices=sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`schema.getName()).toList();" is 184.,192
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Complex Method,Cyclomatic complexity of the method is 19,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Method,The method has 200 lines of code.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "List<Vertex> schemaVertices=sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`schema.getName()).toList();" is 184.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "propertyColumnsColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(220).setEditable(true).build().toJson(objectMapper));" is 170.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "propertyColumnsColumns.add(new SlickGridColumn.SlickGridColumnBuilder("type"`"sqlg type"`PropertyType.STRING).setMinWidth(220).build().toJson(objectMapper));" is 157.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "propertyColumnsColumns.add(new SlickGridColumn.SlickGridColumnBuilder("sqlType"`"sql type"`PropertyType.STRING).setMinWidth(220).build().toJson(objectMapper));" is 159.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "indexColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 141.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "indexColumns.add(new SlickGridColumn.SlickGridColumnBuilder("type"`"type"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 141.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "indexColumns.add(new SlickGridColumn.SlickGridColumnBuilder("properties"`"properties"`PropertyType.STRING).build().toJson(objectMapper));" is 137.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "partitionColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 145.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "partitionColumns.add(new SlickGridColumn.SlickGridColumnBuilder("from"`"from"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 145.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "partitionColumns.add(new SlickGridColumn.SlickGridColumnBuilder("to"`"to"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 141.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "partitionColumns.add(new SlickGridColumn.SlickGridColumnBuilder("in"`"in"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 141.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "partitionColumns.add(new SlickGridColumn.SlickGridColumnBuilder("type"`"type"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 145.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "partitionColumns.add(new SlickGridColumn.SlickGridColumnBuilder("expression"`"expression"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 157.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "inEdgeLabelColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 147.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "inEdgeLabelColumns.add(new SlickGridColumn.SlickGridColumnBuilder("schema"`"schema"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 151.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "outEdgeLabelColumns.add(new SlickGridColumn.SlickGridColumnBuilder("name"`"name"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 148.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "outEdgeLabelColumns.add(new SlickGridColumn.SlickGridColumnBuilder("schema"`"schema"`PropertyType.STRING).setMinWidth(80).build().toJson(objectMapper));" is 152.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "abstractLabelObjectNode.put("label"`"VertexLabel").put("name"`vertexLabel.getName()).put("ID"`"TODO").put("createdOn"`"TODO");" is 126.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "indexObjectNode.put("properties"`index.getProperties().stream().map(PropertyColumn::getName).reduce((a`b) -> a + "`" + b).orElseThrow());" is 137.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "abstractLabelObjectNode.put("label"`"EdgeLabel").put("name"`edgeLabel.getName()).put("ID"`schemaVertex.id().toString()).put("createdOn"`schemaVertex.value("createdOn").toString());" is 180.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Long Statement,The length of the statement "indexObjectNode.put("properties"`index.getProperties().stream().map(PropertyColumn::getName).reduce((a`b) -> a + "`" + b).orElseThrow());" is 137.,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 220,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 220,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 220,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,retrieveVertexEdgeLabelDetails,Magic Number,The method contains a magic number: 80,217
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,preparePartition,Long Parameter List,The method has 6 parameters. ,489
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteSchemas,Long Statement,The length of the statement "Preconditions.checkState(!schemaNameText.equals(sqlgGraph.getSqlDialect().getPublicSchema())`"The public ('%s') schema may not be deleted."`schemaName);" is 152.,561
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteVertexLabels,Long Identifier,The length of the identifier vertexLabelConcatenatedMessage is 30.,594
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteVertexLabels,Long Statement,The length of the statement "String vertexLabelConcatenatedMessage=vertexLabelNames.stream().map(a -> "'" + a + "'").reduce((a`b) -> a + "`" + b).orElse("");" is 128.,594
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteVertexLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Start deleting vertexLabels` [%s]"`vertexLabelConcatenatedMessage));" is 129.,594
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteVertexLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Done deleting vertexLabels` [%s]"`vertexLabelConcatenatedMessage));" is 128.,594
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteEdgeLabels,Long Statement,The length of the statement "String edgeLabelConcatenatedMessage=edgeLabelNames.stream().map(a -> "'" + a + "'").reduce((a`b) -> a + "`" + b).orElse("");" is 124.,631
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Start deleting edgeLabels` [%s]"`edgeLabelConcatenatedMessage));" is 125.,631
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Done deleting edgeLabels` [%s]"`edgeLabelConcatenatedMessage));" is 124.,631
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteSchema,Long Statement,The length of the statement "Preconditions.checkState(!schemaName.equals(sqlgGraph.getSqlDialect().getPublicSchema())`"The public ('%s') schema may not be deleted."`schemaName);" is 148.,668
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteAbstractLabel,Long Statement,The length of the statement "Mono.just(new AbstractLabelHolder(schemaName`abstractLabel`vertexOrEdge)).subscribeOn(Schedulers.boundedElastic()).subscribe((abstractLabelHolder) -> {" is 151.,689
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteAbstractLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Start deleting %s` [%s]"`abstractLabelHolder.vertexOrEdge.equals(VERTEX_EDGE.VERTEX.name) ? "VertexLabel" : "EdgeLabel"`abstractLabelHolder.abstractLabel));" is 217.,689
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteAbstractLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshTree(String.format("metaSchema_%s_%s"`abstractLabelHolder.schemaName`abstractLabelHolder.vertexOrEdge));" is 144.,689
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteAbstractLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Done deleting %s` [%s]"`abstractLabelHolder.vertexOrEdge.equals(VERTEX_EDGE.VERTEX.name) ? "VertexLabel" : "EdgeLabel"`abstractLabelHolder.abstractLabel));" is 216.,689
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteProperties,Complex Method,Cyclomatic complexity of the method is 9,732
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteProperties,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7759aa54,732
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteInEdgeLabels,Long Statement,The length of the statement "Mono.just(new EdgeLabelHolder(schemaName`abstractLabel`inEdgeLabelsToRemove)).subscribeOn(Schedulers.boundedElastic()).subscribe((inEdgeLabelHolder -> {" is 152.,818
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteInEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Start deleting inEdgeLabels` [%s]"`inEdgeLabelHolder.edgeLabelsToRemove.stream().reduce((a`b) -> a + "`" + b).orElse("")));" is 184.,818
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteInEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(inEdgeLabelHolder.schemaName`inEdgeLabelHolder.abstractLabel`VERTEX_EDGE.VERTEX.name`"Deleted inEdgeLabels successfully.");" is 177.,818
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteInEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Done deleting inEdgeLabels` [%s]"`inEdgeLabelHolder.edgeLabelsToRemove.stream().reduce((a`b) -> a + "`" + b).orElse("")));" is 183.,818
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteInEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(inEdgeLabelHolder.schemaName`inEdgeLabelHolder.abstractLabel`VERTEX_EDGE.VERTEX.name`"Failed to delete inEdgeLabels");" is 172.,818
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteInEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Failed deleting inEdgeLabels` [%s]` %s"`inEdgeLabelHolder.edgeLabelsToRemove.stream().reduce((a`b) -> a + "`" + b).orElse("")`e.getMessage()));" is 204.,818
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteOutEdgeLabels,Long Statement,The length of the statement "Mono.just(new EdgeLabelHolder(schemaName`abstractLabel`outEdgeLabelsToRemove)).subscribeOn(Schedulers.boundedElastic()).subscribe((edgeLabelHolder -> {" is 151.,888
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteOutEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Start deleting inEdgeLabels` [%s]"`edgeLabelHolder.edgeLabelsToRemove.stream().reduce((a`b) -> a + "`" + b).orElse("")));" is 182.,888
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteOutEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(edgeLabelHolder.schemaName`edgeLabelHolder.abstractLabel`VERTEX_EDGE.VERTEX.name`"Deleted inEdgeLabels successfully.");" is 173.,888
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteOutEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Done deleting inEdgeLabels` [%s]"`edgeLabelHolder.edgeLabelsToRemove.stream().reduce((a`b) -> a + "`" + b).orElse("")));" is 181.,888
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteOutEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(edgeLabelHolder.schemaName`edgeLabelHolder.abstractLabel`VERTEX_EDGE.VERTEX.name`"Failed to delete inEdgeLabels");" is 168.,888
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteOutEdgeLabels,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Failed deleting inEdgeLabels` [%s]` %s"`edgeLabelHolder.edgeLabelsToRemove.stream().reduce((a`b) -> a + "`" + b).orElse("")`e.getMessage()));" is 202.,888
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteIndexes,Complex Method,Cyclomatic complexity of the method is 9,958
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deleteIndexes,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@23b3557f,958
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deletePartitions,Complex Method,Cyclomatic complexity of the method is 9,1043
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,deletePartitions,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3bfcf05f,1043
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "Mono.just(new RenameVertexLabelHolder(schemaName`vertexLabel`newVertexLabel)).subscribeOn(Schedulers.boundedElastic()).subscribe((renameVertexLabelHolder -> {" is 158.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Start renaming VertexLabel` [%s]"`renameVertexLabelHolder.vertexLabel));" is 133.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"VertexLabel %s does not exist"`renameVertexLabelHolder.vertexLabel);" is 126.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshTree(String.format("metaSchema_%s_%s"`renameVertexLabelHolder.schemaName`VERTEX_EDGE.VERTEX.name));" is 139.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(renameVertexLabelHolder.schemaName`renameVertexLabelHolder.vertexLabel`VERTEX_EDGE.VERTEX.name`"Renamed VertexLabel successfully");" is 185.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Renamed VertexLabel` [%s]"`renameVertexLabelHolder.vertexLabel));" is 126.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(renameVertexLabelHolder.schemaName`renameVertexLabelHolder.vertexLabel`VERTEX_EDGE.VERTEX.name`"Failed to delete partitions");" is 180.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameVertexLabel,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Failed renaming VertexLabel` [%s]` %s"`renameVertexLabelHolder.vertexLabel`e.getMessage()));" is 153.,1128
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "Mono.just(new PropertyRenameHolder(schemaName`abstractLabel`vertexOrEdge`propertiesToRename)).subscribeOn(Schedulers.boundedElastic()).subscribe((renamePropertyHolder -> {" is 171.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "Preconditions.checkState(vertexLabelOptional.isPresent()`"VertexLabel %s does not exist"`renamePropertyHolder.abstractLabel);" is 125.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "Preconditions.checkState(propertyColumnOptional.isPresent()`"PropertyColumn %s does not exist"`oldNewNamePair.getLeft());" is 121.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "Preconditions.checkState(edgeLabelOptional.isPresent()`"EdgeLabel %s does not exist"`renamePropertyHolder.abstractLabel);" is 121.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "Preconditions.checkState(propertyColumnOptional.isPresent()`"PropertyColumn %s does not exist"`oldNewNamePair.getLeft());" is 121.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(renamePropertyHolder.schemaName`renamePropertyHolder.abstractLabel`renamePropertyHolder.vertexOrEdge`"Renamed property successfully");" is 188.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Renamed property on` [%s]"`renamePropertyHolder.abstractLabel));" is 125.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendRefreshAbstractLabel(renamePropertyHolder.schemaName`renamePropertyHolder.abstractLabel`renamePropertyHolder.vertexOrEdge`"Failed to rename property");" is 184.,1180
pietermartin_sqlg,org.umlg.sqlg.ui,SchemaResource,renameProperties,Long Statement,The length of the statement "NotificationManager.INSTANCE.sendNotification(String.format("Failed renaming property on` [%s]` %s"`renamePropertyHolder.abstractLabel`e.getMessage()));" is 152.,1180
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,toJson,Complex Method,Cyclomatic complexity of the method is 12,48
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,toJson,Magic Number,The method contains a magic number: 60,48
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,getColor,Magic Number,The method contains a magic number: 2,309
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,getColor,Magic Number,The method contains a magic number: 3,309
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 100,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 70,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 1000,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 75,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 10000,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 85,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 100000,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 90,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 1000000,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 95,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 10000000,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 100,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickGridColumn,rowNumMaxWidth,Magic Number,The method contains a magic number: 105,332
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickLazyTreeContainer,walkParent,Complex Method,Cyclomatic complexity of the method is 12,80
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickLazyTreeContainer,walkParent,Long Statement,The length of the statement "LOGGER.debug(String.format("finish iSlickLazyTree.children 1 for parent %s` Time taken: %s"`parent.getId()`stopWatch.toString()));" is 130.,80
pietermartin_sqlg,org.umlg.sqlg.ui.util,SlickLazyTreeContainer,walkParent,Long Statement,The length of the statement "LOGGER.debug(String.format("finish iSlickLazyTree.children 2 for parent %s` Time taken: %s"`parent.getId()`stopWatch.toString()));" is 130.,80
pietermartin_sqlg,org.umlg.sqlg.ui.servlet,SqlgWebsocketServlet,configure,Magic Number,The method contains a magic number: 60000,12
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Long Statement,The length of the statement "VertexLabel test1VertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Test1"`new LinkedHashMap<>(){" is 129.,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Long Statement,The length of the statement "VertexLabel test2VertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Test2"`new LinkedHashMap<>(){" is 129.,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Magic Number,The method contains a magic number: 5,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Magic Number,The method contains a magic number: 5,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Magic Number,The method contains a magic number: 5,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Magic Number,The method contains a magic number: 1000,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Magic Number,The method contains a magic number: 60,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Magic Number,The method contains a magic number: 60,26
pietermartin_sqlg,org.umlg.sqlg.ui.test,SqlgUITest,test,Magic Number,The method contains a magic number: 5,26
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testRecordIdGraphBinarySerializer,Long Statement,The length of the statement "final GraphBinaryMessageSerializerV1 serializer=new GraphBinaryMessageSerializerV1(TypeSerializerRegistry.build().addCustomType(RecordId.class`new RecordIdBinarySerializer()).create());" is 185.,57
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testRecordIdGraphBinarySerializer,Long Statement,The length of the statement "final ByteBuf serialized=serializer.serializeResponseAsBinary(ResponseMessage.build(UUID.randomUUID()).result(recordId).create()`allocator);" is 140.,57
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testRecordIdGraphBinarySerializer,Magic Number,The method contains a magic number: 333L,57
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testGraphBinarySerializer,Long Identifier,The length of the identifier graphBinaryMessageSerializerV1 is 30.,73
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testGraphBinarySerializer,Long Statement,The length of the statement "GraphBinaryMessageSerializerV1 graphBinaryMessageSerializerV1=new GraphBinaryMessageSerializerV1(typeSerializerRegistry);" is 121.,73
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testGraphJsonSerializer,Long Statement,The length of the statement "GraphSONMapper.Builder builder=GraphSONMapper.build().addRegistry(registry).addCustomModule(GraphSONXModuleV3d0.build().create(false));" is 135.,92
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testGraphJsonSerializer,Magic Number,The method contains a magic number: 10,92
pietermartin_sqlg,org.umlg.sqlg.gremlin.server,TestSqlgGremlinServer,testGraphJsonSerializer,Magic Number,The method contains a magic number: 10,92
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testEdgesAcrossSchema,Magic Number,The method contains a magic number: 2,73
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testEdgeBetweenSchemas,Magic Number,The method contains a magic number: 3,98
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testEdgeBetweenSchemas,Magic Number,The method contains a magic number: 2,98
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 10,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 100,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 1000,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 100,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 999,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 999,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 100,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testManySchemas,Magic Number,The method contains a magic number: 99,126
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testLabelsForSchemaBeforeCommit,Magic Number,The method contains a magic number: 2,149
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testGetAllTableLabels,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getTableLabels(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"V_Person")) != null);" is 148.,156
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testGetAllTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> labels=this.sqlgGraph.getTopology().getTableLabels(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"V_Person"));" is 168.,156
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testGetAllTableLabels,Long Statement,The length of the statement "Assert.assertTrue(labels.getRight().contains(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"E_person_address")));" is 131.,156
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testGetAllTableLabels,Long Statement,The length of the statement "Assert.assertTrue(edgeForeignKeys.containsKey(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"E_person_address").toString()));" is 143.,156
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testGetAllTableLabels,Long Statement,The length of the statement "labels=this.sqlgGraph.getTopology().getTableLabels(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"V_Person"));" is 128.,156
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testGetAllTableLabels,Long Statement,The length of the statement "Assert.assertTrue(labels.getRight().contains(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"E_person_address")));" is 131.,156
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testGetAllTableLabels,Long Statement,The length of the statement "Assert.assertTrue(edgeForeignKeys.containsKey(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"E_person_address").toString()));" is 143.,156
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testSchemaPropertyEndingIn_ID,Magic Number,The method contains a magic number: 1234,186
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testSchemaPropertyEndingIn_ID,Magic Number,The method contains a magic number: 1234,186
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testSchemaPropertyEndingIn_ID,Magic Number,The method contains a magic number: 1234,186
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testSchemaPropertyEndingIn_ID,Magic Number,The method contains a magic number: 3,186
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testSchemaPropertyEndingIn_ID,Magic Number,The method contains a magic number: 2,186
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchema,testUnprefixedEdgeLabelWithin,Magic Number,The method contains a magic number: 2,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,shouldExecuteWithCompetingThreads,Magic Number,The method contains a magic number: 250,100
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,shouldExecuteWithCompetingThreads,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,shouldExecuteWithCompetingThreads,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,shouldExecuteWithCompetingThreads,Magic Number,The method contains a magic number: 5,100
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,run,Magic Number,The method contains a magic number: 2,119
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,run,Magic Number,The method contains a magic number: 2,119
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadVertices,Long Statement,The length of the statement "Assert.assertTrue(String.format("Person%d not found"`i)`this.sqlgGraph.getTopology().getVertexLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"Person" + i).isPresent());" is 176.,181
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadVertices,Long Statement,The length of the statement "Assert.assertEquals(10`this.sqlgGraph.traversal().V().has(T.label`"Person" + i).has("name"`String.valueOf(i)).count().next().intValue());" is 137.,181
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadVertices,Magic Number,The method contains a magic number: 10,181
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadVertices,Magic Number,The method contains a magic number: 20,181
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadVertices,Magic Number,The method contains a magic number: 10,181
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadVertices,Magic Number,The method contains a magic number: 6000,181
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadVertices,Magic Number,The method contains a magic number: 10,181
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getVertexLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"Person" + i).isPresent());" is 138.,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Long Statement,The length of the statement "Assert.assertEquals(10`this.sqlgGraph.traversal().V().has(T.label`"Person" + i).has("name"`String.valueOf(i)).count().next().intValue());" is 137.,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Magic Number,The method contains a magic number: 10,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Magic Number,The method contains a magic number: 10,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Magic Number,The method contains a magic number: 60,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Magic Number,The method contains a magic number: 10,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadEdges,Magic Number,The method contains a magic number: 10,216
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadCreateSchemas,Magic Number,The method contains a magic number: 200,247
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadCreateSchemas,Magic Number,The method contains a magic number: 10_000,247
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadCreateSchemas,Magic Number,The method contains a magic number: 99,247
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultiThreadCreateSchemas,Magic Number,The method contains a magic number: 5,247
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "VertexLabel personTrue=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person_True"`new LinkedHashMap<>(){" is 129.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "VertexLabel addressTrue=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Address_True"`new LinkedHashMap<>(){" is 131.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "VertexLabel personLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new LinkedHashMap<>(){" is 125.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "VertexLabel addressLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Address"`new LinkedHashMap<>(){" is 127.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "Assert.assertEquals(400`sqlgGraph1.traversal().V().hasLabel("Person_True").count().next() + sqlgGraph1.traversal().V().hasLabel("Person").count().next());" is 154.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "Assert.assertEquals(400`sqlgGraph1.traversal().V().hasLabel("Address_True").count().next() + sqlgGraph1.traversal().V().hasLabel("Address").count().next());" is 156.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Long Statement,The length of the statement "Assert.assertEquals(400`sqlgGraph1.traversal().E().hasLabel("address_True").count().next() + sqlgGraph1.traversal().E().hasLabel("address").count().next());" is 156.,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Magic Number,The method contains a magic number: 50,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Magic Number,The method contains a magic number: 400,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Magic Number,The method contains a magic number: 100,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Magic Number,The method contains a magic number: 400,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Magic Number,The method contains a magic number: 400,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphs,Magic Number,The method contains a magic number: 400,267
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphsMultipleLabels,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,338
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphsMultipleLabels,Magic Number,The method contains a magic number: 3,338
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphsMultipleLabels,Magic Number,The method contains a magic number: 3,338
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphsMultipleLabels,Magic Number,The method contains a magic number: 200,338
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testMultipleGraphsMultipleLabels,Magic Number,The method contains a magic number: 200,338
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testLoadsOfSchemaChanges,Magic Number,The method contains a magic number: 10,388
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testLoadsOfSchemaChanges,Magic Number,The method contains a magic number: 1000,388
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,testLoadsOfSchemaChanges,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,simulateReadWriteChange,Magic Number,The method contains a magic number: 3_000,432
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,simulateReadWriteChange,Magic Number,The method contains a magic number: 1000,432
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,simulateReadWriteChange,Magic Number,The method contains a magic number: 3,432
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,simulateReadWriteChange,Magic Number,The method contains a magic number: 1000,432
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,simulateReadWriteChange,Magic Number,The method contains a magic number: 3,432
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,simulateReadWriteChange,Magic Number,The method contains a magic number: 1000,432
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultiThread,simulateReadWriteChange,Magic Number,The method contains a magic number: 1000,432
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,29
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaForeignKeyOutSchemaToPublic,Magic Number,The method contains a magic number: 1_000,45
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaForeignKeyInSchemaToPublic,Magic Number,The method contains a magic number: 1_000,61
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaVertexHas,Magic Number,The method contains a magic number: 1000,77
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaVertexHasWithKey,Magic Number,The method contains a magic number: 1000,93
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaVertexHasWithKeyMissingColumn,Magic Number,The method contains a magic number: 1000,108
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaVertexHasWithKeyMissingColumn,Magic Number,The method contains a magic number: 1_000,108
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaEdgeCreation,Magic Number,The method contains a magic number: 3,137
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaEdgeCreation,Magic Number,The method contains a magic number: 1000,137
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaEdgeCreation,Magic Number,The method contains a magic number: 3,137
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaEdgeCreation,Magic Number,The method contains a magic number: 3,137
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaEdgeCreation,Magic Number,The method contains a magic number: 1000,137
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaEdgesHas,Magic Number,The method contains a magic number: 1000,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLazyLoadTableViaEdgesHas,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaRemembersUncommittedSchemas,Magic Number,The method contains a magic number: 1000,208
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaRemembersUncommittedSchemas,Magic Number,The method contains a magic number: 2,208
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaEdge,Magic Number,The method contains a magic number: 1_000,232
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaEdge,Magic Number,The method contains a magic number: 1_000,232
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaEdge,Magic Number,The method contains a magic number: 1_000,232
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaEdge,Magic Number,The method contains a magic number: 1_000,232
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testLoadSchemaEdge,Magic Number,The method contains a magic number: 2,232
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,loadIndex,Long Statement,The length of the statement "Optional<Index> index=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").get().getIndex(this.sqlgGraph.getSqlDialect().indexName(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"A")`Topology.VERTEX_PREFIX`Collections.singletonList("name")));" is 273.,293
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,loadIndex,Long Statement,The length of the statement "index=sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").get().getIndex(this.sqlgGraph.getSqlDialect().indexName(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"A")`Topology.VERTEX_PREFIX`Collections.singletonList("name")));" is 253.,293
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,loadIndex,Magic Number,The method contains a magic number: 1_000,293
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testViaNotifyIsCommitted,Long Statement,The length of the statement "this.sqlgGraph.getTopology().getSchema("A").orElseThrow().getVertexLabel("A").ifPresent(v -> v.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(v.getProperty("name").orElseThrow())));" is 195.,326
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testViaNotifyIsCommitted,Long Statement,The length of the statement "String indexName=this.sqlgGraph.getSqlDialect().indexName(SchemaTable.of("A"`"A")`Topology.VERTEX_PREFIX`Collections.singletonList("name"));" is 140.,326
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testViaNotifyIsCommitted,Long Statement,The length of the statement "indexName=sqlgGraph1.getSqlDialect().indexName(SchemaTable.of("A"`"A")`Topology.VERTEX_PREFIX`Collections.singletonList("name"));" is 129.,326
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testViaNotifyIsCommitted,Magic Number,The method contains a magic number: 1_000,326
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 1_000,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 5,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 2,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 3,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 4,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 4,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchemaViaNotify,testDistributedTopologyListener,Magic Number,The method contains a magic number: 4,360
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testVertexEdgeHasSameName,Long Statement,The length of the statement "Map<String`PropertyColumn> properties=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").get().getProperties();" is 127.,35
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Long Statement,The length of the statement "assertEquals(2`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_person").size());" is 135.,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Long Statement,The length of the statement "assertEquals(2`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_software").size());" is 137.,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Long Statement,The length of the statement "assertEquals(PropertyType.STRING`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_person").get("name"));" is 158.,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Long Statement,The length of the statement "assertEquals(PropertyType.INTEGER`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_person").get("age"));" is 158.,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Long Statement,The length of the statement "assertEquals(PropertyType.STRING`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_software").get("name"));" is 160.,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Long Statement,The length of the statement "assertEquals(PropertyType.STRING`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_software").get("lang"));" is 160.,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Magic Number,The method contains a magic number: 4,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Magic Number,The method contains a magic number: 2,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testModern,Magic Number,The method contains a magic number: 2,53
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddVertexProperties,Long Statement,The length of the statement "assertTrue(this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_A").isEmpty());" is 129.,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddVertexProperties,Long Statement,The length of the statement "assertTrue(this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_A").isEmpty());" is 129.,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddVertexProperties,Long Statement,The length of the statement "assertTrue(this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_A").isEmpty());" is 129.,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddVertexProperties,Long Statement,The length of the statement "assertEquals(2`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_A").size());" is 130.,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddVertexProperties,Long Statement,The length of the statement "assertEquals(PropertyType.STRING`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_A").get("name"));" is 153.,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddVertexProperties,Long Statement,The length of the statement "assertEquals(PropertyType.INTEGER`this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".V_A").get("age"));" is 153.,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddVertexProperties,Magic Number,The method contains a magic number: 2,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddEdgeProperties,Long Statement,The length of the statement "assertTrue(this.sqlgGraph.getTopology().getAllTables().entrySet().stream().allMatch((entry) -> entry.getValue().isEmpty()));" is 124.,95
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddEdgeProperties,Long Statement,The length of the statement "assertTrue(this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".E_ab").isEmpty());" is 130.,95
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddEdgeProperties,Long Statement,The length of the statement "assertTrue(this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".E_ab").isEmpty());" is 130.,95
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testAddEdgeProperties,Long Statement,The length of the statement "assertFalse(this.sqlgGraph.getTopology().getAllTables().get(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".E_ab").isEmpty());" is 131.,95
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testVertexLabelPropertiesViaVertexLabel,Magic Number,The method contains a magic number: 2,114
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testVertexLabelPropertiesViaVertexLabel,Magic Number,The method contains a magic number: 2,114
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelsProperties,Magic Number,The method contains a magic number: 2,152
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Empty catch clause,The method has an empty catch block.,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSchemaEagerCreation,testEdgeLabelAddVertexLabels,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,36
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,beforeClass,Magic Number,The method contains a magic number: 3,36
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,beforeClass,Magic Number,The method contains a magic number: 3,36
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedLocking,Long Identifier,The length of the identifier sqlgGraphsExecutorCompletionService is 35.,54
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedLocking,Long Statement,The length of the statement "CompletionService<Boolean> sqlgGraphsExecutorCompletionService=new ExecutorCompletionService<>(sqlgGraphsExecutorService);" is 122.,54
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedLocking,Magic Number,The method contains a magic number: 10,54
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedLocking,Magic Number,The method contains a magic number: 100,54
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedLocking,Magic Number,The method contains a magic number: 10,54
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation,Complex Method,Cyclomatic complexity of the method is 10,85
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation,Long Identifier,The length of the identifier poolPerGraphsExecutorCompletionService is 38.,85
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation,Magic Number,The method contains a magic number: 10,85
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation,Magic Number,The method contains a magic number: 200,85
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation,Magic Number,The method contains a magic number: 20_000,85
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation2,Complex Method,Cyclomatic complexity of the method is 9,148
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation2,Long Identifier,The length of the identifier poolPerGraphsExecutorCompletionService is 38.,148
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation2,Magic Number,The method contains a magic number: 5,148
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation2,Magic Number,The method contains a magic number: 100,148
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedSchemaCreation2,Magic Number,The method contains a magic number: 20_000,148
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Complex Method,Cyclomatic complexity of the method is 19,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Long Identifier,The length of the identifier poolPerGraphsExecutorCompletionService is 38.,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Long Method,The method has 131 lines of code.,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Long Statement,The length of the statement "assertEquals("this.sqlGraph schema sizes mismatch"`successfulSchemas.size() + 1`this.sqlgGraph.getTopology().getSchemas().size());" is 130.,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Magic Number,The method contains a magic number: 5,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Magic Number,The method contains a magic number: 100,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Magic Number,The method contains a magic number: 3,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Magic Number,The method contains a magic number: 5,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Magic Number,The method contains a magic number: 20_000,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Magic Number,The method contains a magic number: 30,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testMultiThreadedVertexLabelCreation,Magic Number,The method contains a magic number: 20_000,212
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Complex Method,Cyclomatic complexity of the method is 14,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Long Identifier,The length of the identifier insertPoolPerGraphsExecutorCompletionService is 44.,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Long Identifier,The length of the identifier readPoolPerGraphsExecutorCompletionService is 42.,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Long Statement,The length of the statement "CompletionService<SqlgGraph> insertPoolPerGraphsExecutorCompletionService=new ExecutorCompletionService<>(insertPoolPerGraph);" is 126.,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Long Statement,The length of the statement "CompletionService<SqlgGraph> readPoolPerGraphsExecutorCompletionService=new ExecutorCompletionService<>(readPoolPerGraph);" is 122.,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Magic Number,The method contains a magic number: 3,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Magic Number,The method contains a magic number: 100,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Magic Number,The method contains a magic number: 10,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Magic Number,The method contains a magic number: 100,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Magic Number,The method contains a magic number: 30,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Magic Number,The method contains a magic number: 30,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestMultipleThreadMultipleJvm,testConcurrentModificationException,Magic Number,The method contains a magic number: 10_000,352
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestNotifyJson,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,28
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestNotifyJson,testNotifyJson,Long Statement,The length of the statement "List<Vertex> logs=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_LOG).toList();" is 121.,44
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadingLocalDateTime,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph1.getTopology().getAllTables().get(SchemaTable.of(sqlgGraph1.getSqlDialect().getPublicSchema()`"V_Person").toString());" is 169.,40
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadingLocalDate,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph1.getTopology().getAllTables().get(SchemaTable.of(sqlgGraph1.getSqlDialect().getPublicSchema()`"V_Person").toString());" is 169.,56
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadingLocalTime,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph1.getTopology().getAllTables().get(SchemaTable.of(sqlgGraph1.getSqlDialect().getPublicSchema()`"V_Person").toString());" is 169.,72
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadingJson,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph1.getTopology().getAllTables().get(SchemaTable.of(sqlgGraph1.getSqlDialect().getPublicSchema()`"V_Person").toString());" is 169.,88
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testIdNotLoadedAsProperty,Long Statement,The length of the statement "Map<String`PropertyType> propertyTypeMap=sqlgGraph1.getTopology().getAllTables().get(SchemaTable.of(sqlgGraph1.getSqlDialect().getPublicSchema()`"V_Person").toString());" is 169.,106
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchema,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"aBoolean"`true`"aShort"`(short)1`"aInteger"`1`"aLong"`1L`"aDouble"`1D`"aString"`"aaaaaaaaaaaaa");" is 140.,149
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadMultipleSchemas,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Test1.Person"`"aBoolean"`true`"aShort"`(short)1`"aInteger"`1`"aLong"`1L`"aDouble"`1D`"aString"`"aaaaaaaaaaaaa");" is 146.,167
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadMultipleSchemas,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Test2.Person"`"aBoolean"`true`"aShort"`(short)1`"aInteger"`1`"aLong"`1L`"aDouble"`1D`"aString"`"aaaaaaaaaaaaa");" is 146.,167
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadMultipleSchemas,Long Statement,The length of the statement "sqlgGraph1.addVertex(T.label`"Test1.Product"`"aBoolean"`true`"aShort"`(short)1`"aInteger"`1`"aLong"`1L`"aDouble"`1D`"aString"`"aaaaaaaaaaaaa");" is 143.,167
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadMultipleSchemas,Long Statement,The length of the statement "sqlgGraph1.addVertex(T.label`"Test2.Product"`"aBoolean"`true`"aShort"`(short)1`"aInteger"`1`"aLong"`1L`"aDouble"`1D`"aString"`"aaaaaaaaaaaaa");" is 143.,167
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"Person"`"aBoolean"`true`"aShort"`(short)1`"aInteger"`1`"aLong"`1L`"aDouble"`1D`"aString"`"aaaaaaaaaaaaa");" is 150.,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Long Statement,The length of the statement "Vertex v2=this.sqlgGraph.addVertex(T.label`"Person"`"bBoolean"`true`"bShort"`(short)2`"bInteger"`2`"bLong"`2L`"bDouble"`2D`"bString"`"bbbbbbbbbbbbb");" is 150.,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Long Statement,The length of the statement "v1.addEdge("edgeTest"`v2`"cBoolean"`true`"cShort"`(short)3`"cInteger"`3`"cLong"`3L`"cDouble"`3D`"cString"`"ccccccccccccc");" is 123.,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Long Statement,The length of the statement "Vertex v3=sqlgGraph.addVertex(T.label`"Person"`"dBoolean"`true`"dShort"`(short)4`"dInteger"`4`"dLong"`4L`"bDouble"`4D`"dString"`"ddddddddddddd");" is 145.,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Long Statement,The length of the statement "v1.addEdge("edgeTest"`v3`"eBoolean"`true`"eShort"`(short)3`"eInteger"`3`"eLong"`3L`"eDouble"`3D`"eString"`"eeeeeeeeeeeee");" is 123.,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2L,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2D,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3L,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3D,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2L,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 2D,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3L,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3D,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 4,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 4,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 4L,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 4D,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3L,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3D,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3L,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,loadForeignKeys,Magic Number,The method contains a magic number: 3D,188
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemas,Magic Number,The method contains a magic number: 2,245
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemas,Magic Number,The method contains a magic number: 2,245
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdges,Long Statement,The length of the statement "assertEquals(2`vertexTraversal(sqlgGraph`sqlgGraph.traversal().V(realBsc.id()).next()).out("workspaceElement").count().next().intValue());" is 138.,266
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdges,Long Statement,The length of the statement "assertEquals(1`vertexTraversal(sqlgGraph`sqlgGraph.traversal().V(realBscWE.id()).next()).in("workspaceElement").count().next().intValue());" is 139.,266
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdges,Long Statement,The length of the statement "assertEquals(1`vertexTraversal(sqlgGraph`sqlgGraph.traversal().V(planBsc.id()).next()).in("workspaceElement").count().next().intValue());" is 137.,266
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdges,Magic Number,The method contains a magic number: 2,266
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdgesOtherWayAround,Long Statement,The length of the statement "assertEquals(1`vertexTraversal(sqlgGraph`sqlgGraph.traversal().V(realBscWE.id()).next()).out("workspaceElement").count().next().intValue());" is 140.,284
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testLoadSchemaWithSimilarForeignKeysAcrossSchemasMultipleEdgesOtherWayAround,Long Statement,The length of the statement "assertEquals(1`vertexTraversal(sqlgGraph`sqlgGraph.traversal().V(planBscWE.id()).next()).out("workspaceElement").count().next().intValue());" is 140.,284
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testSameEdgeToDifferentVertexLabels,Magic Number,The method contains a magic number: 5,301
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testSameEdgeToDifferentVertexLabels,Magic Number,The method contains a magic number: 6,301
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testSameEdgeToDifferentVertexLabels,Magic Number,The method contains a magic number: 2,301
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testSameEdgeToDifferentVertexLabels,Magic Number,The method contains a magic number: 2,301
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testMultipleInEdges,Magic Number,The method contains a magic number: 2,332
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testMultipleOutEdges,Magic Number,The method contains a magic number: 2,348
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestLoadSchema,testMoreMultipleInEdges,Magic Number,The method contains a magic number: 3,364
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Long Statement,The length of the statement "GraphTraversalSource traversalSource=sqlgGraph1.traversal().withStrategies(TopologyStrategy.build().sqlgSchema().create());" is 123.,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Long Statement,The length of the statement "List<Vertex> vertexLabelPersons=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_VERTEX_LABEL).has("name"`"Person").toList();" is 137.,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Long Statement,The length of the statement "List<Vertex> vertexLabelDogs=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_VERTEX_LABEL).has("name"`"Dog").toList();" is 131.,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Long Statement,The length of the statement "List<Vertex> edgeLabelPets=traversalSource.V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_EDGE_LABEL).has("name"`"pet").toList();" is 127.,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestSqlgSchema,testSqlgSchemaExist,Magic Number,The method contains a magic number: 7,23
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testCaptureSchemaTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> person=localTabels.get(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"V_Person"));" is 140.,24
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testCaptureSchemaTableLabels,Long Statement,The length of the statement "assertEquals(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".E_drives"`person.getRight().iterator().next().toString());" is 124.,24
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testCaptureSchemaTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> car=localTabels.get(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"V_Car"));" is 134.,24
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testCaptureSchemaTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> model=localTabels.get(SchemaTable.of(this.sqlgGraph.getSqlDialect().getPublicSchema()`"V_Model"));" is 138.,24
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testCaptureSchemaTableLabels,Long Statement,The length of the statement "assertEquals(this.sqlgGraph.getSqlDialect().getPublicSchema() + ".E_model"`model.getLeft().iterator().next().toString());" is 121.,24
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testLoadTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> person=localTabels.get(SchemaTable.of(sqlgGraph.getSqlDialect().getPublicSchema()`"V_Person"));" is 135.,78
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testLoadTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> car=localTabels.get(SchemaTable.of(sqlgGraph.getSqlDialect().getPublicSchema()`"V_Car"));" is 129.,78
pietermartin_sqlg,org.umlg.sqlg.test.schema,TestCaptureSchemaTableEdges,testLoadTableLabels,Long Statement,The length of the statement "Pair<Set<SchemaTable>`Set<SchemaTable>> model=localTabels.get(SchemaTable.of(sqlgGraph.getSqlDialect().getPublicSchema()`"V_Model"));" is 133.,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey(SqlgGraph.JDBC_URL)) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`SqlgGraph.JDBC_URL));" is 175.,63
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteSchema,Long Statement,The length of the statement "lbl.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(lbl.getProperty("name").orElseThrow(IllegalStateException::new)));" is 131.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteSchema,Long Statement,The length of the statement "elbl.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(elbl.getProperty("attr").orElseThrow(IllegalStateException::new)));" is 133.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteSchema,Magic Number,The method contains a magic number: 1_000,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteSchema,Magic Number,The method contains a magic number: 1_000,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteSchemaWithOtherEdges,Magic Number,The method contains a magic number: 1_000,141
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteSchemaWithOtherEdges,Magic Number,The method contains a magic number: 1_000,141
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexProperty,Magic Number,The method contains a magic number: 1_000,179
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexPropertyWithIndex,Magic Number,The method contains a magic number: 1_000,236
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteEdgeProperty,Magic Number,The method contains a magic number: 1_000,309
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexIndex,Long Statement,The length of the statement "Index i1=lbl.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(lbl.getProperty("p1").orElseThrow(IllegalStateException::new)));" is 138.,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexIndex,Long Statement,The length of the statement "Index i2=lbl.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(lbl.getProperty("p2").orElseThrow(IllegalStateException::new)));" is 138.,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexIndex,Magic Number,The method contains a magic number: 1_000,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteEdgeIndex,Long Statement,The length of the statement "Index i1=lbl.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(lbl.getProperty("p1").orElseThrow(IllegalStateException::new)));" is 138.,415
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteEdgeIndex,Long Statement,The length of the statement "Index i2=lbl.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(lbl.getProperty("p2").orElseThrow(IllegalStateException::new)));" is 138.,415
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteEdgeIndex,Magic Number,The method contains a magic number: 1_000,415
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteEdgeLabel,Magic Number,The method contains a magic number: 1_000,464
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteEdgeLabel,Magic Number,The method contains a magic number: 1_000,464
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexLabel,Long Statement,The length of the statement "assertFalse(this.sqlgGraph.getTopology().getAllTables().containsKey(oelbl1.orElseThrow(IllegalStateException::new).getName()));" is 127.,526
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexLabel,Long Statement,The length of the statement "assertFalse(this.sqlgGraph.getTopology().getAllTables().containsKey(oelbl2.orElseThrow(IllegalStateException::new).getName()));" is 127.,526
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexLabel,Long Statement,The length of the statement "assertFalse(sqlgGraph1.getTopology().getAllTables().containsKey(oelbl1.orElseThrow(IllegalStateException::new).getName()));" is 123.,526
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexLabel,Long Statement,The length of the statement "assertFalse(sqlgGraph1.getTopology().getAllTables().containsKey(oelbl2.orElseThrow(IllegalStateException::new).getName()));" is 123.,526
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexLabel,Magic Number,The method contains a magic number: 1_000,526
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteVertexLabel,Magic Number,The method contains a magic number: 1_000,526
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgePropertyExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p1").count().next().longValue());" is 383.,639
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgePropertyExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p2").count().next().longValue());" is 383.,639
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgePropertyExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p1").count().next().longValue());" is 370.,661
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgePropertyExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p2").count().next().longValue());" is 370.,661
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkIndexExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i1.getName()).count().next().longValue());" is 316.,684
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkIndexExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i2.getName()).count().next().longValue());" is 316.,684
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkIndexExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i1.getName()).count().next().longValue());" is 303.,704
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkIndexExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i2.getName()).count().next().longValue());" is 303.,704
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeIndexExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i1.getName()).count().next().longValue());" is 383.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeIndexExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i2.getName()).count().next().longValue());" is 383.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeIndexExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i1.getName()).count().next().longValue());" is 370.,747
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeIndexExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").out(SQLG_SCHEMA_EDGE_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`i2.getName()).count().next().longValue());" is 370.,747
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E1").count().next().longValue());" is 297.,770
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E2").count().next().longValue());" is 297.,770
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E1").count().next().longValue());" is 297.,796
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E2").count().next().longValue());" is 297.,796
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeRoleExistenceBeforeDeletion,Magic Number,The method contains a magic number: 2,822
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeRoleExistenceBeforeDeletion,Magic Number,The method contains a magic number: 2,822
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeRoleExistenceBeforeDeletion,Magic Number,The method contains a magic number: 2,822
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkEdgeRoleExistenceBeforeDeletion,Magic Number,The method contains a magic number: 2,822
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testDeleteEdgeRole,Magic Number,The method contains a magic number: 1_000,901
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").count().next().longValue());" is 227.,960
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").count().next().longValue());" is 227.,960
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").count().next().longValue());" is 227.,960
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"D").count().next().longValue());" is 227.,960
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelBeforeDeletion,Magic Number,The method contains a magic number: 3,960
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelBeforeDeletion,Magic Number,The method contains a magic number: 3,960
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelAfterDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").count().next().longValue());" is 227.,1018
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelAfterDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").count().next().longValue());" is 227.,1018
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").count().next().longValue());" is 227.,1018
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelAfterDeletion,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"D").count().next().longValue());" is 227.,1018
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelAfterDeletion,Magic Number,The method contains a magic number: 2,1018
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkVertexLabelAfterDeletion,Magic Number,The method contains a magic number: 2,1018
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaBeforeDeletion,Long Statement,The length of the statement "assertEquals(2`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA`"name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).count().next().longValue());" is 154.,1082
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaBeforeDeletion,Long Statement,The length of the statement "assertEquals(1`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA`"name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`"A").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).count().next().longValue());" is 210.,1082
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaBeforeDeletion,Long Statement,The length of the statement "assertEquals(1`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA`"name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`"B").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).count().next().longValue());" is 210.,1082
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaBeforeDeletion,Long Statement,The length of the statement "assertEquals(1`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA`"name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`"A").out(SQLG_SCHEMA_VERTEX_INDEX_EDGE).count().next().longValue());" is 205.,1082
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaBeforeDeletion,Long Statement,The length of the statement "assertEquals(1`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA`"name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`"E").count().next().longValue());" is 218.,1082
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaBeforeDeletion,Long Statement,The length of the statement "assertEquals(1`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA`"name"`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has("name"`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has("name"`"E").out(SQLG_SCHEMA_EDGE_INDEX_EDGE).count().next().longValue());" is 251.,1082
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaBeforeDeletion,Magic Number,The method contains a magic number: 2,1082
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaAfterDeletion,Long Statement,The length of the statement "assertEquals(0`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_VERTEX_LABEL`"name"`"A").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).count().next().longValue());" is 161.,1117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaAfterDeletion,Long Statement,The length of the statement "assertEquals(0`g.topology().V().has(SQLG_SCHEMA + "." + SQLG_SCHEMA_VERTEX_LABEL`"name"`"B").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).count().next().longValue());" is 161.,1117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaAfterDeletion,Long Statement,The length of the statement "assertEquals(0`g.topology().V().has(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_EDGE_LABEL`"name"`"E").count().next().longValue());" is 128.,1117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaWithOtherEdges,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`otherSchema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").count().next().longValue());" is 301.,1147
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaWithOtherEdges,Long Statement,The length of the statement "assertEquals(1L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(SQLG_SCHEMA_IN_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").count().next().longValue());" is 295.,1147
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaWithOtherEdgesAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`otherSchema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").count().next().longValue());" is 301.,1178
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,testSchemaWithOtherEdgesAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(SQLG_SCHEMA_IN_EDGES_EDGE).has(SQLG_SCHEMA_EDGE_LABEL_NAME`"E").count().next().longValue());" is 295.,1178
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,columnExistsInSQL,Long Statement,The length of the statement "return !this.sqlgGraph.getSqlDialect().getTableColumns(this.sqlgGraph.tx().getConnection().getMetaData()`null`schema`table`column).isEmpty();" is 141.,1224
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkPropertyExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p1").count().next().longValue());" is 316.,1248
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkPropertyExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`index.getName()).count().next().longValue());" is 319.,1248
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkPropertyExistenceBeforeDeletion,Long Statement,The length of the statement "assertEquals(1L`this.sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p2").count().next().longValue());" is 316.,1248
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkPropertyExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p1").count().next().longValue());" is 303.,1279
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkPropertyExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_INDEX_EDGE).has(SQLG_SCHEMA_INDEX_NAME`index.getName()).count().next().longValue());" is 306.,1279
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDelete,checkPropertyExistenceAfterDeletion,Long Statement,The length of the statement "assertEquals(0L`g.topology().V().hasLabel(SQLG_SCHEMA + "." + SQLG_SCHEMA_SCHEMA).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`schema).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(SQLG_SCHEMA_VERTEX_PROPERTIES_EDGE).has(SQLG_SCHEMA_PROPERTY_NAME`"p2").count().next().longValue());" is 303.,1279
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Long Statement,The length of the statement "Assert.assertEquals(100`sqlgGraph.getTopology().getSchema("R_1").orElseThrow().getVertexLabel("T1").orElseThrow().getProperties().size());" is 138.,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Long Statement,The length of the statement "Assert.assertEquals(100`sqlgGraph.getTopology().getSchema("R_1").orElseThrow().getVertexLabel("T100").orElseThrow().getProperties().size());" is 140.,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Long Statement,The length of the statement "Assert.assertEquals(100`sqlgGraph.getTopology().getSchema("R_1").orElseThrow().getVertexLabel("T1000").orElseThrow().getProperties().size());" is 141.,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 10,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 1000,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 1000,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 1000,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 1000,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 100,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 100,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,testPerformance,Magic Number,The method contains a magic number: 100,51
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,columns,Magic Number,The method contains a magic number: 100,98
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestLargeSchemaPerformance,values,Magic Number,The method contains a magic number: 100,106
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRenameDistributed,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,26
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRenameDistributed,testDistributedNameChange,Long Statement,The length of the statement "List<String> propertyNames=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PROPERTY).<String>values(Topology.SQLG_SCHEMA_PROPERTY_NAME).toList();" is 186.,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRenameDistributed,testDistributedNameChange,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("column2").isPresent());" is 135.,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRenameDistributed,testDistributedNameChange,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRenameDistributed,testDistributedIdentifierChange,Long Statement,The length of the statement "List<Vertex> identifierProperties=sqlgGraph1.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL).out(Topology.SQLG_SCHEMA_VERTEX_IDENTIFIER_EDGE).toList();" is 191.,68
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRenameDistributed,testDistributedIdentifierChange,Long Statement,The length of the statement "identifierProperties=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL).out(Topology.SQLG_SCHEMA_VERTEX_IDENTIFIER_EDGE).toList();" is 182.,68
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRenameDistributed,testDistributedIdentifierChange,Magic Number,The method contains a magic number: 1_000,68
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 129.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Magic Number,The method contains a magic number: 10,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Magic Number,The method contains a magic number: 10,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Magic Number,The method contains a magic number: 10,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimple,Magic Number,The method contains a magic number: 2,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimpleWithQueries,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimpleWithQueries,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelSimpleWithQueries,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,88
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Magic Number,The method contains a magic number: 10,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Magic Number,The method contains a magic number: 10,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Magic Number,The method contains a magic number: 10,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Magic Number,The method contains a magic number: 10,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Magic Number,The method contains a magic number: 10,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameOutEdgeRole,Magic Number,The method contains a magic number: 10,203
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"BB").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"BB").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameInEdgeRole,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Method,The method has 127 lines of code.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 10,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 10,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 10,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 10,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 10,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 10,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 10,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 2,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 2,437
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRename,testEdgeLabelSimple,Long Method,The method has 135 lines of code.,60
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRename,testEdgeLabelSimple,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,60
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRename,testEdgeLabelSimple,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 265.,60
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRename,testEdgeLabelSimple,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 252.,60
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRename,testEdgeLabelSimple,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 252.,60
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testDotInLabelNameUserSuppliedIdentifiers,Magic Number,The method contains a magic number: 100,41
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testDotInLabelNameUserSuppliedIdentifiers,Magic Number,The method contains a magic number: 100,41
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testDotInLabelNameUserSuppliedIdentifiers,Magic Number,The method contains a magic number: 100,41
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,failTest,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").has("name"`P.within("MySchema")).as("schema").values("name").as("schemaName").select("schema").out("schema_vertex").count().next().intValue());" is 226.,83
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,failTest,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").has("name"`P.within("MySchema")).as("schema").values("name").as("schemaName").select("schema").out("schema_vertex").hasNext());" is 206.,83
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,failTest,Magic Number,The method contains a magic number: 2,83
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversalWithOrderBy,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").out("schema_vertex").order().by("name"`Order.desc).toList();" is 143.,105
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversalWithOrderBy,Magic Number,The method contains a magic number: 2,105
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").out("schema_vertex").count().next().intValue());" is 131.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.vertex").in("schema_vertex").count().next().intValue());" is 130.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.vertex").out("vertex_property").count().next().intValue());" is 133.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.property").in("vertex_property").count().next().intValue());" is 134.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.property").in("edge_property").count().next().intValue());" is 132.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").as("schema").select("schema").out("schema_vertex").count().next().intValue());" is 161.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").as("schema").values("name").as("schemaName").select("schema").out("schema_vertex").count().next().intValue());" is 193.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").as("schema").values("name").as("schemaName").select("schema").out("schema_vertex").hasNext());" is 173.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Long Statement,The length of the statement "Assert.assertEquals("testEdge"`this.sqlgGraph.topology().V().hasLabel("sqlg_schema.property").in("edge_property").values("name").next());" is 137.,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Magic Number,The method contains a magic number: 2,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Magic Number,The method contains a magic number: 2,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Magic Number,The method contains a magic number: 2,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Magic Number,The method contains a magic number: 2,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Magic Number,The method contains a magic number: 2,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testTopologyTraversal,Magic Number,The method contains a magic number: 2,117
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopology,testRollback,Long Statement,The length of the statement "final Traversal<Vertex`Edge> traversal=this.sqlgGraph.traversal().V().aggregate("x").as("a").select("x").unfold().addE("existsWith").to("a").property("time"`"now");" is 164.,141
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock4,Magic Number,The method contains a magic number: 3,31
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock4,Magic Number,The method contains a magic number: 3,31
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock4,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock4,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock3,Magic Number,The method contains a magic number: 10,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock3,Magic Number,The method contains a magic number: 4L,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock3,Magic Number,The method contains a magic number: 3L,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock2,Magic Number,The method contains a magic number: 1000,140
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadLock2,Magic Number,The method contains a magic number: 1000,140
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadlock1,Magic Number,The method contains a magic number: 1000,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadlock1,Magic Number,The method contains a magic number: 1000,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadlock1,Magic Number,The method contains a magic number: 2,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadlock1DifferentGraphs,Magic Number,The method contains a magic number: 1000,261
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadlock1DifferentGraphs,Magic Number,The method contains a magic number: 1000,261
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestDeadLock,testDeadlock1DifferentGraphs,Magic Number,The method contains a magic number: 2,261
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 131.,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Long Statement,The length of the statement "ResultSet rs=s.executeQuery("select tableoid::regclass as partition_name` count(*) from \"V_A\" group by 1 order by 1;");" is 121.,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 1000,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 1000,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 2,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 100,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 92,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 103,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 88,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 113,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 90,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 119,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 92,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 100,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 103,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartition,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Complex Method,Cyclomatic complexity of the method is 11,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Long Method,The method has 119 lines of code.,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 132.,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("B"`new LinkedHashMap<>(){" is 132.,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Long Statement,The length of the statement "ResultSet rs=s.executeQuery("select tableoid::regclass as partition_name` count(*) from \"E_ab\" group by 1 order by 1;");" is 122.,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 1000,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 1000,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 1000,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 1000,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 2,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 100,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 92,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 103,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 88,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 113,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 90,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 119,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 92,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 100,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 103,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionOnEdge,Magic Number,The method contains a magic number: 10,144
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 131.,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Long Statement,The length of the statement "ResultSet rs=s.executeQuery("select tableoid::regclass as partition_name` count(*) from \"V_A\" group by 1 order by 1;");" is 121.,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 10,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 10,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 1000,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 1000,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 2,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 10,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 10,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 10,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 100,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 92,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 103,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 88,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 113,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 90,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 119,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 92,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 100,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionCopyCommand,Magic Number,The method contains a magic number: 103,288
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 131.,340
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition,Magic Number,The method contains a magic number: 10,340
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition,Magic Number,The method contains a magic number: 10,340
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition,Magic Number,The method contains a magic number: 10,340
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition,Magic Number,The method contains a magic number: 10,340
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition,Magic Number,The method contains a magic number: 1000,340
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition,Magic Number,The method contains a magic number: 1000,340
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionMultipleGraphs,Long Statement,The length of the statement "VertexLabel vertexLabel=sqlgGraph1.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 127.,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionMultipleGraphs,Magic Number,The method contains a magic number: 10,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionMultipleGraphs,Magic Number,The method contains a magic number: 10,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionMultipleGraphs,Magic Number,The method contains a magic number: 10,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionMultipleGraphs,Magic Number,The method contains a magic number: 10,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashPartitionMultipleGraphs,Magic Number,The method contains a magic number: 1000,368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartitionMultipleGraphs,Long Statement,The length of the statement "VertexLabel vertexLabel=sqlgGraph1.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 127.,398
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartitionMultipleGraphs,Long Statement,The length of the statement "Partition partition=vertexLabel.ensureListPartitionWithSubPartitionExists("p" + i`String.valueOf(i)`PartitionType.HASH`"uid2");" is 127.,398
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartitionMultipleGraphs,Magic Number,The method contains a magic number: 10,398
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartitionMultipleGraphs,Magic Number,The method contains a magic number: 10,398
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartitionMultipleGraphs,Magic Number,The method contains a magic number: 10,398
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartitionMultipleGraphs,Magic Number,The method contains a magic number: 1000,398
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition2MultipleGraphs,Long Statement,The length of the statement "VertexLabel vertexLabel=sqlgGraph1.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 127.,428
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition2MultipleGraphs,Magic Number,The method contains a magic number: 10,428
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition2MultipleGraphs,Magic Number,The method contains a magic number: 10,428
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition2MultipleGraphs,Magic Number,The method contains a magic number: 10,428
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestHashPartitioning,testHashSubPartition2MultipleGraphs,Magic Number,The method contains a magic number: 1000,428
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,54
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Long Statement,The length of the statement "VertexLabel aVertexLabel=sqlgGraph1.getTopology().ensureSchemaExist(this.schema1).ensureVertexLabelExist("A"`new HashMap<>(){" is 125.,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Long Statement,The length of the statement "VertexLabel bVertexLabel=sqlgGraph1.getTopology().ensureSchemaExist(this.schema2).ensureVertexLabelExist("B"`new HashMap<>(){" is 125.,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 10,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 10,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 10,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 10,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 10,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 10,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 10,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 1_000,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 1_000,70
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 129.,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 125.,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 125.,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Magic Number,The method contains a magic number: 10,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Magic Number,The method contains a magic number: 10,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Magic Number,The method contains a magic number: 10,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Magic Number,The method contains a magic number: 1_000,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChange2,Magic Number,The method contains a magic number: 1_000,138
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChangeWithQuery,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 125.,172
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChangeWithQuery,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 125.,172
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChangeWithQuery,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,172
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChangeWithQuery,Magic Number,The method contains a magic number: 10,172
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChangeWithQuery,Magic Number,The method contains a magic number: 10,172
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChangeWithQuery,Magic Number,The method contains a magic number: 10,172
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedNameChangeWithQuery,Magic Number,The method contains a magic number: 1_000,172
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("AA").orElseThrow().getOutEdgeLabel("ab").isPresent());" is 135.,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getInEdgeLabels().size());" is 129.,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "Assert.assertEquals("ab"`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getInEdgeLabels().values().iterator().next().getLabel());" is 163.,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 263.,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 261.,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 10,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 1_000,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelWithIdentifiersRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 2_000,202
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Long Method,The method has 141 lines of code.,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 265.,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 252.,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 252.,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelWithIdentifiersRename,testEdgeLabelSimple,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testSchemaDoesNotExist,Long Statement,The length of the statement "statement.execute("DROP TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_A"));" is 152.,45
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testVertexLabelDoesNotExist,Long Statement,The length of the statement "statement.execute("DROP TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_A")+ (this.sqlgGraph.getSqlDialect().supportsCascade() ? " CASCADE " : ""));" is 223.,73
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testEdgeLabelDoesNotExist,Long Statement,The length of the statement "statement.execute("DROP TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_ab")+ (this.sqlgGraph.getSqlDialect().supportsCascade() ? " CASCADE " : ""));" is 224.,92
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testVertexLabelPropertyDoesNotExist,Long Statement,The length of the statement "statement.execute("ALTER TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_A")+ " DROP "+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("name"));" is 221.,113
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testVertexLabelPropertyDoesNotExist,Long Statement,The length of the statement "statement.execute("ALTER TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_A")+ " DROP COLUMN "+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("name"));" is 228.,113
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testEdgeLabelPropertyDoesNotExist,Long Statement,The length of the statement "statement.execute("ALTER TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_ab")+ " DROP "+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("name"));" is 222.,136
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testEdgeLabelPropertyDoesNotExist,Long Statement,The length of the statement "statement.execute("ALTER TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_ab")+ " DROP COLUMN "+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("name"));" is 229.,136
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testIndexDoesNotExist,Long Statement,The length of the statement "List<PropertyColumn> properties=new ArrayList<>(this.sqlgGraph.getTopology().getSchema("A").get().getVertexLabel("A").get().getProperties().values());" is 150.,161
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testIndexDoesNotExist,Long Statement,The length of the statement "this.sqlgGraph.getTopology().getSchema("A").get().getVertexLabel("A").get().ensureIndexExists(IndexType.UNIQUE`properties);" is 123.,161
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testIndexDoesNotExist,Long Statement,The length of the statement "String indexName=this.sqlgGraph.getSqlDialect().indexName(SchemaTable.of("A"`"A")`Topology.VERTEX_PREFIX`Collections.singletonList("name"));" is 140.,161
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testIndexDoesNotExist,Long Statement,The length of the statement "statement.execute("DROP INDEX " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_A")+ "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(indexName));" is 218.,161
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testIndexDoesNotExist,Long Statement,The length of the statement "statement.execute("DROP INDEX " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(indexName) + " ON "+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A")+ "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_A"));" is 221.,161
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestValidateTopology,testIndexDoesNotExist,Long Statement,The length of the statement "statement.execute("DROP INDEX " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("A") + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(indexName));" is 156.,161
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeEdgeWithMultipleInOutLabelsAndAIndex,Long Statement,The length of the statement "@SuppressWarnings("UnusedAssignment") EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureEdgeLabelExist("edge"`bVertexLabel`aVertexLabel`properties);" is 171.,75
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeEdgeWithMultipleInOutLabelsAndAIndex,Long Statement,The length of the statement "edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureEdgeLabelExist("edge"`cVertexLabel`aVertexLabel`properties);" is 123.,75
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeEdgeWithMultipleInOutLabelsAndAIndex,Magic Number,The method contains a magic number: 3,75
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeEdgeWithMultipleInOutLabelsAndAIndex,Magic Number,The method contains a magic number: 2,75
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgrade,Magic Number,The method contains a magic number: 2,107
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgrade,Magic Number,The method contains a magic number: 2,107
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges,Magic Number,The method contains a magic number: 5,171
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges,Magic Number,The method contains a magic number: 6,171
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges,Magic Number,The method contains a magic number: 2,171
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges,Magic Number,The method contains a magic number: 2,171
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges2,Magic Number,The method contains a magic number: 5,195
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges2,Magic Number,The method contains a magic number: 6,195
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges2,Magic Number,The method contains a magic number: 2,195
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeMultipleInOutEdges2,Magic Number,The method contains a magic number: 2,195
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testGratefulDeadDBUpgrade,Magic Number,The method contains a magic number: 1406914,244
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testGratefulDeadDBUpgrade,Magic Number,The method contains a magic number: 2,244
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testGratefulDeadDBUpgrade,Magic Number,The method contains a magic number: 1406914,244
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testModernGraph,Magic Number,The method contains a magic number: 30,265
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testModernGraph,Magic Number,The method contains a magic number: 30,265
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testTopologyFilter,Long Statement,The length of the statement "GraphTraversalSource traversalSource=this.sqlgGraph.traversal().withStrategies(TopologyStrategy.build().sqlgSchema().create());" is 127.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testTopologyFilter,Magic Number,The method contains a magic number: 7,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradePropertiesAcrossSchema,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").toList();" is 172.,303
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradePropertiesAcrossSchema,Long Statement,The length of the statement "propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"B").out("schema_vertex").has("name"`"A").out("vertex_property").toList();" is 159.,303
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradePropertiesAcrossSchema,Magic Number,The method contains a magic number: 2,303
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradePropertiesAcrossSchema,Magic Number,The method contains a magic number: 2,303
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumn,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"zonedDateTime").toList();" is 200.,327
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumn,Long Statement,The length of the statement "propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"duration").toList();" is 182.,327
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumn,Long Statement,The length of the statement "propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"period").toList();" is 180.,327
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdge,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).out(Topology.SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has(Topology.SQLG_SCHEMA_PROPERTY_NAME`"zonedDateTime").toList();" is 349.,384
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Long Statement,The length of the statement "ZonedDateTime[] zonedDateTimes=new ZonedDateTime[]{isHsqldb() ? ZonedDateTime.now().truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now()`isHsqldb() ? ZonedDateTime.now().minusMonths(1).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().minusMonths(1)`isHsqldb() ? ZonedDateTime.now().minusMonths(2).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().minusMonths(2)};" is 370.,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"zonedDateTimes").toList();" is 201.,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Long Statement,The length of the statement "propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"durations").toList();" is 183.,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Long Statement,The length of the statement "propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"periods").toList();" is 181.,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 3,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 3,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 3,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrayTypesWithMoreThanOneColumn,Magic Number,The method contains a magic number: 3,421
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Long Statement,The length of the statement "ZonedDateTime[] zonedDateTimes=new ZonedDateTime[]{isHsqldb() ? ZonedDateTime.now().truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now()`isHsqldb() ? ZonedDateTime.now().minusMonths(1).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().minusMonths(1)`isHsqldb() ? ZonedDateTime.now().minusMonths(2).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().minusMonths(2)};" is 370.,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).out(Topology.SQLG_SCHEMA_EDGE_PROPERTIES_EDGE).has(Topology.SQLG_SCHEMA_PROPERTY_NAME`"zonedDateTimes").toList();" is 350.,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 2,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 2,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 2,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 3,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 2,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 2,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 2,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 3,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 3,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeTypesWithMoreThanOneColumnOnEdgeArrays,Magic Number,The method contains a magic number: 3,482
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeJson,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"json").toList();" is 191.,523
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeJsonArrays,Long Statement,The length of the statement "List<Vertex> propertyVertices=sqlgGraph1.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out("schema_vertex").has("name"`"A").out("vertex_property").has("name"`"jsons").toList();" is 192.,551
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Long Statement,The length of the statement "LocalDateTime[] localDateTimes=new LocalDateTime[]{isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`isHsqldb() ? LocalDateTime.now().minusMonths(2).truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now().minusMonths(2)`isHsqldb() ? LocalDateTime.now().minusMonths(3).truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now().minusMonths(3)};" is 370.,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Long Statement,The length of the statement "ZonedDateTime[] zonedDateTimes=new ZonedDateTime[]{isHsqldb() ? ZonedDateTime.now().truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now()`isHsqldb() ? ZonedDateTime.now().minusHours(2).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().minusHours(2)`isHsqldb() ? ZonedDateTime.now().minusHours(3).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().minusHours(3)};" is 366.,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"bytes"`bytes`"bytes2"`bytes2`"shorts"`shorts`"shorts2"`shorts2`"integers"`integers`"integers2"`integers2`"longs"`longs`"longs2"`longs2`"doubles"`doubles`"doubles2"`doubles2`"strings"`strings`"localDates"`localDates`"localDateTimes"`localDateTimes`"localTimes"`localTimes`"zonedDateTimes"`zonedDateTimes);" is 342.,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 2,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 3,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 2,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 2,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 3,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 3,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 2,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 3,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 2,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 2,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 3,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeArrays,Magic Number,The method contains a magic number: 3,607
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testUpgradeIndex,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 126.,706
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Long Statement,The length of the statement "statement.execute("DROP TABLE IF EXISTS " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("EVENT"));" is 209.,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Long Statement,The length of the statement "statement.execute("DROP TABLE IF EXISTS " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("VIKINGS"));" is 211.,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Long Statement,The length of the statement "statement.execute(this.sqlgGraph.getSqlDialect().createTableStatement() + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("EVENT")+ "(ID INT)");" is 251.,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Long Statement,The length of the statement "statement.execute(this.sqlgGraph.getSqlDialect().createTableStatement() + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("VIKINGS")+ "(ID INT)");" is 253.,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Long Statement,The length of the statement "statement.execute("DROP TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("EVENT"));" is 199.,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Long Statement,The length of the statement "statement.execute("DROP TABLE " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("VIKINGS"));" is 201.,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Magic Number,The method contains a magic number: 2,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,testNonEdgeNonVerticeTablesIgnored,Magic Number,The method contains a magic number: 2,769
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Person").count().next().longValue());" is 191.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Dog").count().next().longValue());" is 188.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Person").out(Topology.SQLG_SCHEMA_VERTEX_INDEX_EDGE).count().next().longValue());" is 235.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(2`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Person").out(Topology.SQLG_SCHEMA_VERTEX_INDEX_EDGE).out(Topology.SQLG_SCHEMA_INDEX_PROPERTY_EDGE).count().next().longValue());" is 281.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Person").out(Topology.SQLG_SCHEMA_VERTEX_INDEX_EDGE).out(Topology.SQLG_SCHEMA_INDEX_PROPERTY_EDGE).has(Topology.SQLG_SCHEMA_PROPERTY_NAME`"firstName").count().next().longValue());" is 333.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Person").out(Topology.SQLG_SCHEMA_VERTEX_INDEX_EDGE).out(Topology.SQLG_SCHEMA_INDEX_PROPERTY_EDGE).has(Topology.SQLG_SCHEMA_PROPERTY_NAME`"lastName").count().next().longValue());" is 332.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Dog").out(Topology.SQLG_SCHEMA_VERTEX_INDEX_EDGE).count().next().longValue());" is 232.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Dog").out(Topology.SQLG_SCHEMA_VERTEX_INDEX_EDGE).out(Topology.SQLG_SCHEMA_INDEX_PROPERTY_EDGE).count().next().longValue());" is 278.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL`Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"Dog").out(Topology.SQLG_SCHEMA_VERTEX_INDEX_EDGE).out(Topology.SQLG_SCHEMA_INDEX_PROPERTY_EDGE).has(Topology.SQLG_SCHEMA_PROPERTY_NAME`"name").count().next().longValue());" is 325.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_EDGE_LABEL`Topology.SQLG_SCHEMA_EDGE_LABEL_NAME`"Owns").count().next().longValue());" is 185.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_EDGE_LABEL`Topology.SQLG_SCHEMA_EDGE_LABEL_NAME`"Owns").out(Topology.SQLG_SCHEMA_EDGE_INDEX_EDGE).count().next().longValue());" is 227.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph.topology().V().has(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_EDGE_LABEL`Topology.SQLG_SCHEMA_EDGE_LABEL_NAME`"Owns").out(Topology.SQLG_SCHEMA_EDGE_INDEX_EDGE).out(Topology.SQLG_SCHEMA_INDEX_PROPERTY_EDGE).has(Topology.SQLG_SCHEMA_PROPERTY_NAME`"since").count().next().longValue());" is 321.,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyUpgrade,topologyCheck,Magic Number,The method contains a magic number: 2,844
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteEdgeRole,Magic Number,The method contains a magic number: 2,98
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteEdgeRoleAfterCommitViaVertexLabelDelete,Long Statement,The length of the statement "String sql=String.format("SELECT COUNT(*) FROM %s"`this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.schema1) + "." + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_ab"));" is 180.,129
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteEdgeRoleAfterCommitViaVertexLabelDelete,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteEdgeRoleAfterCommitViaVertexLabelDelete,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "List<Vertex> sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 272.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 273.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 272.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "Map<String`EdgeRole> edgeRoleMap=this.sqlgGraph.getTopology().getSchema(this.schema3).orElseThrow().getVertexLabel("C").orElseThrow().getInEdgeRoles();" is 151.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 259.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 273.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 272.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 259.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 273.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 272.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "String sql=String.format("SELECT COUNT(*) FROM %s"`this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.schema1) + "." + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_ab"));" is 180.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Magic Number,The method contains a magic number: 2,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Magic Number,The method contains a magic number: 2,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Magic Number,The method contains a magic number: 2,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteInEdgeRoleAfterCommitViaEdgeRoleDelete,Magic Number,The method contains a magic number: 2,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "List<Vertex> sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 272.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 258.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("C")).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 269.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B")).out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 268.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "Map<String`EdgeRole> edgeRoleMap=this.sqlgGraph.getTopology().getSchema(this.schema3).orElseThrow().getVertexLabel("C").orElseThrow().getOutEdgeRoles();" is 152.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 259.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 258.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("C")).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 269.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B")).out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 268.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "String sql=String.format("SELECT COUNT(*) FROM %s"`this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.schema3) + "." + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("E_ab"));" is 180.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "Assert.assertEquals(this.schema3.equals(this.sqlgGraph.getSqlDialect().getPublicSchema()) && this.schema1.equals(this.sqlgGraph.getSqlDialect().getPublicSchema()) ? 2 : 1`count);" is 178.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 259.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 273.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Long Statement,The length of the statement "sqlgSchemaVertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`P.within("B"`"C")).out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 272.,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteOutEdgeRoleAfterCommitViaEdgeRoleDelete,Magic Number,The method contains a magic number: 2,296
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteEdgeRoleViaSchemaDelete,Magic Number,The method contains a magic number: 2,445
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteEdgeRole,testDeleteEdgeRoleViaSchemaDelete,Magic Number,The method contains a magic number: 2,445
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyRename,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyRename,Long Statement,The length of the statement "List<String> propertyNames=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PROPERTY).<String>values(Topology.SQLG_SCHEMA_PROPERTY_NAME).toList();" is 186.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyRename,Long Statement,The length of the statement "propertyNames=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PROPERTY).<String>values(Topology.SQLG_SCHEMA_PROPERTY_NAME).toList();" is 173.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyRename,Long Statement,The length of the statement "propertyNames=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PROPERTY).<String>values(Topology.SQLG_SCHEMA_PROPERTY_NAME).toList();" is 173.,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyRename,Magic Number,The method contains a magic number: 10,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyRename,Magic Number,The method contains a magic number: 2,28
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>());" is 122.,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>());" is 122.,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Long Statement,The length of the statement "List<String> propertyNames=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PROPERTY).<String>values(Topology.SQLG_SCHEMA_PROPERTY_NAME).toList();" is 186.,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Long Statement,The length of the statement "propertyNames=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PROPERTY).<String>values(Topology.SQLG_SCHEMA_PROPERTY_NAME).toList();" is 173.,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Long Statement,The length of the statement "propertyNames=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PROPERTY).<String>values(Topology.SQLG_SCHEMA_PROPERTY_NAME).toList();" is 173.,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Magic Number,The method contains a magic number: 4,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testPropertyOnEdgeLabelRename,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifier,Long Statement,The length of the statement "List<Vertex> identifierProperties=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_VERTEX_LABEL).out(Topology.SQLG_SCHEMA_VERTEX_IDENTIFIER_EDGE).toList();" is 195.,119
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifier,Magic Number,The method contains a magic number: 10,119
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifier,Magic Number,The method contains a magic number: 10,119
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 10,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 10,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 10,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 10,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 10,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 10,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 2,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 2,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyPropertyColumnRename,testRenameIdentifierWithEdgeRoles,Magic Number,The method contains a magic number: 2,170
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 8,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 2,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 2,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 2,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 2,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 2,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 3,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 3,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 3,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 4,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 4,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 4,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 5,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 5,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 5,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 6,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 6,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 6,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 7,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 7,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyChangeListener,testAddSchemaAndVertexAndEdge,Magic Number,The method contains a magic number: 7,35
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyGraph,testTopologyGraphVersion,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_GRAPH).toList();" is 127.,19
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,30
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotifyPartitionedVertexLabel,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest tlt=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 128.,54
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotifyPartitionedVertexLabel,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("Measurement").orElseThrow().getPartitions().size()`0);" is 135.,54
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotifyPartitionedVertexLabel,Magic Number,The method contains a magic number: 2000,54
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotifyPartitionedVertexLabel,Magic Number,The method contains a magic number: 2000,54
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotifyPartitionedEdgeLabel,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest tlt=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 128.,108
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotifyPartitionedEdgeLabel,Magic Number,The method contains a magic number: 2000,108
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotifyPartitionedEdgeLabel,Magic Number,The method contains a magic number: 2000,108
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotificationSubSubPartitions,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest tlt=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 128.,163
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotificationSubSubPartitions,Magic Number,The method contains a magic number: 1000,163
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitionMultipleGraphs,testNotificationSubSubPartitions,Magic Number,The method contains a magic number: 1000,163
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,56
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,testEdgeLabelSimple,Long Method,The method has 143 lines of code.,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,testEdgeLabelSimple,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,testEdgeLabelSimple,Long Statement,The length of the statement "List<Vertex> outEdges=sqlgGraph1.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 261.,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,testEdgeLabelSimple,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 252.,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,testEdgeLabelSimple,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.schema1).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 252.,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,testEdgeLabelSimple,Magic Number,The method contains a magic number: 1000,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyEdgeLabelRenameDistributed,testEdgeLabelSimple,Magic Number,The method contains a magic number: 1000,78
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,25
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsPublicSchema,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsPublicSchema,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsPublicSchema,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsPublicSchema,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsPublicSchema,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsPublicSchema,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsPublicSchema,Magic Number,The method contains a magic number: 1_000,42
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 1_000,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 1_000,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 1_000,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 1_000,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 1_000,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 1_000,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 1_000,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 4,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 4,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 3,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 3,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 2,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testDeepEqualsAcrossSchema,Magic Number,The method contains a magic number: 2,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testModernAcrossGraphs,Magic Number,The method contains a magic number: 1000,141
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyMultipleGraphs,testGratefulDeadAcrossGraphs,Magic Number,The method contains a magic number: 1000,152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteSpecific,testRemoveAndAddInSameTransaction,Long Statement,The length of the statement "Optional<EdgeLabel> aaEdgeLabelOpt=this.sqlgGraph.getTopology().getEdgeLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"aa");" is 132.,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyDeleteSpecific,testRemoveAndAddInSameTransaction,Long Statement,The length of the statement "Optional<VertexLabel> aVertexLabelOpt=this.sqlgGraph.getTopology().getVertexLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"A");" is 136.,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelSimple,Long Statement,The length of the statement "TestTopologyChangeListener.TopologyListenerTest topologyListenerTest=new TestTopologyChangeListener.TopologyListenerTest(topologyListenerTriple);" is 145.,27
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelSimple,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 129.,27
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelSimple,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,27
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelSimple,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,27
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelSimple,Magic Number,The method contains a magic number: 2,27
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,77
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameOutEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,180
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"BB").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameInEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"BB").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Method,The method has 123 lines of code.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 262.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"A").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 260.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 250.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 248.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"C").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 2,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRename,testVertexLabelRenameEdgeRoleInMultipleTables,Magic Number,The method contains a magic number: 2,390
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,46
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,before,Empty catch clause,The method has an empty catch block.,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,before,Empty catch clause,The method has an empty catch block.,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,before,Long Statement,The length of the statement "for ( String table : List.of("V_A"`"V_B"`"E_ab"`"E_ba"`"V_person"`"V_software"`"E_created"`"E_knows"`"V_song"`"V_artist"`"E_followedBy"`"E_writtenBy"`"E_sungBy")) {" is 164.,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,before,Long Statement,The length of the statement "String sql=String.format("CREATE SERVER \"%s\" FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '%s'` dbname '%s'` port '%d');"`"sqlgraph_fwd_server"`"localhost"`"sqlgraphdb_fdw"`5432);" is 184.,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,before,Long Statement,The length of the statement "String sql=String.format("CREATE USER MAPPING FOR %s SERVER \"%s\" OPTIONS (user '%s'` password '%s');"`"postgres"`"sqlgraph_fwd_server"`"postgres"`"postgres");" is 160.,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,before,Magic Number,The method contains a magic number: 5432,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabels,Long Method,The method has 132 lines of code.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaEdgeLabelAcrossSchemaInVertexLabelFailure1,Long Statement,The length of the statement "Assert.assertEquals("EdgeLabel 'A.E_ab' has a inVertexLabel 'B' that is not present in a foreign schema"`e.getMessage());" is 121.,487
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaEdgeLabelAcrossSchemaOutVertexLabelFailure1,Long Statement,The length of the statement "Assert.assertEquals("VertexLabel 'B.V_B' has an inEdgeLabel 'ab' that is not present in a foreign schema"`e.getMessage());" is 122.,543
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaEdgeLabelAcrossSchemaOutVertexLabelSuccess,Long Statement,The length of the statement "this.sqlgGraph.getTopology().importForeignSchemas(Set.of(this.sqlgGraphFdw.getTopology().getSchema("A").orElseThrow()`this.sqlgGraphFdw.getTopology().getSchema("B").orElseThrow()));" is 181.,599
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublic,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraphFdw.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 124.,689
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublic,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraphFdw.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 124.,689
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublic,Long Statement,The length of the statement "String sql=String.format("IMPORT FOREIGN SCHEMA \"%s\" LIMIT TO (%s) FROM SERVER \"%s\" INTO \"%s\";"`this.sqlgGraph.getSqlDialect().getPublicSchema()`"\"V_A\"`\"V_B\"`\"E_ab\""`"sqlgraph_fwd_server"`this.sqlgGraph.getSqlDialect().getPublicSchema());" is 250.,689
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublic,Long Statement,The length of the statement "this.sqlgGraph.getTopology().importForeignVertexEdgeLabels(this.sqlgGraph.getTopology().getPublicSchema()`Set.of(foreignAVertexLabel`foreignBVertexLabel)`Set.of(foreignABEdgeLabel));" is 182.,689
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublicFailure,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraphFdw.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 124.,753
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublicFailure,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraphFdw.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 124.,753
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublicFailure,Long Statement,The length of the statement "String sql=String.format("IMPORT FOREIGN SCHEMA \"%s\" LIMIT TO (%s) FROM SERVER \"%s\" INTO \"%s\";"`this.sqlgGraph.getSqlDialect().getPublicSchema()`"\"V_A\"`\"V_B\"`\"E_ab\"`\"E_ba\""`"sqlgraph_fwd_server"`this.sqlgGraph.getSqlDialect().getPublicSchema());" is 259.,753
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublicFailure,Long Statement,The length of the statement "this.sqlgGraph.getTopology().importForeignVertexEdgeLabels(this.sqlgGraph.getTopology().getPublicSchema()`Set.of(foreignAVertexLabel`foreignBVertexLabel)`Set.of(foreignABEdgeLabel));" is 182.,753
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testImportForeignSchemaVertexAndEdgeLabelInPublicFailure,Long Statement,The length of the statement "this.sqlgGraph.getTopology().importForeignVertexEdgeLabels(this.sqlgGraph.getTopology().getPublicSchema()`Set.of(foreignAVertexLabel`foreignBVertexLabel)`Set.of(foreignABEdgeLabel`foreignBAEdgeLabel));" is 201.,753
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,importTinkerPopClassic,Long Statement,The length of the statement "String sql=String.format("IMPORT FOREIGN SCHEMA \"%s\" LIMIT TO (%s) FROM SERVER \"%s\" INTO \"%s\";"`this.sqlgGraph.getSqlDialect().getPublicSchema()`"\"V_person\"`\"V_software\"`\"E_created\"`\"E_knows\""`"sqlgraph_fwd_server"`this.sqlgGraph.getSqlDialect().getPublicSchema());" is 279.,849
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,importTinkerPopClassic,Long Statement,The length of the statement "this.sqlgGraph.getTopology().importForeignVertexEdgeLabels(this.sqlgGraph.getTopology().getPublicSchema()`Set.of(person`software)`Set.of(created`knows));" is 153.,849
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,importTinkerPopClassic,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Map<String`Map<String`Object>>>> traversal=this.sqlgGraph.traversal().V().hasLabel("person").filter(__.outE("created")).aggregate("p").as("p1").values("name").as("p1n").select("p").unfold().where(P.neq("p1")).as("p2").values("name").as("p2n").select("p2").out("created").choose(__.in("created").where(P.eq("p1"))`__.values("name")`__.constant(Collections.emptyList())).<String`Map<String`Map<String`Object>>>group().by(__.select("p1n")).by(__.group().by(__.select("p2n")).by(__.unfold().fold().project("numCoCreated"`"coCreated").by(__.count(Scope.local)).by()));" is 597.,849
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,checkCoworkerSummary,Magic Number,The method contains a magic number: 3,889
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,checkCoworkerSummary,Magic Number,The method contains a magic number: 2,889
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,importTinkerPopGratefulDead,Long Statement,The length of the statement "String sql=String.format("IMPORT FOREIGN SCHEMA \"%s\" LIMIT TO (%s) FROM SERVER \"%s\" INTO \"%s\";"`this.sqlgGraph.getSqlDialect().getPublicSchema()`"\"V_song\"`\"V_artist\"`\"E_followedBy\"`\"E_writtenBy\"` \"E_sungBy\""`"sqlgraph_fwd_server"`this.sqlgGraph.getSqlDialect().getPublicSchema());" is 296.,920
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,importTinkerPopGratefulDead,Long Statement,The length of the statement "this.sqlgGraph.getTopology().importForeignVertexEdgeLabels(this.sqlgGraph.getTopology().getPublicSchema()`Set.of(song`artist)`Set.of(followedBy`writtenBy`sungBy));" is 163.,920
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,getPlaylistPaths,Long Statement,The length of the statement "return this.sqlgGraph.traversal().V().has("name"`"Bob_Dylan").in("sungBy").as("a").repeat(__.out().order().by(Order.shuffle).simplePath().from("a")).until(__.out("writtenBy").has("name"`"Johnny_Cash")).limit(1).as("b").repeat(__.out().order().by(Order.shuffle).as("c").simplePath().from("b").to("c")).until(__.out("sungBy").has("name"`"Grateful_Dead")).limit(1).path().from("a").unfold().<List<String>>project("song"`"artists").by("name").by(__.coalesce(__.out("sungBy"`"writtenBy").dedup().values("name")`__.constant("Unknown")).fold());" is 538.,962
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testQueryViaFDW_WhileInsertingDirectly,Long Statement,The length of the statement "String sql=String.format("IMPORT FOREIGN SCHEMA \"%s\" LIMIT TO (%s) FROM SERVER \"%s\" INTO \"%s\";"`this.sqlgGraph.getSqlDialect().getPublicSchema()`"\"V_A\""`"sqlgraph_fwd_server"`this.sqlgGraph.getSqlDialect().getPublicSchema());" is 233.,975
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testQueryViaFDW_WhileInsertingDirectly,Magic Number,The method contains a magic number: 10_000,975
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testQueryViaFDW_WhileInsertingDirectly,Magic Number,The method contains a magic number: 10_000,975
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertViaForeignSchema,Magic Number,The method contains a magic number: 2,1026
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertViaForeignSchema,Magic Number,The method contains a magic number: 2,1026
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 4,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 4,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestForeignSchema,testInsertEdgesViaForeignSchema,Magic Number,The method contains a magic number: 2,1130
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testTopologyLocked,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testTopologyMultiThreadUnlockByTransaction,Magic Number,The method contains a magic number: 100,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testTopologyMultiThreadUnlockByTransaction,Magic Number,The method contains a magic number: 200,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testTopologyMultiThreadUnlockByTransaction,Magic Number,The method contains a magic number: 10,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testTopologyMultiThreadUnlockByTransaction,Magic Number,The method contains a magic number: 6000,81
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testLockAndCreateSchema,Empty catch clause,The method has an empty catch block.,115
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testLockAndCreateSchema,Empty catch clause,The method has an empty catch block.,115
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testLockAndCreateSchema,Empty catch clause,The method has an empty catch block.,115
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testLockAndCreateSchema,Long Statement,The length of the statement "this.sqlgGraph.getTopology().getSchema("B").orElseThrow().getVertexLabel("B").orElseThrow().ensurePropertiesExist(new HashMap<>(){" is 130.,115
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testLockAndCreateSchema,Long Statement,The length of the statement "this.sqlgGraph.getTopology().getSchema("B").orElseThrow().getVertexLabel("B").orElseThrow().ensurePropertiesExist(new HashMap<>(){" is 130.,115
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testLockAndCreateSchema,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getSchema("B").orElseThrow().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 140.,115
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,topologyGlobalLockUnlock,Empty catch clause,The method has an empty catch block.,158
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testUnlockTopologyMultiThreaded,Magic Number,The method contains a magic number: 100,188
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testUnlockTopologyMultiThreaded,Magic Number,The method contains a magic number: 200,188
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testUnlockTopologyMultiThreaded,Magic Number,The method contains a magic number: 10,188
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testUnlockTopologyMultiThreaded,Magic Number,The method contains a magic number: 6000,188
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyLock,testUnlockTopologyMultiThreaded,Magic Number,The method contains a magic number: 2000,188
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,53
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,renameBeforeCommit,Long Statement,The length of the statement "VertexLabel aVertexLabel=sqlgGraph1.getTopology().ensureSchemaExist(this.schema1).ensureVertexLabelExist("A"`new HashMap<>(){" is 125.,69
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,renameBeforeCommit,Long Statement,The length of the statement "VertexLabel bVertexLabel=sqlgGraph1.getTopology().ensureSchemaExist(this.schema2).ensureVertexLabelExist("B"`new HashMap<>(){" is 125.,69
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 1_000,69
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,renameBeforeCommit,Magic Number,The method contains a magic number: 1_000,69
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 129.,125
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 125.,125
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 125.,125
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChange2,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,125
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChange2,Magic Number,The method contains a magic number: 1_000,125
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChange2,Magic Number,The method contains a magic number: 1_000,125
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChangeWithQuery,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getProperty("a").isPresent());" is 125.,153
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChangeWithQuery,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 125.,153
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChangeWithQuery,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getProperty("a").isPresent());" is 129.,153
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedNameChangeWithQuery,Magic Number,The method contains a magic number: 1_000,153
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("AA").orElseThrow().getOutEdgeLabel("ab").isPresent());" is 135.,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getInEdgeLabels().size());" is 129.,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "Assert.assertEquals("ab"`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getInEdgeLabels().values().iterator().next().getLabel());" is 163.,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 263.,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "List<Vertex> inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"AA").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 261.,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "outEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).toList();" is 249.,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Long Statement,The length of the statement "inEdges=this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).has(Topology.SQLG_SCHEMA_VERTEX_LABEL_NAME`"B").out(Topology.SQLG_SCHEMA_IN_EDGES_EDGE).toList();" is 247.,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 1_000,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologyVertexLabelRenameDistributed,testDistributedVertexLabelRenameAsEdgeRole,Magic Number,The method contains a magic number: 2_000,181
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,24
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 1000,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 1000,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 1000,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 2000,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 5,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 5,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 5,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 5,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 5,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 5,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testVertexSubSubPartitionRange,Magic Number,The method contains a magic number: 7,47
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 14,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 5,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 5,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_vertexLabelSubSubPartition,Magic Number,The method contains a magic number: 5,120
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").outE("ab").has("int1"`1).has("int2"`1).has("int3"`1).otherV().toList();" is 125.,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 2000,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 2000,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 10,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 12,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 18,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 9,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 2000,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionRange,Magic Number,The method contains a magic number: 2000,194
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitionsAfterRemove,Magic Number,The method contains a magic number: 10,289
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitionsAfterRemove2,Magic Number,The method contains a magic number: 3,299
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 2,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 2,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 2,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 2,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 2,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 12,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 9,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 9,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,assert_edgePartitions,Magic Number,The method contains a magic number: 9,306
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testSubSubPartitionList,Magic Number,The method contains a magic number: 5,361
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testSubSubPartitionList,Magic Number,The method contains a magic number: 5,361
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testSubSubPartitionList,Magic Number,The method contains a magic number: 5,361
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testSubSubPartitionList,Magic Number,The method contains a magic number: 5,361
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testSubSubPartitionList,Magic Number,The method contains a magic number: 5,361
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testSubSubPartitionList,Magic Number,The method contains a magic number: 5,361
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testSubSubPartitionList,Magic Number,The method contains a magic number: 1000,361
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionList,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").outE("ab").has("int1"`1).has("int2"`1).has("int3"`1).otherV().toList();" is 125.,422
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionList,Magic Number,The method contains a magic number: 10,422
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionList,Magic Number,The method contains a magic number: 18,422
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionList,Magic Number,The method contains a magic number: 9,422
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestSubSubPartition,testEdgeSubSubPartitionList,Magic Number,The method contains a magic number: 1000,422
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologySchemaDeleteMultipleGraphs,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,24
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologySchemaDeleteMultipleGraphs,testRemoveSchemaWithEdgesAcrossSchemas,Magic Number,The method contains a magic number: 2_000,41
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestTopologySchemaDeleteMultipleGraphs,testRemoveSchemaWithEdgesAcrossSchemas,Magic Number,The method contains a magic number: 2_000,41
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithRangePartitionNameToLong,Empty catch clause,The method has an empty catch block.,45
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithListPartitionNameToLong,Empty catch clause,The method has an empty catch block.,66
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithListPartitionNameToLong,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 131.,66
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testReloadVertexLabelWithPartitions2,Long Statement,The length of the statement "String checkPrimaryKey="SELECT a.attname` format_type(a.atttypid` a.atttypmod) AS data_type\n" + "FROM pg_index i\n" + "JOIN pg_attribute a ON a.attrelid = i.indrelid\n"+ " AND a.attnum = ANY(i.indkey)\n"+ "WHERE i.indrelid = '\"V_A\"'::regclass\n"+ "AND i.indisprimary;";" is 272.,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testReloadVertexLabelWithPartitions2,Magic Number,The method contains a magic number: 2,87
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithCompositeKeys,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 131.,150
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithCompositeKeys,Long Statement,The length of the statement "String checkPrimaryKey="SELECT a.attname` format_type(a.atttypid` a.atttypmod) AS data_type\n" + "FROM pg_index i\n" + "JOIN pg_attribute a ON a.attrelid = i.indrelid\n"+ " AND a.attnum = ANY(i.indkey)\n"+ "WHERE i.indrelid = '\"V_A\"'::regclass\n"+ "AND i.indisprimary;";" is 272.,150
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithCompositeKeys,Long Statement,The length of the statement "ListOrderedSet<String> identifiers=sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getIdentifiers();" is 129.,150
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithCompositeKeys,Magic Number,The method contains a magic number: 2L,150
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithCompositeKeys,Magic Number,The method contains a magic number: 3,150
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithCompositeKeys,Magic Number,The method contains a magic number: 2,150
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionWithCompositeKeys,Magic Number,The method contains a magic number: 2,150
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("cmUid"`"vendorTechnology"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "PropertyColumn propertyColumn=realWorkspaceElementVertexLabel.getProperty("cmUid").orElseThrow(IllegalStateException::new);" is 123.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "VertexLabel virtualGroupVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("VirtualGroup"`new LinkedHashMap<>(){" is 138.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel("virtualGroup_RealWorkspaceElement"`virtualGroupVertexLabel`realWorkspaceElementVertexLabel`new LinkedHashMap<>(){" is 233.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "Vertex northern=this.sqlgGraph.addVertex(T.label`"VirtualGroup"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"Northern");" is 155.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "Partition partition=edgeLabel.ensureListPartitionExists("Northern"`"'" + ((RecordId)northern.id()).getID().getIdentifiers().get(0).toString() + "'");" is 149.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "Vertex western=this.sqlgGraph.addVertex(T.label`"VirtualGroup"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"Western");" is 153.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "partition=edgeLabel.ensureListPartitionExists("Western"`"'" + ((RecordId)western.id()).getID().getIdentifiers().get(0).toString() + "'");" is 137.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST1.name()).count().next()`0);" is 146.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST2.name()).count().next()`0);" is 146.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST3.name()).count().next()`0);" is 146.,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Magic Number,The method contains a magic number: 3,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnMultipleUserDefinedForeignKey,Magic Number,The method contains a magic number: 2,201
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("cmUid"`"vendorTechnology"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Statement,The length of the statement "VertexLabel virtualGroupVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("VirtualGroup"`new LinkedHashMap<>(){" is 138.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedEdgeLabelExist("virtualGroup_RealWorkspaceElement"`virtualGroupVertexLabel`realWorkspaceElementVertexLabel`new LinkedHashMap<>(){" is 213.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Statement,The length of the statement "String checkPrimaryKey="SELECT a.attname` format_type(a.atttypid` a.atttypmod) AS data_type\n" + "FROM pg_index i\n" + "JOIN pg_attribute a ON a.attrelid = i.indrelid\n"+ " AND a.attnum = ANY(i.indkey)\n"+ "WHERE i.indrelid = '\"E_virtualGroup_RealWorkspaceElement\"'::regclass\n"+ "AND i.indisprimary;";" is 304.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST1.name()).count().next()`0);" is 146.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST2.name()).count().next()`0);" is 146.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST3.name()).count().next()`0);" is 146.,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Magic Number,The method contains a magic number: 2,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Magic Number,The method contains a magic number: 2,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Magic Number,The method contains a magic number: 4,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdge,Magic Number,The method contains a magic number: 2,285
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Identifier,The length of the identifier scanRealWorkspaceElementPartition is 33.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Identifier,The length of the identifier scanRealWorkspaceElementPartition is 33.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("cmUid"`"vendorTechnology"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "VertexLabel virtualGroupVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("VirtualGroup"`new LinkedHashMap<>(){" is 138.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedEdgeLabelExist("virtualGroup_RealWorkspaceElement"`virtualGroupVertexLabel`realWorkspaceElementVertexLabel`new LinkedHashMap<>(){" is 213.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST1.name()).count().next()`0);" is 146.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST2.name()).count().next()`0);" is 146.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST3.name()).count().next()`0);" is 146.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain SELECT\n" + "\t\"public\".\"V_VirtualGroup\".\"ID\" AS \"alias1\"`\n" + "\t\"public\".\"V_VirtualGroup\".\"name\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_RealWorkspaceElement\" INNER JOIN\n"+ "\t\"public\".\"E_virtualGroup_RealWorkspaceElement\" ON \"public\".\"V_RealWorkspaceElement\".\"cmUid\" = \"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.RealWorkspaceElement.cmUid__I\" AND \"public\".\"V_RealWorkspaceElement\".\"vendorTechnology\" = \"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.RealWorkspaceElement.vendorTechnology__I\" INNER JOIN\n"+ "\t\"public\".\"V_VirtualGroup\" ON \"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.VirtualGroup__O\" = \"public\".\"V_VirtualGroup\".\"ID\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_RealWorkspaceElement\".\"cmUid\" = 'a1' AND \"public\".\"V_RealWorkspaceElement\".\"vendorTechnology\" = 'TEST1')");" is 929.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "scanRealWorkspaceElementPartition=scanRealWorkspaceElementPartition || result.contains("Index Only Scan using \"TEST1_pkey\"");" is 127.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V(v1).inE("virtualGroup_RealWorkspaceElement").has("name"`"Northern").otherV().toList();" is 124.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain SELECT\n" + "\t\"public\".\"V_RealWorkspaceElement\".\"cmUid\" AS \"alias1\"`\n" + "\t\"public\".\"V_RealWorkspaceElement\".\"vendorTechnology\" AS \"alias2\"`\n"+ "\t\"public\".\"V_RealWorkspaceElement\".\"name\" AS \"alias3\"`\n"+ "\t\"public\".\"E_virtualGroup_RealWorkspaceElement\".\"ID\" AS \"alias4\"`\n"+ "\t\"public\".\"E_virtualGroup_RealWorkspaceElement\".\"name\" AS \"alias5\"`\n"+ "\t\"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.VirtualGroup__O\" AS \"alias6\"`\n"+ "\t\"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.RealWorkspaceElement.cmUid__I\" AS \"alias7\"`\n"+ "\t\"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.RealWorkspaceElement.vendorTechnology__I\" AS \"alias8\"`\n"+ "\t\"public\".\"V_VirtualGroup\".\"ID\" AS \"alias9\"`\n"+ "\t\"public\".\"V_VirtualGroup\".\"name\" AS \"alias10\"\n"+ "FROM\n"+ "\t\"public\".\"V_RealWorkspaceElement\" INNER JOIN\n"+ "\t\"public\".\"E_virtualGroup_RealWorkspaceElement\" ON \"public\".\"V_RealWorkspaceElement\".\"cmUid\" = \"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.RealWorkspaceElement.cmUid__I\" AND \"public\".\"V_RealWorkspaceElement\".\"vendorTechnology\" = \"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.RealWorkspaceElement.vendorTechnology__I\" INNER JOIN\n"+ "\t\"public\".\"V_VirtualGroup\" ON \"public\".\"E_virtualGroup_RealWorkspaceElement\".\"public.VirtualGroup__O\" = \"public\".\"V_VirtualGroup\".\"ID\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_RealWorkspaceElement\".\"cmUid\" = 'a1' AND \"public\".\"V_RealWorkspaceElement\".\"vendorTechnology\" = 'TEST1') AND ( \"public\".\"E_virtualGroup_RealWorkspaceElement\".\"name\" = 'Northern')\n");" is 1733.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "scanRealWorkspaceElementPartition=scanRealWorkspaceElementPartition || result.contains("Index Scan using \"TEST1_pkey\"");" is 122.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Long Statement,The length of the statement "scanEdgePartition=scanEdgePartition || result.contains("Index Scan using \"Northern_public.RealWorkspaceElement.cmUid__I_public.RealWo_idx\" on \"Northern\"");" is 159.,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Magic Number,The method contains a magic number: 2,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Magic Number,The method contains a magic number: 4,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeNoIdentifiers,Magic Number,The method contains a magic number: 2,382
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("vendorTechnology"`"cmUid"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "VertexLabel virtualGroupVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("VirtualGroup"`new LinkedHashMap<>(){" is 138.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel("virtualGroup_RealWorkspaceElement"`virtualGroupVertexLabel`realWorkspaceElementVertexLabel`new LinkedHashMap<>(){" is 233.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Partition partition=edgeLabel.ensureListPartitionExists("Northern"`"'" + ((RecordId)northern.id()).getID().getIdentifiers().get(0).toString() + "'");" is 149.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "partition=edgeLabel.ensureListPartitionExists("Western"`"'" + ((RecordId)western.id()).getID().getIdentifiers().get(0).toString() + "'");" is 137.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST1.name()).count().next()`0);" is 146.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST2.name()).count().next()`0);" is 146.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST3.name()).count().next()`0);" is 146.,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 2,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 4,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 2,517
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("vendorTechnology"`"cmUid"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "PropertyColumn propertyColumn=realWorkspaceElementVertexLabel.getProperty("cmUid").orElseThrow(IllegalStateException::new);" is 123.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "VertexLabel virtualGroupVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("VirtualGroup"`new LinkedHashMap<>(){" is 138.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel("virtualGroup_RealWorkspaceElement"`virtualGroupVertexLabel`realWorkspaceElementVertexLabel`new LinkedHashMap<>(){" is 233.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "Partition partition=edgeLabel.ensureListPartitionExists("Northern"`((RecordId)northern.id()).getID().getSequenceId().toString());" is 129.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST1.name()).count().next()`0);" is 146.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST2.name()).count().next()`0);" is 146.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST3.name()).count().next()`0);" is 146.,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Magic Number,The method contains a magic number: 3,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionEdgeOnForeignKey,Magic Number,The method contains a magic number: 2,598
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testUpdatePropertiesOnEdgeToPartitionedTable,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,679
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testUpdatePropertiesOnEdgeToPartitionedTable,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("cmUid"`"vendorTechnology"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,679
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testUpdatePropertiesOnEdgeToPartitionedTable,Long Statement,The length of the statement "PropertyColumn propertyColumn=realWorkspaceElementVertexLabel.getProperty("cmUid").orElseThrow(IllegalStateException::new);" is 123.,679
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testUpdatePropertiesOnEdgeToPartitionedTable,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST1.name()).count().next()`0);" is 146.,679
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testUpdatePropertiesOnEdgeToPartitionedTable,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST2.name()).count().next()`0);" is 146.,679
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testUpdatePropertiesOnEdgeToPartitionedTable,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST3.name()).count().next()`0);" is 146.,679
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testUpdatePropertiesOnEdgeToPartitionedTable,Magic Number,The method contains a magic number: 3,679
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionOnColumnWithCapitals,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionOnColumnWithCapitals,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("cmUid"`"vendorTechnology"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionOnColumnWithCapitals,Long Statement,The length of the statement "PropertyColumn propertyColumn=realWorkspaceElementVertexLabel.getProperty("cmUid").orElseThrow(IllegalStateException::new);" is 123.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionOnColumnWithCapitals,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST1.name()).count().next()`0);" is 146.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionOnColumnWithCapitals,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST2.name()).count().next()`0);" is 146.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionOnColumnWithCapitals,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`TEST.TEST3.name()).count().next()`0);" is 146.,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionOnColumnWithCapitals,Magic Number,The method contains a magic number: 3,725
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testReloadEdgeLabelWithPartitions,Magic Number,The method contains a magic number: 2,931
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testReloadEdgeLabelWithSubPartitions,Magic Number,The method contains a magic number: 2,985
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningRange,Long Statement,The length of the statement "Partition partition=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("Measurement").orElseThrow().getPartition("measurement1").orElseThrow();" is 154.,1069
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningRange,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PARTITION).count().next()`0);" is 140.,1069
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningRange,Magic Number,The method contains a magic number: 2016,1069
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningRange,Magic Number,The method contains a magic number: 7,1069
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningRange,Magic Number,The method contains a magic number: 2016,1069
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningRange,Magic Number,The method contains a magic number: 8,1069
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningRange,Magic Number,The method contains a magic number: 2,1069
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Long Statement,The length of the statement "Partition partition=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("Cities").orElseThrow().getPartition("Cities_a").orElseThrow();" is 145.,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Long Statement,The length of the statement "Assert.assertEquals(3`this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PARTITION).count().next()`0);" is 140.,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 100,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 1000L,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 1000L,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 100,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 1000L,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 1000L,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 202,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 100,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 100,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 102,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningList,Magic Number,The method contains a magic number: 3,1109
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 100,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 1000L,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 1000L,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 100,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 1000L,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 1000L,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 202,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 100,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 100,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 202,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 100,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitioningListSimple,Magic Number,The method contains a magic number: 100,1152
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("test.Measurement").has("date"`localDate1).count().next()`0);" is 123.,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("test.Measurement").has("date"`localDate2).count().next()`0);" is 123.,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Long Statement,The length of the statement "Partition partition=this.sqlgGraph.getTopology().getSchema("test").orElseThrow().getVertexLabel("Measurement").orElseThrow().getPartition("measurement1").orElseThrow();" is 168.,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Long Statement,The length of the statement "Assert.assertEquals(0`this.sqlgGraph.traversal().V().hasLabel("test.Measurement").has("date"`localDate1).count().next()`0);" is 123.,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("test.Measurement").has("date"`localDate2).count().next()`0);" is 123.,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PARTITION).count().next()`0);" is 140.,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Long Statement,The length of the statement "Assert.assertEquals(1`sqlgGraph1.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PARTITION).count().next()`0);" is 136.,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Magic Number,The method contains a magic number: 2016,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Magic Number,The method contains a magic number: 7,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Magic Number,The method contains a magic number: 2016,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Magic Number,The method contains a magic number: 8,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionRangeInSchema,Magic Number,The method contains a magic number: 2,1197
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().E().hasLabel("liveAt").has("date"`LocalDate.of(2016`7`1)).count().next()`0);" is 125.,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().E().hasLabel("liveAt").has("date"`LocalDate.of(2016`7`1)).count().next()`0);" is 125.,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Long Statement,The length of the statement "Assert.assertEquals(2`sqlgGraph1.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PARTITION).count().next()`0);" is 136.,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Long Statement,The length of the statement "Assert.assertEquals("date"`sqlgGraph1.getTopology().getPublicSchema().getEdgeLabel("liveAt").orElseThrow().getPartitionExpression());" is 133.,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Long Statement,The length of the statement "Assert.assertEquals(PartitionType.RANGE`sqlgGraph1.getTopology().getPublicSchema().getEdgeLabel("liveAt").orElseThrow().getPartitionType());" is 140.,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2016,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 7,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2016,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 8,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2016,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 7,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2016,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 7,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesRange,Magic Number,The method contains a magic number: 2,1245
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().E().hasLabel("liveAt").has("date"`LocalDate.of(2016`7`1)).count().next()`0);" is 125.,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().E().hasLabel("liveAt").has("date"`LocalDate.of(2016`7`1)).count().next()`0);" is 125.,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Long Statement,The length of the statement "Assert.assertEquals(2`sqlgGraph1.topology().V().hasLabel(Topology.SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_PARTITION).count().next()`0);" is 136.,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2016,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 7,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2016,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 7,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2016,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 7,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2016,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 7,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testPartitionedEdgesList,Magic Number,The method contains a magic number: 2,1290
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Long Statement,The length of the statement "Partition p1=measurement.ensureRangePartitionWithSubPartitionExists("measurement_y2006m02"`"'2006-02-01'"`"'2006-03-01'"`PartitionType.RANGE`"peaktemp");" is 153.,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Long Statement,The length of the statement "Partition p2=measurement.ensureRangePartitionWithSubPartitionExists("measurement_y2006m03"`"'2006-03-01'"`"'2006-04-01'"`PartitionType.RANGE`"peaktemp");" is 153.,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Measurement"`"name"`"measurement1"`"logdate"`LocalDate.of(2006`2`1)`"peaktemp"`1`"unitsales"`1);" is 130.,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Measurement"`"name"`"measurement2"`"logdate"`LocalDate.of(2006`2`2)`"peaktemp"`1`"unitsales"`1);" is 130.,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Measurement"`"name"`"measurement3"`"logdate"`LocalDate.of(2006`3`1)`"peaktemp"`1`"unitsales"`1);" is 130.,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Measurement"`"name"`"measurement4"`"logdate"`LocalDate.of(2006`3`2)`"peaktemp"`2`"unitsales"`1);" is 130.,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Long Statement,The length of the statement "List<Vertex> vertexList=this.sqlgGraph.traversal().V().hasLabel("Measurement").has("logdate"`LocalDate.of(2006`2`1)).has("peaktemp"`1).toList();" is 144.,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2006,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2006,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2006,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 3,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2006,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 3,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2006,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningRange,Magic Number,The method contains a magic number: 2,1328
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Long Statement,The length of the statement "Partition p1=measurement.ensureListPartitionWithSubPartitionExists("measurement_list1"`"'1'"`PartitionType.LIST`"list2");" is 121.,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Long Statement,The length of the statement "Partition p2=measurement.ensureListPartitionWithSubPartitionExists("measurement_list2"`"'2'"`PartitionType.LIST`"list2");" is 121.,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 2,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 3,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 2,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 3,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 7,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testSubPartitioningList,Magic Number,The method contains a magic number: 4,1368
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("A").outE().has("int1"`6).has("int2"`6).otherV().count().next()`0);" is 129.,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 2,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 2,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 6,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 6,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 10,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 10,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 11,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 14,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 4,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 6,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningRange,Magic Number,The method contains a magic number: 6,1427
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("A").outE().has("int1"`6).has("int2"`13).otherV().count().next()`0);" is 130.,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 2,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 12,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 6,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 13,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 10,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 14,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 10,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 15,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 4,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 6,1479
pietermartin_sqlg,org.umlg.sqlg.test.topology,TestPartitioning,testEdgeSubPartitioningList,Magic Number,The method contains a magic number: 13,1479
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").order().by("order").local(__.optional(__.outE("ab").order().by("order"`Order.desc).inV().local(__.optional(__.out("bc").order().by("order"`Order.desc))))).path();" is 288.,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 19,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 4,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 4,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 5,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 5,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 6,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 6,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 7,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 7,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 8,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 8,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 9,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 9,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 10,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 10,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 11,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 11,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 12,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 12,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 13,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 13,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 14,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 14,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 15,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 15,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 16,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 16,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 17,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 17,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 18,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 18,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testSqlgBranchStepKeepsStartElementsOrder,Magic Number,The method contains a magic number: 3,22
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testBranchStep,Long Statement,The length of the statement "DefaultGraphTraversal traversal=(DefaultGraphTraversal)this.sqlgGraph.traversal().V(a1).branch(__.out().values("name")).option(P.eq("b2")`__.out());" is 148.,126
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testBranchStep,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal)this.sqlgGraph.traversal().V(a1).branch(__.out().values("name")).option(P.eq("b1")`__.out());" is 126.,126
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testBranchStep,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testBranchStep,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.branchstep,TestSqlgBranchStep,testBranchStep,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestVertexCreation,testCreateVertexWithProperties,Long Statement,The length of the statement "sqlgGraph.addVertex(T.label`"Person"`"boolean1"`true`"short1"`(short)1`"integer1"`1`"long1"`1L`"float1"`1F`"double1"`1D`"name"`"marko");" is 136.,46
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestVertexCreation,testCreateVertexWithProperties,Long Statement,The length of the statement "sqlgGraph.addVertex(T.label`"Person"`"boolean1"`true`"short1"`(short)1`"integer1"`1`"long1"`1L`"float1"`1F`"double1"`1D`"name"`"marko");" is 136.,46
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestVertexCreation,testCreateVertexWithProperties,Magic Number,The method contains a magic number: 2,46
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestVertexCreation,testAndColumns,Magic Number,The method contains a magic number: 2,110
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveElement,testRemoveVertex,Magic Number,The method contains a magic number: 3L,16
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveElement,testRemoveVertex,Magic Number,The method contains a magic number: 2L,16
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveElement,testRemoveEdge,Magic Number,The method contains a magic number: 3L,28
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveElement,testRemoveEdge,Magic Number,The method contains a magic number: 2L,28
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveElement,testRemoveEdge,Magic Number,The method contains a magic number: 3L,28
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{true}`{(byte)1}`{(short)1}`{1}`{1L}`{1F}`{1.111D}`{"haloThere"}`{LocalDate.now()}`{LocalDateTime.now()}`{LocalTime.now().withNano(0)}`{ZonedDateTime.now()}`{Period.of(1`1`1)}`{Duration.ofHours(5)}`{objectMapper.createObjectNode()}`{new boolean[]{false`true}}`{new Boolean[]{Boolean.TRUE`Boolean.FALSE}}`{new byte[]{(byte)1`(byte)2}}`{new short[]{(short)1`(short)2}}`{new Short[]{(short)1`(short)2}}`{new int[]{1`1}}`{new Integer[]{1`1}}`{new long[]{1L`2L}}`{new Long[]{1L`2L}}`{new double[]{2D`1D}}`{new Double[]{2D`3D}}`{new LocalDateTime[]{LocalDateTime.now()`LocalDateTime.now()}}`{new LocalDate[]{LocalDate.now()`LocalDate.now()}}`{new LocalTime[]{LocalTime.now()`LocalTime.now()}}`{new ZonedDateTime[]{ZonedDateTime.now()`ZonedDateTime.now()}}`{new Duration[]{Duration.ofHours(1)`Duration.ofHours(3)}}`{new Period[]{Period.of(1`1`1)`Period.of(2`2`2)}}`{new ObjectNode[]{objectMapper.createObjectNode()`objectMapper.createObjectNode()}}});" is 980.,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 5,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 3,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,data,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestRemoveProperty,testRemove,Complex Method,Cyclomatic complexity of the method is 16,49
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addVXV_hasXname_markoX_propertiesXnameX_keyX_label,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().addV(__.V().has("name"`"marko").properties("name").key()).label();" is 134.,28
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Long Statement,The length of the statement "final Traversal<Vertex`Edge> traversal=this.sqlgGraph.traversal().addV().as("first").repeat(__.addE("next").to(__.addV()).inV()).times(5).addE("next").to(__.select("first"));" is 174.,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 5,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 6L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 6L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 2L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 2L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 2L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 2L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 2L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestTraversalAddV,g_addV_asXfirstX_repeatXaddEXnextX_toXaddVX_inVX_timesX5X_addEXnextX_toXselectXfirstXX,Magic Number,The method contains a magic number: 2L,37
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestEdgeCreation,testCreateEdge,Magic Number,The method contains a magic number: 2,14
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestEdgeCreation,testCreateEdgeWithProperties,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testDeletedVertexUserSuppliedPK,Magic Number,The method contains a magic number: 100,35
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testDeletedVertexUserSuppliedPK_with2PK,Magic Number,The method contains a magic number: 100,55
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testDeletedVertexUserSuppliedPK_with2PK,Magic Number,The method contains a magic number: 100,55
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 144.,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel dogVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Dog"`new HashMap<String`PropertyType>(){" is 138.,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "Vertex person=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"marko");" is 144.,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "Vertex dog=this.sqlgGraph.addVertex(T.label`"Dog"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"snowy");" is 138.,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveOutVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,88
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 144.,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel dogVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Dog"`new HashMap<String`PropertyType>(){" is 138.,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "Vertex person=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"marko");" is 144.,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Long Statement,The length of the statement "Vertex dog=this.sqlgGraph.addVertex(T.label`"Dog"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"snowy");" is 138.,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,137
pietermartin_sqlg,org.umlg.sqlg.test.mod,TestDeletedVertex,testRemoveInVertexRemovesEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,137
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testDuplicateQueryJoin,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Vertex>> traversal=this.sqlgGraph.traversal().V().match(__.as("a").out("knows").as("b")).select("a"`"b");" is 138.,27
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testDuplicateQueryJoin,Magic Number,The method contains a magic number: 100,27
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testDuplicateQueryJoinMultipleKeys,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Vertex>> traversal=this.sqlgGraph.traversal().V().match(__.as("a").out("knows").as("b")).select("a"`"b");" is 138.,54
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testDuplicateQueryJoinMultipleKeys,Magic Number,The method contains a magic number: 100,54
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testDuplicateQueryJoinMultipleKeys,Magic Number,The method contains a magic number: 100,54
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,g_V_matchXa__a_out_b__notXa_created_bXX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().match(__.as("a").out().as("b")`__.not(__.as("a").out("created").as("b")));" is 158.,82
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,g_V_matchXa__a_out_b__notXa_created_bXX,Long Statement,The length of the statement "checkResults(makeMapList(2`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"josh")`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"vadas"))`traversal);" is 214.,82
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,g_V_matchXa__a_out_b__notXa_created_bXX,Magic Number,The method contains a magic number: 2,82
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testMatch,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)this.sqlgGraph.traversal().V().match(__.as("a").in("ab").as("x")`__.as("a").out("bc").as("y"));" is 204.,96
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testMatch2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)this.sqlgGraph.traversal().V(marko).match(__.as("a").out("knows").as("b")`__.as("a").out("created").as("c"));" is 218.,121
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testMatch2,Long Statement,The length of the statement "checkResults(makeMapList(3`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"vadas")`"c"`convertToVertex(this.sqlgGraph`"lop")`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"josh")`"c"`convertToVertex(this.sqlgGraph`"lop"))`traversal);" is 298.,121
pietermartin_sqlg,org.umlg.sqlg.test.match,TestMatch,testMatch2,Magic Number,The method contains a magic number: 3,121
pietermartin_sqlg,org.umlg.sqlg.test.event,TestTinkerPopEvent,shouldDetachVertexPropertyWhenRemoved,Long Statement,The length of the statement "if (this.sqlgGraph.features().graph().supportsTransactions()) builder.eventQueue(new EventStrategy.TransactionalEventQueue(this.sqlgGraph));" is 140.,64
pietermartin_sqlg,org.umlg.sqlg.test.event,TestTinkerPopEvent,shouldTriggerAddVertexAndPropertyUpdateWithCoalescePattern,Long Statement,The length of the statement "Traversal<Vertex`Vertex> traversal=gts.V().has("some"`"thing").fold().coalesce(unfold()`addV()).property("some"`"thing");" is 121.,98
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestLabelsSchema,testOrHasSchema,Magic Number,The method contains a magic number: 2L,28
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestLabelsSchema,testMultipleLabelSchemaEdge,Magic Number,The method contains a magic number: 2L,67
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testNeqWithinManyIDs,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> t=sqlgGraph.traversal().V(a).out().has(T.id`P.without(b1.id()`b2.id()`b3.id()`b4.id()`b5.id()));" is 126.,38
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testNeqWithinManyIDs,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testNeqWithinID,Magic Number,The method contains a magic number: 2,65
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testNeqWithID,Magic Number,The method contains a magic number: 2,83
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveIdCollectionAfterOut,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V(a1).out().hasId(Arrays.asList(b1`c1`b2`c2`b3`c3`b4`c4)).hasId(b2`c2`b3`c3).toList();" is 135.,117
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveIdCollectionAfterOut,Magic Number,The method contains a magic number: 4,117
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIdsComplex,Long Statement,The length of the statement "Assert.assertTrue(vertices.contains(a1) && vertices.contains(b1) && vertices.contains(c1)&& vertices.contains(a2)&& vertices.contains(b2)&& vertices.contains(c2));" is 163.,153
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIdsComplex,Magic Number,The method contains a magic number: 6,153
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIdsComplexConsecutive,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V(Arrays.asList(a1`b1`c1`a2`b2`c2)).hasId(Arrays.asList(a1`b1`c1`a3`b3`c3)).toList();" is 134.,178
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIdsComplexConsecutive,Magic Number,The method contains a magic number: 3,178
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIdsComplexConsecutiveUsingTmpTables,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V(Arrays.asList(a1`b1`c1`a2`b2`c2`a3`b3`c3`a4`b4`c4)).hasId(Arrays.asList(a1`b1`c1`a3`b3`c3`a4`b4`c4)).toList();" is 161.,199
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIdsComplexConsecutiveUsingTmpTables,Long Statement,The length of the statement "Assert.assertTrue(vertices.contains(a1) && vertices.contains(b1) && vertices.contains(c1)&& vertices.contains(a3)&& vertices.contains(b3)&& vertices.contains(c3)&& vertices.contains(a4)&& vertices.contains(b4)&& vertices.contains(c4));" is 235.,199
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIdsComplexConsecutiveUsingTmpTables,Magic Number,The method contains a magic number: 9,199
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCollectionIds,Magic Number,The method contains a magic number: 5,226
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").hasLabel("B");" is 144.,282
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasLabels,Magic Number,The method contains a magic number: 2,282
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqNeqHasLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").has(T.label`P.neq("A"));" is 154.,300
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqNeqHasLabels,Magic Number,The method contains a magic number: 2,300
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqNeqHasLabels2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").has(T.label`P.neq("B"));" is 154.,319
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqNeqHasLabels2,Magic Number,The method contains a magic number: 2,319
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqWithinHasLabels2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").has(T.label`P.within("B"));" is 157.,338
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqWithinHasLabels2,Magic Number,The method contains a magic number: 2,338
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveHasLabelWithout,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").has(T.label`P.without("B"`"C"));" is 162.,357
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveHasLabelWithout,Magic Number,The method contains a magic number: 2,357
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a).hasLabel("B");" is 131.,376
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels,Magic Number,The method contains a magic number: 2,376
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a`b`c).hasLabel("B");" is 135.,395
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels2,Magic Number,The method contains a magic number: 2,395
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels3,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a).hasLabel("A").hasId(b.id());" is 145.,416
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels3,Magic Number,The method contains a magic number: 3,416
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels3HasIdWithin,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("B").has(T.id`P.without(b.id()`b2.id()));" is 166.,436
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels4,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A"`"B"`"C").hasId(b.id());" is 152.,460
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels4,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels5,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A"`"B"`"C").hasId(b.id()).hasId(a.id());" is 166.,482
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels5,Magic Number,The method contains a magic number: 3,482
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels6,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A"`"B"`"C").hasId(b.id()).hasId(b.id());" is 166.,503
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasIdAndLabels6,Magic Number,The method contains a magic number: 3,503
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasWithinIdAndLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A"`"B"`"C").has(T.id`P.within(b.id()`b2.id()));" is 173.,524
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasWithinIdAndLabels,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasWithinIdAndLabels,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasWithoutIdAndLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A"`"B"`"C"`"D").has(T.id`P.without(b.id()`b2.id()));" is 178.,545
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasWithoutIdAndLabels,Magic Number,The method contains a magic number: 3,545
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasNeqIdAndLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A"`"B"`"C"`"D").has(T.id`P.neq(b.id()));" is 166.,569
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveEqHasNeqIdAndLabels,Magic Number,The method contains a magic number: 4,569
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabel,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().hasLabel("B");" is 150.,593
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabel,Magic Number,The method contains a magic number: 2,593
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabel,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B");" is 149.,618
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabel,Magic Number,The method contains a magic number: 2,618
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().hasLabel("B").hasId(b.id());" is 164.,643
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasId,Magic Number,The method contains a magic number: 2,643
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasId,Magic Number,The method contains a magic number: 2,643
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B").hasId(b.id());" is 163.,670
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasId,Magic Number,The method contains a magic number: 2,670
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasId,Magic Number,The method contains a magic number: 2,670
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasNeqId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().hasLabel("B").has(T.id`P.neq(b.id()));" is 174.,698
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasNeqId,Magic Number,The method contains a magic number: 2,698
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithinId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().hasLabel("B"`"C"`"D").has(T.id`P.within(b.id()`c.id()));" is 192.,727
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithinId,Magic Number,The method contains a magic number: 2,727
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithinId,Magic Number,The method contains a magic number: 2,727
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithinId,Magic Number,The method contains a magic number: 2,727
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithoutId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().hasLabel("B"`"C"`"D").has(T.id`P.without(b.id()`c.id()));" is 193.,755
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithoutId,Magic Number,The method contains a magic number: 2,755
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithoutId,Magic Number,The method contains a magic number: 2,755
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithoutNeqId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().hasLabel("B"`"C"`"D").has(T.id`P.neq(c.id()));" is 182.,784
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithoutNeqId,Magic Number,The method contains a magic number: 3,784
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutWithHasLabelAndHasWithoutNeqId,Magic Number,The method contains a magic number: 2,784
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B"`"C"`"D").has(T.id`P.within(b.id()`c.id()));" is 191.,813
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId2,Magic Number,The method contains a magic number: 2,813
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId2,Magic Number,The method contains a magic number: 2,813
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId2,Magic Number,The method contains a magic number: 2,813
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithoutId2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B"`"C"`"D").has(T.id`P.without(b.id()`c.id()));" is 192.,841
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithoutId2,Magic Number,The method contains a magic number: 2,841
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithoutId2,Magic Number,The method contains a magic number: 2,841
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasNeqId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B"`"C"`"D").has(T.id`P.neq(b.id()));" is 181.,869
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasNeqId,Magic Number,The method contains a magic number: 3,869
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasNeqId,Magic Number,The method contains a magic number: 2,869
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasLabelAndIdOnOutEdge,Magic Number,The method contains a magic number: 2,897
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasLabelAndIdOnOutEdge,Magic Number,The method contains a magic number: 2,897
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasLabelAndIdOnInEdge,Magic Number,The method contains a magic number: 2,942
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasLabelAndIdOnInEdge,Magic Number,The method contains a magic number: 2,942
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().E().has(T.label`P.within("ab"`"ac"`"ad")).outV().hasLabel("C"`"B").has(T.id`P.eq(b));" is 122.,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().E().has(T.label`P.within("ab"`"ac"`"ad")).outV().hasLabel("C"`"B").has(T.id`P.neq(b));" is 123.,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().E().has(T.label`P.within("ab"`"ac"`"ad")).outV().hasLabel("C"`"B").has(T.id`P.within(b.id()`b2.id()`c.id()));" is 146.,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().E().has(T.label`P.within("ab"`"ac"`"ad")).outV().hasLabel("C"`"B").has(T.id`P.without(b.id()`b2.id()`c.id()));" is 147.,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Magic Number,The method contains a magic number: 2,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Magic Number,The method contains a magic number: 2,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Magic Number,The method contains a magic number: 6,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Magic Number,The method contains a magic number: 4,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Magic Number,The method contains a magic number: 3,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testOutEWithHasLabelAndId,Magic Number,The method contains a magic number: 3,987
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasId2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B").hasId(b.id());" is 163.,1052
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasId2,Magic Number,The method contains a magic number: 2,1052
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasId2,Magic Number,The method contains a magic number: 2,1052
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B").has(T.id`P.within(b.id()`b2.id()`c.id()));" is 191.,1079
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId,Magic Number,The method contains a magic number: 2,1079
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId,Magic Number,The method contains a magic number: 2,1079
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithinId,Magic Number,The method contains a magic number: 2,1079
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithoutId,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").in().hasLabel("B").has(T.id`P.without(b.id()`c.id()));" is 184.,1106
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInWithHasLabelAndHasWithoutId,Magic Number,The method contains a magic number: 2,1106
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testGraphStepHasLabelWithinCollection,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V(a`b).hasLabel(P.within(new HashSet<>(Arrays.asList("A"`"B"`"D")))).toList();" is 127.,1135
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testGraphStepHasLabelWithinCollection,Magic Number,The method contains a magic number: 2,1135
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testGraphStepHasLabelWithinCollection,Magic Number,The method contains a magic number: 2,1135
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testGraphStepHasLabelWithinCollection,Magic Number,The method contains a magic number: 2,1135
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testGraphStepHasLabelWithinCollection,Magic Number,The method contains a magic number: 2,1135
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testGraphStepHasLabelWithin,Magic Number,The method contains a magic number: 2,1155
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testVertexStepWithLabelWithinOnOut,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> traversal=this.sqlgGraph.traversal().V().where(__.has("name"`"x")).out().hasLabel("B"`"D");" is 121.,1167
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testVertexStepWithLabelWithinOnEdgeOut,Long Statement,The length of the statement "GraphTraversal<Vertex`Edge> traversal=this.sqlgGraph.traversal().V().where(__.has("name"`"x")).outE().hasLabel("ab"`"ce");" is 122.,1199
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testVertexStepWithLabelWithinOnEdgeIn,Long Statement,The length of the statement "GraphTraversal<Vertex`Edge> traversal=this.sqlgGraph.traversal().V().where(__.has("name"`"x")).inE().hasLabel("ab"`"ce");" is 121.,1215
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testVertexStepWithLabelWithinOnOtherVertexStepVertexStepOut,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> traversal=this.sqlgGraph.traversal().V().where(__.has("name"`"x")).outE().otherV().hasLabel("B"`"D");" is 131.,1231
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testVertexStepWithLabelWithinOnOtherVertexStepIn,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> traversal=this.sqlgGraph.traversal().V().where(__.has("name"`"x")).inE().otherV().hasLabel("B"`"D");" is 130.,1247
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasLabelWithWithinPredicate,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("EnterprisePerson").has("_uniqueId"`"1").in("euid").bothE("primary").otherV().hasLabel("SystemPerson"`"SystemProvider").out("euid");" is 257.,1276
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testConsecutiveHasLabels,Magic Number,The method contains a magic number: 4,1301
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasCompareEq,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> graphTraversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").has("name"`"a");" is 151.,1314
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasCompareEq,Magic Number,The method contains a magic number: 2,1314
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasCompareBetween,Magic Number,The method contains a magic number: 2,1327
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasCompareBetween,Magic Number,The method contains a magic number: 1000,1327
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCompareBetween_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> graphTraversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("A").has("name"`P.between(1`2));" is 157.,1339
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCompareBetween_assert,Magic Number,The method contains a magic number: 2,1339
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testCompareBetween_assert,Magic Number,The method contains a magic number: 2,1339
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testHasLabel,Magic Number,The method contains a magic number: 8,1348
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testNonExistingLabel,Magic Number,The method contains a magic number: 2,1363
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInLabels,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.traversal().E().has(T.label`P.within(Collections.singletonList("knows"))).count().next()`0);" is 129.,1372
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInLabels,Long Statement,The length of the statement "Assert.assertEquals(2`this.sqlgGraph.traversal().E().has(T.label`P.within(Collections.singletonList("created"))).count().next()`0);" is 131.,1372
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInLabels,Long Statement,The length of the statement "Assert.assertEquals(4`this.sqlgGraph.traversal().E().has(T.label`P.within(Arrays.asList("knows"`"created"))).count().next()`0);" is 127.,1372
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInLabels,Magic Number,The method contains a magic number: 4,1372
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInLabels,Magic Number,The method contains a magic number: 2,1372
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInLabels,Magic Number,The method contains a magic number: 2,1372
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testInLabels,Magic Number,The method contains a magic number: 4,1372
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,g_V_outE_hasLabel_inV,Magic Number,The method contains a magic number: 4,1389
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,g_V_outE_hasLabel_inV,Magic Number,The method contains a magic number: 2,1389
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testEdgeHasLabel,Magic Number,The method contains a magic number: 2,1398
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testEdgeHasLabel,Magic Number,The method contains a magic number: 2,1398
pietermartin_sqlg,org.umlg.sqlg.test.labels,TestHasLabelAndId,testEdgeNotHasLabel,Magic Number,The method contains a magic number: 2,1411
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithin,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`P.eq("a1"))`__.has("name"`P.eq("a3"))).toList();" is 133.,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithin,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`P.within("a1"`"a2"))`__.has("name"`P.within("a2"`"a4"))).toList();" is 138.,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithin,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`P.without("a1"`"a2"))`__.has("name"`P.within("a3"`"a4"))).toList();" is 139.,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithin,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithin,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithin,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithin,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithinNotTriggeringBulkWithin,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`P.eq("a1"))`__.has("name"`P.eq("a3"))).toList();" is 133.,52
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithinNotTriggeringBulkWithin,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`P.within("a1"`"a2"`"a3"`"a4"))`__.has("name"`P.within("a2"`"a3"`"a4"`"a5"))).toList();" is 158.,52
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithinNotTriggeringBulkWithin,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`P.without("a1"`"a2"`"a3"))`__.has("name"`P.within("a3"`"a4"`"a5"))).toList();" is 149.,52
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithinNotTriggeringBulkWithin,Magic Number,The method contains a magic number: 100,52
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithinNotTriggeringBulkWithin,Magic Number,The method contains a magic number: 3,52
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithWithinNotTriggeringBulkWithin,Magic Number,The method contains a magic number: 2,52
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testOrWithWithinNotTriggeringBulkWithin,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`P.eq("a1"))`__.has("name"`P.eq("a3"))).toList();" is 132.,85
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testOrWithWithinNotTriggeringBulkWithin,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`P.within("a1"`"a2"`"a3"`"a4"))`__.has("name"`P.within("a2"`"a3"`"a4"`"a5"))).toList();" is 157.,85
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testOrWithWithinNotTriggeringBulkWithin,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`P.without("a1"`"a2"`"a3"))`__.has("name"`P.within("a3"`"a4"`"a5"))).toList();" is 148.,85
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testOrWithWithinNotTriggeringBulkWithin,Magic Number,The method contains a magic number: 100,85
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testOrWithWithinNotTriggeringBulkWithin,Magic Number,The method contains a magic number: 2,85
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testOrWithWithinNotTriggeringBulkWithin,Magic Number,The method contains a magic number: 5,85
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testOrWithWithinNotTriggeringBulkWithin,Magic Number,The method contains a magic number: 98,85
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndandOr,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1")`__.has("name"`"a2")`__.and(__.has("name"`"a3")`__.has("surname"`"s3")));" is 225.,118
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndandOr,Magic Number,The method contains a magic number: 2,118
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndandOr,Magic Number,The method contains a magic number: 3,118
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndandOr,Magic Number,The method contains a magic number: 3,118
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndandOr,Magic Number,The method contains a magic number: 3,118
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOr,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.and(__.has("name"`"a1")`__.has("age"`1))`__.and(__.has("name"`"a2")`__.has("age"`3))`__.or(__.has("name"`"a3")`__.has("name"`"a4")));" is 269.,140
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOr,Magic Number,The method contains a magic number: 2,140
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOr,Magic Number,The method contains a magic number: 3,140
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOr,Magic Number,The method contains a magic number: 3,140
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOr,Magic Number,The method contains a magic number: 4,140
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOr,Magic Number,The method contains a magic number: 3,140
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOr,Magic Number,The method contains a magic number: 4,140
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.and(__.has("name"`"a1")`__.has("age"`1))`__.and(__.has("name"`"a2")`__.has("age"`3))`__.or(__.or(__.and(__.has("name"`"a1")`__.has("name"`"a1"))`__.and(__.has("name"`"a2")`__.has("age"`2)))`__.or(__.has("name"`"b1")`__.has("name"`"b1")`__.has("name"`"b1"))));" is 395.,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Magic Number,The method contains a magic number: 2,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Magic Number,The method contains a magic number: 3,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Magic Number,The method contains a magic number: 3,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Magic Number,The method contains a magic number: 4,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Magic Number,The method contains a magic number: 3,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Magic Number,The method contains a magic number: 2,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNested,Magic Number,The method contains a magic number: 2,171
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndWithHasNot,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").and(__.hasNot("surname")`__.has("name"`"a1"));" is 176.,217
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNestedWithHasAndHasNot,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.and(__.hasNot("surname")`__.has("name"`"a1"))`__.and(__.has("surname")`__.has("name"`"a2")));" is 229.,234
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testAndOrNestedWithHasAndHasNot,Magic Number,The method contains a magic number: 2,234
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testHasBeforeOr,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> traversal=this.sqlgGraph.traversal().V().hasLabel("V").or(__.has("start"`P.lte(-1)).or(__.hasNot("end")`__.has("end"`P.gte(-1)))`__.has("start"`P.lte(0)).or(__.hasNot("end")`__.has("end"`P.gte(0))));" is 229.,257
pietermartin_sqlg,org.umlg.sqlg.test.filter.connectivestep,TestAndandOrStep,testHasBeforeOr,Magic Number,The method contains a magic number: 10,257
pietermartin_sqlg,org.umlg.sqlg.test.filter.not.barrier,TestNotStepBarrier,g_VX1X_repeatXoutX_untilXoutE_count_isX0XX_name,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)this.sqlgGraph.traversal().V(convertToVertexId("marko")).repeat(__.out()).until(__.outE().count().is(0)).<String>values("name");" is 213.,25
pietermartin_sqlg,org.umlg.sqlg.test.filter.not.barrier,TestNotStepBarrier,testNotStepBarrier,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").not(__.out());" is 144.,42
pietermartin_sqlg,org.umlg.sqlg.test.filter.not.barrier,TestNotStepBarrier,testNotStepBarrier,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStepAfterVertexStepBarrier,testOrStepAfterVertexStepBarrier,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").local(__.out().or(__.has("name"`"b2")`__.has("name"`"b3")));" is 190.,22
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStepAfterVertexStepBarrier,testOrStepAfterVertexStepBarrier,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStepAfterVertexStepBarrier,testOrStepAfterVertexStepBarrier,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Long Statement,The length of the statement "GraphTraversal<Vertex`Long> traversal=this.sqlgGraph.traversal().V().hasLabel("A").has("startDate"`P.lte(9)).or(__.not(__.has("endDate"))`__.has("endDate"`P.gt(9))).as("svc").select("svc").count();" is 197.,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().V().hasLabel("A").has("startDate"`P.lte(9)).or(__.hasNot("endDate")`__.has("endDate"`P.gt(9))).as("svc").count();" is 150.,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().V().hasLabel("A").has("startDate"`P.lte(9)).or(__.hasNot("endDate")`__.has("endDate"`P.gt(9))).as("svc").select("svc").count();" is 164.,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 10L,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 9,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 9,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 2L,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 9,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 9,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 2L,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 9,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 9,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testSelectAfterAndOrHasContainer,Magic Number,The method contains a magic number: 2,41
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrStepOptimizedWith3Ors,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1")`__.has("name"`"a2")`__.has("name"`"a3"));" is 194.,86
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrStepOptimizedWith3Ors,Magic Number,The method contains a magic number: 3,86
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrChained,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1").has("p1"`"v1")`__.has("name"`"a2")`__.has("name"`"a3").has("p1"`"v2"));" is 224.,106
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrChained,Magic Number,The method contains a magic number: 2,106
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrMissingProperty,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1").has("p1"`"v1")`__.has("name"`"a2")`__.has("name"`"a3").has("p2"`"v2"));" is 224.,126
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrMissingProperty,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1").has("p1"`"v1")`__.has("name"`"a2")`__.has("name"`"a3").has("p2"));" is 182.,126
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrMissingProperty,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1").has("p1"`"v1")`__.has("name"`"a2")`__.has("name"`"a3").hasNot("p2"));" is 185.,126
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrMissingProperty,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrMissingProperty,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrMissingProperty,Magic Number,The method contains a magic number: 3,126
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrStepOptimized,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1")`__.has("name"`"a2"));" is 174.,170
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrStepOptimized,Magic Number,The method contains a magic number: 2,170
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testNestedOrStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a1")`__.or(__.has("name"`"a2")`__.has("name"`"a3")));" is 201.,188
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testNestedOrStep,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrWithinPredicate,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`P.within("a1"`"a2"`"a3"`"a4"`"a5"))`__.or(__.has("name"`"a6")));" is 211.,211
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrWithinPredicate,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("name"`"a6")`__.or(__.has("name"`P.within("a1"`"a2"`"a3"`"a4"`"a5"))));" is 174.,211
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrWithinPredicate,Magic Number,The method contains a magic number: 6,211
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrWithinPredicate,Magic Number,The method contains a magic number: 6,211
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("age"`P.between(2`5))`__.has("name"`"a7"));" is 183.,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 3,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 4,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 5,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 6,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 7,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 5,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrBetween,Magic Number,The method contains a magic number: 4,250
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("age"`P.inside(2`5))`__.has("name"`"a7"));" is 182.,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 2,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 3,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 4,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 5,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 6,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 7,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 2,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 5,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrInside,Magic Number,The method contains a magic number: 3,273
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.has("age"`P.outside(2`5))`__.has("name"`"a7"));" is 183.,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 2,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 3,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 4,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 5,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 6,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 7,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 2,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 5,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrOutside,Magic Number,The method contains a magic number: 3,296
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrFullText,Long Statement,The length of the statement "vl.ensureIndexExists(IndexType.getFullTextGIN("english")`Collections.singletonList(vl.getProperty("name").orElseThrow()));" is 122.,319
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrFullText,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("Sentence").or(__.has("name"`FullText.fullTextMatch("english"`"fat & rat"))`__.has("name"`"fatal error"));" is 231.,319
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrFullText,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("Sentence").or(__.has("name"`FullText.fullTextMatch("english"`"fat & cow"))`__.has("name"`"fatal error"));" is 194.,319
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrFullText,Magic Number,The method contains a magic number: 2,319
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrStepForVertexStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("AA").local(__.out("ab").or(__.has("name"`"a1")`__.or(__.has("name"`"a2")`__.has("name"`"a3"))));" is 222.,354
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrStepForVertexStep,Magic Number,The method contains a magic number: 2,354
pietermartin_sqlg,org.umlg.sqlg.test.filter.or,TestOrStep,testOrStepForVertexStep,Magic Number,The method contains a magic number: 4,354
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,g_V_emitXhasXname_markoX_or_loops_isX2XX_repeatXoutX_valuesXnameX,Long Statement,The length of the statement "final DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)this.sqlgGraph.traversal().V().emit(__.has("name"`"marko").or().loops().is(2)).repeat(__.out()).<String>values("name");" is 210.,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,g_V_emitXhasXname_markoX_or_loops_isX2XX_repeatXoutX_valuesXnameX,Long Statement,The length of the statement "List<SqlgRepeatStepBarrier> sqlgRepeatStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgRepeatStepBarrier.class`traversal);" is 143.,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,g_V_emitXhasXname_markoX_or_loops_isX2XX_repeatXoutX_valuesXnameX,Long Statement,The length of the statement "List<SqlgOrStepBarrier> sqlgOrStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgOrStepBarrier.class`traversal);" is 131.,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,g_V_emitXhasXname_markoX_or_loops_isX2XX_repeatXoutX_valuesXnameX,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,testOrStepBarrier3Ors,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.out("ab")`__.out("abb")`__.out("abbb"));" is 176.,43
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,testOrStepBarrier3Ors,Long Statement,The length of the statement "List<SqlgOrStepBarrier> sqlgOrStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgOrStepBarrier.class`traversal);" is 131.,43
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,testOrStepBarrier3Ors,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,testOrStepBarrier,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").or(__.out("ab")`__.out("abb"));" is 161.,74
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,testOrStepBarrier,Long Statement,The length of the statement "List<SqlgOrStepBarrier> sqlgOrStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgOrStepBarrier.class`traversal);" is 131.,74
pietermartin_sqlg,org.umlg.sqlg.test.filter.or.barrier,TestOrStepBarrier,testOrStepBarrier,Magic Number,The method contains a magic number: 2,74
pietermartin_sqlg,org.umlg.sqlg.test.filter.and,TestAndStep,testAndStepOptimized,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`"a1")`__.has("surname"`"aa1"));" is 179.,19
pietermartin_sqlg,org.umlg.sqlg.test.filter.and,TestAndStep,testNestedAndStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").and(__.has("name"`"a1")`__.and(__.has("surname"`"aa1")`__.has("middlename"`"aaa1")));" is 215.,37
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "final Traversal<Edge`?> edgeCriterion=__.or(__.has("weight"`1.0d).hasLabel("knows")`__.has("weight"`0.4d).hasLabel("created").outV().has("name"`"marko")`__.has("weight"`1.0d).hasLabel("created"));" is 196.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(1`g.V(convertToVertexId("josh")).limit(1).local(__.bothE().limit(1)).inV().count().next().longValue());" is 123.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(1`sg.V(convertToVertexId("josh")).limit(1).local(__.bothE().limit(1)).inV().count().next().longValue());" is 124.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(1`g.V(convertToVertexId("josh")).local(__.bothE("knows"`"created").limit(1)).count().next().longValue());" is 125.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(1`sg.V(convertToVertexId("josh")).local(__.bothE("knows"`"created").limit(1)).count().next().longValue());" is 126.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(1`g.V(convertToVertexId("josh")).local(__.bothE("knows"`"created").limit(1)).inV().count().next().longValue());" is 131.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(1`sg.V(convertToVertexId("josh")).local(__.bothE("knows"`"created").limit(1)).inV().count().next().longValue());" is 132.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(3`g.E(convertToEdgeId(this.sqlgGraph`"marko"`"knows"`"josh")).outV().outE().count().next().longValue());" is 124.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Long Statement,The length of the statement "Assert.assertEquals(2`sg.E(convertToEdgeId(this.sqlgGraph`"marko"`"knows"`"josh")).outV().outE().count().next().longValue());" is 125.,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 0.4d,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 6,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 6,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 6,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 3,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 3,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 3,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 3,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_VX1X_repeatXboth_simplePathX_untilXhasXname_peterX_and_loops_isX3XX_hasXname_peterX_path_byXnameX,Long Statement,The length of the statement "final DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(convertToVertexId("marko")).repeat(__.both().simplePath()).until(__.has("name"`"peter").and().loops().is(3)).has("name"`"peter").path().by("name");" is 263.,125
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_VX1X_repeatXboth_simplePathX_untilXhasXname_peterX_and_loops_isX3XX_hasXname_peterX_path_byXnameX,Long Statement,The length of the statement "List<SqlgAndStepBarrier> sqlgAndStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgAndStepBarrier.class`traversal);" is 134.,125
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_VX1X_repeatXboth_simplePathX_untilXhasXname_peterX_and_loops_isX3XX_hasXname_peterX_path_byXnameX,Magic Number,The method contains a magic number: 3,125
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_VX1X_repeatXboth_simplePathX_untilXhasXname_peterX_and_loops_isX3XX_hasXname_peterX_path_byXnameX,Magic Number,The method contains a magic number: 4,125
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_VX1X_repeatXboth_simplePathX_untilXhasXname_peterX_and_loops_isX3XX_hasXname_peterX_path_byXnameX,Magic Number,The method contains a magic number: 2,125
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_VX1X_repeatXboth_simplePathX_untilXhasXname_peterX_and_loops_isX3XX_hasXname_peterX_path_byXnameX,Magic Number,The method contains a magic number: 3,125
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_V_asXaX_outXknowsX_and_outXcreatedX_inXcreatedX_asXaX_name,Long Statement,The length of the statement "final DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().as("a").out("knows").and().out("created").in("created").as("a").<Vertex>values("name");" is 209.,153
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,g_V_asXaX_outXknowsX_and_outXcreatedX_inXcreatedX_asXaX_name,Long Statement,The length of the statement "List<SqlgAndStepBarrier> sqlgAndStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgAndStepBarrier.class`traversal);" is 134.,153
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrier,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").and(__.out("ab")`__.out("abb"));" is 162.,168
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrier,Long Statement,The length of the statement "List<SqlgAndStepBarrier> sqlgAndStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgAndStepBarrier.class`traversal);" is 134.,168
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").and(__.out("ab")`__.out("abb"));" is 162.,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Long Statement,The length of the statement "List<SqlgAndStepBarrier> sqlgAndStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgAndStepBarrier.class`traversal);" is 134.,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierWithUserSuppliedID,Magic Number,The method contains a magic number: 100,195
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierMultiple,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").and(__.out("ab")`__.out("abb")`__.out("abbb"));" is 177.,264
pietermartin_sqlg,org.umlg.sqlg.test.filter.and.barrier,TestAndStepBarrier,testAndStepBarrierMultiple,Long Statement,The length of the statement "List<SqlgAndStepBarrier> sqlgAndStepBarriers=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgAndStepBarrier.class`traversal);" is 134.,264
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testId,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_A\".\"ID\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\""`sql);" is 125.,21
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testId,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"PUBLIC\".\"V_A\".\"ID\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"PUBLIC\".\"V_A\""`sql);" is 125.,21
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testId,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testId,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdOnEdge,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"E_ab\".\"public.A__O\" AS \"alias1\"`\n"+ "\t\"public\".\"E_ab\".\"public.B__I\" AS \"alias2\"`\n"+ "\t\"public\".\"E_ab\".\"ID\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"E_ab\"\n"+ "WHERE\n"+ "\t( \"public\".\"E_ab\".\"ID\" = ?)"`sql);" is 295.,57
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdOnEdge,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"PUBLIC\".\"E_ab\".\"PUBLIC.B__I\" AS \"alias1\"`\n"+ "\t\"PUBLIC\".\"E_ab\".\"PUBLIC.A__O\" AS \"alias2\"`\n"+ "\t\"PUBLIC\".\"E_ab\".\"ID\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"PUBLIC\".\"E_ab\"\n"+ "WHERE\n"+ "\t( \"PUBLIC\".\"E_ab\".\"ID\" = ?)"`sql);" is 295.,57
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdOnEdge,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t`PUBLIC`.`E_ab`.`PUBLIC.B__I` AS `alias1``\n"+ "\t`PUBLIC`.`E_ab`.`PUBLIC.A__O` AS `alias2``\n"+ "\t`PUBLIC`.`E_ab`.`ID` AS `alias3`\n"+ "FROM\n"+ "\t`PUBLIC`.`E_ab`\n"+ "WHERE\n"+ "\t( `PUBLIC`.`E_ab`.`ID` = ?) COLLATE latin1_general_cs"`sql);" is 287.,57
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdOnEdge,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"E_ab\".\"public.A__O\" AS \"alias1\"`\n"+ "\t\"public\".\"E_ab\".\"public.B__I\" AS \"alias2\"`\n"+ "\t\"public\".\"E_ab\".\"ID\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\""`sql);" is 347.,57
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_A\".\"uuid\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\""`sql);" is 127.,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"PUBLIC\".\"V_A\".\"uuid\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"PUBLIC\".\"V_A\""`sql);" is 127.,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"E_ab\".\"public.A.uuid__O\" AS \"alias1\"`\n"+ "\t\"public\".\"E_ab\".\"public.B.uuid__I\" AS \"alias2\"`\n"+ "\t\"public\".\"E_ab\".\"uuid\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"uuid\" = \"public\".\"E_ab\".\"public.A.uuid__O\""`sql);" is 366.,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"PUBLIC\".\"E_ab\".\"PUBLIC.B.uuid__I\" AS \"alias1\"`\n"+ "\t\"PUBLIC\".\"E_ab\".\"PUBLIC.A.uuid__O\" AS \"alias2\"`\n"+ "\t\"PUBLIC\".\"E_ab\".\"uuid\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"PUBLIC\".\"V_A\" INNER JOIN\n"+ "\t\"PUBLIC\".\"E_ab\" ON \"PUBLIC\".\"V_A\".\"uuid\" = \"PUBLIC\".\"E_ab\".\"PUBLIC.A.uuid__O\""`sql);" is 366.,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t`PUBLIC`.`E_ab`.`PUBLIC.B.uuid__I` AS `alias1``\n"+ "\t`PUBLIC`.`E_ab`.`PUBLIC.A.uuid__O` AS `alias2``\n"+ "\t`PUBLIC`.`E_ab`.`uuid` AS `alias3`\n"+ "FROM\n"+ "\t`PUBLIC`.`V_A` INNER JOIN\n"+ "\t`PUBLIC`.`E_ab` ON `PUBLIC`.`V_A`.`uuid` = `PUBLIC`.`E_ab`.`PUBLIC.A.uuid__O`"`sql);" is 322.,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Magic Number,The method contains a magic number: 100,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Magic Number,The method contains a magic number: 10,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Magic Number,The method contains a magic number: 100,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Magic Number,The method contains a magic number: 10,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Magic Number,The method contains a magic number: 100,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Magic Number,The method contains a magic number: 10,127
pietermartin_sqlg,org.umlg.sqlg.test.idstep,TestIdStep,testIdentifiers,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestEscapedValues,testEscapedValuesWithinQuery,Long Statement,The length of the statement "Assert.assertEquals(vals.length`1L`this.sqlgGraph.traversal().V().has("name"`P.within(vals)).count().next().longValue());" is 121.,32
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectFollowedByValues,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)this.sqlgGraph.traversal().V().hasLabel("C").has("yyyy"`"y1").as("c").in("bc").in("ab").has("name"`"a1").as("a").<Vertex>select("a"`"c").select("c").<String>values("xxxx");" is 257.,32
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectFollowedByValues,Magic Number,The method contains a magic number: 6,32
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectFollowedByValues,Magic Number,The method contains a magic number: 2,32
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectFollowedByValues,Magic Number,The method contains a magic number: 3,32
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectFollowedByValues,Magic Number,The method contains a magic number: 4,32
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectFollowedByValues,Magic Number,The method contains a magic number: 5,32
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectOneFollowedByValues,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)this.sqlgGraph.traversal().V().hasLabel("C").has("yyyy"`"y1").as("c").in("bc").in("ab").has("name"`"a1").<Vertex>select("c").<String>values("xxxx");" is 233.,74
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectOneFollowedByValues,Magic Number,The method contains a magic number: 4,74
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectOneFollowedByValues,Magic Number,The method contains a magic number: 2,74
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testSelectOneFollowedByValues,Magic Number,The method contains a magic number: 3,74
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testOptimizePastSelect,Long Statement,The length of the statement "Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().hasLabel("C").has("name"`"c2").as("c").in("bc").in("ab").has("name"`"a2").select("c").out("cd").has("name"`"d2").values("surname");" is 197.,112
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testMultipleSelect,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Object>> gt=sqlgGraph.traversal().V().hasLabel("A").has("name"`"root").outE("likes").as("e").values("howMuch").as("stars").select("e").values("who").as("user").select("e").inV().id().as("item").select("user"`"stars"`"item");" is 257.,149
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testMultipleSelect,Magic Number,The method contains a magic number: 5,149
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testMultipleSelect,Magic Number,The method contains a magic number: 5,149
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testInMemoryOrderByValues,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().both().hasLabel("person").order().by("age"`Order.desc).limit(5).values("name");" is 151.,176
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testInMemoryOrderByValues,Magic Number,The method contains a magic number: 5,176
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAllObject,Magic Number,The method contains a magic number: 2,211
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAllObject,Magic Number,The method contains a magic number: 29,211
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAllObject,Magic Number,The method contains a magic number: 27,211
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAllObject,Magic Number,The method contains a magic number: 32,211
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAllObject,Magic Number,The method contains a magic number: 35,211
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAliasVertex,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Object>> traversal=sqlgGraph.traversal().V().hasLabel("person").as("a").valueMap("name").as("b").select("a"`"b");" is 147.,246
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAliasVertex,Magic Number,The method contains a magic number: 2,246
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAliasVertex,Magic Number,The method contains a magic number: 29,246
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAliasVertex,Magic Number,The method contains a magic number: 27,246
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAliasVertex,Magic Number,The method contains a magic number: 32,246
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAliasVertex,Magic Number,The method contains a magic number: 35,246
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValueMapAlias,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Object>> traversal=sqlgGraph.traversal().V().hasLabel("person").valueMap("name").as("b").select("b");" is 135.,286
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValuesAll,Magic Number,The method contains a magic number: 29,322
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValuesAll,Magic Number,The method contains a magic number: 27,322
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValuesAll,Magic Number,The method contains a magic number: 32,322
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValuesAll,Magic Number,The method contains a magic number: 35,322
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testValuesOneWhere,Magic Number,The method contains a magic number: 29,336
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,g_V_hasLabelXpersonX_order_byXageX_skipX1X_valuesXnameX,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().hasLabel("person").order().by("age").skip(1).values("name");" is 132.,349
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,testOut,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().hasLabel("person").out("created").values("name");" is 121.,365
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,g_V_both_name_order_byXa_bX_dedup_value,Long Statement,The length of the statement "@SuppressWarnings("ComparatorCombinators") final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().both().<String>properties("name").order().by((a`b) -> a.value().compareTo(b.value())).dedup().value();" is 217.,382
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,g_V_both_name_order_byXa_bX_dedup_value,Magic Number,The method contains a magic number: 6,382
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,g_V_both_name_order_byXa_bX_dedup_value,Magic Number,The method contains a magic number: 2,382
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,g_V_both_name_order_byXa_bX_dedup_value,Magic Number,The method contains a magic number: 3,382
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,g_V_both_name_order_byXa_bX_dedup_value,Magic Number,The method contains a magic number: 4,382
pietermartin_sqlg,org.umlg.sqlg.test.properties,TestPropertyValues,g_V_both_name_order_byXa_bX_dedup_value,Magic Number,The method contains a magic number: 5,382
pietermartin_sqlg,org.umlg.sqlg.test.tree,TestColumnNamePropertyNameMapScope,testColumnNamePropertyNameMap,Long Statement,The length of the statement "Vertex group=this.sqlgGraph.addVertex(T.label`"Group"`"name"`"group1"`"className"`"this.that.Group"`"uid"`UUID.randomUUID().toString());" is 136.,21
pietermartin_sqlg,org.umlg.sqlg.test.tree,TestColumnNamePropertyNameMapScope,testColumnNamePropertyNameMap,Long Statement,The length of the statement "Vertex network=this.sqlgGraph.addVertex(T.label`"Network"`"name"`"network1"`"className"`"this.that.Network"`"uid"`UUID.randomUUID().toString());" is 144.,21
pietermartin_sqlg,org.umlg.sqlg.test.tree,TestColumnNamePropertyNameMapScope,testColumnNamePropertyNameMap,Long Statement,The length of the statement "Vertex nsv=this.sqlgGraph.addVertex(T.label`"NetworkSoftwareVersion"`"name"`"R15_HUAWEI_GSM" + i`"className"`"this.that.NetworkSoftwareVersion"`"firstLoad"`false`"softwareVersion"`"R15_HUAWEI_GSM"`"uid"`UUID.randomUUID().toString());" is 233.,21
pietermartin_sqlg,org.umlg.sqlg.test.tree,TestColumnNamePropertyNameMapScope,testColumnNamePropertyNameMap,Long Statement,The length of the statement "List<Vertex> vertexList=sqlgGraph.traversal().V().hasLabel("Group").emit().repeat(__.out("group_network"`"network_networkSoftwareVersion")).times(5).toList();" is 158.,21
pietermartin_sqlg,org.umlg.sqlg.test.tree,TestColumnNamePropertyNameMapScope,testColumnNamePropertyNameMap,Magic Number,The method contains a magic number: 10,21
pietermartin_sqlg,org.umlg.sqlg.test.tree,TestColumnNamePropertyNameMapScope,testColumnNamePropertyNameMap,Magic Number,The method contains a magic number: 5,21
pietermartin_sqlg,org.umlg.sqlg.test.partition,TestJoinAcrossPartition,testJoinHitsPartitions,Long Statement,The length of the statement "EdgeLabel hasEdgeLabel=publicSchema.ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel("has"`animalTypeVertexLabel`animalVertexLabel`new LinkedHashMap<>(){" is 156.,30
pietermartin_sqlg,org.umlg.sqlg.test.partition,TestJoinAcrossPartition,testJoinHitsPartitions,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain SELECT\n" + "\t\"public\".\"V_Animal\".\"type\" AS \"alias1\"`\n" + "\t\"public\".\"V_Animal\".\"name\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_AnimalType\" INNER JOIN\n"+ "\t\"public\".\"E_has\" ON \"public\".\"V_AnimalType\".\"type\" = \"public\".\"E_has\".\"public.AnimalType.type__O\" INNER JOIN\n"+ "\t\"public\".\"V_Animal\" ON \"public\".\"E_has\".\"public.Animal.type__I\" = \"public\".\"V_Animal\".\"type\" AND \"public\".\"E_has\".\"public.Animal.name__I\" = \"public\".\"V_Animal\".\"name\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_AnimalType\".\"type\" = 'dog') AND ( \"public\".\"V_Animal\".\"type\" = 'dog')");" is 669.,30
pietermartin_sqlg,org.umlg.sqlg.test.partition,TestJoinAcrossPartition,testJoinHitsPartitions,Magic Number,The method contains a magic number: 10,30
pietermartin_sqlg,org.umlg.sqlg.test.partition,TestJoinAcrossPartition,testJoinHitsPartitions,Magic Number,The method contains a magic number: 30,30
pietermartin_sqlg,org.umlg.sqlg.test.partition,TestJoinAcrossPartition,testJoinHitsPartitions,Magic Number,The method contains a magic number: 10,30
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,NetAggregateTest,test2,Long Statement,The length of the statement "List<Path> vertices=this.sqlgGraph.traversal().V().hasLabel("Transmission").repeat(__.both("link").simplePath()).until(__.or(__.has("type"`P.within("HubSite"`"ASwitch"`"BSwitch"))`__.has("excluded"`true)`__.loops().is(12))).path().toList();" is 240.,44
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,NetAggregateTest,test2,Magic Number,The method contains a magic number: 12,44
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_VX3X_repeatXbothX_createdXX_untilXloops_is_40XXemit_repeatXin_knowsXX_emit_loopsXisX1Xdedup_values,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V(id).repeat(__.both("created")).times(40).dedup().values("name");" is 134.,41
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_VX3X_repeatXbothX_createdXX_untilXloops_is_40XXemit_repeatXin_knowsXX_emit_loopsXisX1Xdedup_values,Magic Number,The method contains a magic number: 40,41
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Complex Method,Cyclomatic complexity of the method is 8,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Long Statement,The length of the statement "List<Path> vertices=this.sqlgGraph.traversal().V().has("hubSite"`true).repeat(__.out()).until(__.or(__.loops().is(P.gt(3))`__.has("hubSite"`true))).path().toList();" is 164.,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 1000,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 100,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 10,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 10,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 5,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 10,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 1000,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 3,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepPerformance,Magic Number,The method contains a magic number: 10000,64
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatUtilFirstPerformance,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).until(__.out().has("name"`"hallo"));" is 183.,115
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatUtilFirstPerformance,Magic Number,The method contains a magic number: 10_000,115
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatUtilFirstPerformance,Magic Number,The method contains a magic number: 1000,115
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatUtilFirstPerformance,Magic Number,The method contains a magic number: 20_000,115
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Complex Method,Cyclomatic complexity of the method is 8,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Long Statement,The length of the statement "final Traversal<Vertex`Map<Object`Object>> t=this.sqlgGraph.traversal().V().valueMap("name"`"age").with(WithOptions.tokens`WithOptions.labels);" is 143.,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Long Statement,The length of the statement "final Traversal<Vertex`Map<Object`Object>> traversal=this.sqlgGraph.traversal().V().valueMap("name"`"age").with(WithOptions.tokens`WithOptions.labels).by(__.unfold());" is 167.,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 3,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 29,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 3,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 32,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 3,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 35,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 3,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 27,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 2,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 2,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_valueMapXname_ageX_withXtokens_labelsX_byXunfoldX,Magic Number,The method contains a magic number: 6,151
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_emitXhasXname_markoX_or_loops_isX2XX_repeatXoutX_valuesXnameX,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().emit(__.has("name"`"marko").or().loops().is(2)).repeat(__.out()).values("name");" is 152.,204
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_emitXhasXname_markoX_or_loops_isX2XX_repeatXoutX_valuesXnameX,Magic Number,The method contains a magic number: 2,204
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_VX6X_repeatXa_bothXcreatedX_simplePathX_emitXrepeatXb_bothXknowsXX_untilXloopsXbX_asXb_whereXloopsXaX_asXbX_hasXname_vadasXX_dedup_name,Long Statement,The length of the statement "Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V(peterId).repeat("a"`__.both("created").simplePath()).emit(__.repeat("b"`__.both("knows")).until(__.loops("b").as("c").where(__.loops("a").as("c"))).has("name"`"vadas")).dedup().values("name");" is 256.,219
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_repeatXout_repeatXoutX_timesX1XX_timesX1X_limitX1X_path_by_name,Long Statement,The length of the statement "Traversal<Vertex`Path> traversal_unrolled=this.sqlgGraph.traversal().V().repeat(__.out().repeat(__.out()).times(1)).times(1).limit(1L).path().by("name");" is 153.,241
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_repeatXout_repeatXoutX_timesX1XX_timesX1X_limitX1X_path_by_name,Magic Number,The method contains a magic number: 3L,241
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_repeatXout_repeatXoutX_timesX1XX_timesX1X_limitX1X_path_by_name,Magic Number,The method contains a magic number: 2,241
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_repeatXout_repeatXoutX_timesX1XX_timesX1X_limitX1X_path_by_name,Magic Number,The method contains a magic number: 3L,241
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,g_V_repeatXout_repeatXoutX_timesX1XX_timesX1X_limitX1X_path_by_name,Magic Number,The method contains a magic number: 2,241
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilLast,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).until(__.out().has("name"`"hallo"));" is 183.,275
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilLast,Magic Number,The method contains a magic number: 2,275
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilLastEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out()).until(__.out().has("name"`"hallo"));" is 190.,304
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilLastEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(vertices.contains(a1) && vertices.contains(a2) && vertices.contains(b1) || vertices.contains(b2) || vertices.contains(c2));" is 141.,304
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilLastEmitFirst,Magic Number,The method contains a magic number: 5,304
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilLastEmitLast,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).emit().until(__.out().has("name"`"hallo"));" is 190.,334
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilLastEmitLast,Magic Number,The method contains a magic number: 3,334
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").until(__.out().has("name"`"hallo")).repeat(__.out());" is 183.,364
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirst,Magic Number,The method contains a magic number: 2,364
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirstEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").until(__.out().has("name"`"hallo")).emit().repeat(__.out());" is 190.,393
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirstEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(vertices.contains(a1) && vertices.contains(a2) && vertices.contains(b1)&& vertices.contains(b2)&& vertices.contains(c2));" is 139.,393
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirstEmitFirst,Magic Number,The method contains a magic number: 5,393
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirstEmitLast,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").until(__.out().has("name"`"hallo")).repeat(__.out()).emit();" is 190.,422
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirstEmitLast,Magic Number,The method contains a magic number: 5,422
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirstEmitLast,Magic Number,The method contains a magic number: 2,422
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithUntilFirstEmitLast,Magic Number,The method contains a magic number: 2,422
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithLimit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").until(__.has(T.label`"B")).repeat(__.out()).limit(1);" is 183.,465
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithLimit,Magic Number,The method contains a magic number: 4,465
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithLimit,Magic Number,The method contains a magic number: 2,465
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithLimit,Magic Number,The method contains a magic number: 3,465
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testRepeatStepWithLimit,Magic Number,The method contains a magic number: 2,465
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V(a0).repeat(__.out()).until(__.or(__.loops().is(P.gt(10))`__.has("hubSite"`true))).path().toList();" is 144.,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a0) && p.get(1).equals(a10) && p.get(2).equals(a20)`p -> p.size() == 4 && p.get(0).equals(a0) && p.get(1).equals(a11) && p.get(2).equals(a21) && p.get(3).equals(a30)`p -> p.size() == 2 && p.get(0).equals(a0) && p.get(1).equals(a14));" is 321.,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 3,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 10,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 3,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 3,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 2,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 4,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 2,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 3,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testHubSites,Magic Number,The method contains a magic number: 2,501
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testUnoptimizedRepeatStep,Magic Number,The method contains a magic number: 2,561
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testUnoptimizedRepeatStep,Magic Number,The method contains a magic number: 2,561
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testUnoptimizedRepeatStepUntilHasProperty,Magic Number,The method contains a magic number: 2,580
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testUnoptimizedRepeatDeep,Magic Number,The method contains a magic number: 9,595
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testUnoptimizedRepeatStepOnGraphyGremlin,Magic Number,The method contains a magic number: 4,646
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testUnoptimizedRepeatStepOnGraphyGremlin,Magic Number,The method contains a magic number: 2,646
pietermartin_sqlg,org.umlg.sqlg.test.repeatstep,TestUnoptimizedRepeatStep,testUnoptimizedRepeatStepOnGraphyGremlin,Magic Number,The method contains a magic number: 3,646
pietermartin_sqlg,org.umlg.sqlg.test.doc,DocTests,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,24
pietermartin_sqlg,org.umlg.sqlg.test.doc,DocTests,showStreamingWithLockBulkEdgeCreation,Magic Number,The method contains a magic number: 10,40
pietermartin_sqlg,org.umlg.sqlg.test.doc,DocTests,showStreamingWithLockBulkEdgeCreation,Magic Number,The method contains a magic number: 1_000_000,40
pietermartin_sqlg,org.umlg.sqlg.test.doc,DocTests,showStreamingWithLockBulkEdgeCreation,Magic Number,The method contains a magic number: 1_000_000,40
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_unionXrepeatXunionXoutXcreatedX__inXcreatedXX_timesX2X__repeatXunionXinXcreatedX__outXcreatedXX_timesX2XX_label_groupCount,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Long>> traversal=(Traversal)this.sqlgGraph.traversal().V().union(repeat(union(out("created")`in("created"))).times(2)`repeat(union(in("created")`out("created"))).times(2)).label().groupCount();" is 227.,29
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_unionXrepeatXunionXoutXcreatedX__inXcreatedXX_timesX2X__repeatXunionXinXcreatedX__outXcreatedXX_timesX2XX_label_groupCount,Magic Number,The method contains a magic number: 2,29
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_unionXrepeatXunionXoutXcreatedX__inXcreatedXX_timesX2X__repeatXunionXinXcreatedX__outXcreatedXX_timesX2XX_label_groupCount,Magic Number,The method contains a magic number: 2,29
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_unionXrepeatXunionXoutXcreatedX__inXcreatedXX_timesX2X__repeatXunionXinXcreatedX__outXcreatedXX_timesX2XX_label_groupCount,Magic Number,The method contains a magic number: 2,29
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_unionXrepeatXunionXoutXcreatedX__inXcreatedXX_timesX2X__repeatXunionXinXcreatedX__outXcreatedXX_timesX2XX_label_groupCount,Magic Number,The method contains a magic number: 12L,29
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_unionXrepeatXunionXoutXcreatedX__inXcreatedXX_timesX2X__repeatXunionXinXcreatedX__outXcreatedXX_timesX2XX_label_groupCount,Magic Number,The method contains a magic number: 20L,29
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testAliasesWithinUnion,Long Statement,The length of the statement "List<Vertex> noUnionItems=this.sqlgGraph.traversal().V().hasLabel("A").as("alias1").out().<Vertex>select("alias1").toList();" is 124.,47
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testAliasesWithinUnion,Long Statement,The length of the statement "List<Vertex> unionItems=this.sqlgGraph.traversal().inject("ignore").<Vertex>union(__.V().hasLabel("A").as("alias1").out().select("alias1")).toList();" is 149.,47
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Long Statement,The length of the statement "GraphTraversal<Vertex`Tree> traversal=g.traversal().V().hasLabel("public.Cluster").has("name"`"Test Cluster").out("has_Service").has("name"`"Test Service").out("has_Database").has("name"`"Test DB").union(__.out("has_Schema").has("name"`P.eq("Test Schema1")).out("has_Table").has("name"`P.without("Table2"))`__.out("has_Schema").has("name"`P.eq("Test Schema1")).out("has_Table").has("name"`P.within("Table1"))`__.out("has_Schema").has("name"`P.eq("Test Schema2")).out("has_Table").has("name"`P.neq("Table4"))).out("has_Column").range(0`100).tree();" is 547.,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 100,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 2,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 3,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 4,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 2,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 5,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 2,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 6,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 4,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testdkarthikeyan88_bug359,Magic Number,The method contains a magic number: 4,83
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Long Statement,The length of the statement "GraphTraversal<Vertex`Path> traversal=this.sqlgGraph.traversal().V().has("A"`"name"`"A1").union(__.out("toB").has("name"`P.eq("B1")).out("toC")`__.out("toB").has("name"`P.eq("B2")).out("toC")).path();" is 200.,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().V().hasLabel("A").union(__.optional(__.out("toB").has("name"`P.eq("B1")).optional(__.out("toC")))`__.optional(__.out("toB").has("name"`P.eq("B2")).optional(__.out("toC")))).path();" is 217.,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Magic Number,The method contains a magic number: 3,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Magic Number,The method contains a magic number: 2,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Magic Number,The method contains a magic number: 4,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Magic Number,The method contains a magic number: 8,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Magic Number,The method contains a magic number: 2,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionHasPath,Magic Number,The method contains a magic number: 3,186
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionAsPerUMLG,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionAsPerUMLG,Magic Number,The method contains a magic number: 4,242
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionAsPerUMLG,Magic Number,The method contains a magic number: 4,242
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionAsPerUMLG,Magic Number,The method contains a magic number: 4,242
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionFailure,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Long>> traversal=this.sqlgGraph.traversal().V().union(__.repeat(__.union(__.out("created")`__.in("created"))).times(2)`__.repeat(__.union(__.in("created")`__.out("created"))).times(2)).label().groupCount();" is 234.,264
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionFailure,Magic Number,The method contains a magic number: 2,264
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionFailure,Magic Number,The method contains a magic number: 2,264
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionFailure,Magic Number,The method contains a magic number: 12l,264
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionFailure,Magic Number,The method contains a magic number: 20l,264
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,testUnionFailure,Magic Number,The method contains a magic number: 2,264
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_VX1_2X_unionXoutE_count__inE_count__outE_weight_sumX,Long Statement,The length of the statement "final Traversal<Vertex`Number> traversal=this.sqlgGraph.traversal().V(marko`vadas).union(__.outE().count()`__.inE().count()`(Traversal)__.outE().values("weight").sum());" is 169.,283
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_VX1_2X_unionXoutE_count__inE_count__outE_weight_sumX,Magic Number,The method contains a magic number: 3l,283
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_VX1_2X_unionXoutE_count__inE_count__outE_weight_sumX,Magic Number,The method contains a magic number: 1.9d,283
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_outXcreatedX_unionXasXprojectX_inXcreatedX_hasXname_markoX_selectXprojectX__asXprojectX_inXcreatedX_inXknowsX_hasXname_markoX_selectXprojectXX_groupCount_byXnameX,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().out("created").<Vertex>union(__.as("project").in("created").has("name"`"marko").select("project")`__.as("project").in("created").in("knows").has("name"`"marko").select("project")).toList();" is 242.,298
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_outXcreatedX_unionXasXprojectX_inXcreatedX_hasXname_markoX_selectXprojectX__asXprojectX_inXcreatedX_inXknowsX_hasXname_markoX_selectXprojectXX_groupCount_byXnameX,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Long>> traversal=(Traversal)this.sqlgGraph.traversal().V().out("created").union(__.as("project").in("created").has("name"`"marko").select("project")`__.as("project").in("created").in("knows").has("name"`"marko").select("project")).groupCount().by("name");" is 283.,298
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_outXcreatedX_unionXasXprojectX_inXcreatedX_hasXname_markoX_selectXprojectX__asXprojectX_inXcreatedX_inXknowsX_hasXname_markoX_selectXprojectXX_groupCount_byXnameX,Magic Number,The method contains a magic number: 7,298
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_outXcreatedX_unionXasXprojectX_inXcreatedX_hasXname_markoX_selectXprojectX__asXprojectX_inXcreatedX_inXknowsX_hasXname_markoX_selectXprojectXX_groupCount_byXnameX,Magic Number,The method contains a magic number: 6,298
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_outXcreatedX_unionXasXprojectX_inXcreatedX_hasXname_markoX_selectXprojectX__asXprojectX_inXcreatedX_inXknowsX_hasXname_markoX_selectXprojectXX_groupCount_byXnameX,Magic Number,The method contains a magic number: 2,298
pietermartin_sqlg,org.umlg.sqlg.test.union,TestUnion,g_V_outXcreatedX_unionXasXprojectX_inXcreatedX_hasXname_markoX_selectXprojectX__asXprojectX_inXcreatedX_inXknowsX_hasXname_markoX_selectXprojectXX_groupCount_byXnameX,Magic Number,The method contains a magic number: 6l,298
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestDetachedEdge,shouldConstructDetachedEdge,Magic Number,The method contains a magic number: 2002,21
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestDetachedEdge,shouldConstructDetachedEdge,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestDetachedEdge,shouldConstructDetachedEdge,Magic Number,The method contains a magic number: 0.5d,21
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestDetachedEdge,convertToEdgeId,Long Statement,The length of the statement "return graph.traversal().V().has("name"`outVertexName).outE(edgeLabel).as("e").inV().has("name"`inVertexName).<Edge>select("e").next().id();" is 140.,49
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdgeWithSpecialCharacters,testBulkAddEdgesWithSpecialCharactersInValues,Long Statement,The length of the statement "uids.add(Pair.of("Telefonica->UK->MAVENIR->IMC->REAL_WS->ELL_CMS-ELL-45->APP9->ims->IFC_xml->VOLTE-MSIM->dummyTagDoNotUseForWriteback->InitialFilterCriteria->341->TriggerPoint->1->SPT"`"Telefonica->UK->MAVENIR->IMC->REAL_WS->ELL_CMS-ELL-45->APP9->ims->IFC_xml->VOLTE-MSIM->dummyTagDoNotUseForWriteback->InitialFilterCriteria->341->TriggerPoint->1->SPT->SIPHeader->Accept-Contact->\\+g\\.3gpp\\.icsi-ref=\"urn%3Aurn-7%3A3gpp-service\\.ims\\.icsi\\.mmtel\""));" is 458.,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdgeWithSpecialCharacters,testBulkAddEdgesWithSpecialCharactersInValues,Long Statement,The length of the statement "uids.add(Pair.of("Telefonica->UK->MAVENIR->IMC->REAL_WS->ELL_CMS-ELL-45->APP9->ims->IFC_xml->VOLTE-MSIM->dummyTagDoNotUseForWriteback->InitialFilterCriteria->341->TriggerPoint->1->SPT"`"Telefonica->UK->MAVENIR->IMC->REAL_WS->ELL_CMS-ELL-45->APP9->ims->IFC_xml->VOLTE-MSIM->dummyTagDoNotUseForWriteback->InitialFilterCriteria->341->TriggerPoint->1->SPT->SIPHeader->P-Asserted-Service->3gpp-service\\.ims\\.icsi\\.mmtel"));" is 421.,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdgeWithSpecialCharacters,testBulkAddEdgesWithSpecialCharactersInValues,Long Statement,The length of the statement "uids.add(Pair.of("Telefonica->UK->MAVENIR->IMC->REAL_WS->ELL_CMS-ELL-45->APP5->ims->IFC_xml->VOLTE-MSIM->dummyTagDoNotUseForWriteback->InitialFilterCriteria->400->TriggerPoint->1->SPT"`"Telefonica->UK->MAVENIR->IMC->REAL_WS->ELL_CMS-ELL-45->APP5->ims->IFC_xml->VOLTE-MSIM->dummyTagDoNotUseForWriteback->InitialFilterCriteria->400->TriggerPoint->1->SPT->SIPHeader->Contact->\\+g\\.3gpp\\.smsip"));" is 396.,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdgeWithSpecialCharacters,testBulkAddEdgesWithSpecialCharactersInValues,Long Statement,The length of the statement "uids.add(Pair.of("Telefonica->UK->MAVENIR->IMC->REAL_WS->HLW_CMS-BAS-42->APP17->ims->IFC_xml->VOLTE->dummyTagDoNotUseForWriteback->InitialFilterCriteria->720->TriggerPoint->1->SPT"`"Telefonica->UK->MAVENIR->IMC->REAL_WS->HLW_CMS-BAS-42->APP17->ims->IFC_xml->VOLTE->dummyTagDoNotUseForWriteback->InitialFilterCriteria->720->TriggerPoint->1->SPT->SIPHeader->Accept-Contact->\\+g\\.3gpp\\.icsi-ref=\"urn%3Aurn-7%3A3gpp-service\\.ims\\.icsi\\.mmtel\""));" is 450.,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdgeWithSpecialCharacters,testBulkAddEdgesWithSpecialCharactersInValues,Magic Number,The method contains a magic number: 3,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdgeWithSpecialCharacters,testBulkAddEdgesWithSpecialCharactersInValues,Magic Number,The method contains a magic number: 4,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdgeWithSpecialCharacters,testBulkAddEdgesWithSpecialCharactersInValues,Magic Number,The method contains a magic number: 4,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestForeignKeysAreOptional,testForeignKeysOnHsqldb,Long Statement,The length of the statement "try (PreparedStatement preparedStatement=conn.prepareStatement("select * from information_schema.constraint_table_usage where CONSTRAINT_NAME like '%FK%'")){" is 157.,41
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestForeignKeysAreOptional,testForeignKeysOffHsqldb,Long Statement,The length of the statement "try (PreparedStatement preparedStatement=conn.prepareStatement("select * from information_schema.constraint_table_usage " + "where TABLE_NAME = 'E_Edge1' and CONSTRAINT_NAME like '%FK%'")){" is 189.,76
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestCreateEdgeBetweenVertices,testCreateEdgeBetweenVerticesPropertiesEagerlyLoadedOnHas,Magic Number,The method contains a magic number: 2,30
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestCreateEdgeBetweenVertices,testCreateEdgeBetweenVerticesPropertiesEagerlyLoadedOnHasSortBy,Magic Number,The method contains a magic number: 1000,66
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestCreateEdgeBetweenVertices,testCreateEdgeBetweenVerticesPropertiesEagerlyLoadedOnHasSortBy,Magic Number,The method contains a magic number: 1000,66
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,testEdgeInOutVerticesUserDefinedPrimary,Long Statement,The length of the statement "VertexLabel personVertexLabel1=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"Person"`new LinkedHashMap<String`PropertyType>(){" is 182.,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,testEdgeInOutVerticesUserDefinedPrimary,Long Statement,The length of the statement "VertexLabel addressVertexLabel1=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"Address"`new LinkedHashMap<String`PropertyType>(){" is 184.,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,testEdgeInOutVerticesUserDefinedPrimary,Long Statement,The length of the statement "VertexLabel carVertexLabel1=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"Car"`new LinkedHashMap<String`PropertyType>(){" is 176.,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,testEdgeInOutVerticesUserDefinedPrimary,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,testEdgeInOutVerticesUserDefinedPrimary,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,shouldConstructDetachedEdge,Magic Number,The method contains a magic number: 2002,123
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,shouldConstructDetachedEdge,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,shouldConstructDetachedEdge,Magic Number,The method contains a magic number: 0.5d,123
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestLoadEdge,convertToEdgeId,Long Statement,The length of the statement "return this.sqlgGraph.traversal().V().has("name"`outVertexName).outE(edgeLabel).as("e").inV().has("name"`inVertexName).<Edge>select("e").next().id();" is 149.,148
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestOutE,testOutEWithAttributes,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> gt=vertexTraversal(this.sqlgGraph`v1).outE().where(__.inV().has("name"`P.within("p4"`"p2"))).inV();" is 129.,36
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestOutE,testOutEWithAttributes,Magic Number,The method contains a magic number: 2,36
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestOutE,testOutEOrder,Long Statement,The length of the statement "List<Path> ps=vertexTraversal(this.sqlgGraph`v1).out("e1").as("v2").out("e2").as("v3").outE("e3").order().by("sequence").inV().as("v4-5").path().toList();" is 154.,58
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestOutE,testOutEOrder,Long Statement,The length of the statement "ps=vertexTraversal(this.sqlgGraph`v1).out("e1").as("v2").out("e2").as("v3").outE("e3").order().by("sequence"`Order.desc).inV().as("v4-5").path().toList();" is 154.,58
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestOutE,testOutEOrder,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestOutE,testOutEOrder,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.edges,TestOutE,testOutEOrder,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testInOutInOut2,Magic Number,The method contains a magic number: 9,35
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testInOutInOut2,Magic Number,The method contains a magic number: 9,35
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testNameWithMultipleSameLabel_assert,Long Statement,The length of the statement "List<Map<String`Object>> result=sqlgGraph.traversal().V().as("a").out().as("a").in().as("a").select(Pop.all`"a"`"a"`"a").toList();" is 130.,76
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testNameWithMultipleSameLabel_assert,Magic Number,The method contains a magic number: 3,76
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testNameWithMultipleSameLabel_assert,Magic Number,The method contains a magic number: 2,76
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testNameWithMultipleSameLabel_assert,Magic Number,The method contains a magic number: 2,76
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Long Parameter List,The method has 16 parameters. ,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Long Statement,The length of the statement "List<Map<String`Object>> result=g.traversal().V(a1).outE("a_b").as("ab").inV().as("B").outE().as("bcd").inV().as("CD").inE().as("dcb").inV().as("CD2").select("ab"`"B"`"bcd"`"CD"`"dcb"`"CD2").toList();" is 200.,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 6,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 2,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 3,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 4,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testShortName_assert,Magic Number,The method contains a magic number: 5,123
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestColumnNameTranslation,testLongName,Long Statement,The length of the statement "List<Map<String`Object>> gt=this.sqlgGraph.traversal().V(a1).outE("aaaaaaaaaaaaaaaaaaaaaa_bbbbbbbbbbbbbbbbbbbb").as("ab").inV().as("B").outE().as("bcd").inV().as("CD").inE().as("INE").inV().as("CD2").select("ab"`"B"`"bcd"`"CD"`"INE"`"CD2").toList();" is 249.,236
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTree,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Tree> traversal=(DefaultGraphTraversal<Vertex`Tree>)this.sqlgGraph.traversal().V().hasLabel("A").out().out().tree();" is 145.,24
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTree,Magic Number,The method contains a magic number: 5,24
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTree,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTree,Magic Number,The method contains a magic number: 3,24
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTreeWithBy,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Tree> traversal=(DefaultGraphTraversal<Vertex`Tree>)this.sqlgGraph.traversal().V().hasLabel("A").out().out().tree().by("name");" is 156.,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTreeWithBy,Magic Number,The method contains a magic number: 5,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTreeWithBy,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTreeWithBy,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTreeWithSideEffect,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().out().tree("a");" is 152.,95
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTreeWithSideEffect,Magic Number,The method contains a magic number: 5,95
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,testTreeWithSideEffect,Magic Number,The method contains a magic number: 2,95
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTreeStep,g_VX1X_out_out_tree_byXnameX,Long Statement,The length of the statement "@SuppressWarnings("unchecked") final List<DefaultGraphTraversal<Vertex`Tree>> traversals=Arrays.asList((DefaultGraphTraversal)g.V(convertToVertexId("marko")).out().out().tree().by("name")`(DefaultGraphTraversal)g.V(convertToVertexId("marko")).out().out().tree("a").by("name").both().both().cap("a"));" is 300.,119
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testWithoutEmptyCollection,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasWithInMultipleHasContainers,Long Statement,The length of the statement "Assert.assertEquals(3`this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within("1"`"2"`"3")).count().next().intValue());" is 128.,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasWithInMultipleHasContainers,Long Statement,The length of the statement "Assert.assertEquals(3`this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within("4"`"5"`"6")).count().next().intValue());" is 128.,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasWithInMultipleHasContainers,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within("2"`"3"`"4")).has("name"`P.within("4"`"5"`"6")).count().next().intValue());" is 162.,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasWithInMultipleHasContainers,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within("2"`"3"`"4")).has("name"`P.within("4"`"5"`"6"));" is 198.,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasWithInMultipleHasContainers,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasWithInMultipleHasContainers,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasWithInMultipleHasContainers,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasLabelOutWithInV_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a1.id()).outE("outB").inV();" is 137.,82
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testHasLabelOutWithInV_assert,Magic Number,The method contains a magic number: 3,82
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testToFromEdge_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a.id()).out().in();" is 128.,105
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testToFromEdge_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a.id()).outE().outV();" is 132.,105
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testToFromEdge_assert,Magic Number,The method contains a magic number: 3,105
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testToFromEdge_assert,Magic Number,The method contains a magic number: 3,105
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testInVOutV_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a.id()).outE().outV().out().outE().outV();" is 151.,138
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testInVOutV_assert,Magic Number,The method contains a magic number: 6,138
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testNavFromEdge_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Edge> traversal=(DefaultGraphTraversal<Edge`Edge>)sqlgGraph.traversal().E(e1.id()).outV().outE().has(T.id`e2.id().toString());" is 153.,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithInOutV,testNavFromEdge_assert,Magic Number,The method contains a magic number: 4,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testSchemaTableTreeNextSchemaTableTreeIsEdgeVertex_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> gt=(DefaultGraphTraversal)sqlgGraph.traversal().V(a1).out().as("b").out().as("c").select("b"`"c");" is 147.,46
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testSchemaTableTreeNextSchemaTableTreeIsEdgeVertex_assert,Magic Number,The method contains a magic number: 4,46
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testSchemaTableTreeNextSchemaTableTreeIsEdgeVertex_assert,Magic Number,The method contains a magic number: 2,46
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Long Parameter List,The method has 10 parameters. ,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Element>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Element>>)sqlgGraph.traversal().V(a1).outE("outB").as("e").inV().as("B").<Element>select("e"`"B");" is 199.,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal1=(DefaultGraphTraversal<Vertex`Edge>)sqlgGraph.traversal().V(a1.id()).bothE();" is 123.,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 4,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 2,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 4,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 2,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 2,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 3,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 3,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 2,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAs_assert,Magic Number,The method contains a magic number: 4,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAsNotFromStart_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a1).out("outB").out("outC").as("x").<Vertex>select("x");" is 165.,158
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAsNotFromStart_assert,Magic Number,The method contains a magic number: 4,158
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAsNotFromStart_assert,Magic Number,The method contains a magic number: 2,158
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testHasLabelOutWithAsNotFromStart_assert,Magic Number,The method contains a magic number: 2,158
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testAsWithDuplicatePaths,Magic Number,The method contains a magic number: 5,174
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testAsWithDuplicatePaths_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Element>> gt=(DefaultGraphTraversal<Vertex`Map<String`Element>>)sqlgGraph.traversal().V(a1).outE().as("e").inV().in().as("v").<Element>select("e"`"v");" is 191.,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testAsWithDuplicatePaths_assert,Magic Number,The method contains a magic number: 5,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testAsWithDuplicatePaths_assert,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testChainSelect,Magic Number,The method contains a magic number: 5,204
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testChainSelect_assert,Long Statement,The length of the statement "try (DefaultGraphTraversal<Vertex`Vertex> gt=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`"a1").as("v1").values("name").as("name1").select("v1").out("friend")){" is 209.,219
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testChainSelect_assert,Magic Number,The method contains a magic number: 5,219
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithAs,testChainSelect_assert,Magic Number,The method contains a magic number: 5,219
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestAlias,testAlias,Long Statement,The length of the statement "List<Map<String`Vertex>> result=this.sqlgGraph.traversal().V().hasLabel("A").as("a"`"aa"`"aaa").out("ab").as("b"`"bb"`"bbb").<Vertex>select("a"`"aa"`"aaa"`"b"`"bb"`"bbb").toList();" is 180.,31
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithRange,testSimpleOrderWithRange,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out().optional(__.out().range(5`6)));" is 179.,19
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithRange,testSimpleOrderWithRange,Magic Number,The method contains a magic number: 10,19
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithRange,testSimpleOrderWithRange,Magic Number,The method contains a magic number: 10,19
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithRange,testSimpleOrderWithRange,Magic Number,The method contains a magic number: 5,19
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithRange,testSimpleOrderWithRange,Magic Number,The method contains a magic number: 6,19
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithRange,testSimpleOrderWithRange,Magic Number,The method contains a magic number: 3,19
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutE_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`a1).outE().count();" is 126.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutE_assert,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutE_assert,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutE_assert,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testInE_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`b1).inE().count();" is 125.,68
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testInE_assert,Magic Number,The method contains a magic number: 3,68
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testInE_assert,Magic Number,The method contains a magic number: 3,68
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testInE_assert,Magic Number,The method contains a magic number: 2,68
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testEdgeOut_assert,Magic Number,The method contains a magic number: 2,93
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testEdgeOut_assert,Magic Number,The method contains a magic number: 3,93
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Long Parameter List,The method has 8 parameters. ,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`a1).outE().count();" is 126.,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal1=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`a1).out().outE().count();" is 133.,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal2=(DefaultGraphTraversal<Vertex`Edge>)vertexTraversal(sqlgGraph`a1).out().outE();" is 125.,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Magic Number,The method contains a magic number: 3,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Magic Number,The method contains a magic number: 2,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Magic Number,The method contains a magic number: 3,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Magic Number,The method contains a magic number: 4,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Magic Number,The method contains a magic number: 6,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Magic Number,The method contains a magic number: 3,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testOutEOut_assert,Magic Number,The method contains a magic number: 3,134
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`v1).outE().count();" is 131.,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal1=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`v2).outE().count();" is 132.,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal2=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`v1).bothE().count();" is 133.,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal3=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`v2).bothE().count();" is 133.,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 2010,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 2010,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 4,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 4,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 8,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileE,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate,Magic Number,The method contains a magic number: 1990,29
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate,Magic Number,The method contains a magic number: 1991,29
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate,Magic Number,The method contains a magic number: 1992,29
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Long Parameter List,The method has 7 parameters. ,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born1));" is 154.,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born2));" is 155.,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.lt(born3));" is 155.,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.gt(born1));" is 155.,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.between(born1`born3));" is 166.,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.within(born1`born3));" is 165.,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDate_assert,Magic Number,The method contains a magic number: 2,45
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime,Magic Number,The method contains a magic number: 1990,99
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime,Magic Number,The method contains a magic number: 1990,99
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime,Magic Number,The method contains a magic number: 2,99
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime,Magic Number,The method contains a magic number: 1990,99
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime,Magic Number,The method contains a magic number: 3,99
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Parameter List,The method has 7 parameters. ,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born1));" is 154.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born2));" is 155.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.lt(born3));" is 155.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2bis=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`"johnny").has("born"`P.lt(born3));" is 179.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2ter=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name").has("born"`P.lt(born3));" is 170.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2cuatro=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").hasNot("name").has("born"`P.lt(born3));" is 176.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2cinquo=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").hasNot("unknown").has("born"`P.lt(born3));" is 179.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.gt(born1));" is 155.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.between(born1`born3));" is 166.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.within(born1`born3));" is 165.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 4,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 4,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 4,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsLocalDateTime_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime,Magic Number,The method contains a magic number: 1999,204
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime,Magic Number,The method contains a magic number: 1999,204
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime,Magic Number,The method contains a magic number: 2,204
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime,Magic Number,The method contains a magic number: 1999,204
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime,Magic Number,The method contains a magic number: 3,204
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Long Parameter List,The method has 7 parameters. ,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born1));" is 154.,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born2));" is 155.,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.lt(born3));" is 155.,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.gt(born1));" is 155.,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.between(born1`born3));" is 166.,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.within(born1`born3));" is 165.,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime_assert,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime2,Magic Number,The method contains a magic number: 1999,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime2,Magic Number,The method contains a magic number: 1999,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime2_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.gt(born2));" is 154.,295
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime2_assert,Magic Number,The method contains a magic number: 2,295
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsZonedDateTime2_assert,Magic Number,The method contains a magic number: 2,295
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration,Magic Number,The method contains a magic number: 2,304
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration,Magic Number,The method contains a magic number: 3,304
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Long Parameter List,The method has 7 parameters. ,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born1));" is 154.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.eq(born2));" is 155.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.lt(born3));" is 155.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.gt(born1));" is 155.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.between(born1`born3));" is 166.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("born"`P.within(born1`born3));" is 165.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhereLocalDate,testEqualsDuration_assert,Magic Number,The method contains a magic number: 2,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testEmitRepeatWithVertexStepAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).emit().times(3).out();" is 169.,27
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testEmitRepeatWithVertexStepAfter,Magic Number,The method contains a magic number: 3,27
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testEmitRepeatWithVertexStepAfter,Magic Number,The method contains a magic number: 2,27
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testEmitRepeatWithVertexStepAfter,Magic Number,The method contains a magic number: 3,27
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_untilXout_outX_repeatXin_asXaX_in_asXbXX_selectXa_bX_byXnameX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`String>> traversal=this.sqlgGraph.traversal().V().until(__.out().out()).repeat(__.in().as("a").in().as("b")).<String>select("a"`"b").by("name");" is 178.,60
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_untilXout_outX_repeatXin_asXaX_in_asXbXX_selectXa_bX_byXnameX,Magic Number,The method contains a magic number: 2,60
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_untilXout_outX_repeatXin_asXaX_in_asXbXX_selectXa_bX_byXnameX,Magic Number,The method contains a magic number: 2,60
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_asXaX_repeatXbothX_timesX3X_emit_asXbX_group_byXselectXaXX_byXselectXbX_dedup_order_byXidX_foldX_selectXvaluesX_unfold_dedup,Long Statement,The length of the statement "final Traversal<Vertex`Collection<String>> traversal=this.sqlgGraph.traversal().V().as("a").repeat(__.both()).times(3).emit().values("name").as("b").group().by(__.select("a")).by(__.select("b").dedup().order().fold()).select(Column.values).<Collection<String>>unfold().dedup();" is 277.,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_asXaX_repeatXbothX_timesX3X_emit_asXbX_group_byXselectXaXX_byXselectXbX_dedup_order_byXidX_foldX_selectXvaluesX_unfold_dedup,Magic Number,The method contains a magic number: 3,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_asXaX_repeatXbothX_timesX3X_emit_asXbX_group_byXselectXaXX_byXselectXbX_dedup_order_byXidX_foldX_selectXvaluesX_unfold_dedup,Magic Number,The method contains a magic number: 6,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_asXaX_repeatXbothX_timesX3X_emit_asXbX_group_byXselectXaXX_byXselectXbX_dedup_order_byXidX_foldX_selectXvaluesX_unfold_dedup,Magic Number,The method contains a magic number: 2,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_asXaX_repeatXbothX_timesX3X_emit_asXbX_group_byXselectXaXX_byXselectXbX_dedup_order_byXidX_foldX_selectXvaluesX_unfold_dedup,Magic Number,The method contains a magic number: 3,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_asXaX_repeatXbothX_timesX3X_emit_asXbX_group_byXselectXaXX_byXselectXbX_dedup_order_byXidX_foldX_selectXvaluesX_unfold_dedup,Magic Number,The method contains a magic number: 4,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,g_V_asXaX_repeatXbothX_timesX3X_emit_asXbX_group_byXselectXaXX_byXselectXbX_dedup_order_byXidX_foldX_selectXvaluesX_unfold_dedup,Magic Number,The method contains a magic number: 5,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)this.sqlgGraph.traversal().V(b1).as("a").repeat(__.both()).times(3).emit().as("b").<Vertex>select("a"`"b");" is 216.,101
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth,Magic Number,The method contains a magic number: 3,101
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth,Magic Number,The method contains a magic number: 3,101
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth,Magic Number,The method contains a magic number: 2,101
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth,Magic Number,The method contains a magic number: 8,101
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth,Magic Number,The method contains a magic number: 2,101
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailureWithoutDedup,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Collection<Vertex>> traversal=(DefaultGraphTraversal<Vertex`Collection<Vertex>>)this.sqlgGraph.traversal().V().as("a").repeat(__.both()).times(3).emit().as("b").group().by(__.select("a")).by(__.select("b").dedup().order().by(T.id).fold()).select(Column.values).<Collection<Vertex>>unfold();" is 319.,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailureWithoutDedup,Magic Number,The method contains a magic number: 3,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailureWithoutDedup,Magic Number,The method contains a magic number: 6,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailureWithoutDedup,Magic Number,The method contains a magic number: 6,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailure,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Collection<Vertex>> traversal=(DefaultGraphTraversal<Vertex`Collection<Vertex>>)this.sqlgGraph.traversal().V().as("a").repeat(__.both()).times(3).emit().as("b").group().by(__.select("a")).by(__.select("b").dedup().order().by(T.id).fold()).select(Column.values).<Collection<Vertex>>unfold().dedup();" is 327.,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailure,Magic Number,The method contains a magic number: 3,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailure,Magic Number,The method contains a magic number: 6,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailure,Magic Number,The method contains a magic number: 5,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testGroupByByFailure,Magic Number,The method contains a magic number: 6,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatAndOut,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().repeat(__.both()).times(1).out();" is 149.,194
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatAndOut,Magic Number,The method contains a magic number: 3,194
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(b1).repeat(__.both()).times(3);" is 145.,209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth2,Magic Number,The method contains a magic number: 3,209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth2,Magic Number,The method contains a magic number: 2,209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBoth2,Magic Number,The method contains a magic number: 4,209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothE,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(b1).repeat(__.bothE().otherV()).times(3);" is 155.,225
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothE,Magic Number,The method contains a magic number: 3,225
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothE,Magic Number,The method contains a magic number: 2,225
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothE,Magic Number,The method contains a magic number: 4,225
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(b1).repeat(__.bothE().where(P.without("e")).aggregate("e").otherV()).emit().path();" is 193.,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(b1) && p.get(1).equals(e1) && p.get(2).equals(a1)));" is 132.,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(b1) && p.get(1).equals(e1) && p.get(2).equals(a1)).findAny().orElseThrow());" is 149.,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(b1) && p.get(1).equals(e2) && p.get(2).equals(c1)));" is 132.,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(b1) && p.get(1).equals(e2) && p.get(2).equals(c1)).findAny().orElseThrow());" is 149.,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 3,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 3,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 2,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 3,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 2,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 3,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 2,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 3,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 2,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 3,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphBoth,testRepeatBothEWithAggregate,Magic Number,The method contains a magic number: 2,241
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testEmitWithLabel,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).repeat(out()).times(2).emit().as("bc").<Vertex>select("bc");" is 178.,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testEmitWithLabel,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testEmitWithLabel,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testEmitWithLabel,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testEmitWithLabel,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel1,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)this.sqlgGraph.traversal().V().as("a").repeat(out()).times(1).emit().as("b").<Vertex>select("a"`"b");" is 210.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel1,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel1,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel1,Magic Number,The method contains a magic number: 6,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)this.sqlgGraph.traversal().V().as("a").repeat(out()).times(2).emit().as("b").<Vertex>select("a"`"b");" is 210.,69
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel2,Magic Number,The method contains a magic number: 2,69
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel2,Magic Number,The method contains a magic number: 3,69
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel2,Magic Number,The method contains a magic number: 2,69
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepWithLabels,testRepeatEmitLabel2,Magic Number,The method contains a magic number: 8,69
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,testChoosePerformance,Magic Number,The method contains a magic number: 10_000,30
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,testChoosePerformance,Magic Number,The method contains a magic number: 100,30
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,testChoosePerformance,Magic Number,The method contains a magic number: 1000,30
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_injectX1X_chooseXisX1X__constantX10Xfold__foldX,Long Statement,The length of the statement "final Traversal<Integer`List<Integer>> traversal=this.sqlgGraph.traversal().inject(1).choose(__.is(1)`__.constant(10).fold()`__.fold());" is 136.,61
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_injectX1X_chooseXisX1X__constantX10Xfold__foldX,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_injectX1X_chooseXisX1X__constantX10Xfold__foldX,Magic Number,The method contains a magic number: 10,61
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_hasLabelXpersonX_chooseXageX__optionX27L__constantXyoungXX_optionXnone__constantXoldXX_groupCount,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Long>> traversal=this.sqlgGraph.traversal().V().hasLabel("person").choose(__.values("age")).option(27`__.constant("young")).option(TraversalOptionParent.Pick.none`__.constant("old")).groupCount();" is 230.,75
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_hasLabelXpersonX_chooseXageX__optionX27L__constantXyoungXX_optionXnone__constantXoldXX_groupCount,Magic Number,The method contains a magic number: 27,75
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_hasLabelXpersonX_chooseXageX__optionX27L__constantXyoungXX_optionXnone__constantXoldXX_groupCount,Magic Number,The method contains a magic number: 2,75
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_hasLabelXpersonX_chooseXageX__optionX27L__constantXyoungXX_optionXnone__constantXoldXX_groupCount,Magic Number,The method contains a magic number: 3L,75
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_hasLabelXpersonX_asXp1X_chooseXoutEXknowsX__outXknowsXX_asXp2X_selectXp1_p2X_byXnameX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`String>> traversal=this.sqlgGraph.traversal().V().hasLabel("person").as("p1").choose(__.outE("knows")`__.out("knows")).as("p2").<String>select("p1"`"p2").by("name");" is 199.,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_hasLabelXpersonX_asXp1X_chooseXoutEXknowsX__outXknowsXX_asXp2X_selectXp1_p2X_byXnameX,Long Statement,The length of the statement "checkResults(makeMapList(2`"p1"`"marko"`"p2"`"vadas"`"p1"`"marko"`"p2"`"josh"`"p1"`"vadas"`"p2"`"vadas"`"p1"`"josh"`"p2"`"josh"`"p1"`"peter"`"p2"`"peter")`traversal);" is 166.,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_hasLabelXpersonX_asXp1X_chooseXoutEXknowsX__outXknowsXX_asXp2X_selectXp1_p2X_byXnameX,Magic Number,The method contains a magic number: 2,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXhasLabelXpersonX_and_outXcreatedX__outXknowsX__identityX_name,Long Statement,The length of the statement "GraphTraversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().choose(__.hasLabel("person").and().out("created")`__.out("knows")`__.identity()).values("name");" is 167.,114
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabelX_optionXblah__outXknowsXX_optionXbleep__outXcreatedXX_optionXnone__identityX_name,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)this.sqlgGraph.traversal().V().choose(__.label()).option("blah"`__.out("knows")).option("bleep"`__.out("created")).option(TraversalOptionParent.Pick.none`__.identity()).<String>values("name");" is 277.,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabelX_optionXblah__outXknowsXX_optionXbleep__outXcreatedXX_optionXnone__identityX_name,Magic Number,The method contains a magic number: 3,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabelX_optionXblah__outXknowsXX_optionXbleep__outXcreatedXX_optionXnone__identityX_name,Magic Number,The method contains a magic number: 3,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXout_countX_optionX2L__nameX_optionX3L__valueMapX,Long Statement,The length of the statement "final Traversal<Vertex`Object> traversal=this.sqlgGraph.traversal().V().choose(__.out().count()).option(2L`__.values("name")).option(3L`__.valueMap());" is 151.,143
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXout_countX_optionX2L__nameX_optionX3L__valueMapX,Magic Number,The method contains a magic number: 2L,143
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXout_countX_optionX2L__nameX_optionX3L__valueMapX,Magic Number,The method contains a magic number: 3L,143
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXout_countX_optionX2L__nameX_optionX3L__valueMapX,Magic Number,The method contains a magic number: 2,143
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXout_countX_optionX2L__nameX_optionX3L__valueMapX,Magic Number,The method contains a magic number: 2,143
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,testUnoptimizableChooseStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").choose(v -> v.label().equals("A")`__.out()`__.in());" is 182.,165
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,testUnoptimizableChooseStep,Magic Number,The method contains a magic number: 3,165
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,testUnoptimizableChooseStep,Magic Number,The method contains a magic number: 2,165
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,testUnoptimizableChooseStep,Magic Number,The method contains a magic number: 2,165
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabel_eq_person__unionX__out_lang__out_nameX__in_labelX_groupCount,Long Statement,The length of the statement "@SuppressWarnings("unchecked") final Traversal<Vertex`Map<String`Long>> traversal=this.sqlgGraph.traversal().V().choose(__.label().is("person")`__.union(__.out().values("lang")`__.out().values("name"))`__.in().label()).groupCount();" is 232.,191
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabel_eq_person__unionX__out_lang__out_nameX__in_labelX_groupCount,Magic Number,The method contains a magic number: 3L,191
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabel_eq_person__unionX__out_lang__out_nameX__in_labelX_groupCount,Magic Number,The method contains a magic number: 4L,191
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabel_eq_person__unionX__out_lang__out_nameX__in_labelX_groupCount,Magic Number,The method contains a magic number: 4L,191
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,g_V_chooseXlabel_eq_person__unionX__out_lang__out_nameX__in_labelX_groupCount,Magic Number,The method contains a magic number: 6,191
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,checkMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> actualList=actualMap.entrySet().stream().sorted(Comparator.comparing(a -> a.getKey().toString())).collect(Collectors.toList());" is 154.,213
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileChoose,checkMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> expectedList=expectedMap.entrySet().stream().sorted(Comparator.comparing(a -> a.getKey().toString())).collect(Collectors.toList());" is 158.,213
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathFrom,Long Statement,The length of the statement "GraphTraversal<Vertex`Path> t=this.sqlgGraph.traversal().V().hasLabel("A").as("a").out("ab").select("a").as("start").path();" is 124.,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathFrom,Magic Number,The method contains a magic number: 3,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathFrom,Magic Number,The method contains a magic number: 3,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathFrom,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathFrom,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathFrom,Magic Number,The method contains a magic number: 3,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathFrom,Magic Number,The method contains a magic number: 3,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_hasXlabel_personX_asXaX_localXoutXcreatedX_asXbXX_selectXa_bX_byXnameX_by,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)g.V().has(T.label`"person").as("a").local(__.out("created").as("b")).select("a"`"b").by("name").by(T.id);" is 214.,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_hasXlabel_personX_asXaX_localXoutXcreatedX_asXbXX_selectXa_bX_byXnameX_by,Magic Number,The method contains a magic number: 4,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_hasXlabel_personX_asXaX_localXoutXcreatedX_asXbXX_selectXa_bX_byXnameX_by,Magic Number,The method contains a magic number: 4,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_hasXlabel_personX_asXaX_localXoutXcreatedX_asXbXX_selectXa_bX_byXnameX_by,Magic Number,The method contains a magic number: 2,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_hasXlabel_personX_asXaX_localXoutXcreatedX_asXbXX_selectXa_bX_byXnameX_by,Magic Number,The method contains a magic number: 4,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)graph.traversal().V().out().path().by("age").by("name");" is 137.,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Magic Number,The method contains a magic number: 3,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Magic Number,The method contains a magic number: 6,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Magic Number,The method contains a magic number: 3,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Magic Number,The method contains a magic number: 6,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testGraphPathWithBy,Magic Number,The method contains a magic number: 4,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathWithBy,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)g.V(convertToVertexId("marko")).out().path().by("age").by("name");" is 147.,156
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathWithBy,Magic Number,The method contains a magic number: 3,156
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathWithBy,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathWithBy,Magic Number,The method contains a magic number: 29,156
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathWithBy,Magic Number,The method contains a magic number: 3,156
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathWithBy,Magic Number,The method contains a magic number: 3,156
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testEdge,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal=(DefaultGraphTraversal<Vertex`Edge>)this.sqlgGraph.traversal().V(a1.id()).bothE();" is 127.,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testEdge,Magic Number,The method contains a magic number: 2,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testEdge,Magic Number,The method contains a magic number: 2,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathBackToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> gt=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).out().in().path();" is 125.,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathBackToSelf,Magic Number,The method contains a magic number: 4,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathBackToSelf,Magic Number,The method contains a magic number: 2,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathBackToSelf,Magic Number,The method contains a magic number: 3,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testVertexPathBackToSelf,Magic Number,The method contains a magic number: 2,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testSimplePath,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().as("a").has("name"`"a1").as("b").has("age"`1).as("c").path();" is 173.,214
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testSimplePath,Magic Number,The method contains a magic number: 3,214
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testSimplePath,Magic Number,The method contains a magic number: 3,214
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_asXaX_hasXname_markoX_asXbX_hasXage_29X_asXcX_path,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)g.V().as("a").has("name"`"marko").as("b").has("age"`29).as("c").path();" is 152.,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_asXaX_hasXname_markoX_asXbX_hasXage_29X_asXcX_path,Magic Number,The method contains a magic number: 29,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_asXaX_hasXname_markoX_asXbX_hasXage_29X_asXcX_path,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_asXaX_hasXname_markoX_asXbX_hasXage_29X_asXcX_path,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,g_V_asXaX_hasXname_markoX_asXbX_hasXage_29X_asXcX_path,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testNameWithMultipleSameLabel,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)this.sqlgGraph.traversal().V().as("a").out().as("a").in().as("a").select(Pop.all`"a"`"a"`"a");" is 203.,250
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testNameWithMultipleSameLabel,Magic Number,The method contains a magic number: 4,250
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testNameWithMultipleSameLabel,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testNameWithMultipleSameLabel,Magic Number,The method contains a magic number: 3,250
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testNameWithMultipleSameLabel,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testNameWithMultipleSameLabel,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").out().out().path();" is 145.,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 5,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 3,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPathStep,testPathStep,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.contains("a"));" is 161.,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.contains("aaa"));" is 164.,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.contains("abc"));" is 164.,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.contains("acd"));" is 164.,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.contains("ohn"));" is 164.,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.contains("Ohn"));" is 164.,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Magic Number,The method contains a magic number: 2,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Magic Number,The method contains a magic number: 2,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Magic Number,The method contains a magic number: 2,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Magic Number,The method contains a magic number: 2,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Magic Number,The method contains a magic number: 2,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Magic Number,The method contains a magic number: 2,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContains_assert,Magic Number,The method contains a magic number: 2,48
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextPredicate_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.contains("XXX"));" is 163.,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextPredicate_assert,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontains("a"));" is 162.,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontains("aaa"));" is 165.,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontains("abc"));" is 165.,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontains("acd"));" is 165.,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontains("ohn"));" is 165.,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 3,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNotContains_assert,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.containsCIS("A"));" is 164.,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.containsCIS("AAA"));" is 167.,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.containsCIS("ABC"));" is 167.,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.containsCIS("ACD"));" is 167.,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.containsCIS("OHN"));" is 167.,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextContainsCIS_assert,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontainsCIS("A"));" is 165.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontainsCIS("AAA"));" is 168.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontainsCIS("ABC"));" is 168.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontainsCIS("ACD"));" is 168.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.ncontainsCIS("OHN"));" is 168.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 3,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNContainsCIS_assert,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.startsWith("a"));" is 163.,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.startsWith("aaa"));" is 166.,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.startsWith("abc"));" is 166.,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.startsWith("acd"));" is 166.,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.startsWith("ohn"));" is 166.,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Magic Number,The method contains a magic number: 2,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Magic Number,The method contains a magic number: 2,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Magic Number,The method contains a magic number: 2,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Magic Number,The method contains a magic number: 2,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Magic Number,The method contains a magic number: 2,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextStartWith_assert,Magic Number,The method contains a magic number: 2,276
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nstartsWith("a"));" is 164.,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nstartsWith("aaa"));" is 167.,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nstartsWith("abc"));" is 167.,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nstartsWith("acd"));" is 167.,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nstartsWith("ohn"));" is 167.,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 2,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 2,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 2,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 2,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 2,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 2,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 3,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 2,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNStartsWith_assert,Magic Number,The method contains a magic number: 3,326
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> has=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.endsWith("a"));" is 155.,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.endsWith("aaa"));" is 163.,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.endsWith("abc"));" is 164.,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.endsWith("acd"));" is 164.,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.endsWith("ohn"));" is 164.,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Magic Number,The method contains a magic number: 2,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Magic Number,The method contains a magic number: 2,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Magic Number,The method contains a magic number: 2,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Magic Number,The method contains a magic number: 2,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextEndsWith_assert,Magic Number,The method contains a magic number: 2,376
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nendsWith("a"));" is 162.,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nendsWith("aaa"));" is 165.,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nendsWith("abc"));" is 165.,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nendsWith("acd"));" is 165.,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nendsWith("ohn"));" is 165.,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`Text.nendsWith("D"));" is 163.,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 3,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 3,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileTextPredicate,testTextNEndsWith_assert,Magic Number,The method contains a magic number: 3,426
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 9,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 4,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 5,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 6,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 7,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderFollowedByVertexStep,Magic Number,The method contains a magic number: 8,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderRangeOrderAgain,Long Statement,The length of the statement "List<Vertex> vertices=sqlgGraph.traversal().V().hasLabel("A").out("ab").order().by("name"`Order.desc).limit(1).out("bc").order().by("name"`Order.desc).toList();" is 160.,59
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderRangeOrderAgain,Magic Number,The method contains a magic number: 3,59
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOrderRangeOrderAgain,Magic Number,The method contains a magic number: 2,59
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testVertexStepAfterRange,Long Statement,The length of the statement "final Traversal<Vertex`Vertex> traversal=this.sqlgGraph.traversal().V(v1Id).out("created").inE("created").range(1`3).outV();" is 124.,105
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testVertexStepAfterRange,Magic Number,The method contains a magic number: 3,105
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testVertexStepAfterRange,Magic Number,The method contains a magic number: 2,105
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testComparatorViolations,Long Statement,The length of the statement "final Traversal<Vertex`Vertex> traversal=this.sqlgGraph.traversal().V().has("song"`"name"`"OH BOY").out("followedBy").out("followedBy").order().by("performances").by("songType"`Order.desc);" is 189.,120
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testComparatorViolations,Long Statement,The length of the statement "if (currentPerformances == lastPerformances) Assert.assertTrue(currentSongType.equals(lastSongType) || currentSongType.compareTo(lastSongType) < 0);" is 148.,120
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testComparatorViolations,Magic Number,The method contains a magic number: 144,120
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testStepsAfterRangeNotOptimized,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testStepsAfterRangeNotOptimized,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out().order().by("name").optional(__.out().order().by("name"`Order.desc))).path();" is 220.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().get());" is 141.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().get());" is 141.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc1)));" is 133.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc1)).findAny().get());" is 142.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2)));" is 133.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2)).findAny().get());" is 142.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc3)));" is 133.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc3)).findAny().get());" is 142.,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 4,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 12,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 5,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 4,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testSelectBeforeOrder,Long Statement,The length of the statement "List<String> names=this.sqlgGraph.traversal().V().outE().as("e").inV().as("v").select("e").order().by("weight"`Order.asc).select("v").<String>values("name").dedup().toList();" is 174.,283
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testSelectBeforeOrder,Magic Number,The method contains a magic number: 3,283
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testSelectBeforeOrder,Magic Number,The method contains a magic number: 2,283
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testSelectBeforeOrder,Magic Number,The method contains a magic number: 3,283
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestReplacedStepEmitComparator,testSelectBeforeOrder,Magic Number,The method contains a magic number: 2,283
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().repeat(__.out()).until(__.hasLabel("A"));" is 157.,28
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatToSelf,Magic Number,The method contains a magic number: 2,28
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatToSelf,Magic Number,The method contains a magic number: 2,28
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatToSelf,Magic Number,The method contains a magic number: 2,28
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> t=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).until(__.hasLabel("C"));" is 163.,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().until(__.hasLabel("C")).repeat(__.out());" is 157.,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Magic Number,The method contains a magic number: 6,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testUntilRepeat,Magic Number,The method contains a magic number: 9,49
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Long>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Long>>)this.sqlgGraph.traversal().V().repeat(__.groupCount("m").by("name").out()).times(2).<Map<String`Long>>cap("m");" is 216.,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 3,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 3,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2L,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2L,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2L,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2L,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2L,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2L,103
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Long>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Long>>)this.sqlgGraph.traversal().V().repeat(__.groupCount("m").by("name.A").out()).times(2).<Map<String`Long>>cap("m");" is 218.,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 2,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 3,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 3,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 2L,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 2L,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 2L,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 2L,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 2L,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithUnoptimizableInternalStepsAndPropertyWithPeriod,Magic Number,The method contains a magic number: 2L,144
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatNoLimit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().repeat(__.out("ab").out("bc"));" is 147.,185
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatNoLimit,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatNoLimit,Magic Number,The method contains a magic number: 2,185
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimesEmitBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).times(1).emit().repeat(__.out()).path();" is 154.,210
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimesEmitBefore,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 158.,210
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimesEmitBefore,Magic Number,The method contains a magic number: 3,210
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimesEmitBefore,Magic Number,The method contains a magic number: 2,210
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimesEmitBefore,Magic Number,The method contains a magic number: 2,210
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimesEmitBefore,Magic Number,The method contains a magic number: 2,210
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimeEmitAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).repeat(__.out()).times(1).emit().path();" is 154.,234
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimeEmitAfter,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Collections.singletonList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 128.,234
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimeEmitAfter,Magic Number,The method contains a magic number: 3,234
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimeEmitAfter,Magic Number,The method contains a magic number: 2,234
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatSimpleTimeEmitAfter,Magic Number,The method contains a magic number: 2,234
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").times(0).repeat(__.out("ab").out("bc"));" is 170.,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out("ab"`"bc")).times(1);" is 166.,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").times(1).repeat(__.out("ab"`"bc"));" is 166.,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out("ab"`"bc")).times(2);" is 166.,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").times(2).repeat(__.out("ab"`"bc"));" is 166.,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 2,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 2,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeat,Magic Number,The method contains a magic number: 3,257
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab"`"bc")).times(1).path();" is 175.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 223.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab"`"bc")).times(1).path();" is 176.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab"`"bc"`"cd")).times(3);" is 177.,366
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,366
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,366
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 14,366
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstWithPeriod,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab"`"bc"`"cd")).times(3);" is 177.,413
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstWithPeriod,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstWithPeriod,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstWithPeriod,Magic Number,The method contains a magic number: 14,413
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab"`"bc"`"cd")).times(3).path();" is 180.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 1 && p.get(0).equals(a1) && ((Vertex)p.get(0)).value("name.AA").equals("a1")));" is 138.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 14,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,460
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab"`"bc"`"cd")).times(3).path();" is 180.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 14,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,524
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").emit().times(3).repeat(__.out("ab"`"bc"`"cd")).path();" is 180.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 14,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out("ab"`"bc"`"cd")).emit().times(3).path();" is 180.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 13,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,662
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out("ab"`"bc"`"cd")).emit().times(3);" is 177.,733
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 3,733
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 3,733
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 13,733
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastWithTimesFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").times(3).repeat(__.out("ab"`"bc"`"cd")).emit();" is 177.,780
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 3,780
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 3,780
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 19,780
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> t=(DefaultGraphTraversal<Vertex`Vertex>)graph.traversal().V().repeat(__.out()).times(2);" is 125.,834
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X,Magic Number,The method contains a magic number: 2,834
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X,Magic Number,The method contains a magic number: 2,834
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X,Magic Number,The method contains a magic number: 2,834
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)graph.traversal().V().repeat(__.out()).times(2).path().by().by("name").by("lang");" is 163.,858
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 2,858
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 3,858
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 2,858
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 3,858
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 2,858
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 2,858
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 3,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 8,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 6,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 3,880
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).emit().times(2).repeat(__.out()).path();" is 154.,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a1));" is 246.,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 2,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 3,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 2,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 2,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 3,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 2,906
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).emit().repeat(__.out()).times(2).path();" is 154.,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a1));" is 246.,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 2,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 3,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 2,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 2,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 3,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 2,934
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).emit().times(2).repeat(__.out()).path();" is 154.,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3));" is 311.,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 3,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 3,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,962
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).emit().repeat(__.out()).times(2).path();" is 154.,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3));" is 246.,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 3,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 3,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,994
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Long Statement,The length of the statement "final List<DefaultGraphTraversal<Vertex`Path>> traversals=Arrays.asList((DefaultGraphTraversal<Vertex`Path>)g.V().emit().times(2).repeat(__.out()).path()`(DefaultGraphTraversal<Vertex`Path>)g.V().emit().repeat(__.out()).times(2).path());" is 237.,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 3,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 3,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 6,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 6,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,1023
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().repeat(__.out()).times(2).emit().path();" is 152.,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(marko) && p.get(1).equals(lop)).findAny().orElseThrow(IllegalStateException::new));" is 156.,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(josh) && p.get(1).equals(lop)).findAny().orElseThrow(IllegalStateException::new));" is 155.,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(marko) && p.get(1).equals(josh)).findAny().orElseThrow(IllegalStateException::new));" is 157.,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(marko) && p.get(1).equals(josh) && p.get(2).equals(lop)));" is 138.,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(marko) && p.get(1).equals(josh) && p.get(2).equals(lop)).findAny().orElseThrow(IllegalStateException::new));" is 181.,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().repeat(__.out()).times(2).emit();" is 150.,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 4,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 4,1057
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().repeat(__.out("knows")).times(2).emit();" is 156.,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().repeat(__.out("knows")).emit().times(2).path();" is 160.,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)));" is 132.,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,1096
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().emit().repeat(__.out("knows")).times(2);" is 156.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().repeat(__.out("knows")).times(2).path();" is 160.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)));" is 132.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 6,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 6,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,1132
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnLeftJoinOnLeaveNode,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab")).times(1);" is 167.,1177
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnLeftJoinOnLeaveNode,Magic Number,The method contains a magic number: 3,1177
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnLeftJoinOnLeaveNode,Magic Number,The method contains a magic number: 4,1177
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePaths,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out("ab"`"ba")).times(2);" is 172.,1193
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePaths,Magic Number,The method contains a magic number: 2,1193
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePaths,Magic Number,The method contains a magic number: 3,1193
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePaths,Magic Number,The method contains a magic number: 4,1193
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().repeat(__.out("ab"`"ba")).times(2).path();" is 161.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 132.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 6,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,1209
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().repeat(__.out("ab"`"ba")).times(1).path();" is 161.,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 3,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 5,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,1238
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().repeat(__.out("ab"`"ba")).times(2).path();" is 161.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 132.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 3,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 6,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 3,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 3,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1265
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().repeat(__.out("ab"`"ba")).emit().times(1).path();" is 161.,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 3,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1294
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().repeat(__.out("ab"`"ba")).emit().times(2).path();" is 161.,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 132.,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 3,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 3,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 3,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 3,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1315
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().times(2).repeat(__.out()).path();" is 152.,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 3,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 3,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,1338
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).emit().times(2).path();" is 166.,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)));" is 132.,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 4,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1359
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).emit().times(3).path();" is 166.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).emit().times(4).path();" is 167.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal2=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").times(2).repeat(__.out()).emit().path();" is 167.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1382
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").times(3).repeat(__.out()).path();" is 159.,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).times(4).path();" is 160.,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,1435
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("B").emit().times(2).repeat(__.out()).path();" is 166.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().times(2).repeat(__.out()).path();" is 153.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal2=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().times(3).repeat(__.out()).path();" is 153.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal3=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().repeat(__.out()).times(3).path();" is 153.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal4=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().repeat(__.out()).times(2).path();" is 153.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 4,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1465
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).emit().times(2).repeat(__.out()).path();" is 154.,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1));" is 246.,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 2,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 3,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 2,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 3,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 2,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 3,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 2,1569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().emit().times(2).repeat(__.out()).path();" is 152.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)));" is 132.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 6,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1597
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "Vertex ericssonGsmNetworkNodeGroup=this.sqlgGraph.addVertex(T.label`"NetworkNodeGroup"`"name"`"EricssonGsmNetworkNodeGroup");" is 125.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "Vertex ericssonUmtsNetworkNodeGroup=this.sqlgGraph.addVertex(T.label`"NetworkNodeGroup"`"name"`"EricssonUmtsNetworkNodeGroup");" is 127.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "Vertex ericssonLteNetworkNodeGroup=this.sqlgGraph.addVertex(T.label`"NetworkNodeGroup"`"name"`"EricssonLteNetworkNodeGroup");" is 125.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "Vertex huaweiGsmNetworkNodeGroup=this.sqlgGraph.addVertex(T.label`"NetworkNodeGroup"`"name"`"HuaweiGsmNetworkNodeGroup");" is 121.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "Vertex huaweiUmtsNetworkNodeGroup=this.sqlgGraph.addVertex(T.label`"NetworkNodeGroup"`"name"`"HuaweiUmtsNetworkNodeGroup");" is 123.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "Vertex huaweiLteNetworkNodeGroup=this.sqlgGraph.addVertex(T.label`"NetworkNodeGroup"`"name"`"HuaweiLteNetworkNodeGroup");" is 121.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel("Group").emit().repeat(__.out("group_network"`"network_networkSoftwareVersion"`"networkSoftwareVersion_networkNodeGroup"`"networkNodeGroup_networkNode")).times(4).tree().next();" is 217.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel("Group").emit().repeat(__.out("group_network"`"network_networkSoftwareVersion"`"networkSoftwareVersion_networkNodeGroup"`"networkNodeGroup_networkNode")).times(4).tree().next();" is 217.,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Magic Number,The method contains a magic number: 1000,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Magic Number,The method contains a magic number: 4,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphOut,testRepeatStepPerformance,Magic Number,The method contains a magic number: 4,1627
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testMultipleHasWithinUserSuppliedIds,Long Statement,The length of the statement "this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("TestHierarchy"`new LinkedHashMap<String`PropertyType>(){" is 127.,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testMultipleHasWithinUserSuppliedIds,Long Statement,The length of the statement "List<Vertex> vertexList=this.sqlgGraph.traversal().V().hasLabel("TestHierarchy").has("column1"`P.within(values1)).has("column2"`P.within(values2)).toList();" is 156.,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testMultipleHasWithinUserSuppliedIds,Long Statement,The length of the statement "vertexList=this.sqlgGraph.traversal().V().hasLabel("TestHierarchy").has("column1"`P.within(values1)).has("column2"`P.within(values2)).toList();" is 143.,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testMultipleHasWithinUserSuppliedIds,Long Statement,The length of the statement "vertexList=this.sqlgGraph.traversal().V().hasLabel("TestHierarchy").has("column1"`P.within(values1)).has("column2"`P.within(values2)).toList();" is 143.,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testMultipleHasWithinUserSuppliedIds,Magic Number,The method contains a magic number: 100,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testMultipleHasWithinUserSuppliedIds,Magic Number,The method contains a magic number: 100,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testMultipleHasWithinUserSuppliedIds,Magic Number,The method contains a magic number: 3,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasPropertyWithLabel,Magic Number,The method contains a magic number: 2,87
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasPropertyWithLabel,Magic Number,The method contains a magic number: 2,87
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdRecompilation_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).hasLabel("A");" is 135.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).has(T.id`P.within(recordIda2`recordIdb1));" is 164.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().has(T.id`P.within(recordIda1`recordIda2`recordIdb1));" is 165.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1`recordIda2`recordIda3`recordIdb1);" is 155.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().has(T.id`P.within(recordIda1));" is 143.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).in().hasId(recordIdb1);" is 145.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal6=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1`recordIda2`recordIda3).in().hasId(recordIdb1`recordIdb2`recordIdb3);" is 189.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal7=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).in().hasId(recordIda1);" is 145.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal8=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).in().hasId(recordIdb1);" is 145.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal9=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).in().hasId(recordIdb1`recordIdb2);" is 156.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal10=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).in().hasId(recordIdb1.toString());" is 157.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal11=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).in().hasId(recordIdb1.toString()`recordIdb2.toString());" is 179.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal12=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).in().hasId(recordIdb1.toString()`recordIdc2.toString());" is 179.,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2L,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3L,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2L,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3L,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2L,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3L,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 4,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 3,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdIn_assert,Magic Number,The method contains a magic number: 2,164
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Long Parameter List,The method has 5 parameters. ,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1`recordIda2`recordIda3`recordIda4).in().hasId(recordIdb1`recordIdb2`recordIdb3);" is 199.,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1.toString()`recordIda2.toString()`recordIda3.toString()`recordIda4.toString()).in().hasId(recordIdb1.toString()`recordIdb2.toString()`recordIdb3.toString());" is 277.,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a1`a2`a3`a4).in().hasId(recordIdb1.toString()`recordIdb2.toString()`recordIdb3.toString());" is 201.,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a1`a2`a3`a4).in().hasId(recordIdb1.toString()`recordIdb2.toString()`recordIdb3.toString());" is 201.,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 2L,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3L,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 2L,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3L,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 2L,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3L,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdInJoin_assert,Magic Number,The method contains a magic number: 3,297
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Long Parameter List,The method has 5 parameters. ,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1`recordIda2`recordIda3`recordIda4).out().hasId(recordIdb1`recordIdb2`recordIdb3);" is 200.,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1.toString()`recordIda2.toString()`recordIda3.toString()`recordIda4.toString()).out().hasId(recordIdb1.toString()`recordIdb2.toString()`recordIdb3.toString());" is 278.,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a1`a2`a3`a4).out().hasId(recordIdb1.toString()`recordIdb2.toString()`recordIdb3.toString());" is 202.,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(a1`a2`a3`a4).out().hasId(recordIdb1.toString()`recordIdb2.toString()`recordIdb3.toString());" is 202.,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 2L,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3L,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 2L,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3L,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 2L,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3L,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOutJoin_assert,Magic Number,The method contains a magic number: 3,379
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).hasLabel("A");" is 135.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).has(T.id`P.within(recordIda2`recordIdb1));" is 164.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().has(T.id`P.within(recordIda1`recordIda2`recordIdb1));" is 165.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1`recordIda2`recordIda3`recordIdb1);" is 155.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().has(T.id`P.within(recordIda1));" is 143.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).out().hasId(recordIdb1);" is 146.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal6=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1`recordIda2`recordIda3).out().hasId(recordIdb1`recordIdb2`recordIdb3);" is 190.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal7=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).out().hasId(recordIda1);" is 146.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal8=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).out().hasId(recordIdb1);" is 146.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal9=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).out().hasId(recordIdb1`recordIdb2);" is 157.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal10=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).out().hasId(recordIdb1.toString());" is 158.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal11=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).out().hasId(recordIdb1.toString()`recordIdb2.toString());" is 180.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal12=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V(recordIda1).out().hasId(recordIdb1.toString()`recordIdc2.toString());" is 180.,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2L,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3L,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2L,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3L,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2L,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3L,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 4,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 3,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasIdOut_assert,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXbX_selectXa_bX_byXnameX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`String>> traversal=(DefaultGraphTraversal<Vertex`Map<String`String>>)g.traversal().V().as("a").out().aggregate("x").as("b").<String>select("a"`"b").by("name");" is 199.,548
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXbX_selectXa_bX_byXnameX,Long Statement,The length of the statement "final List<Map<String`String>> expected=makeMapList(2`"a"`"marko"`"b"`"lop"`"a"`"marko"`"b"`"vadas"`"a"`"marko"`"b"`"josh"`"a"`"josh"`"b"`"ripple"`"a"`"josh"`"b"`"lop"`"a"`"peter"`"b"`"lop");" is 191.,548
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXbX_selectXa_bX_byXnameX,Magic Number,The method contains a magic number: 4,548
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXbX_selectXa_bX_byXnameX,Magic Number,The method contains a magic number: 3,548
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXbX_selectXa_bX_byXnameX,Magic Number,The method contains a magic number: 2,548
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1AsStringX_out_hasXid_2AsStringX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(convertToVertexId("marko")).out().hasId(convertToVertexId("vadas"));" is 182.,569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1AsStringX_out_hasXid_2AsStringX,Magic Number,The method contains a magic number: 3,569
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX4X_out_asXhereX_hasXlang_javaX_selectXhereX_name,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)g.traversal().V(vertexId).out().as("here").has("lang"`"java").select("here").<String>values("name");" is 185.,583
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX4X_out_asXhereX_hasXlang_javaX_selectXhereX_name,Magic Number,The method contains a magic number: 5,583
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX4X_out_asXhereX_hasXlang_javaX_selectXhereX_name,Magic Number,The method contains a magic number: 3,583
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX4X_out_asXhereX_hasXlang_javaX_selectXhereX_name,Magic Number,The method contains a magic number: 4,583
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX4X_out_asXhereX_hasXlang_javaX_selectXhereX_name,Magic Number,The method contains a magic number: 2,583
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX4X_out_asXhereX_hasXlang_javaX_selectXhereX_name,Magic Number,The method contains a magic number: 2,583
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_outXcreatedX_asXbX_inXcreatedX_asXcX_bothXknowsX_bothXknowsX_asXdX_whereXc__notXeqXaX_orXeqXdXXXX_selectXa_b_c_dX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)this.sqlgGraph.traversal().V().as("a").out("created").as("b").in("created").as("c").both("knows").both("knows").as("d").where("c"`P.not(P.eq("a").or(P.eq("d")))).select("a"`"b"`"c"`"d");" is 295.,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_outXcreatedX_asXbX_inXcreatedX_asXcX_bothXknowsX_bothXknowsX_asXdX_whereXc__notXeqXaX_orXeqXdXXXX_selectXa_b_c_dX,Long Statement,The length of the statement "checkResults(makeMapList(4`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"lop")`"c"`convertToVertex(this.sqlgGraph`"josh")`"d"`convertToVertex(this.sqlgGraph`"vadas")`"a"`convertToVertex(this.sqlgGraph`"peter")`"b"`convertToVertex(this.sqlgGraph`"lop")`"c"`convertToVertex(this.sqlgGraph`"josh")`"d"`convertToVertex(this.sqlgGraph`"vadas"))`traversal);" is 385.,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_outXcreatedX_asXbX_inXcreatedX_asXcX_bothXknowsX_bothXknowsX_asXdX_whereXc__notXeqXaX_orXeqXdXXXX_selectXa_b_c_dX,Magic Number,The method contains a magic number: 7,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_outXcreatedX_asXbX_inXcreatedX_asXcX_bothXknowsX_bothXknowsX_asXdX_whereXc__notXeqXaX_orXeqXdXXXX_selectXa_b_c_dX,Magic Number,The method contains a magic number: 3,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_outXcreatedX_asXbX_inXcreatedX_asXcX_bothXknowsX_bothXknowsX_asXdX_whereXc__notXeqXaX_orXeqXdXXXX_selectXa_b_c_dX,Magic Number,The method contains a magic number: 4,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,checkResults,Long Statement,The length of the statement "Assert.assertTrue("Checking map result existence: " + t`expectedResults.stream().filter(e -> e instanceof Map).anyMatch(e -> checkMap((Map)e`(Map)t)));" is 151.,631
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,checkMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> actualList=actualMap.entrySet().stream().sorted(Comparator.comparing(a -> a.getKey().toString())).collect(Collectors.toList());" is 154.,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,checkMap,Long Statement,The length of the statement "final List<Map.Entry<A`B>> expectedList=expectedMap.entrySet().stream().sorted(Comparator.comparing(a -> a.getKey().toString())).collect(Collectors.toList());" is 158.,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)g.traversal().V().as("a").out().as("a").out().as("a").<List<String>>select(Pop.all`"a").by(__.unfold().values("name").fold()).<String>range(Scope.local`1`2);" is 242.,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X,Magic Number,The method contains a magic number: 2,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X,Magic Number,The method contains a magic number: 5,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X,Magic Number,The method contains a magic number: 2,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X,Magic Number,The method contains a magic number: 3,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X_Simple,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`List<Vertex>> traversal=(DefaultGraphTraversal<Vertex`List<Vertex>>)g.traversal().V().as("a").out().as("a").out().as("a").<List<Vertex>>select(Pop.all`"a");" is 185.,702
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X_Simple,Magic Number,The method contains a magic number: 4,702
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X_Simple,Magic Number,The method contains a magic number: 2,702
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X_Simple,Magic Number,The method contains a magic number: 3,702
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_asXaX_out_asXaX_out_asXaX_selectXaX_byXunfold_valuesXnameX_foldX_rangeXlocal_1_2X_Simple,Magic Number,The method contains a magic number: 2,702
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_hasXinXcreatedX_count_isXgte_2XX_valuesXnameX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)this.sqlgGraph.traversal().V().where(__.in("created").count().is(P.gte(2L))).<String>values("name");" is 185.,725
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_hasXinXcreatedX_count_isXgte_2XX_valuesXnameX,Magic Number,The method contains a magic number: 2L,725
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_hasXinXcreatedX_count_isXgte_2XX_valuesXnameX,Magic Number,The method contains a magic number: 3,725
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_hasXinXcreatedX_count_isXgte_2XX_valuesXnameX,Magic Number,The method contains a magic number: 3,725
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1X_out_hasXid_2X,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(marko).out().hasId(vadas);" is 140.,748
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1X_out_hasXid_2X,Magic Number,The method contains a magic number: 3,748
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasLabelOut,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().both().has(T.label`"B");" is 140.,764
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasLabelOut,Magic Number,The method contains a magic number: 3,764
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testSingleCompileWithHasLabelIn,Magic Number,The method contains a magic number: 4,783
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testSingleCompileWithHasLabelIn,Magic Number,The method contains a magic number: 3,783
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b1").out().has("name"`"c1").count();" is 170.,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b1").out().has("name"`"c1");" is 167.,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal2=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b2").out().has("name"`"c5").count();" is 171.,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b2").out().has("name"`"c5");" is 167.,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Magic Number,The method contains a magic number: 6,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Magic Number,The method contains a magic number: 3,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Magic Number,The method contains a magic number: 5,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Magic Number,The method contains a magic number: 6,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Magic Number,The method contains a magic number: 3,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHas,Magic Number,The method contains a magic number: 5,807
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b1").out().has("name"`"c1").count();" is 170.,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b1").out().has("name"`"c1");" is 167.,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal2=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b2").out().has("name"`"c5").count();" is 171.,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal3=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b2").has("name"`"b2").out().has("name"`P.within(Arrays.asList("c5"`"c6"))).count();" is 218.,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal4=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`a1).out().has("name"`"b2").has("name"`"b2").out().has("name"`P.eq("c5")).count();" is 194.,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 6,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 3,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 5,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 6,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 3,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 6,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 2,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 3,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 6,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testOutHasOutHasNotParsed,Magic Number,The method contains a magic number: 3,861
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`v2).inE().count();" is 130.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal1=(DefaultGraphTraversal<Vertex`Edge>)vertexTraversal(this.sqlgGraph`v2).inE();" is 123.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Long> traversal2=(DefaultGraphTraversal<Edge`Long>)edgeTraversal(this.sqlgGraph`e1).inV().count();" is 125.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Vertex> traversal3=(DefaultGraphTraversal<Edge`Vertex>)edgeTraversal(this.sqlgGraph`e1).inV();" is 121.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Long> traversal4=(DefaultGraphTraversal<Edge`Long>)edgeTraversal(this.sqlgGraph`e1).outV().count();" is 126.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Long> traversal5=(DefaultGraphTraversal<Edge`Long>)edgeTraversal(this.sqlgGraph`e1).outV().inE().count();" is 132.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Long> traversal6=(DefaultGraphTraversal<Edge`Long>)edgeTraversal(this.sqlgGraph`e2).inV().count();" is 125.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Vertex> traversal7=(DefaultGraphTraversal<Edge`Vertex>)edgeTraversal(this.sqlgGraph`e2).inV();" is 121.,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 2,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 2,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 4,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 3,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testInOut,Magic Number,The method contains a magic number: 2,921
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`marko).out("drives").<Vertex>has("name"`"bmw");" is 163.,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`marko).out("drives").<Vertex>has("name"`"ktm");" is 164.,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`marko).out("drives").<Vertex>has("cc"`600);" is 160.,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`marko).out("drives").<Vertex>has("cc"`800);" is 160.,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`marko).out("drives").<Vertex>has("cc"`200);" is 160.,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(this.sqlgGraph`marko).out("drives").<Vertex>has("cc"`400);" is 160.,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 600,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 800,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 200,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 200,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 400,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 2L,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3L,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 600,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 800,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 200,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 2L,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 400,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3,974
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testg_EX11X_outV_outE_hasXid_10AsStringX,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Edge> traversal=(DefaultGraphTraversal<Edge`Edge>)g.traversal().E(edgeId11.toString()).outV().outE().has(T.id`edgeId10.toString());" is 158.,1032
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testg_EX11X_outV_outE_hasXid_10AsStringX,Magic Number,The method contains a magic number: 4,1032
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)g.traversal().V(id).out().outE().inV().inE().inV().both().<String>values("name");" is 166.,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Magic Number,The method contains a magic number: 8,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Magic Number,The method contains a magic number: 2,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Magic Number,The method contains a magic number: 3,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Magic Number,The method contains a magic number: 4,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Magic Number,The method contains a magic number: 3,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Magic Number,The method contains a magic number: 3,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_V_out_outE_inV_inE_inV_both_name,Magic Number,The method contains a magic number: 10,1050
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasWithStringIds,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)g.traversal().V(marko).out().hasId(vadas);" is 127.,1078
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHasWithStringIds,Magic Number,The method contains a magic number: 3,1078
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHas,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)get_g_VX1X_out_hasIdX2_3X(g.traversal()`convertToVertexId("marko")`id2.toString()`id3.toString());" is 183.,1093
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testHas,Magic Number,The method contains a magic number: 3,1093
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1X_out_hasXid_2AsString_3AsStringX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)get_g_VX1X_out_hasIdX2_3X(g.traversal()`convertToVertexId("marko")`id2.toString()`id3.toString());" is 183.,1107
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1X_out_hasXid_2AsString_3AsStringX,Magic Number,The method contains a magic number: 3,1107
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal=(DefaultGraphTraversal<Vertex`Edge>)g.traversal().V(marko).outE("knows").has("weight"`1.0d).as("here").inV().has("name"`"josh").<Edge>select("here");" is 194.,1121
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testX,Magic Number,The method contains a magic number: 6,1121
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testX,Magic Number,The method contains a magic number: 3,1121
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testX,Magic Number,The method contains a magic number: 0.00001d,1121
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1X_outE_hasXweight_inside_0_06X_inV,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)get_g_VX1X_outE_hasXweight_inside_0_06X_inV(g.traversal()`convertToVertexId("marko"));" is 171.,1141
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,g_VX1X_outE_hasXweight_inside_0_06X_inV,Magic Number,The method contains a magic number: 4,1141
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testY,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)g.traversal().V(marko).outE("knows").bothV().<String>values("name");" is 153.,1157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testY,Magic Number,The method contains a magic number: 4,1157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testY,Magic Number,The method contains a magic number: 2,1157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testY,Magic Number,The method contains a magic number: 4,1157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testY,Magic Number,The method contains a magic number: 3,1157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,testY,Magic Number,The method contains a magic number: 2,1157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,get_g_VX1X_outE_hasXweight_inside_0_06X_inV,Magic Number,The method contains a magic number: 0.6d,1182
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWithHas,convertToEdgeId,Long Statement,The length of the statement "return graph.traversal().V().has("name"`outVertexName).outE(edgeLabel).as("e").inV().has("name"`inVertexName).<Edge>select("e").next().id();" is 140.,1199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTraversalPerformance,testSpeedWithLargeSchemaFastQuery1,Magic Number,The method contains a magic number: 100,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTraversalPerformance,testSpeedWithLargeSchemaFastQuery1,Magic Number,The method contains a magic number: 1_000,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTraversalPerformance,testSpeedWithLargeSchemaFastQuery1,Magic Number,The method contains a magic number: 100,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTraversalPerformance,testSpeedWithLargeSchemaFastQuery1,Magic Number,The method contains a magic number: 100,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestTraversalPerformance,testSpeedWithLargeSchemaFastQuery1,Magic Number,The method contains a magic number: 10_000,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out().order().by("order"`Order.desc)).times(2);" is 187.,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 2,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 3,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 4,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 5,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 6,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 2,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 3,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 3,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatWithOrderAndRange,testRepeatWithOrder,Magic Number,The method contains a magic number: 2,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileVertexStep,testVertexStep_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)sqlgGraph.traversal().V(a1).as("a").local(__.out().as("b")).select("a"`"b");" is 185.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileVertexStep,testVertexStep_assert,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileVertexStep,testVertexStep_assert,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEquals_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`P.eq("johnny"));" is 157.,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEquals_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`P.eq("johnnyxxx"));" is 161.,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEquals_assert,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEquals_assert,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testNotEquals_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`P.neq("johnny"));" is 158.,71
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testNotEquals_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("name"`P.neq("johnnyxxx"));" is 162.,71
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testNotEquals_assert,Magic Number,The method contains a magic number: 2,71
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testNotEquals_assert,Magic Number,The method contains a magic number: 2,71
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testNotEquals_assert,Magic Number,The method contains a magic number: 2,71
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testNotEquals_assert,Magic Number,The method contains a magic number: 3,71
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan,Magic Number,The method contains a magic number: 2,87
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan,Magic Number,The method contains a magic number: 3,87
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gt(0));" is 149.,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gt(1));" is 150.,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gt(2));" is 150.,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gt(3));" is 150.,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 3,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 3,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerThan_assert,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo,Magic Number,The method contains a magic number: 3,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gte(0));" is 150.,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gte(1));" is 151.,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gte(2));" is 151.,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gte(3));" is 151.,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.gte(4));" is 151.,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 3,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 3,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 3,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 4,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBiggerEqualsTo_assert,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan,Magic Number,The method contains a magic number: 2,179
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan,Magic Number,The method contains a magic number: 3,179
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lt(0));" is 149.,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lt(1));" is 150.,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lt(2));" is 150.,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lt(3));" is 150.,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lt(4));" is 150.,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 2,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 2,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 2,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 2,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 3,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 2,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 2,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 4,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 2,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testSmallerThan_assert,Magic Number,The method contains a magic number: 3,192
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo,Magic Number,The method contains a magic number: 2,229
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo,Magic Number,The method contains a magic number: 3,229
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lte(0));" is 150.,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lte(1));" is 151.,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lte(2));" is 151.,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lte(3));" is 151.,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.lte(4));" is 151.,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 3,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 3,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 4,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 2,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testLessThanEqualsTo_assert,Magic Number,The method contains a magic number: 3,242
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween,Magic Number,The method contains a magic number: 2,279
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween,Magic Number,The method contains a magic number: 3,279
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.between(0`4));" is 156.,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.between(1`4));" is 157.,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.between(1`3));" is 157.,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.between(1`1));" is 157.,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 4,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 2,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 3,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 4,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 2,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 3,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 3,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 2,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 2,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testBetween_assert,Magic Number,The method contains a magic number: 2,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside,Magic Number,The method contains a magic number: 2,322
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside,Magic Number,The method contains a magic number: 3,322
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.inside(0`4));" is 155.,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.inside(1`4));" is 156.,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.inside(1`3));" is 156.,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.inside(1`1));" is 156.,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 4,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 3,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 4,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 3,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testInside_assert,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside,Magic Number,The method contains a magic number: 2,364
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside,Magic Number,The method contains a magic number: 3,364
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.outside(0`4));" is 156.,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.outside(1`4));" is 157.,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.outside(1`3));" is 157.,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.outside(1`1));" is 157.,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 4,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 2,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 4,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 2,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 3,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 2,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 2,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testOutside_assert,Magic Number,The method contains a magic number: 2,377
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.within(1`2`3));" is 157.,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.within(0`1));" is 156.,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.within(1`3));" is 156.,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.within(1`1));" is 156.,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.within(3`4));" is 156.,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.within(4`5));" is 156.,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 3,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 3,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 3,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 3,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 4,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 4,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 5,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithin_assert,Magic Number,The method contains a magic number: 2,420
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout,Magic Number,The method contains a magic number: 2,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout,Magic Number,The method contains a magic number: 3,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.without(1`2`3));" is 158.,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.without(0`1));" is 157.,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.without(1`3));" is 157.,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.without(1`1));" is 157.,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal4=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.without(3`4));" is 157.,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal5=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.without(4`5));" is 157.,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 3,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 3,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 3,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 4,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 4,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 5,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 2,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testWithout_assert,Magic Number,The method contains a magic number: 3,477
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithin,Magic Number,The method contains a magic number: 2,521
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithin,Magic Number,The method contains a magic number: 3,521
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithin_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.within(Collections.emptyList()));" is 175.,534
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithin_assert,Magic Number,The method contains a magic number: 2,534
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithout,Magic Number,The method contains a magic number: 2,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithout,Magic Number,The method contains a magic number: 3,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithout_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("Person").has("age"`P.without(Collections.emptyList()));" is 176.,555
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithout_assert,Magic Number,The method contains a magic number: 2,555
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileWhere,testEmptyWithout_assert,Magic Number,The method contains a magic number: 3,555
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphV,testGraphStepWithAs_aasert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)sqlgGraph.traversal().V(a1).as("a").out().as("b").out().path();" is 144.,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphV,testGraphStepWithAs_aasert,Magic Number,The method contains a magic number: 4,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphV,testGraphStepWithAs_aasert,Magic Number,The method contains a magic number: 2,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphV,testGraphVHas_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().has(T.label`"A").out("b");" is 137.,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphV,testGraphVHas_assert,Magic Number,The method contains a magic number: 3,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphV,testGraphVHas_assert,Magic Number,The method contains a magic number: 8,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,test,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Edge> traversal=(DefaultGraphTraversal<Edge`Edge>)this.sqlgGraph.traversal().E().repeat(__.outV().outE()).times(2).emit();" is 149.,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,test,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,test,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,test,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Long Statement,The length of the statement "DefaultGraphTraversal gp=(DefaultGraphTraversal)this.sqlgGraph.traversal().V().outE("tsw").as("e").inV().emit().repeat(__.outE("tsw").as("e").inV().simplePath()).times(20);" is 172.,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Long Statement,The length of the statement "List<Predicate<List<Object>>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v0.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(5L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(10L) && ((Path)p.get(1)).get(2).equals(v1.id())`p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v0.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(5L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(10L) && ((Path)p.get(1)).get(2).equals(v1.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(3)).get("depTime").equals(17L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(3)).get("arrTime").equals(20L) && ((Path)p.get(1)).get(4).equals(v2.id())`p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v0.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(5L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(10L) && ((Path)p.get(1)).get(2).equals(v1.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(3)).get("depTime").equals(17L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(3)).get("arrTime").equals(20L) && ((Path)p.get(1)).get(4).equals(v2.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(5)).get("depTime").equals(25L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(5)).get("arrTime").equals(30L) && ((Path)p.get(1)).get(6).equals(v3.id())`p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v1.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(9L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(15L) && ((Path)p.get(1)).get(2).equals(v2.id())`p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v1.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(9L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(15L) && ((Path)p.get(1)).get(2).equals(v2.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(3)).get("depTime").equals(25L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(3)).get("arrTime").equals(30L) && ((Path)p.get(1)).get(4).equals(v3.id())`p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v1.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(17L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(20L) && ((Path)p.get(1)).get(2).equals(v2.id())`p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v1.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(17L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(20L) && ((Path)p.get(1)).get(2).equals(v2.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(3)).get("depTime").equals(25L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(3)).get("arrTime").equals(30L) && ((Path)p.get(1)).get(4).equals(v3.id())`p -> p.size() == 2 && p.get(0).equals("1") && ((Path)p.get(1)).get(0).equals(v2.id()) && ((Map)((Path)p.get(1)).get(1)).containsKey("depTime") && ((Map)((Path)p.get(1)).get(1)).get("depTime").equals(25L) && ((Map)((Path)p.get(1)).get(1)).containsKey("arrTime") && ((Map)((Path)p.get(1)).get(1)).get("arrTime").equals(30L) && ((Path)p.get(1)).get(2).equals(v3.id()));" is 4369.,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 10L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 5L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 15L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 9L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 20L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 17L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 30L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 25L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 20,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 4,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 10,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 5L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 10L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 5L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 10L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 17L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 20L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 4,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 5L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 10L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 17L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 20L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 4,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 5,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 25L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 5,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 30L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 6,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 9L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 15L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 9L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 15L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 25L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 30L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 4,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 17L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 20L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 17L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 20L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 25L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 30L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 4,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 25L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 30L,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,testBug116,Magic Number,The method contains a magic number: 2,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,query1,Long Statement,The length of the statement "return (DefaultGraphTraversal)g.V().outE("tsw").as("e").inV().emit().repeat(__.flatMap(__.outE("tsw").filter(__.as("edge").select(last`"e").where(P.eq("edge")).by("speed")).group().by(__.inV()).by(__.project("curr"`"prev").by().by(__.select(last`"e")).fold()).select(Column.values).unfold().order(local).by(timeAtWarehouse).limit(local`1).filter(checkNegativeTime).select("curr")).as("e").inV().simplePath()).times(20).map(__.union(__.select(last`"e").by("speed")`(Traversal)__.path().by(T.id).by(__.valueMap("arrTime"`"depTime"))).fold());" is 540.,146
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,query1,Magic Number,The method contains a magic number: 20,146
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,query2,Long Statement,The length of the statement "return (DefaultGraphTraversal)g.withSack(0).V().outE("tsw").as("e").inV().emit().repeat(__.flatMap(__.outE("tsw").filter(__.as("edge").select(last`"e").where(P.eq("edge")).by("speed")).group().by(__.inV()).by(__.project("curr"`"time").by().by(__.sack(Operator.assign).by("depTime").select(last`"e").sack(Operator.minus).by("arrTime").sack()).filter(__.select("time").is(P.gte(0))).fold()).select(Column.values).unfold().order(local).by(__.select("time")).limit(local`1).select("curr")).as("e").inV().simplePath()).times(20).map(__.union((Traversal)__.select(last`"e").by("speed")`(Traversal)__.path().by(T.id).by(__.valueMap("arrTime"`"depTime"))).fold());" is 656.,174
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,query2,Magic Number,The method contains a magic number: 20,174
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepOnEdges,checkResult,Magic Number,The method contains a magic number: 8,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)this.sqlgGraph.traversal().V(a1).as("a").out().as("b").<Vertex>select("a"`"b").order().by(__.select("b").by("name")`Order.asc);" is 236.,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal1=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)this.sqlgGraph.traversal().V(a1).as("a").out().as("b").<Vertex>select("a"`"b").order().by(__.select("b").by("name")`Order.desc);" is 238.,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 4,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 4,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testVertexStepOrderBy,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().order().by("name"`Order.asc);" is 153.,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().order().by("name"`Order.desc);" is 155.,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Magic Number,The method contains a magic number: 3,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Magic Number,The method contains a magic number: 3,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Magic Number,The method contains a magic number: 2,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Magic Number,The method contains a magic number: 3,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Magic Number,The method contains a magic number: 3,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderby,Magic Number,The method contains a magic number: 2,63
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderbyDuplicatePath,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().out().order().by("name"`Order.desc);" is 160.,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderbyDuplicatePath,Magic Number,The method contains a magic number: 4,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderbyDuplicatePath,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderByDuplicatePathLabelled,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().out().as("x").<Vertex>select("x").order().by(__.select("x").by("name")`Order.desc);" is 207.,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderByDuplicatePathLabelled,Magic Number,The method contains a magic number: 5,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderByDuplicatePathLabelled,Magic Number,The method contains a magic number: 2,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderByDuplicatePathLabelled,Magic Number,The method contains a magic number: 2,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderbyDuplicatePathOrderInMemory,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().out().order().by("name"`Order.asc);" is 159.,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderbyDuplicatePathOrderInMemory,Magic Number,The method contains a magic number: 4,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderbyDuplicatePathOrderInMemory,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderbyDuplicatePathOrderInMemory,Magic Number,The method contains a magic number: 2,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal)this.sqlgGraph.traversal().V(god).outE("godDream").as("e").inV().as("v").select("e"`"v").order().by(__.select("e").by("sequence")`Order.desc).map(m -> (Vertex)m.get().get("v"));" is 247.,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 4,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 6,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 2,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 3,188
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)this.sqlgGraph.traversal().V(god).outE("godDream").as("e").inV().as("v").select("e"`"v").order().by(__.select("e").by("sequence")`Order.desc);" is 251.,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 3,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 4,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 5,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 4,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 3,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 3,215
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderByToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal)this.sqlgGraph.traversal().V(folder1).outE("subFolder").as("e").inV().as("v").select("e"`"v").order().by(__.select("e").by("sequence")`Order.asc).map(m -> (Vertex)m.get().get("v"));" is 251.,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderByToSelf,Magic Number,The method contains a magic number: 6,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderByToSelf,Magic Number,The method contains a magic number: 3,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().hasLabel("Fantasy").order().by("name").as("f").in("godDream").as("g").select("f"`"g");" is 164.,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().V().hasLabel("Fantasy").order().by("name").range(0`2).as("f").in("godDream").as("g").select("f"`"g");" is 138.,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 2,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 3,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 4,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 4,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 4,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 2,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 2,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestVertexStepOrderBy,testOrderRangeAs,Magic Number,The method contains a magic number: 2,270
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinString,Magic Number,The method contains a magic number: 3,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinString,Magic Number,The method contains a magic number: 3,40
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_StringArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(stringArray1`stringArray3`stringArray4)).toList();" is 137.,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_StringArray,Magic Number,The method contains a magic number: 3,50
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinBoolean,Magic Number,The method contains a magic number: 5,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_booleanArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(booleanArray1`booleanArray3`booleanArray4)).toList();" is 140.,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_booleanArray,Magic Number,The method contains a magic number: 3,80
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_BooleanArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(booleanArray1`booleanArray3`booleanArray4)).toList();" is 140.,97
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_BooleanArray,Magic Number,The method contains a magic number: 3,97
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByte,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within((byte)1`(byte)2`(byte)3)).toList();" is 122.,114
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByte,Magic Number,The method contains a magic number: 2,114
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByte,Magic Number,The method contains a magic number: 3,114
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByte,Magic Number,The method contains a magic number: 2,114
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByte,Magic Number,The method contains a magic number: 3,114
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByte,Magic Number,The method contains a magic number: 3,114
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(byteArray1`byteArray3`byteArray4)).toList();" is 131.,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 2,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 3,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 4,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 5,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 6,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 7,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 8,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinByteArray,Magic Number,The method contains a magic number: 3,125
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(byteArray1`byteArray3`byteArray4)).toList();" is 131.,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 2,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 3,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 4,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 5,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 6,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 7,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 8,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_byteArray,Magic Number,The method contains a magic number: 3,142
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinShort,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within((short)1`(short)2`(short)3)).toList();" is 125.,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinShort,Magic Number,The method contains a magic number: 2,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinShort,Magic Number,The method contains a magic number: 3,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinShort,Magic Number,The method contains a magic number: 2,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinShort,Magic Number,The method contains a magic number: 3,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinShort,Magic Number,The method contains a magic number: 3,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(shortArray1`shortArray3`shortArray4)).toList();" is 134.,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 2,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 3,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 4,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 5,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 6,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 7,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 8,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 9,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 10,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 11,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 12,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_shortArray,Magic Number,The method contains a magic number: 3,169
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(shortArray1`shortArray3`shortArray4)).toList();" is 134.,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 2,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 3,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 4,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 5,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 6,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 7,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 8,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 9,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 10,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 11,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 12,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_ShortArray,Magic Number,The method contains a magic number: 3,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinInteger,Magic Number,The method contains a magic number: 2,203
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinInteger,Magic Number,The method contains a magic number: 3,203
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinInteger,Magic Number,The method contains a magic number: 2,203
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinInteger,Magic Number,The method contains a magic number: 3,203
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinInteger,Magic Number,The method contains a magic number: 3,203
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_intArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(intArray1`intArray3`intArray4)).toList();" is 128.,214
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_intArray,Magic Number,The method contains a magic number: 3,214
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_IntegerArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(intArray1`intArray3`intArray4)).toList();" is 128.,231
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_IntegerArray,Magic Number,The method contains a magic number: 3,231
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLong,Magic Number,The method contains a magic number: 2L,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLong,Magic Number,The method contains a magic number: 3L,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLong,Magic Number,The method contains a magic number: 2L,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLong,Magic Number,The method contains a magic number: 3L,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLong,Magic Number,The method contains a magic number: 3,248
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_longArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(longArray1`longArray3`longArray4)).toList();" is 131.,258
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_longArray,Magic Number,The method contains a magic number: 3,258
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LongArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(longArray1`longArray3`longArray4)).toList();" is 131.,275
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LongArray,Magic Number,The method contains a magic number: 3,275
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinFloat,Magic Number,The method contains a magic number: 1.1F,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinFloat,Magic Number,The method contains a magic number: 2.2F,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinFloat,Magic Number,The method contains a magic number: 3.3F,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinFloat,Magic Number,The method contains a magic number: 1.1F,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinFloat,Magic Number,The method contains a magic number: 2.2F,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinFloat,Magic Number,The method contains a magic number: 3.3F,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinFloat,Magic Number,The method contains a magic number: 3,292
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_floatArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(floatArray1`floatArray3`floatArray4)).toList();" is 134.,303
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_floatArray,Magic Number,The method contains a magic number: 3,303
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_FloatArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(floatArray1`floatArray3`floatArray4)).toList();" is 134.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_FloatArray,Magic Number,The method contains a magic number: 3,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinDouble,Magic Number,The method contains a magic number: 1.1D,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinDouble,Magic Number,The method contains a magic number: 2.2D,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinDouble,Magic Number,The method contains a magic number: 3.3D,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinDouble,Magic Number,The method contains a magic number: 1.1D,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinDouble,Magic Number,The method contains a magic number: 2.2D,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinDouble,Magic Number,The method contains a magic number: 3.3D,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinDouble,Magic Number,The method contains a magic number: 3,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_doubleArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(doubleArray1`doubleArray3`doubleArray4)).toList();" is 137.,347
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_doubleArray,Magic Number,The method contains a magic number: 3,347
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_DoubleArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(doubleArray1`doubleArray3`doubleArray4)).toList();" is 137.,364
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_DoubleArray,Magic Number,The method contains a magic number: 3,364
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalDate,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(LocalDate.now()`LocalDate.now().minusDays(1)`LocalDate.now().minusDays(2))).toList();" is 172.,381
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalDate,Magic Number,The method contains a magic number: 2,381
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalDate,Magic Number,The method contains a magic number: 2,381
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalDate,Magic Number,The method contains a magic number: 3,381
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Long Statement,The length of the statement "LocalDate[] localDateArray1=new LocalDate[]{LocalDate.now().minusDays(1)`LocalDate.now().minusDays(2)`LocalDate.now().minusDays(3)};" is 132.,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Long Statement,The length of the statement "LocalDate[] localDateArray2=new LocalDate[]{LocalDate.now().minusDays(4)`LocalDate.now().minusDays(5)`LocalDate.now().minusDays(6)};" is 132.,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Long Statement,The length of the statement "LocalDate[] localDateArray3=new LocalDate[]{LocalDate.now().minusDays(7)`LocalDate.now().minusDays(8)`LocalDate.now().minusDays(9)};" is 132.,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Long Statement,The length of the statement "LocalDate[] localDateArray4=new LocalDate[]{LocalDate.now().minusDays(10)`LocalDate.now().minusDays(11)`LocalDate.now().minusDays(12)};" is 135.,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(localDateArray1`localDateArray3`localDateArray4)).toList();" is 146.,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 2,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 3,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 4,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 5,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 6,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 7,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 8,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 9,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 10,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 11,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 12,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateArray,Magic Number,The method contains a magic number: 3,391
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalDateTime,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(localDateTime1`localDateTime2`localDateTime3)).toList();" is 143.,408
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalDateTime,Magic Number,The method contains a magic number: 2,408
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalDateTime,Magic Number,The method contains a magic number: 3,408
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Long Statement,The length of the statement "LocalDateTime[] localDateTimeArray1=new LocalDateTime[]{LocalDateTime.now().minusDays(1)`LocalDateTime.now().minusDays(2)`LocalDateTime.now().minusDays(3)};" is 156.,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Long Statement,The length of the statement "LocalDateTime[] localDateTimeArray2=new LocalDateTime[]{LocalDateTime.now().minusDays(4)`LocalDateTime.now().minusDays(5)`LocalDateTime.now().minusDays(6)};" is 156.,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Long Statement,The length of the statement "LocalDateTime[] localDateTimeArray3=new LocalDateTime[]{LocalDateTime.now().minusDays(7)`LocalDateTime.now().minusDays(8)`LocalDateTime.now().minusDays(9)};" is 156.,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Long Statement,The length of the statement "LocalDateTime[] localDateTimeArray4=new LocalDateTime[]{LocalDateTime.now().minusDays(10)`LocalDateTime.now().minusDays(11)`LocalDateTime.now().minusDays(12)};" is 159.,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(localDateTimeArray1`localDateTimeArray3`localDateTimeArray4)).toList();" is 158.,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 2,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 3,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 4,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 5,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 6,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 7,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 8,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 9,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 10,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 11,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 12,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalDateTimeArray,Magic Number,The method contains a magic number: 3,428
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalTime,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(localTime1`localTime2`localTime3)).toList();" is 131.,446
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalTime,Magic Number,The method contains a magic number: 2,446
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinLocalTime,Magic Number,The method contains a magic number: 3,446
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Long Statement,The length of the statement "LocalTime[] localTimeArray1=new LocalTime[]{LocalTime.now().minusHours(1)`LocalTime.now().minusHours(2)`LocalTime.now().minusHours(3)};" is 135.,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Long Statement,The length of the statement "LocalTime[] localTimeArray2=new LocalTime[]{LocalTime.now().minusHours(4)`LocalTime.now().minusHours(5)`LocalTime.now().minusHours(6)};" is 135.,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Long Statement,The length of the statement "LocalTime[] localTimeArray3=new LocalTime[]{LocalTime.now().minusHours(7)`LocalTime.now().minusHours(8)`LocalTime.now().minusHours(9)};" is 135.,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Long Statement,The length of the statement "LocalTime[] localTimeArray4=new LocalTime[]{LocalTime.now().minusHours(10)`LocalTime.now().minusHours(11)`LocalTime.now().minusHours(12)};" is 138.,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").has("name"`P.within(localTimeArray1`localTimeArray3`localTimeArray4)).toList();" is 146.,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 2,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 3,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 4,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 5,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 6,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 7,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 8,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 9,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 10,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 11,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 12,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_LocalTimeArray,Magic Number,The method contains a magic number: 3,464
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinJson,Magic Number,The method contains a magic number: 3,482
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinJsonArray,Magic Number,The method contains a magic number: 3,503
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin,Magic Number,The method contains a magic number: 100,563
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_assert,Long Statement,The length of the statement "List<Vertex> persons=sqlgGraph.traversal().V().hasLabel("God").out().has("idNumber"`P.within(uuids.subList(0`2).toArray())).toList();" is 133.,584
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_assert,Magic Number,The method contains a magic number: 2,584
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_assert,Magic Number,The method contains a magic number: 2,584
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithin_assert,Magic Number,The method contains a magic number: 100,584
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 2,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 3,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 4,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 5,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 6,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 7,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 8,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 9,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 10,591
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContrainers_assert,Long Statement,The length of the statement "List<Vertex> persons=sqlgGraph.traversal().V().hasLabel("God").out().has("name"`"pete").has("idNumber"`P.within(1`2`3)).toList();" is 129.,634
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContrainers_assert,Magic Number,The method contains a magic number: 2,634
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContrainers_assert,Magic Number,The method contains a magic number: 3,634
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinMultipleHasContrainers_assert,Magic Number,The method contains a magic number: 2,634
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinVertexCompileStep,Magic Number,The method contains a magic number: 100,644
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinVertexCompileStep_assert,Long Statement,The length of the statement "List<Vertex> persons=sqlgGraph.traversal().V(god.id()).out().has("idNumber"`P.within(uuids.subList(0`2).toArray())).toList();" is 125.,674
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinVertexCompileStep_assert,Magic Number,The method contains a magic number: 2,674
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinVertexCompileStep_assert,Magic Number,The method contains a magic number: 2,674
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinVertexCompileStep_assert,Magic Number,The method contains a magic number: 100,674
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinWithPercentageInJoinProperties,Long Statement,The length of the statement "uuids.add("\"BLRNC5->CXC4030052~%%%~FAJ1211373~%%%~2015-07-19~%%%~9999-12-31~%%%~Enabled~%%%~Licensed~%%%~Improved~%%%~compressed~%%%~mode~%%%~handling.~%%%~Restricted:~%%%~\"\"Partial.~%%%~Feature~%%%~is~%%%~restricted~%%%~in~%%%~RNC~%%%~W12B~%%%~SW.~%%%~RNC~%%%~W13.0.1.1~%%%~or~%%%~later~%%%~SW~%%%~is~%%%~required~%%%~in~%%%~order~%%%~to~%%%~run~%%%~this~%%%~feature.~%%%~For~%%%~RBS~%%%~W12.1.2.2/~%%%~W13.0.0.0~%%%~or~%%%~later~%%%~is~%%%~required.~%%%~OSS-RC~%%%~12.2~%%%~or~%%%~later~%%%~is~%%%~required.\"\".~%%%~GA:~%%%~W13A\"" + uuid);" is 546.,681
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinWithPercentageInJoinProperties,Long Statement,The length of the statement "Vertex person=this.sqlgGraph.addVertex(T.label`"Person"`"idNumber"`"\"BLRNC5->CXC4030052~%%%~FAJ1211373~%%%~2015-07-19~%%%~9999-12-31~%%%~Enabled~%%%~Licensed~%%%~Improved~%%%~compressed~%%%~mode~%%%~handling.~%%%~Restricted:~%%%~\"\"Partial.~%%%~Feature~%%%~is~%%%~restricted~%%%~in~%%%~RNC~%%%~W12B~%%%~SW.~%%%~RNC~%%%~W13.0.1.1~%%%~or~%%%~later~%%%~SW~%%%~is~%%%~required~%%%~in~%%%~order~%%%~to~%%%~run~%%%~this~%%%~feature.~%%%~For~%%%~RBS~%%%~W12.1.2.2/~%%%~W13.0.0.0~%%%~or~%%%~later~%%%~is~%%%~required.~%%%~OSS-RC~%%%~12.2~%%%~or~%%%~later~%%%~is~%%%~required.\"\".~%%%~GA:~%%%~W13A\"" + uuid);" is 603.,681
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinWithPercentageInJoinProperties,Magic Number,The method contains a magic number: 100,681
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinWithPercentageInJoinProperties_assert,Long Statement,The length of the statement "List<Vertex> persons=sqlgGraph.traversal().V().hasLabel("God").out().has("idNumber"`P.within(uuids.subList(0`2).toArray())).toList();" is 133.,710
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinWithPercentageInJoinProperties_assert,Magic Number,The method contains a magic number: 2,710
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinWithPercentageInJoinProperties_assert,Magic Number,The method contains a magic number: 2,710
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithin,testBulkWithinWithPercentageInJoinProperties_assert,Magic Number,The method contains a magic number: 100,710
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal1=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)this.sqlgGraph.traversal().V().as("a").out("created").in("created").where(P.neq("a")).as("b").<Vertex>select("a"`"b");" is 228.,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal=(DefaultGraphTraversal<Vertex`Edge>)this.sqlgGraph.traversal().V().as("a").out("created").in("created").where(P.neq("a")).as("b").<Vertex>select("a"`"b").addE("co-developer").from("a").to("b").property("year"`2009);" is 260.,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 5,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 3,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 2009,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 2009,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 4,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 12,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 12,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,gg_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,36
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal=(DefaultGraphTraversal<Vertex`Edge>)this.sqlgGraph.traversal().V().as("a").out("created").in("created").where(P.neq("a")).as("b").select("a"`"b").addE("co-developer").property("year"`2009).from("a").to("b");" is 252.,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 2009,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 2009,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 4,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 12,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 12,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_asXaX_outXcreatedX_inXcreatedX_whereXneqXaXX_asXbX_selectXa_bX_addInEXa_codeveloper_b_year_2009X,Magic Number,The method contains a magic number: 6,85
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Long Statement,The length of the statement "List<DefaultGraphTraversal<Vertex`Edge>> traversals=Arrays.asList((DefaultGraphTraversal)g.traversal().V(v1Id).outE("knows").as("here").has("weight"`1.0d).as("fake").inV().has("name"`"josh").<Edge>select("here"));" is 213.,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Long Statement,The length of the statement "traversals=Arrays.asList((DefaultGraphTraversal)this.sqlgGraph1.traversal().V(v1Id).outE("knows").as("here").has("weight"`1.0d).as("fake").inV().has("name"`"josh").<Edge>select("here"));" is 186.,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Magic Number,The method contains a magic number: 6,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Magic Number,The method contains a magic number: 0.00001d,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Magic Number,The method contains a magic number: 3,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Magic Number,The method contains a magic number: 6,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Magic Number,The method contains a magic number: 0.00001d,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_VX1X_outEXknowsX_hasXweight_1X_asXhereX_inV_hasXname_joshX_selectXhereX,Magic Number,The method contains a magic number: 3,124
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_localXinEXknowsX_limitX2XX_outV_name,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`String> traversal=(DefaultGraphTraversal<Vertex`String>)this.sqlgGraph.traversal().V().local(__.inE("knows").limit(2)).outV().<String>values("name");" is 178.,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_localXinEXknowsX_limitX2XX_outV_name,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_localXinEXknowsX_limitX2XX_outV_name,Magic Number,The method contains a magic number: 4,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_localXinEXknowsX_limitX2XX_outV_name,Magic Number,The method contains a magic number: 4,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,g_V_localXinEXknowsX_limitX2XX_outV_name,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Long Parameter List,The method has 13 parameters. ,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal1=(DefaultGraphTraversal)g.V().hasLabel("A").as("a").out("ab").as("b").select("a"`"b");" is 145.,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 9,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 9,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 9,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 9,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 4,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 9,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testCompileGraphStep_assert,Magic Number,The method contains a magic number: 9,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testVWithHas_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)g.V().has(T.label`"A").has("name"`"a");" is 124.,280
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testVWithHas_assert,Magic Number,The method contains a magic number: 2,280
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testE_assert,Magic Number,The method contains a magic number: 2,304
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testE_assert,Magic Number,The method contains a magic number: 2,304
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testEWithLabels_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Map<String`Object>> traversal=(DefaultGraphTraversal)gts.E().hasLabel("ab").as("ab").inV().as("b").out("bc").as("c").select("ab"`"b"`"c");" is 165.,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testEWithLabels_assert,Magic Number,The method contains a magic number: 5,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testEWithLabels_assert,Magic Number,The method contains a magic number: 3,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testEWithLabels_assert,Magic Number,The method contains a magic number: 4,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testEWithLabels_assert,Magic Number,The method contains a magic number: 2,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileGraphStep,testEWithLabels_assert,Magic Number,The method contains a magic number: 3,337
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_integer,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new Integer[]{2}).getPredicate()).toList();" is 145.,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_integer,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new Integer[]{9}).getPredicate()).toList();" is 132.,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_integer,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new Integer[]{8}).getPredicate()).toList();" is 132.,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_integer,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new Integer[]{10}).getPredicate()).toList();" is 133.,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_integer,Magic Number,The method contains a magic number: 3,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_integer,Magic Number,The method contains a magic number: 2,44
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_string,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new String[]{"2"}).getPredicate()).toList();" is 146.,74
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_string,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new String[]{"9"}).getPredicate()).toList();" is 133.,74
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_string,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new String[]{"8"}).getPredicate()).toList();" is 133.,74
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_string,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayContains<>(new String[]{"10"}).getPredicate()).toList();" is 134.,74
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_string,Magic Number,The method contains a magic number: 3,74
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayContains,testHasClause_string,Magic Number,The method contains a magic number: 2,74
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new Integer[]{2`10`0}).getPredicate()).toList();" is 150.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new Integer[]{9`90`900}).getPredicate()).toList();" is 139.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new Integer[]{2`8`100`0}).getPredicate()).toList();" is 140.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new Integer[]{1`7`9}).getPredicate()).toList();" is 136.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new Integer[]{10`7}).getPredicate()).toList();" is 135.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_integer,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new String[]{"2"`"10"`"0"}).getPredicate()).toList();" is 155.,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new String[]{"9"`"90"`"900"}).getPredicate()).toList();" is 144.,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new String[]{"2"`"8"`"100"`"0"}).getPredicate()).toList();" is 147.,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new String[]{"1"`"7"`"9"}).getPredicate()).toList();" is 141.,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Long Statement,The length of the statement "vertices=this.sqlgGraph.traversal().V().hasLabel("Foo").has("values"`new ArrayOverlaps<>(new String[]{"10"`"7"}).getPredicate()).toList();" is 138.,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Magic Number,The method contains a magic number: 3,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Magic Number,The method contains a magic number: 2,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Magic Number,The method contains a magic number: 3,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileArrayOverlaps,testHasClause_string,Magic Number,The method contains a magic number: 3,77
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithout,Magic Number,The method contains a magic number: 100,31
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithout_assert,Long Statement,The length of the statement "List<Vertex> persons=sqlgGraph.traversal().V().hasLabel("God").out().has("idNumber"`P.without(uuids.subList(0`2).toArray())).toList();" is 134.,60
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithout_assert,Magic Number,The method contains a magic number: 2,60
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithout_assert,Magic Number,The method contains a magic number: 98,60
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 2,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 3,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 4,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 5,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 6,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 7,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 8,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 9,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers,Magic Number,The method contains a magic number: 10,67
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers_assert,Long Statement,The length of the statement "List<Vertex> persons=sqlgGraph.traversal().V().hasLabel("God").out().has("name"`"pete").has("idNumber"`P.without(1`2`3)).toList();" is 130.,107
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers_assert,Magic Number,The method contains a magic number: 2,107
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers_assert,Magic Number,The method contains a magic number: 3,107
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinMultipleHasContainers_assert,Magic Number,The method contains a magic number: 7,107
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinVertexCompileStep,Magic Number,The method contains a magic number: 100,117
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinVertexCompileStep_assert,Long Statement,The length of the statement "List<Vertex> persons=sqlgGraph.traversal().V(god.id()).out().has("idNumber"`P.without(uuids.subList(0`2).toArray())).toList();" is 126.,147
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinVertexCompileStep_assert,Magic Number,The method contains a magic number: 2,147
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestBulkWithout,testBulkWithinVertexCompileStep_assert,Magic Number,The method contains a magic number: 98,147
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimple,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().order().by("order"`Order.desc);" is 167.,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimple,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimple,Magic Number,The method contains a magic number: 3,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimple,Magic Number,The method contains a magic number: 4,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimple,Magic Number,The method contains a magic number: 3,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimple,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").as("a").out().as("b").order().by(__.select("a").by("order")`Order.desc).by(__.select("b").by("order")`Order.desc);" is 244.,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 10,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 4,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 6,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 4,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSimpleButLessSo,Magic Number,The method contains a magic number: 5,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal=(DefaultGraphTraversal<Vertex`Edge>)this.sqlgGraph.traversal().V().hasLabel("A").outE().order().by("order"`Order.desc);" is 164.,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal<Vertex`Edge>)this.sqlgGraph.traversal().V().hasLabel("A").outE().order().by("order"`Order.asc);" is 128.,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 2,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 4,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 3,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 2,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 4,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 3,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 2,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 4,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 3,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdge,Magic Number,The method contains a magic number: 2,98
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Edge> traversal=(DefaultGraphTraversal<Vertex`Edge>)this.sqlgGraph.traversal().V().hasLabel("A").outE().order().by("order"`Order.desc);" is 164.,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 2,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 3,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 4,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 5,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 4,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 6,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 2,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 3,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 4,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabels,Magic Number,The method contains a magic number: 5,148
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1.id()).outE("ab").order().by("order"`Order.desc).inV();" is 171.,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1.id()).outE("ab").order().by("order"`Order.asc).inV();" is 133.,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 11,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 2,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 4,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 3,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 2,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 4,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 3,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInV,Magic Number,The method contains a magic number: 2,181
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> traversal=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V(a1.id()).outE("ab").order().by("order"`Order.desc).inV().values("name");" is 186.,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Long Statement,The length of the statement "traversal=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V(a1.id()).outE("ab").order().by("order"`Order.asc).inV().values("name");" is 148.,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 11,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 2,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 5,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 2,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 3,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 2,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 5,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 2,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 3,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeWithInVValues,Magic Number,The method contains a magic number: 2,220
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").outE().order().by("order"`Order.desc).inV();" is 174.,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 2,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 3,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 4,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 5,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 5,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 6,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 2,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 3,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 4,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderOnEdgeMultipleLabelsInV,Magic Number,The method contains a magic number: 5,259
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSelectBeforeOrder,Long Statement,The length of the statement "List<String> names=this.sqlgGraph.traversal().V().outE().as("e").inV().as("v").select("e").order().by("weight"`Order.asc).select("v").<String>values("name").dedup().toList();" is 174.,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSelectBeforeOrder,Magic Number,The method contains a magic number: 3,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSelectBeforeOrder,Magic Number,The method contains a magic number: 2,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSelectBeforeOrder,Magic Number,The method contains a magic number: 3,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testSelectBeforeOrder,Magic Number,The method contains a magic number: 2,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaTraversal,Long Statement,The length of the statement "List<String> names=this.sqlgGraph.traversal().V().hasLabel("A").order().<Vertex>by(v -> v.value("age")`Order.desc).<String>values("name").toList();" is 147.,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaTraversal,Magic Number,The method contains a magic number: 5,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaTraversal,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaTraversal,Magic Number,The method contains a magic number: 15,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaTraversal,Magic Number,The method contains a magic number: 4,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaTraversal,Magic Number,The method contains a magic number: 3,320
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Long Statement,The length of the statement "List<String> names=this.sqlgGraph.traversal().V().order().<String>by("name"`Comparator.comparing(a -> a.substring(1`2))).<String>by("name"`(a`b) -> b.substring(2`3).compareTo(a.substring(2`3))).<String>values("name").toList();" is 226.,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 2,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 2,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 3,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 2,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 3,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 4,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 2,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithLambdaComparator,Magic Number,The method contains a magic number: 3,339
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithByTraversalCount,Magic Number,The method contains a magic number: 4,357
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithByTraversalCount,Magic Number,The method contains a magic number: 3,357
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithByTraversalCount,Magic Number,The method contains a magic number: 4,357
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithShuffleComparator,Long Statement,The length of the statement "List<Map<String`Object>> result=this.sqlgGraph.traversal().V().as("a").out("ab").as("b").order().by(Order.shuffle).select("a"`"b").toList();" is 140.,375
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWithShuffleComparator,Magic Number,The method contains a magic number: 3,375
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWith2ShuffleComparator,Long Statement,The length of the statement "List<Map<String`Object>> result=this.sqlgGraph.traversal().V().as("a").order().by("name"`Order.desc).out("ab").as("b").order().by(Order.shuffle).select("a"`"b").toList();" is 170.,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByWith2ShuffleComparator,Magic Number,The method contains a magic number: 6,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_V_asXaX_outXcreatedX_asXbX_order_byXshuffleX_selectXa_bX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Vertex>> traversal=this.sqlgGraph.traversal().V().as("a").out("created").as("b").order().by(Order.shuffle).select("a"`"b");" is 157.,421
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_V_asXaX_outXcreatedX_asXbX_order_byXshuffleX_selectXa_bX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> defaultGraphTraversal=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)traversal;" is 131.,421
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_V_asXaX_outXcreatedX_asXbX_order_byXshuffleX_selectXa_bX,Long Statement,The length of the statement "Assert.assertTrue((bindings.get("b")).id().equals(convertToVertexId("lop")) || bindings.get("b").id().equals(convertToVertexId("ripple")));" is 139.,421
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_V_asXaX_outXcreatedX_asXbX_order_byXshuffleX_selectXa_bX,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_V_asXaX_outXcreatedX_asXbX_order_byXshuffleX_selectXa_bX,Magic Number,The method contains a magic number: 4,421
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_V_asXaX_outXcreatedX_asXbX_order_byXshuffleX_selectXa_bX,Magic Number,The method contains a magic number: 2,421
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_V_asXaX_outXcreatedX_asXbX_order_byXshuffleX_selectXa_bX,Magic Number,The method contains a magic number: 4,421
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderByInSchemas,Magic Number,The method contains a magic number: 2,461
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Long Parameter List,The method has 7 parameters. ,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)sqlgGraph.traversal().V().hasLabel("A").order().by("name"`Order.asc).by("surname"`Order.desc);" is 179.,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Magic Number,The method contains a magic number: 3,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Magic Number,The method contains a magic number: 6,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Magic Number,The method contains a magic number: 2,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Magic Number,The method contains a magic number: 3,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Magic Number,The method contains a magic number: 4,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy_assert,Magic Number,The method contains a magic number: 5,490
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)sqlgGraph.traversal().V().hasLabel("Group").as("g").out("groupNetwork").as("network").out("networkNetworkSoftwareVersion").as("nsv").out("networkSoftwareVersionNetworkNodeGroup").as("nng").out("networkNodeGroupNetworkNode").as("nn").<Vertex>select("g"`"network"`"nsv"`"nng"`"nn").order().by(__.select("g").by("name")`Order.asc).by(__.select("network").by("name")`Order.asc).by(__.select("nsv").by("name")`Order.asc).by(__.select("nng").by("name")`Order.asc).by(__.select("nn").by("name")`Order.desc);" is 609.,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 8,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 3,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 8,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 2,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 3,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 4,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 5,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 6,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy2_assert,Magic Number,The method contains a magic number: 7,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy3_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Vertex>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Vertex>>)sqlgGraph.traversal().V().hasLabel("A").as("a").out("ab").as("b").<Vertex>select("a"`"b").order().by(__.select("a").by("name")`Order.asc).by(__.select("b").by("name")`Order.desc);" is 288.,609
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy3_assert,Magic Number,The method contains a magic number: 5,609
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy3_assert,Magic Number,The method contains a magic number: 3,609
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy3_assert,Magic Number,The method contains a magic number: 4,609
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy3_assert,Magic Number,The method contains a magic number: 2,609
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOrderBy3_assert,Magic Number,The method contains a magic number: 3,609
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testMultipleOrder,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").as("a").out().order().by("name").in().order().by("name").out().order().by("name"`Order.desc).toList();" is 169.,636
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testMultipleOrder,Magic Number,The method contains a magic number: 2,636
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testMultipleOrder,Magic Number,The method contains a magic number: 4,636
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testMultipleOrder,Magic Number,The method contains a magic number: 2,636
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testMultipleOrder,Magic Number,The method contains a magic number: 3,636
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOutEOrderID,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Object>> gt=this.sqlgGraph.traversal().V().hasLabel("A").as("a").outE("ab").order().by(T.id).as("e").inV().as("b").select("a"`"e"`"b");" is 168.,658
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,testOutEOrderID,Magic Number,The method contains a magic number: 2,658
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGraphStepOrderBy,g_withSideEffectXk_nameX_V_order_byXvalueMap_selectXkX_unfoldX_name,Long Statement,The length of the statement "Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().order().by(__.valueMap().select("name").unfold()).values("name");" is 131.,676
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testTimesAfterRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").emit().repeat(__.out()).times(3);" is 163.,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testTimesAfterRepeat,Magic Number,The method contains a magic number: 3,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testTimesAfterRepeat,Magic Number,The method contains a magic number: 3,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testTimesAfterRepeat,Magic Number,The method contains a magic number: 4,20
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("D").repeat(__.in()).emit().times(3).path();" is 165.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(d1) && p.get(1).equals(c1) && p.get(2).equals(b1)));" is 132.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(d1) && p.get(1).equals(c1) && p.get(2).equals(b1)).findAny().get());" is 141.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(d1) && p.get(1).equals(c1) && p.get(2).equals(b1) && p.get(3).equals(a1)));" is 155.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(d1) && p.get(1).equals(c1) && p.get(2).equals(b1) && p.get(3).equals(a1)).findAny().get());" is 164.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("D").repeat(__.in()).emit().times(2).path();" is 166.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(d1) && p.get(1).equals(c1) && p.get(2).equals(b1)));" is 132.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(d1) && p.get(1).equals(c1) && p.get(2).equals(b1)).findAny().get());" is 141.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal2=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("D").times(1).repeat(__.in()).emit().path();" is 166.,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 4,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 4,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 4,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 4,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 3,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 4,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitAfterTimesAfterAndBeforeIn,Magic Number,The method contains a magic number: 2,38
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").emit().times(3).repeat(__.in()).path();" is 165.,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().get());" is 164.,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(c2)));" is 132.,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(c2)).findAny().get());" is 141.,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 4,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 7,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 4,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 4,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInSinglePathQuery,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").emit().times(3).repeat(__.in()).path();" is 165.,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 132.,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().get());" is 141.,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2) && p.get(3).equals(b4)));" is 155.,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2) && p.get(3).equals(b4)).findAny().get());" is 164.,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(a3)));" is 132.,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(a3)).findAny().get());" is 141.,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 4,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 10,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 4,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 4,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 3,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepGraphIn,testEmitTimesRepeatInDuplicatePathQuery,Magic Number,The method contains a magic number: 2,127
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1.id()).repeat(__.out()).until(__.hasLabel("C"));" is 164.,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1.id()).until(__.hasLabel("C")).repeat(__.out());" is 165.,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).repeat(__.out()).until(__.hasLabel("C"));" is 160.,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).until(__.hasLabel("C")).repeat(__.out());" is 160.,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testUntilRepeat,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Long>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Long>>)this.sqlgGraph.traversal().V(a1).repeat(__.groupCount("m").by("name").out()).times(2).<Map<String`Long>>cap("m");" is 218.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Long>> traversal1=(DefaultGraphTraversal<Vertex`Map<String`Long>>)this.sqlgGraph.traversal().V(a1.id()).repeat(__.groupCount("m").by("name").out()).times(2).<Map<String`Long>>cap("m");" is 224.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 3,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 3,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 4,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 2,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 3,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 3,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithUnoptimizableInternalSteps,Magic Number,The method contains a magic number: 4,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatNoLimit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).repeat(__.out("ab").out("bc"));" is 149.,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatNoLimit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1.id()).repeat(__.out("ab").out("bc"));" is 155.,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatNoLimit,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatNoLimit,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatNoLimit,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatNoLimit,Magic Number,The method contains a magic number: 2,129
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).repeat(__.out("ab").out("bc")).times(1);" is 158.,161
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeat,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).repeat(__.out("ab"`"bc")).times(2);" is 154.,161
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeat,Magic Number,The method contains a magic number: 2,161
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeat,Magic Number,The method contains a magic number: 3,161
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeat,Magic Number,The method contains a magic number: 2,161
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeat,Magic Number,The method contains a magic number: 2,161
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeat,Magic Number,The method contains a magic number: 3,161
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1.id()).emit().repeat(__.out("ab"`"bc")).times(2).path();" is 168.,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1.id()).emit().repeat(__.out("ab"`"bc")).times(2).path();" is 168.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 3,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 4,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 3,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 3,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testSmallerRepeatWithEmitFirst2,Magic Number,The method contains a magic number: 2,226
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).emit().repeat(__.out("ab"`"bc"`"cd")).times(3).path();" is 168.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 14,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 4,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,253
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).emit().repeat(__.out("ab"`"bc"`"cd")).times(4).path();" is 168.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 14,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).repeat(__.out("ab"`"bc"`"cd")).emit().times(3).path();" is 168.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().get());" is 141.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().get());" is 141.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().get());" is 164.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().get());" is 164.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().get());" is 164.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().get());" is 164.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 155.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().get());" is 164.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 155.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().get());" is 164.,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 13,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 4,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 2,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLast,Magic Number,The method contains a magic number: 3,373
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).repeat(__.out("ab"`"bc"`"cd")).emit().times(3);" is 165.,441
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 3,441
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 2,441
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 13,441
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastWithTimesFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).times(3).repeat(__.out("ab"`"bc"`"cd")).emit();" is 165.,488
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 3,488
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 2,488
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 19,488
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(marko`josh`lop).repeat(__.out()).times(2).emit().path();" is 166.,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(marko) && p.get(1).equals(lop)).findAny().get());" is 122.,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(josh) && p.get(1).equals(lop)).findAny().get());" is 121.,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(marko) && p.get(1).equals(josh)).findAny().get());" is 123.,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(marko) && p.get(1).equals(josh) && p.get(2).equals(lop)));" is 138.,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(marko) && p.get(1).equals(josh) && p.get(2).equals(lop)).findAny().get());" is 147.,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testGremlinLeftJoin,Magic Number,The method contains a magic number: 4,540
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1`a2`a3).repeat(__.out("knows")).times(2).emit();" is 164.,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2`a3).repeat(__.out("knows")).emit().times(2).path();" is 168.,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)));" is 132.,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)).findAny().get());" is 141.,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,574
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1`a2`a3).emit().repeat(__.out("knows")).times(2);" is 164.,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2`a3).emit().repeat(__.out("knows")).times(2).path();" is 168.,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)));" is 132.,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)).findAny().get());" is 141.,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 6,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 6,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,610
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnLeftJoinOnLeaveNode,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1`a2).emit().repeat(__.out("ab")).times(1);" is 158.,655
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnLeftJoinOnLeaveNode,Magic Number,The method contains a magic number: 2,655
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnLeftJoinOnLeaveNode,Magic Number,The method contains a magic number: 4,655
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePaths,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1`a2).emit().repeat(__.out("ab"`"ba")).times(2);" is 163.,671
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePaths,Magic Number,The method contains a magic number: 2,671
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePaths,Magic Number,The method contains a magic number: 2,671
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePaths,Magic Number,The method contains a magic number: 4,671
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2).emit().repeat(__.out("ab"`"ba")).times(3).path();" is 166.,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 132.,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().get());" is 141.,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 4,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,687
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2`b1).emit().repeat(__.out("ab"`"ba")).times(2).path();" is 169.,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 132.,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().get());" is 141.,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 3,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 6,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 3,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 3,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2`b1).repeat(__.out("ab"`"ba")).emit().times(2).path();" is 169.,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 132.,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().get());" is 141.,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 3,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 3,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 3,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 3,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,742
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithTimesBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`b1).emit().times(2).repeat(__.out()).path();" is 157.,766
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,766
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 3,766
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,766
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 3,766
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,766
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,766
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2).repeat(__.out()).emit().times(2).path();" is 157.,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)));" is 132.,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)).findAny().get());" is 141.,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).repeat(__.out()).emit().times(2).path();" is 154.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).repeat(__.out()).emit().times(3).path();" is 155.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().get());" is 164.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal2=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).times(2).repeat(__.out()).emit().path();" is 155.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,811
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2).times(3).repeat(__.out()).path();" is 150.,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2).repeat(__.out()).times(3).path();" is 151.,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 155.,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,863
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(b1).emit().times(2).repeat(__.out()).path();" is 154.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`b1`c1).emit().times(2).repeat(__.out()).path();" is 161.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal2=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`b1`c1).emit().times(3).repeat(__.out()).path();" is 161.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal3=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`b1`c1).emit().repeat(__.out()).times(3).path();" is 161.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal4=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`b1`c1).emit().repeat(__.out()).times(2).path();" is 161.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,892
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2`b1).emit().times(2).repeat(__.out()).path();" is 160.,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)));" is 132.,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)).findAny().get());" is 141.,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 6,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRepeatStepVertexOut,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,995
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testConsecutiveLimits,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testConsecutiveLimits,Magic Number,The method contains a magic number: 3,58
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testConsecutiveLimits,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testConsecutiveLimits,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRange,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().range(5`6);" is 147.,73
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRange,Magic Number,The method contains a magic number: 10,73
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRange,Magic Number,The method contains a magic number: 5,73
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRange,Magic Number,The method contains a magic number: 6,73
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRange,Magic Number,The method contains a magic number: 4,73
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testStepsAfterRangeNotOptimized,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").order().by("name").limit(2).out("ab");" is 168.,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testStepsAfterRangeNotOptimized,Magic Number,The method contains a magic number: 2,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testStepsAfterRangeNotOptimized,Magic Number,The method contains a magic number: 5,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testStepsAfterRangeNotOptimized,Magic Number,The method contains a magic number: 2,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testStepsAfterRangeNotOptimized,Magic Number,The method contains a magic number: 2,94
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitAfterNonOptimizedStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("BigData.Column").where(__.in("tag").hasLabel("BigData.Tag").has("name"`"Anonymized")).limit(3);" is 221.,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitAfterNonOptimizedStep,Magic Number,The method contains a magic number: 100,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitAfterNonOptimizedStep,Magic Number,The method contains a magic number: 100,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitAfterNonOptimizedStep,Magic Number,The method contains a magic number: 3,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitAfterNonOptimizedStep,Magic Number,The method contains a magic number: 4,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitAfterNonOptimizedStep,Magic Number,The method contains a magic number: 3,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitAfterNonOptimizedStep,Magic Number,The method contains a magic number: 3,128
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testSkipAfterNonOptimizedStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("BigData.Column").where(__.in("tag").hasLabel("BigData.Tag").has("name"`"Anonymized")).skip(2);" is 220.,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testSkipAfterNonOptimizedStep,Magic Number,The method contains a magic number: 100,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testSkipAfterNonOptimizedStep,Magic Number,The method contains a magic number: 100,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testSkipAfterNonOptimizedStep,Magic Number,The method contains a magic number: 2,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testSkipAfterNonOptimizedStep,Magic Number,The method contains a magic number: 4,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testSkipAfterNonOptimizedStep,Magic Number,The method contains a magic number: 3,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testSkipAfterNonOptimizedStep,Magic Number,The method contains a magic number: 98,157
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testVWithLimit,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().range(1`2);" is 127.,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testVWithLimit,Magic Number,The method contains a magic number: 100,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testVWithLimit,Magic Number,The method contains a magic number: 2,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testVWithLimit,Magic Number,The method contains a magic number: 2,186
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A").order().by("name").range(1`4).values("name");" is 167.,205
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabels,Magic Number,The method contains a magic number: 100,205
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabels,Magic Number,The method contains a magic number: 4,205
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabels,Magic Number,The method contains a magic number: 5,205
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabels,Magic Number,The method contains a magic number: 2,205
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabels,Magic Number,The method contains a magic number: 3,205
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabels,Magic Number,The method contains a magic number: 3,205
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsCriteria,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A").has("prop0"`"value").order().by("name").range(1`4).values("name");" is 188.,244
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsCriteria,Magic Number,The method contains a magic number: 100,244
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsCriteria,Magic Number,The method contains a magic number: 4,244
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsCriteria,Magic Number,The method contains a magic number: 5,244
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsCriteria,Magic Number,The method contains a magic number: 2,244
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsCriteria,Magic Number,The method contains a magic number: 3,244
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsCriteria,Magic Number,The method contains a magic number: 3,244
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsNoOrder,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A").range(1`4).values("name");" is 148.,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsNoOrder,Magic Number,The method contains a magic number: 20,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsNoOrder,Magic Number,The method contains a magic number: 4,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsNoOrder,Magic Number,The method contains a magic number: 4,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsNoOrder,Magic Number,The method contains a magic number: 2,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsNoOrder,Magic Number,The method contains a magic number: 3,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnVertexLabelsNoOrder,Magic Number,The method contains a magic number: 3,284
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitOnVertexLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A").order().by("name").limit(3).values("name");" is 165.,314
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitOnVertexLabels,Magic Number,The method contains a magic number: 20,314
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitOnVertexLabels,Magic Number,The method contains a magic number: 3,314
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitOnVertexLabels,Magic Number,The method contains a magic number: 5,314
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitOnVertexLabels,Magic Number,The method contains a magic number: 2,314
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitOnVertexLabels,Magic Number,The method contains a magic number: 3,314
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testLimitOnVertexLabels,Magic Number,The method contains a magic number: 3,314
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgeLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Edge`Object> g=(DefaultGraphTraversal<Edge`Object>)this.sqlgGraph.traversal().E().hasLabel("E").order().by("name").range(1`4).values("name");" is 163.,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgeLabels,Magic Number,The method contains a magic number: 20,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgeLabels,Magic Number,The method contains a magic number: 4,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgeLabels,Magic Number,The method contains a magic number: 5,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgeLabels,Magic Number,The method contains a magic number: 2,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgeLabels,Magic Number,The method contains a magic number: 3,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgeLabels,Magic Number,The method contains a magic number: 3,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A"`"B").order().by("name").range(1`4).values("name");" is 171.,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Magic Number,The method contains a magic number: 12,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Magic Number,The method contains a magic number: 20,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Magic Number,The method contains a magic number: 4,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Magic Number,The method contains a magic number: 5,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Magic Number,The method contains a magic number: 2,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Magic Number,The method contains a magic number: 3,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrdered,Magic Number,The method contains a magic number: 3,394
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A"`"B").order().by("name").skip(2).values("name");" is 168.,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Magic Number,The method contains a magic number: 12,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Magic Number,The method contains a magic number: 20,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Magic Number,The method contains a magic number: 2,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Magic Number,The method contains a magic number: 5,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Magic Number,The method contains a magic number: 2,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Magic Number,The method contains a magic number: 38,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOrderedWithSkip,Magic Number,The method contains a magic number: 38,438
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOffset,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A"`"B").range(1`4).values("name");" is 152.,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOffset,Magic Number,The method contains a magic number: 20,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOffset,Magic Number,The method contains a magic number: 4,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOffset,Magic Number,The method contains a magic number: 4,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOffset,Magic Number,The method contains a magic number: 2,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOffset,Magic Number,The method contains a magic number: 3,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabelsOffset,Magic Number,The method contains a magic number: 3,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V().hasLabel("A"`"B").limit(4).values("name");" is 150.,514
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabels,Magic Number,The method contains a magic number: 20,514
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabels,Magic Number,The method contains a magic number: 4,514
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabels,Magic Number,The method contains a magic number: 4,514
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabels,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabels,Magic Number,The method contains a magic number: 4,514
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnMultipleLabels,Magic Number,The method contains a magic number: 4,514
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgesOutput,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Object> g=(DefaultGraphTraversal<Vertex`Object>)this.sqlgGraph.traversal().V(a).out("E").order().by("name").range(1`4).values("name");" is 163.,550
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgesOutput,Magic Number,The method contains a magic number: 20,550
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgesOutput,Magic Number,The method contains a magic number: 4,550
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgesOutput,Magic Number,The method contains a magic number: 5,550
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgesOutput,Magic Number,The method contains a magic number: 2,550
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgesOutput,Magic Number,The method contains a magic number: 3,550
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOnEdgesOutput,Magic Number,The method contains a magic number: 3,550
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").out().out().order().by("age").range(10`20);" is 173.,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Magic Number,The method contains a magic number: 100,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Magic Number,The method contains a magic number: 10,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Magic Number,The method contains a magic number: 20,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Magic Number,The method contains a magic number: 6,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Magic Number,The method contains a magic number: 10,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Magic Number,The method contains a magic number: 10,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeOut,Magic Number,The method contains a magic number: 20,594
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> g=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").repeat(__.out()).times(2).order().by("age").range(10`20);" is 179.,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 100,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 2,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 10,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 20,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 5,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 10,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 10,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeRepeatOut,Magic Number,The method contains a magic number: 20,624
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> g=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("B").both().order().by("age").range(10`20);" is 160.,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Magic Number,The method contains a magic number: 100,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Magic Number,The method contains a magic number: 10,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Magic Number,The method contains a magic number: 20,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Magic Number,The method contains a magic number: 5,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Magic Number,The method contains a magic number: 10,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Magic Number,The method contains a magic number: 5,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeBoth,Magic Number,The method contains a magic number: 10,657
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeWithNoOrder,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("B").both().limit(10);" is 147.,690
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeWithNoOrder,Magic Number,The method contains a magic number: 100,690
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeWithNoOrder,Magic Number,The method contains a magic number: 10,690
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeWithNoOrder,Magic Number,The method contains a magic number: 4,690
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,testRangeWithNoOrder,Magic Number,The method contains a magic number: 10,690
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestRangeLimit,g_V_hasLabelXpersonX_order_byXageX_skipX1X_valuesXnameX,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().hasLabel("person").order().by("age").skip(1).values("name");" is 132.,714
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Long Statement,The length of the statement "List<Vertex> vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").has("name"`FullText.fullTextMatch("english"`"fat & rat")).toList();" is 136.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").has("name"`FullText.fullTextMatch("english"`"fat & cow")).toList();" is 123.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").has("name"`FullText.fullTextMatch("english"`"fatal <-> error")).toList();" is 129.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").has("name"`FullText.fullTextMatch("english"`"fatal & error")).toList();" is 127.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").has("name"`FullText.fullTextMatch("english"`true`"fatal error")).toList();" is 130.,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamples,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Long Statement,The length of the statement "List<Vertex> vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").where(FullText.fullTextMatch("english"`false`"name"`"fat & rat")).toList();" is 144.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").where(FullText.fullTextMatch("english"`false`"name"`"fat & cow")).toList();" is 131.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").where(FullText.fullTextMatch("english"`false`"name"`"fatal <-> error")).toList();" is 137.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").where(FullText.fullTextMatch("english"`false`"name"`"fatal & error")).toList();" is 135.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").as("a").where("a"`FullText.fullTextMatch("english"`true`"name"`"fatal error")).toList();" is 144.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").as("a").where("a"`FullText.fullTextMatch("english"`false`"name"`"!cat")).toList();" is 138.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Long Statement,The length of the statement "vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").has("name"`"error is not fatal").out("testEdge").where(FullText.fullTextMatch("english"`false`"name"`"fat & rat")).toList();" is 180.,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Magic Number,The method contains a magic number: 2,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Magic Number,The method contains a magic number: 2,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testDocExamplesWhere,Magic Number,The method contains a magic number: 2,86
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testConcat,Long Statement,The length of the statement "vl.ensureIndexExists(IndexType.getFullTextGIN("english")`Arrays.asList(vl.getProperty("name1").get()`vl.getProperty("name2").get()));" is 133.,138
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testConcat,Long Statement,The length of the statement "List<Vertex> vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").where(FullText.fullTextMatch("english"`false`Arrays.asList("name1"`"name2")`"fat & rat")).toList();" is 168.,138
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testPerfOneColumn,Long Statement,The length of the statement "List<Vertex> vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").has("name"`FullText.fullTextMatch("english"`"fat & rat")).toList();" is 136.,155
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testPerfOneColumn,Magic Number,The method contains a magic number: 10000,155
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testPerfTwoColumns,Long Statement,The length of the statement "vl.ensureIndexExists(IndexType.getFullTextGIN("english")`Arrays.asList(vl.getProperty("name1").get()`vl.getProperty("name2").get()));" is 133.,180
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testPerfTwoColumns,Long Statement,The length of the statement "List<Vertex> vts=this.sqlgGraph.traversal().V().hasLabel("Sentence").where(FullText.fullTextMatch("english"`false`Arrays.asList("name1"`"name2")`"fat & rat")).toList();" is 168.,180
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileFullTextPredicate,testPerfTwoColumns,Magic Number,The method contains a magic number: 10000,180
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testInlineOrder,Magic Number,The method contains a magic number: 2,30
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOrder,Magic Number,The method contains a magic number: 2,41
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOrder,Magic Number,The method contains a magic number: 2,41
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOrder,Magic Number,The method contains a magic number: 2,41
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOrder,Magic Number,The method contains a magic number: 2,41
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out().order().by("name").optional(__.out().order().by("name"`Order.desc))).path();" is 220.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().get());" is 141.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().get());" is 141.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().get());" is 141.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc1)));" is 133.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc1)).findAny().get());" is 142.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2)));" is 133.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2)).findAny().get());" is 142.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc3)));" is 133.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc3)).findAny().get());" is 142.,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 4,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 12,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 5,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 4,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out().order().by("name").optional(__.out().order().by("name"`Order.desc).range(2`3))).path();" is 231.,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 3,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 4,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 7,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 3,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 4,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 3,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,196
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out().order().by("name").range(1`2).optional(__.out().order().by("name"`Order.desc).range(2`3))).path();" is 242.,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 3,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 4,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 3,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 3,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,266
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").as("a").optional(__.outE().as("e").otherV().as("v")).order().by("order");" is 203.,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 13,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 12,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 11,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 3,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 4,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 3,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 5,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 2,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 3,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 4,335
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1.id()).optional(__.outE("ab").as("ab").otherV().as("vb").order().by(__.select("ab").by("order")`Order.asc).optional(__.outE("bc").as("bc").otherV().as("vc").order().by(__.select("bc").by("order")`Order.asc).optional(__.outE("cd").as("cd").inV().as("vd").order().by(__.select("cd").by("order")`Order.asc)))).path();" is 426.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc3) && p.get(4).equals(c3)));" is 180.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc3) && p.get(4).equals(c3)).findAny().get());" is 189.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc2) && p.get(4).equals(c2)));" is 180.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc2) && p.get(4).equals(c2)).findAny().get());" is 189.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd1) && p.get(6).equals(d1)));" is 227.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd1) && p.get(6).equals(d1)).findAny().get());" is 236.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd2) && p.get(6).equals(d2)));" is 227.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd2) && p.get(6).equals(d2)).findAny().get());" is 236.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd3) && p.get(6).equals(d3)));" is 227.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd3) && p.get(6).equals(d3)).findAny().get());" is 236.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab2) && p.get(2).equals(b2)));" is 133.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab2) && p.get(2).equals(b2)).findAny().get());" is 142.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab3) && p.get(2).equals(b3)));" is 133.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab3) && p.get(2).equals(b3)).findAny().get());" is 142.,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,372
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1`a2).optional(__.outE("ab").as("ab").otherV().as("vb").order().by(__.select("ab").by("order")`Order.asc).optional(__.outE("bc").as("bc").otherV().as("vc").order().by(__.select("bc").by("order")`Order.asc).optional(__.outE("cd").as("cd").inV().as("vd").order().by(__.select("cd").by("order")`Order.asc)))).path();" is 424.,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Magic Number,The method contains a magic number: 3,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Magic Number,The method contains a magic number: 2,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Magic Number,The method contains a magic number: 3,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Magic Number,The method contains a magic number: 2,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Magic Number,The method contains a magic number: 3,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Magic Number,The method contains a magic number: 2,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testOptionalWithOrderBy3,Magic Number,The method contains a magic number: 3,543
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out("ab").optional(__.out())).out().order().by("order"`Order.desc);" is 209.,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 3,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 3,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 5,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 6,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 3,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 4,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 5,586
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testAnotherOptionalWithSelect,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasId(activityInstance.id()).out("a_b").optional(__.in("b_c")).path().toList();" is 127.,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testAnotherOptionalWithSelect,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testAnotherOptionalWithSelect,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testAnotherOptionalWithSelect,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithSelect,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("Car").as("cars").optional(__.out("passenger").as("passenger")).path().toList();" is 137.,52
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithSelect,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(car1) && p.get(1).equals(person)`p -> p.size() == 1 && p.get(0).equals(car2));" is 166.,52
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithSelect,Long Statement,The length of the statement "List<Map<String`Vertex>> result=sqlgGraph.traversal().V().hasLabel("Car").as("cars").optional(__.out("passenger").as("passenger")).<Vertex>select("cars"`"passenger").toList();" is 175.,52
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithSelect,Magic Number,The method contains a magic number: 2,52
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithSelect,Magic Number,The method contains a magic number: 2,52
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithSelect,Magic Number,The method contains a magic number: 2,52
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMissingEdgeLabel,Long Statement,The length of the statement "List<Path> paths=g.V().hasLabel("A").as("a").optional(__.out("a2b")).select("a").optional(__.out("a2c").out("c2d")).path().toList();" is 132.,91
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMissingEdgeLabel,Magic Number,The method contains a magic number: 3,91
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMissingEdgeLabel,Magic Number,The method contains a magic number: 2,91
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithNestedOptionalAndRepeat,Long Statement,The length of the statement "GraphTraversal<Vertex`Path> gt=this.sqlgGraph.traversal().V().hasLabel("A").out("ab").as("b").optional(__.outE("bc").otherV().as("c").optional(__.repeat(__.out("cd")).times(3))).path();" is 185.,112
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithNestedOptionalAndRepeat,Magic Number,The method contains a magic number: 3,112
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out().hasLabel("B")).path();" is 154.,135
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 181.,135
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer,Magic Number,The method contains a magic number: 3,135
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer,Magic Number,The method contains a magic number: 2,135
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer,Magic Number,The method contains a magic number: 2,135
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer,Magic Number,The method contains a magic number: 2,135
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer,Magic Number,The method contains a magic number: 2,135
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out().optional(__.out().hasLabel("C"))).path();" is 173.,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 292.,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 3,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 2,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 3,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 3,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 2,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 3,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 2,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalWithHasContainer2,Magic Number,The method contains a magic number: 2,163
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptional,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out()).path();" is 140.,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptional,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 181.,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptional,Magic Number,The method contains a magic number: 3,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptional,Magic Number,The method contains a magic number: 2,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptional,Magic Number,The method contains a magic number: 2,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptional,Magic Number,The method contains a magic number: 2,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptional,Magic Number,The method contains a magic number: 2,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out().optional(__.out())).path();" is 159.,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 204.,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out().optional(__.out())).path();" is 172.,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Long Statement,The length of the statement "pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)`p -> p.size() == 1 && p.get(0).equals(a2));" is 224.,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 4,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 3,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,228
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out("ab"`"abb")).path();" is 150.,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb2));" is 313.,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 3,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 4,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,286
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out("ab"`"abb").optional(__.out("bc"`"bbcc"))).path();" is 180.,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(bb1) && p.get(2).equals(cc1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb2));" is 360.,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 3,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 4,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 3,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 3,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,325
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out("ab"`"bb")).path();" is 149.,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Collections.singletonList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 128.,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out("bb")).path();" is 145.,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Magic Number,The method contains a magic number: 3,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Magic Number,The method contains a magic number: 2,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Magic Number,The method contains a magic number: 2,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Magic Number,The method contains a magic number: 3,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOnNonExistingEdgeLabel,Magic Number,The method contains a magic number: 2,370
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out("ab").optional(__.out("bc"))).path();" is 167.,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 204.,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal1=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out("ab").optional(__.out("bc"))).out().path();" is 174.,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Long Statement,The length of the statement "pathsToAssert=Arrays.asList(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(cc1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2));" is 230.,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 4,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 4,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,418
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOutNotThere,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out("knows")).path();" is 147.,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOutNotThere,Magic Number,The method contains a magic number: 3,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalOutNotThere,Magic Number,The method contains a magic number: 2,481
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)g.traversal().V().optional(__.out().optional(__.out())).path();" is 144.,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Long Statement,The length of the statement "pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"lop"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"vadas"))`p -> p.size() == 3 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"josh")) && p.get(2).equals(convertToVertex(g`"lop"))`p -> p.size() == 3 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"josh")) && p.get(2).equals(convertToVertex(g`"ripple"))`p -> p.size() == 1 && p.get(0).equals(convertToVertex(g`"vadas"))`p -> p.size() == 1 && p.get(0).equals(convertToVertex(g`"lop"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"josh")) && p.get(1).equals(convertToVertex(g`"lop"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"josh")) && p.get(1).equals(convertToVertex(g`"ripple"))`p -> p.size() == 1 && p.get(0).equals(convertToVertex(g`"ripple"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"peter")) && p.get(1).equals(convertToVertex(g`"lop")));" is 1101.,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 3,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 10,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 3,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 3,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,499
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf1,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().optional(__.out().optional(__.out())).path();" is 157.,567
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf1,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 1 && p.get(0).equals(a2)`p -> p.size() == 1 && p.get(0).equals(b1));" is 265.,567
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 3,567
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 2,567
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 4,567
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 2,567
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 2,567
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out().optional(__.out())).path();" is 159.,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 292.,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 3,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 2,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 3,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 3,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 2,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 3,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 2,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 2,603
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out().optional(__.out())).path();" is 159.,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 885.,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 10,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,637
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).optional(__.out().optional(__.out())).path();" is 159.,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(d1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3));" is 292.,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 3,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 2,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 3,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 3,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 2,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 3,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 2,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 2,679
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1.id()).optional(__.toE(Direction.BOTH`"aa").otherV()).path();" is 173.,720
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalToSelf,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Collections.singletonList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(e1) && p.get(2).equals(a2));" is 151.,720
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalToSelf,Magic Number,The method contains a magic number: 3,720
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalToSelf,Magic Number,The method contains a magic number: 2,720
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalToSelf,Magic Number,The method contains a magic number: 3,720
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinOptional,testOptionalToSelf,Magic Number,The method contains a magic number: 2,720
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Long Statement,The length of the statement "assertOneStepOneVertex(this.sqlgGraph.traversal().V().hasLabel("Person").has("score"`propertyRef(Compare.eq`"experience"))`v2);" is 127.,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Long Statement,The length of the statement "assertOneStepOneVertex(this.sqlgGraph.traversal().V().hasLabel("Person").has("score"`propertyRef(Compare.lt`"experience"))`v1);" is 127.,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Long Statement,The length of the statement "assertOneStepOneVertex(this.sqlgGraph.traversal().V().hasLabel("Person").has("score"`propertyRef(Compare.gt`"experience"))`v3);" is 127.,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Magic Number,The method contains a magic number: 3,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testInt,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,assertOneStepOneVertex,Magic Number,The method contains a magic number: 2,53
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testMultiplePath,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Object>> traversal=sqlgGraph.traversal().V().hasLabel("Company").as("c").out("groups").as("g").out("contains").has("score"`propertyRef(Compare.eq`"experience")).as("p").select("c"`"p");" is 218.,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testMultiplePath,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testMultiplePath,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testMultiplePath,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testMultiplePath,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestPropertyReference,testMultiplePath,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testSimpleOutOut_assert,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,tetOutOut_assert,Long Parameter List,The method has 5 parameters. ,72
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,tetOutOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a).out().out();" is 126.,72
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,tetOutOut_assert,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,tetOutOut_assert,Magic Number,The method contains a magic number: 4,72
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,tetOutOut_assert,Magic Number,The method contains a magic number: 2,72
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels_assert,Long Parameter List,The method has 5 parameters. ,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a).out("outB"`"outE").out("outC"`"outD");" is 152.,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels_assert,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels_assert,Magic Number,The method contains a magic number: 4,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels_assert,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels2_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a).out("outB").out("outC");" is 138.,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels2_assert,Magic Number,The method contains a magic number: 3,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels2_assert,Magic Number,The method contains a magic number: 2,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutWithLabels2_assert,Magic Number,The method contains a magic number: 2,159
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInIn_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`d1).in().in().count();" is 129.,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInIn_assert,Magic Number,The method contains a magic number: 4,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInIn_assert,Magic Number,The method contains a magic number: 3,198
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut,Magic Number,The method contains a magic number: 6,206
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`a1).out().in().out().count();" is 136.,247
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut_assert,Magic Number,The method contains a magic number: 5,247
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut_assert,Magic Number,The method contains a magic number: 19,247
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut_assert,Magic Number,The method contains a magic number: 3,247
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut3,Magic Number,The method contains a magic number: 1000,254
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutinOut3_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)sqlgGraph.traversal().V(a1.id()).out().in().out().count();" is 139.,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutinOut3_assert,Magic Number,The method contains a magic number: 5,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutinOut3_assert,Magic Number,The method contains a magic number: 19,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutinOut3_assert,Magic Number,The method contains a magic number: 3,293
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`a1).out().out().count();" is 131.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a1).out().out();" is 128.,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutToSelf_assert,Magic Number,The method contains a magic number: 4,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutToSelf_assert,Magic Number,The method contains a magic number: 3,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutToSelf_assert,Magic Number,The method contains a magic number: 3,323
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutoutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(sqlgGraph`a1).out().out().out().count();" is 137.,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutoutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a1).out().out().out();" is 134.,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutoutToSelf_assert,Magic Number,The method contains a magic number: 5,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutoutToSelf_assert,Magic Number,The method contains a magic number: 3,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutoutToSelf_assert,Magic Number,The method contains a magic number: 4,353
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph`a1).out().in().out().count();" is 141.,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Long> traversal1=(DefaultGraphTraversal<Vertex`Long>)vertexTraversal(this.sqlgGraph1`a1).out().in().out().count();" is 143.,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Magic Number,The method contains a magic number: 5,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Magic Number,The method contains a magic number: 9,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Magic Number,The method contains a magic number: 3,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Magic Number,The method contains a magic number: 5,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Magic Number,The method contains a magic number: 9,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testInOutInOut2,Magic Number,The method contains a magic number: 3,378
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a1).out();" is 121.,425
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a2).out();" is 122.,425
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal2=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a1).in();" is 121.,425
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal3=(DefaultGraphTraversal<Vertex`Vertex>)vertexTraversal(sqlgGraph`a2).in();" is 121.,425
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Magic Number,The method contains a magic number: 2,425
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Magic Number,The method contains a magic number: 2,425
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Magic Number,The method contains a magic number: 2,425
pietermartin_sqlg,org.umlg.sqlg.test.gremlincompile,TestGremlinCompileV,testOutOutToSelf_assert,Magic Number,The method contains a magic number: 2,425
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexLabelSize,testLargeColumnNameSize,Long Statement,The length of the statement "Vertex v=this.sqlgGraph.addVertex(T.label`"a.aaaaaaaaabbbbbbbbbbccccccccccddddddddd"`"aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeeffffffffffggggggggggaaaa"`"a");" is 167.,27
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestAddTemporaryVertex,testAddTemporaryVertex,Long Statement,The length of the statement "sql="select * from " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().getPublicSchema()) + "."+ this.sqlgGraph.getSqlDialect().maybeWrapInQoutes("V_A");" is 185.,19
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestAddTemporaryVertex,testAddTemporaryVertex,Long Statement,The length of the statement "sql="select * from " + this.sqlgGraph.getSqlDialect().maybeWrapInQoutes(this.sqlgGraph.getSqlDialect().temporaryTablePrefix() + "V_A");" is 135.,19
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestAddTemporaryVertex,testAddTemporaryVertex,Magic Number,The method contains a magic number: 10,19
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestAddTemporaryVertex,testAddTemporaryVertex,Magic Number,The method contains a magic number: 2,19
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestAddTemporaryVertex,testAddTemporaryVertex,Magic Number,The method contains a magic number: 10,19
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestTinkerpopBug,hasNextCountBug,Magic Number,The method contains a magic number: 3,16
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestNewVertex,testNewVertexDoesNotQueryLabels,Magic Number,The method contains a magic number: 2,17
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestNewVertex,testNewVertex,Magic Number,The method contains a magic number: 2,31
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestOtherVertex,testOtherV,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(e1) && p.get(2).equals(b1));" is 139.,28
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestOtherVertex,testOtherV,Magic Number,The method contains a magic number: 3,28
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestOtherVertex,testOtherV,Magic Number,The method contains a magic number: 2,28
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testVertexEdges,Magic Number,The method contains a magic number: 2,41
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testVertexEdges,Magic Number,The method contains a magic number: 3,41
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testVertexEdges,Magic Number,The method contains a magic number: 2,41
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testVertexEdgesTraversal,Magic Number,The method contains a magic number: 2,71
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testVertexEdgesTraversal,Magic Number,The method contains a magic number: 3,71
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testVertexEdgesTraversal,Magic Number,The method contains a magic number: 2,71
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 2010,92
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 2010,92
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 4,92
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 4,92
pietermartin_sqlg,org.umlg.sqlg.test.vertex,TestVertexEdges,testBothEOnEdgeToSelf,Magic Number,The method contains a magic number: 8,92
pietermartin_sqlg,org.umlg.sqlg.test.fold,TestFoldStep,g_V_age_foldX0_plusX,Long Statement,The length of the statement "final Traversal<Vertex`Integer> traversal=this.sqlgGraph.traversal().V().<Integer>values("age").fold(0`(BinaryOperator)Operator.sum);" is 133.,20
pietermartin_sqlg,org.umlg.sqlg.test.fold,TestFoldStep,g_V_age_foldX0_plusX,Magic Number,The method contains a magic number: 123,20
pietermartin_sqlg,org.umlg.sqlg.test.fold,TestFoldStep,shouldTriggerAddVertexAndPropertyUpdateWithCoalescePattern,Long Statement,The length of the statement "Traversal<Vertex`Vertex> traversal=this.sqlgGraph.traversal().V().has("some"`"thing").fold().coalesce(unfold()`addV()).property("some"`"thing");" is 144.,30
pietermartin_sqlg,org.umlg.sqlg.test.preparedStatement,TestClosingPreparedStatement,testAddCommit,Magic Number,The method contains a magic number: 100_000,34
pietermartin_sqlg,org.umlg.sqlg.test.preparedStatement,TestClosingPreparedStatement,testAddCommit,Magic Number,The method contains a magic number: 10_000,34
pietermartin_sqlg,org.umlg.sqlg.test.preparedStatement,TestClosingPreparedStatement,testAddCommit,Magic Number,The method contains a magic number: 1000,34
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{"graphson-v1"`false`false`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).reader().create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).writer().create()}`{"graphson-v1-embedded"`true`true`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()}`{"graphson-v2"`false`false`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.NO_TYPES).create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.NO_TYPES).create()).create()}`{"graphson-v2-embedded"`true`true`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()}`{"graphson-v3"`true`true`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V3_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V3_0)).mapper().create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V3_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V3_0)).mapper().create()).create()}`{"gryo-v1"`true`true`(Function<Graph`GraphReader>)g -> g.io(GryoIo.build(GryoVersion.V1_0)).reader().create()`(Function<Graph`GraphWriter>)g -> g.io(GryoIo.build(GryoVersion.V1_0)).writer().create()}`{"gryo-v3"`true`true`(Function<Graph`GraphReader>)g -> g.io(GryoIo.build(GryoVersion.V3_0)).reader().create()`(Function<Graph`GraphWriter>)g -> g.io(GryoIo.build(GryoVersion.V3_0)).writer().create()}});" is 2316.,41
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdge,Magic Number,The method contains a magic number: 0.5d,83
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("person"`new HashMap<String`PropertyType>(){" is 144.,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Long Statement,The length of the statement "final Vertex v1=this.sqlgGraph.addVertex(T.label`"person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 131.,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Long Statement,The length of the statement "final Vertex v2=this.sqlgGraph.addVertex(T.label`"person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 131.,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Long Statement,The length of the statement "final Edge e=v1.addEdge("friend"`v2`"weight"`0.5d`"acl"`"rw"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 134.,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 0.5d,92
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteDetachedEdge,Magic Number,The method contains a magic number: 0.5d,121
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,shouldReadWriteDetachedEdgeAsReference,Magic Number,The method contains a magic number: 0.5d,130
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,assertEdge,Long Statement,The length of the statement "Assert.assertEquals(e.id()`assertIdDirectly ? detachedEdge.id() : this.sqlgGraph.edges(detachedEdge.id().toString()).next().id());" is 130.,139
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,assertEdge,Long Statement,The length of the statement "Assert.assertEquals(v1.id()`assertIdDirectly ? detachedEdge.outVertex().id() : this.sqlgGraph.vertices(detachedEdge.outVertex().id().toString()).next().id());" is 158.,139
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,assertEdge,Long Statement,The length of the statement "Assert.assertEquals(v2.id()`assertIdDirectly ? detachedEdge.inVertex().id() : this.sqlgGraph.vertices(detachedEdge.inVertex().id().toString()).next().id());" is 156.,139
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,assertEdge,Magic Number,The method contains a magic number: 0.5d,139
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoEdge,assertEdge,Magic Number,The method contains a magic number: 0.5f,139
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_write_withXwrite_gryoX,Long Statement,The length of the statement "final String fileToWrite=TestHelper.generateTempFile(WriteTest.class`"tinkerpop-modern-v3d0"`".kryo").getAbsolutePath().replace('\\'`'/');" is 138.,51
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_write_withXwrite_gryoX,Long Statement,The length of the statement "final Traversal<Object`Object> traversal=this.sqlgGraph.traversal().io(fileToWrite).with(IO.writer`IO.gryo).with(IO.registry`SqlgIoRegistryV3.instance()).write();" is 162.,51
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_write_withXwriter_graphsonX,Long Statement,The length of the statement "final String fileToWrite=TestHelper.generateTempFile(WriteTest.class`"tinkerpop-modern-v3d0"`".json").getAbsolutePath().replace('\\'`'/');" is 138.,66
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_write_withXwriter_graphsonX,Long Statement,The length of the statement "final Traversal<Object`Object> traversal=this.sqlgGraph.traversal().io(fileToWrite).with(IO.writer`IO.graphson).with(IO.registry`SqlgIoRegistryV3.instance()).write();" is 166.,66
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_writeXjsonX,Long Statement,The length of the statement "final String fileToWrite=TestHelper.generateTempFile(WriteTest.class`"tinkerpop-modern-v3d0"`".json").getAbsolutePath().replace('\\'`'/');" is 138.,84
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_writeXjsonX,Long Statement,The length of the statement "final Traversal<Object`Object> traversal=this.sqlgGraph.traversal().io(fileToWrite).with(IO.writer`IO.graphson).with(IO.registry`SqlgIoRegistryV3.instance()).write();" is 166.,84
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_writeXkryoX,Long Statement,The length of the statement "final String fileToWrite=TestHelper.generateTempFile(WriteTest.class`"tinkerpop-modern-v3d0"`".kryo").getAbsolutePath().replace('\\'`'/');" is 138.,103
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,g_io_writeXkryoX,Long Statement,The length of the statement "final Traversal<Object`Object> traversal=this.sqlgGraph.traversal().io(fileToWrite).with(IO.writer`IO.gryo).with(IO.registry`SqlgIoRegistryV3.instance()).write();" is 162.,103
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdges,Long Statement,The length of the statement "final Predicate<Edge> matcher=assertViaDirectEquality ? e -> detachedEdge.id().equals(e.id()) : e -> graph.edges(detachedEdge.id().toString()).next().id().equals(e.id());" is 170.,122
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.5d,122
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.5d,122
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.000001d,122
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.000001d,122
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("person"`new HashMap<String`PropertyType>(){" is 144.,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Long Statement,The length of the statement "final Vertex v1=graph.addVertex("name"`"marko"`T.label`"person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 137.,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Long Statement,The length of the statement "final Vertex v2=graph.addVertex(T.label`"person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 122.,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Long Statement,The length of the statement "final Edge e1=v2.addEdge("friends"`v1`"weight"`0.5d`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Long Statement,The length of the statement "final Edge e2=v1.addEdge("friends"`v2`"weight"`1.0d`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Long Statement,The length of the statement "final Predicate<Edge> matcher=assertViaDirectEquality ? e -> detachedEdge.id().equals(e.id()) : e -> graph.edges(detachedEdge.id().toString()).next().id().equals(e.id());" is 170.,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 0.5d,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 0.5d,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 0.000001d,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIo,shouldReadWriteVertexWithBOTHEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 0.000001d,203
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{"graphson-v1"`false`false`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).reader().create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).writer().create()}`{"graphson-v1-embedded"`true`false`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V1_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V1_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V1_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()}`{"graphson-v2"`false`false`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.NO_TYPES).create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.NO_TYPES).create()).create()}`{"graphson-v2-embedded"`true`false`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V2_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V2_0)).mapper().typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()}`{"graphson-v3"`true`false`(Function<Graph`GraphReader>)g -> g.io(GraphSONIo.build(GraphSONVersion.V3_0)).reader().mapper(g.io(GraphSONIo.build(GraphSONVersion.V3_0)).mapper().create()).create()`(Function<Graph`GraphWriter>)g -> g.io(GraphSONIo.build(GraphSONVersion.V3_0)).writer().mapper(g.io(GraphSONIo.build(GraphSONVersion.V3_0)).mapper().create()).create()}`{"gryo-v1"`true`true`(Function<Graph`GraphReader>)g -> g.io(GryoIo.build(GryoVersion.V1_0)).reader().create()`(Function<Graph`GraphWriter>)g -> g.io(GryoIo.build(GryoVersion.V1_0)).writer().create()}`{"gryo-v3"`true`true`(Function<Graph`GraphReader>)g -> g.io(GryoIo.build(GryoVersion.V3_0)).reader().create()`(Function<Graph`GraphWriter>)g -> g.io(GryoIo.build(GryoVersion.V3_0)).writer().create()}});" is 2319.,41
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldReadWriteVertexWithBOTHEdges,Long Statement,The length of the statement "final Predicate<Edge> matcher=assertViaDirectEquality ? e -> detachedEdge.id().equals(e.id()) : e -> graph.edges(detachedEdge.id().toString()).next().id().equals(e.id());" is 170.,84
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.5d,84
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.5d,84
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.000001d,84
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldReadWriteVertexWithBOTHEdges,Magic Number,The method contains a magic number: 0.000001d,84
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldSerializeTree,Long Statement,The length of the statement "final org.apache.tinkerpop.shaded.jackson.databind.ObjectMapper mapper=this.sqlgGraph.io(GraphSONIo.build(GraphSONVersion.V1_0)).mapper().version(GraphSONVersion.V1_0).create().createMapper();" is 192.,161
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldSerializeTree,Long Statement,The length of the statement "Traversal<Vertex`Tree> traversal=this.sqlgGraph.traversal().V(convertToVertexId("marko")).out().properties("name").tree();" is 122.,161
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldSerializeTree,Long Statement,The length of the statement "final HashMap<String`List<HashMap<String`Object>>> branchKeyProps=(HashMap<String`List<HashMap<String`Object>>>)branchKey.get(GraphSONTokens.PROPERTIES);" is 153.,161
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldSerializeTree,Long Statement,The length of the statement "final HashMap<String`HashMap<String`Object>> branch2=(HashMap<String`HashMap<String`Object>>)branchValue.get(convertToVertexId("vadas").toString());" is 148.,161
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldSerializeTree,Magic Number,The method contains a magic number: 2,161
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldSerializeTree,Magic Number,The method contains a magic number: 29,161
pietermartin_sqlg,org.umlg.sqlg.test.io,TestIoAgain,shouldSerializeTree,Magic Number,The method contains a magic number: 3,161
pietermartin_sqlg,org.umlg.sqlg.test.sample,TestSample,g_V_group_byXlabelX_byXbothE_weight_fold_sampleXlocal_5XX,Long Statement,The length of the statement "Traversal<Vertex`Map<Object`Object>> traversal=this.sqlgGraph.traversal().V(new Object[0]).group().by(T.label).by(__.bothE(new String[0]).values(new String[]{"weight"}).fold().sample(Scope.local`5));" is 199.,22
pietermartin_sqlg,org.umlg.sqlg.test.sample,TestSample,g_V_group_byXlabelX_byXbothE_weight_fold_sampleXlocal_5XX,Magic Number,The method contains a magic number: 5,22
pietermartin_sqlg,org.umlg.sqlg.test.sample,TestSample,g_V_group_byXlabelX_byXbothE_weight_fold_sampleXlocal_5XX,Magic Number,The method contains a magic number: 2L,22
pietermartin_sqlg,org.umlg.sqlg.test.sample,TestSample,g_V_group_byXlabelX_byXbothE_weight_fold_sampleXlocal_5XX,Magic Number,The method contains a magic number: 4L,22
pietermartin_sqlg,org.umlg.sqlg.test.sample,TestSample,g_V_group_byXlabelX_byXbothE_weight_fold_sampleXlocal_5XX,Magic Number,The method contains a magic number: 5L,22
pietermartin_sqlg,org.umlg.sqlg.test.sample,TestSample,g_V_localXoutE_sampleX1X_byXweightXX,Magic Number,The method contains a magic number: 3,36
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestGithub,test272,Long Statement,The length of the statement "GraphTraversal<Vertex`String> gt=this.sqlgGraph.traversal().V().group().by("category").unfold().where(__.select(Column.values).count(Scope.local).is(P.gt(1))).select(Column.values).unfold().values("name");" is 205.,24
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestGithub,test272,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestGithub,issue62,Long Statement,The length of the statement "Iterator<Vertex> results=gt.V().has("p"`"a").out("e").has("p"`"b").outE("e").or(__.has("p"`"x")`__.has("p"`"y")).inV().has("p"`"c");" is 132.,76
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestGithub,testWhereQuery,Long Statement,The length of the statement "Vertex dPrims=sqlgGraph.addVertex(T.label`"structuredData"`"__type"`"structuredData"`"__structuredDataKey"`"primitives");" is 121.,95
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestGithub,testWhereQuery,Long Statement,The length of the statement "Iterator<Vertex> results=gt.V(res).out("contains").has("__type"`"dataEntity").where(__.out("hasData").out("contains").has("__type"`"structuredData").has("__structuredDataKey"`"primitives").out("contains").has("__type"`"structuredData"));" is 237.,95
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestComplex,testProject,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Object>> gt=sqlgGraph.traversal().V().hasLabel("A").has("name"`"root").outE("likes").project("stars"`"user"`"item").by("howMuch").by("who").by(__.inV().id()).select("user"`"stars"`"item");" is 221.,25
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestComplex,testProject,Magic Number,The method contains a magic number: 5,25
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestComplex,testProject,Magic Number,The method contains a magic number: 5,25
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestComplex,getPlaylistPaths,Long Statement,The length of the statement "return this.sqlgGraph.traversal().V().has("name"`"Bob_Dylan").in("sungBy").as("a").repeat(__.out().order().by(Order.shuffle).simplePath().from("a")).until(__.out("writtenBy").has("name"`"Johnny_Cash")).limit(1).as("b").repeat(__.out().order().by(Order.shuffle).as("c").simplePath().from("b").to("c")).until(__.out("sungBy").has("name"`"Grateful_Dead")).limit(1).path().from("a").unfold().<List<String>>project("song"`"artists").by("name").by(__.coalesce(__.out("sungBy"`"writtenBy").dedup().values("name")`__.constant("Unknown")).fold());" is 538.,70
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestComplex,coworkerSummary,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Map<String`Map<String`Object>>>> traversal=this.sqlgGraph.traversal().V().hasLabel("person").filter(__.outE("created")).aggregate("p").as("p1").values("name").as("p1n").select("p").unfold().where(P.neq("p1")).as("p2").values("name").as("p2n").select("p2").out("created").choose(__.in("created").where(P.eq("p1"))`__.values("name")`__.constant(Collections.emptyList())).<String`Map<String`Map<String`Object>>>group().by(__.select("p1n")).by(__.group().by(__.select("p2n")).by(__.unfold().fold().project("numCoCreated"`"coCreated").by(__.count(Scope.local)).by()));" is 597.,83
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestComplex,checkCoworkerSummary,Magic Number,The method contains a magic number: 3,100
pietermartin_sqlg,org.umlg.sqlg.test.complex,TestComplex,checkCoworkerSummary,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUID,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Person").has("uuid"`uuidPerson1).outE().has("uuid"`uuidEdge).otherV().toList();" is 142.,30
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDViaTopologyApi,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<>(){" is 125.,68
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDViaTopologyApi,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("Person").has("uuid"`uuidPerson1).outE().has("uuid"`uuidEdge).otherV().toList();" is 142.,68
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDAsIdentifier,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<>(){" is 125.,124
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDAsIdentifier,Magic Number,The method contains a magic number: 100,124
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDAsIdentifier,Magic Number,The method contains a magic number: 100,124
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDAsIdentifier,Magic Number,The method contains a magic number: 100,124
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDViaNormalBatchMode,Magic Number,The method contains a magic number: 100,154
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDViaNormalBatchMode,Magic Number,The method contains a magic number: 100,154
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDViaStreamingBatchMode,Magic Number,The method contains a magic number: 100,165
pietermartin_sqlg,org.umlg.sqlg.test.uuid,TestUUID,testUUIDViaStreamingBatchMode,Magic Number,The method contains a magic number: 100,165
pietermartin_sqlg,org.umlg.sqlg.test.datasource,TestDataSource,testQueryEmptyGraph,Magic Number,The method contains a magic number: 100,49
pietermartin_sqlg,org.umlg.sqlg.test.datasource,TestDataSource,testQueryEmptyGraph,Magic Number,The method contains a magic number: 30_000,49
pietermartin_sqlg,org.umlg.sqlg.test.datasource,TestDataSource,testQueryEmptyGraph,Magic Number,The method contains a magic number: 12,49
pietermartin_sqlg,org.umlg.sqlg.test.datasource,TestDataSource,countConnections,Long Statement,The length of the statement "Connection connection=DriverManager.getConnection(this.configuration.getString("jdbc.url")`this.configuration.getString("jdbc.username")`this.configuration.getString("jdbc.password"));" is 184.,74
pietermartin_sqlg,org.umlg.sqlg.test.datasource,TestDataSource,countConnections,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("select count(*) from pg_stat_activity where " + "datname = 'sqlgraphdb' and " + "application_name not like 'pgAdmin 4%' and "+ "application_name not like 'Citus Maintenance%' and "+ "application_name not like 'PostgreSQL JDBC Driver' and "+ "usename is not null");" is 301.,74
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestAggregate,testAggregate,Magic Number,The method contains a magic number: 1000,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestAggregate,testAggregate_assert,Magic Number,The method contains a magic number: 6,33
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestAggregate,testAggregate_assert,Magic Number,The method contains a magic number: 3,33
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestAggregate,testAggregate_assert,Magic Number,The method contains a magic number: 4,33
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestAggregate,testAggregate_assert,Magic Number,The method contains a magic number: 3L,33
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestAggregate,testAggregate_assert,Magic Number,The method contains a magic number: 2L,33
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestAggregate,testAggregate_assert,Magic Number,The method contains a magic number: 3L,33
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testRepeatAndMin,Magic Number,The method contains a magic number: 5,50
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testRepeatAndMin,Magic Number,The method contains a magic number: 27,50
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXbothXfollowedByXX_timesX2X_group_byXsongTypeX_byXcountX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Long>> traversal=this.sqlgGraph.traversal().V().repeat(__.both("followedBy")).times(2).<String`Long>group().by("songType").by(__.count());" is 172.,60
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXbothXfollowedByXX_timesX2X_group_byXsongTypeX_byXcountX,Magic Number,The method contains a magic number: 2,60
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXbothXfollowedByXX_timesX2X_group_byXsongTypeX_byXcountX,Magic Number,The method contains a magic number: 771317L,60
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXbothXfollowedByXX_timesX2X_group_byXsongTypeX_byXcountX,Magic Number,The method contains a magic number: 160968L,60
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXbothXfollowedByXX_timesX2X_group_byXsongTypeX_byXcountX,Magic Number,The method contains a magic number: 368579L,60
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBySomething,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Long`Long>> traversal=(DefaultTraversal<Vertex`Map<Long`Long>>)this.sqlgGraph.traversal().V().<Long>groupCount().by(__.bothE().count());" is 164.,75
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 2,75
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,75
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,75
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,75
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,75
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 6L,75
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBy,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)sqlgGraph.traversal().V().groupCount();" is 134.,92
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBy,Magic Number,The method contains a magic number: 2,92
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,92
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,92
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,92
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,92
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountNoBy,Magic Number,The method contains a magic number: 6,92
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCount,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().hasLabel("A").groupCount().by("name");" is 164.,110
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCount,Magic Number,The method contains a magic number: 2,110
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCount,Magic Number,The method contains a magic number: 3,110
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCount,Magic Number,The method contains a magic number: 2,110
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().groupCount().by(T.label);" is 151.,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 2,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 3L,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupCountByLabel,Magic Number,The method contains a magic number: 2L,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().<Object`Long>group().by(T.label).by(__.count());" is 174.,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 2,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 3L,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCountLabel,Magic Number,The method contains a magic number: 2L,153
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCount,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().hasLabel("A").<Object`Long>group().by("name").by(__.count());" is 187.,183
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCount,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"`\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_A\".\"name\""`sql);" is 206.,183
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCount,Magic Number,The method contains a magic number: 2,183
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCount,Magic Number,The method contains a magic number: 3,183
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByCount,Magic Number,The method contains a magic number: 2L,183
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").max();" is 131.,210
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,210
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax,Magic Number,The method contains a magic number: 2,210
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax,Magic Number,The method contains a magic number: 3,210
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax,Magic Number,The method contains a magic number: 3,210
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax,Magic Number,The method contains a magic number: 2,210
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax,Magic Number,The method contains a magic number: 3,210
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Integer>group().by("name").by(__.values("age").max());" is 180.,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 250.,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 2,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 3,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 4,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 2,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 3,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 4,234
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxOnString,Long Statement,The length of the statement "DefaultTraversal<Vertex`String> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").max();" is 130.,267
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxOnString,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,267
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxOnString,Magic Number,The method contains a magic number: 3,267
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxOnString,Magic Number,The method contains a magic number: 2,267
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMin,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").min();" is 131.,291
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMIN(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,291
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMin,Magic Number,The method contains a magic number: 2,291
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMin,Magic Number,The method contains a magic number: 3,291
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMin,Magic Number,The method contains a magic number: 3,291
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMin,Magic Number,The method contains a magic number: 2,291
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMinOnString,Long Statement,The length of the statement "DefaultTraversal<Vertex`String> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").min();" is 130.,316
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMinOnString,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMIN(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,316
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMinOnString,Magic Number,The method contains a magic number: 3,316
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMinOnString,Magic Number,The method contains a magic number: 2,316
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSum,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").sum();" is 128.,340
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSum,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tSUM(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,340
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSum,Magic Number,The method contains a magic number: 2,340
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSum,Magic Number,The method contains a magic number: 3,340
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSum,Magic Number,The method contains a magic number: 3,340
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSum,Magic Number,The method contains a magic number: 2,340
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSum,Magic Number,The method contains a magic number: 6,340
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMean,Long Statement,The length of the statement "DefaultTraversal<Vertex`Double> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").mean();" is 131.,363
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMean,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tAVG(\"public\".\"V_Person\".\"age\") AS \"alias1\"` COUNT(1) AS \"alias1_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 172.,363
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMean,Magic Number,The method contains a magic number: 2,363
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMean,Magic Number,The method contains a magic number: 3,363
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMean,Magic Number,The method contains a magic number: 3,363
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMean,Magic Number,The method contains a magic number: 2,363
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMean,Magic Number,The method contains a magic number: 1.5,363
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_age_mean,Magic Number,The method contains a magic number: 30.75,387
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_age_mean,Magic Number,The method contains a magic number: 0.05,387
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_meanX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Number>> traversal=this.sqlgGraph.traversal().V().hasLabel("software").<String`Number>group().by("name").by(__.bothE().values("weight").mean());" is 178.,412
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_meanX,Magic Number,The method contains a magic number: 2,412
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_meanX,Magic Number,The method contains a magic number: 3,412
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMin,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Integer>group().by("name").by(__.values("age").min());" is 180.,426
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tMIN(\"public\".\"V_Person\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 250.,426
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 3,426
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 4,426
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 2,426
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Long>group().by("name").by(__.values("age").sum());" is 174.,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tSUM(\"public\".\"V_Person\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 250.,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 2,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 3,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 4,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 2,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 4,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 6,459
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Double>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Double>group().by("name").by(__.values("age").mean());" is 179.,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tAVG(\"public\".\"V_Person\".\"age\") AS \"alias2\"` COUNT(1) AS \"alias2_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 281.,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 2,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 3,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 4,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 2,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 2.0,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 3.0,492
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<List<String>`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").<List<String>`Integer>group().by(__.values("name"`"surname").fold()).by(__.values("age").max());" is 225.,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"surname\" AS \"alias1\"`\n"+ "\t\"public\".\"V_Person\".\"name\" AS \"alias2\"`\n"+ "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\"`\n"+ "\t\"public\".\"V_Person\".\"surname\""`sql);" is 352.,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 3,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 5,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 3,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 3,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 5,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 5,525
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Map<String`List<String>>`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").<Map<String`List<String>>`Integer>group().by(__.valueMap("name"`"surname")).by(__.values("age").max());" is 244.,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"surname\" AS \"alias1\"`\n"+ "\t\"public\".\"V_Person\".\"name\" AS \"alias2\"`\n"+ "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\"`\n"+ "\t\"public\".\"V_Person\".\"surname\""`sql);" is 352.,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 5,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 4,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 5,588
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").out("livesAt").<String`Integer>group().by("name").by(__.values("year").max());" is 201.,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Address\".\"year\") AS \"alias1\"`\n"+ "\t\"public\".\"V_Address\".\"name\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\" INNER JOIN\n"+ "\t\"public\".\"E_livesAt\" ON \"public\".\"V_Person\".\"ID\" = \"public\".\"E_livesAt\".\"public.Person__O\" INNER JOIN\n"+ "\t\"public\".\"V_Address\" ON \"public\".\"E_livesAt\".\"public.Address__I\" = \"public\".\"V_Address\".\"ID\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Address\".\"name\""`sql);" is 506.,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 2,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 4,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 6,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 8,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 7,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 6,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 2,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 3,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 4,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 6,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 8,658
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().<String`Integer>group().by(T.label).by(__.values("age").max());" is 167.,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Dog\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Dog\""`sql);" is 135.,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 10,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 20,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 100,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 40,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 10,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 200,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 30,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 40,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 2,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 2,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 100,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByLabelMax,Magic Number,The method contains a magic number: 200,710
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").values("age").max();" is 124.,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a2.\"alias2\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias1\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a2 ON a1.\"public.E_aa.public.A__I\" = a2.\"alias1\""`sql);" is 580.,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Magic Number,The method contains a magic number: 5,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Magic Number,The method contains a magic number: 7,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Magic Number,The method contains a magic number: 5,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Magic Number,The method contains a magic number: 3,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Magic Number,The method contains a magic number: 2,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery,Magic Number,The method contains a magic number: 7,746
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").out("aa").values("age").max();" is 134.,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A__I\" = a3.\"alias2\""`sql);" is 928.,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 5,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 7,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 5,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 3,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 7,788
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").values("age").sum();" is 126.,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 2,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 3,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 2,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 3,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 3,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 2,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 12,839
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").count());" is 166.,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 2,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 3,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 3,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 2,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 4,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 2,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 7L,869
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.count());" is 152.,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"`\n"+ "\t\"public\".\"V_B\".\"name\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 466.,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 2,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 3,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 3,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 2,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 3,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 2,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 7,902
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").sum());" is 164.,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tSUM(\"public\".\"V_B\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 490.,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 2,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 3,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 3,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 2,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 3,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 2,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 15,947
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").max());" is 167.,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tMAX(\"public\".\"V_B\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 490.,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 2,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 3,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 3,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 2,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 4,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 2,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 4,992
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").min());" is 167.,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tMIN(\"public\".\"V_B\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 490.,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 2,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 3,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 3,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 2,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 4,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 2,1037
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Long Statement,The length of the statement "DefaultTraversal<Vertex`Double> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").out("aa").values("age").mean();" is 134.,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tAVG(a3.\"alias3\")` COUNT(1) AS \"alias3_weight\" \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A__I\" = a3.\"alias2\""`sql);" is 959.,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Magic Number,The method contains a magic number: 2,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Magic Number,The method contains a magic number: 3,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Magic Number,The method contains a magic number: 4,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Magic Number,The method contains a magic number: 3,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Magic Number,The method contains a magic number: 2,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathQueryMean,Magic Number,The method contains a magic number: 2,1082
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Double>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").mean());" is 167.,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tAVG(\"public\".\"V_B\".\"age\") AS \"alias2\"` COUNT(1) AS \"alias2_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 521.,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 3,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 3,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 4,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2.142857142857143D,1133
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out().<String`Integer>group().by("name").by(__.values("age").max());" is 174.,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\ta2.\"alias2\"` MAX(a2.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias1\"`\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a2 ON a1.\"public.E_aa.public.A__I\" = a2.\"alias1\"\n"+ "GROUP BY\n"+ "\ta2.\"alias2\""`sql);" is 680.,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 2,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 3,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 4,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 5,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 6,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 2,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 2,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 3,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 6,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 131.,1230
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMax,Magic Number,The method contains a magic number: 2,1230
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMax,Magic Number,The method contains a magic number: 3,1230
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMax,Magic Number,The method contains a magic number: 2,1230
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMax,Magic Number,The method contains a magic number: 2,1230
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMIN(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 131.,1254
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMin,Magic Number,The method contains a magic number: 2,1254
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMin,Magic Number,The method contains a magic number: 3,1254
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMin,Magic Number,The method contains a magic number: 2,1254
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQuerySum,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tSUM(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 131.,1278
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQuerySum,Magic Number,The method contains a magic number: 2,1278
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQuerySum,Magic Number,The method contains a magic number: 3,1278
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQuerySum,Magic Number,The method contains a magic number: 2,1278
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQuerySum,Magic Number,The method contains a magic number: 3,1278
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tAVG(\"public\".\"V_B\".\"age\") AS \"alias1\"` COUNT(1) AS \"alias1_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 162.,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Magic Number,The method contains a magic number: 2,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Magic Number,The method contains a magic number: 2,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Magic Number,The method contains a magic number: 2,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Magic Number,The method contains a magic number: 2,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Magic Number,The method contains a magic number: 3,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Magic Number,The method contains a magic number: 2,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,duplicateQueryMean,Magic Number,The method contains a magic number: 1.8,1302
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicateQueryNoLabel,Long Statement,The length of the statement "DefaultTraversal<Vertex`Double> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("person").out().out().values("age").max();" is 142.,1330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicateQueryNoLabel,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_knows\".\"public.person__I\" AS \"public.E_knows.public.person__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_person\" INNER JOIN\n"+ "\t\"public\".\"E_knows\" ON \"public\".\"V_person\".\"ID\" = \"public\".\"E_knows\".\"public.person__O\"\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_person\".\"ID\" AS \"alias1\"`\n"+ "\t\"public\".\"E_knows\".\"public.person__I\" AS \"public.E_knows.public.person__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_person\" INNER JOIN\n"+ "\t\"public\".\"E_knows\" ON \"public\".\"V_person\".\"ID\" = \"public\".\"E_knows\".\"public.person__O\"\n"+ ") a2 ON a1.\"public.E_knows.public.person__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_person\".\"ID\" AS \"alias2\"`\n"+ "\t\"public\".\"V_person\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_person\"\n"+ ") a3 ON a2.\"public.E_knows.public.person__I\" = a3.\"alias2\""`sql);" is 987.,1330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 2,1330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 3,1330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 2,1330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_out_out_max,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("person").out().out().values("age").max();" is 143.,1376
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_out_out_max,Magic Number,The method contains a magic number: 3,1376
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_out_out_max,Magic Number,The method contains a magic number: 2,1376
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXoutX_timesX2X_age_max,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("person").repeat(__.out()).times(2).values("age").max();" is 157.,1393
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXoutX_timesX2X_age_max,Magic Number,The method contains a magic number: 2,1393
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXoutX_timesX2X_age_max,Magic Number,The method contains a magic number: 3,1393
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXoutX_timesX2X_age_max,Magic Number,The method contains a magic number: 2,1393
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXbothX_timesX5X_age_max,Magic Number,The method contains a magic number: 5,1410
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_repeatXbothX_timesX5X_age_max,Magic Number,The method contains a magic number: 35,1410
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_maxX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Number>> traversal=this.sqlgGraph.traversal().V().hasLabel("software").<String`Number>group().by("name").by(__.bothE().values("weight").max());" is 177.,1418
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_maxX,Magic Number,The method contains a magic number: 2,1418
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_maxX,Magic Number,The method contains a magic number: 0.4,1418
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxAgain,Magic Number,The method contains a magic number: 3,1435
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxAgain,Magic Number,The method contains a magic number: 5,1435
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxAgain,Magic Number,The method contains a magic number: 7,1435
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxAgain,Magic Number,The method contains a magic number: 7,1435
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMax2,Magic Number,The method contains a magic number: 35,1449
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Map<String`Number>>> traversal=this.sqlgGraph.traversal().V().out("followedBy").<String`Map<String`Number>>group().by("songType").by(__.bothE().group().by(T.label).by(__.values("weight").sum()));" is 229.,1457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX,Magic Number,The method contains a magic number: 3,1457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX,Magic Number,The method contains a magic number: 179350,1457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX,Magic Number,The method contains a magic number: 2185613,1457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX,Magic Number,The method contains a magic number: 777982,1457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testSummingNothing,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Integer>> traversal=this.sqlgGraph.traversal().V().has("name"`"a5").<String`Integer>group().by(T.label).by(__.values("age").sum());" is 159.,1495
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCount,Magic Number,The method contains a magic number: 4,1511
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCount,Magic Number,The method contains a magic number: 3,1511
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCount,Magic Number,The method contains a magic number: 2,1511
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountStartEdge,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V().hasLabel("A").outE().otherV().count();" is 140.,1534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountStartEdge,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\""`sql);" is 316.,1534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V().hasLabel("A").out("ab").count();" is 134.,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\""`sql);" is 316.,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\""`sql);" is 340.,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_ab\".\"public.A__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B__I\" = \"public\".\"V_B\".\"ID\""`sql);" is 316.,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Magic Number,The method contains a magic number: 2,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Magic Number,The method contains a magic number: 2,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Magic Number,The method contains a magic number: 5,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Magic Number,The method contains a magic number: 2,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Magic Number,The method contains a magic number: 4,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Magic Number,The method contains a magic number: 5,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithJoins,Magic Number,The method contains a magic number: 4,1556
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountMultipleLabels,Magic Number,The method contains a magic number: 8,1609
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountMultipleLabels,Magic Number,The method contains a magic number: 3,1609
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountMultipleLabels,Magic Number,The method contains a magic number: 2,1609
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountDuplicatePaths,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V(a1).out().out().count();" is 124.,1636
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountDuplicatePaths,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tCOUNT(1) \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A__I\" = a3.\"alias2\""`sql);" is 869.,1636
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountDuplicatePaths,Magic Number,The method contains a magic number: 2,1636
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountDuplicatePaths,Magic Number,The method contains a magic number: 3,1636
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountDuplicatePaths,Magic Number,The method contains a magic number: 2,1636
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithUnion,Long Statement,The length of the statement "final DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().has("person"`"name"`"marko").has("name"`"marko").count().as("a").union(__.identity()`__.identity()).select("a");" is 207.,1682
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithUnion,Magic Number,The method contains a magic number: 5,1682
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountWithUnion,Magic Number,The method contains a magic number: 2,1682
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testCountOnPropertyNotYetExists,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V().has(T.label`"Person").has("name"`"john").count();" is 151.,1698
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxDuplicatePaths,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"ID\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A__I\" AS \"public.E_aa.public.A__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"ID\" = \"public\".\"E_aa\".\"public.A__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"ID\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A__I\" = a3.\"alias2\""`sql);" is 928.,1708
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 2,1708
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 3,1708
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 4,1708
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 4,1708
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testUserSuppliedPKCount,Magic Number,The method contains a magic number: 100,1750
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testUserSuppliedPKCount,Magic Number,The method contains a magic number: 100,1750
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testUserSuppliedPKCount,Magic Number,The method contains a magic number: 2,1750
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testAndColumns,Magic Number,The method contains a magic number: 2,1780
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,shouldFilterEdgeCriterion,Long Statement,The length of the statement "final Traversal<Edge`?> edgeCriterion=__.or(__.has("weight"`1.0d).hasLabel("knows")`__.has("weight"`0.4d).hasLabel("created").outV().has("name"`"marko")`__.has("weight"`1.0d).hasLabel("created"));" is 196.,1794
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 0.4d,1794
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 3,1794
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,shouldFilterEdgeCriterion,Magic Number,The method contains a magic number: 2,1794
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMinAgain,Magic Number,The method contains a magic number: 9999999999L,1812
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,testMinAgain,Magic Number,The method contains a magic number: 9999999999L,1812
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_groupXaX_byXnameX_capXaX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Collection<Vertex>>> traversal=this.sqlgGraph.traversal().V().group("a").by("name").cap("a");" is 127.,1821
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducing,g_V_groupXaX_byXnameX_capXaX,Magic Number,The method contains a magic number: 6,1821
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Long Statement,The length of the statement "final Traversal<Vertex`Map<Vertex`Long>> traversal=this.sqlgGraph.traversal().V().both().groupCount("a").out().cap("a").select(Column.keys).unfold().both().groupCount("a").cap("a");" is 181.,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Magic Number,The method contains a magic number: 6,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Magic Number,The method contains a magic number: 6l,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Magic Number,The method contains a magic number: 2l,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Magic Number,The method contains a magic number: 6l,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Magic Number,The method contains a magic number: 6l,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Magic Number,The method contains a magic number: 2l,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,g_V_both_groupCountXaX_out_capXaX_selectXkeysX_unfold_both_groupCountXaX_capXaX,Magic Number,The method contains a magic number: 6l,20
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,testGroupCountByLabel,Magic Number,The method contains a magic number: 2,39
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,testGroupCountByLabel,Magic Number,The method contains a magic number: 4,39
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestGroupCount,testGroupCountByLabel,Magic Number,The method contains a magic number: 2,39
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Integer>> traversal=this.sqlgGraph.traversal().V().has("name"`__.or(__.is("a1")`__.is("a2"))).out().<String`Integer>group().by("name").by(__.values("age").max());" is 190.,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 4,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 5,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 6,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 7,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 8,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 8,23
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Integer>> traversal=this.sqlgGraph.traversal().V().hasLabel("A").local(__.out().<String`Integer>group().by("name").by(__.values("age").max()));" is 171.,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 4,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 4,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 4,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,testGroupOverOnePropertyLocalMax,Magic Number,The method contains a magic number: 4,62
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_VX1_2X_unionXoutE_count__inE_count__outE_weight_sumX,Long Statement,The length of the statement "@SuppressWarnings("unchecked") final Traversal<Vertex`Number> traversal=this.sqlgGraph.traversal().V(convertToVertexId("marko")`convertToVertexId("vadas")).union(__.outE().count()`__.inE().count()`(Traversal)__.outE().values("weight").sum());" is 242.,110
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_VX1_2X_unionXoutE_count__inE_count__outE_weight_sumX,Magic Number,The method contains a magic number: 3L,110
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_VX1_2X_unionXoutE_count__inE_count__outE_weight_sumX,Magic Number,The method contains a magic number: 1.9D,110
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_VX1_2X_unionX_outE_weight_sumX,Long Statement,The length of the statement "@SuppressWarnings("unchecked") final Traversal<Vertex`Number> traversal=this.sqlgGraph.traversal().V(convertToVertexId("marko")`convertToVertexId("vadas")).union((Traversal)__.outE().values("weight").sum());" is 207.,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_VX1_2X_unionX_outE_weight_sumX,Magic Number,The method contains a magic number: 1.9D,124
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_V_hasLabelXsongX_group_byXnameX_byXproperties_groupCount_byXlabelXX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Map<String`Long>>> traversal=this.sqlgGraph.traversal().V().hasLabel("song").<String`Map<String`Long>>group().by("name").by(__.properties().groupCount().by(T.label));" is 200.,136
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_V_hasLabelXsongX_group_byXnameX_byXproperties_groupCount_byXlabelXX,Magic Number,The method contains a magic number: 584,136
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingVertexStep,g_V_hasLabelXsongX_group_byXnameX_byXproperties_groupCount_byXlabelXX,Magic Number,The method contains a magic number: 3,136
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Long`Long>> traversal=(DefaultTraversal<Vertex`Map<Long`Long>>)this.sqlgGraph.traversal().V().<Long>groupCount().by(__.bothE().count());" is 164.,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 100,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 100,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBySomething,Magic Number,The method contains a magic number: 6L,43
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)sqlgGraph.traversal().V().groupCount();" is 134.,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 100,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 100,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 2,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 3,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountNoBy,Magic Number,The method contains a magic number: 6,72
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCount,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().hasLabel("A").groupCount().by("name");" is 164.,102
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCount,Magic Number,The method contains a magic number: 100,102
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCount,Magic Number,The method contains a magic number: 100,102
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCount,Magic Number,The method contains a magic number: 2,102
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCount,Magic Number,The method contains a magic number: 3,102
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCount,Magic Number,The method contains a magic number: 2,102
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a"`"age"`1);" is 129.,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a"`"age"`2);" is 129.,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().groupCount().by(T.label);" is 151.,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 100,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 100,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 100,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 2,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 3,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 3L,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupCountByLabel,Magic Number,The method contains a magic number: 2L,126
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a"`"age"`1);" is 129.,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a"`"age"`2);" is 129.,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().<Object`Long>group().by(T.label).by(__.count());" is 174.,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 100,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 100,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 100,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 2,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 3,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 3L,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCountLabel,Magic Number,The method contains a magic number: 2L,168
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a"`"age"`1);" is 129.,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a"`"age"`2);" is 129.,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b"`"age"`3);" is 129.,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Object`Long>> traversal=(DefaultTraversal<Vertex`Map<Object`Long>>)this.sqlgGraph.traversal().V().hasLabel("A").<Object`Long>group().by("name").by(__.count());" is 187.,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"`\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_A\".\"name\""`sql);" is 206.,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Magic Number,The method contains a magic number: 100,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Magic Number,The method contains a magic number: 100,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Magic Number,The method contains a magic number: 100,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Magic Number,The method contains a magic number: 2,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Magic Number,The method contains a magic number: 3,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByCount,Magic Number,The method contains a magic number: 2L,211
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").max();" is 131.,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Magic Number,The method contains a magic number: 100,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Magic Number,The method contains a magic number: 2,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Magic Number,The method contains a magic number: 3,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Magic Number,The method contains a magic number: 3,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Magic Number,The method contains a magic number: 2,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMax,Magic Number,The method contains a magic number: 3,248
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Integer>group().by("name").by(__.values("age").max());" is 180.,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 250.,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 100,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 100,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 2,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 3,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 4,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 2,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 3,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMax,Magic Number,The method contains a magic number: 4,281
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxOnString,Long Statement,The length of the statement "DefaultTraversal<Vertex`String> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").max();" is 130.,324
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxOnString,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,324
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxOnString,Magic Number,The method contains a magic number: 100,324
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxOnString,Magic Number,The method contains a magic number: 100,324
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxOnString,Magic Number,The method contains a magic number: 3,324
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxOnString,Magic Number,The method contains a magic number: 2,324
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMin,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").min();" is 131.,357
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMIN(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,357
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMin,Magic Number,The method contains a magic number: 100,357
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMin,Magic Number,The method contains a magic number: 2,357
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMin,Magic Number,The method contains a magic number: 3,357
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMin,Magic Number,The method contains a magic number: 3,357
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMin,Magic Number,The method contains a magic number: 2,357
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMinOnString,Long Statement,The length of the statement "DefaultTraversal<Vertex`String> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").min();" is 130.,391
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMinOnString,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMIN(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,391
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMinOnString,Magic Number,The method contains a magic number: 100,391
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMinOnString,Magic Number,The method contains a magic number: 100,391
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMinOnString,Magic Number,The method contains a magic number: 3,391
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMinOnString,Magic Number,The method contains a magic number: 2,391
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").sum();" is 128.,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tSUM(\"public\".\"V_Person\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 141.,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Magic Number,The method contains a magic number: 100,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Magic Number,The method contains a magic number: 2,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Magic Number,The method contains a magic number: 3,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Magic Number,The method contains a magic number: 3,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Magic Number,The method contains a magic number: 2,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSum,Magic Number,The method contains a magic number: 6,424
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Long Statement,The length of the statement "DefaultTraversal<Vertex`Double> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").values("age").mean();" is 131.,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tAVG(\"public\".\"V_Person\".\"age\") AS \"alias1\"` COUNT(1) AS \"alias1_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\""`sql);" is 172.,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Magic Number,The method contains a magic number: 100,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Magic Number,The method contains a magic number: 2,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Magic Number,The method contains a magic number: 3,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Magic Number,The method contains a magic number: 3,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Magic Number,The method contains a magic number: 2,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMean,Magic Number,The method contains a magic number: 1.5,457
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Integer>group().by("name").by(__.values("age").min());" is 180.,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tMIN(\"public\".\"V_Person\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 250.,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 100,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 100,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 2,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 3,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 4,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 2,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMin,Magic Number,The method contains a magic number: 2,491
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Long>group().by("name").by(__.values("age").sum());" is 174.,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tSUM(\"public\".\"V_Person\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 250.,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 100,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 100,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 2,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 3,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 4,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 2,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 4,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertySum,Magic Number,The method contains a magic number: 6,534
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Double>> traversal=(DefaultTraversal)sqlgGraph.traversal().V().hasLabel("Person").<String`Double>group().by("name").by(__.values("age").mean());" is 179.,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"name\" AS \"alias1\"`\n"+ "\tAVG(\"public\".\"V_Person\".\"age\") AS \"alias2\"` COUNT(1) AS \"alias2_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\""`sql);" is 281.,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 100,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 100,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 2,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 3,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 4,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 2,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 2.0,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyMean,Magic Number,The method contains a magic number: 3.0,577
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"A"`"surname"`"C"`"age"`1);" is 148.,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"B"`"surname"`"D"`"age"`2);" is 148.,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"A"`"surname"`"C"`"age"`3);" is 148.,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"B"`"surname"`"E"`"age"`4);" is 148.,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"C"`"surname"`"E"`"age"`5);" is 148.,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<List<String>`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").<List<String>`Integer>group().by(__.values("name"`"surname").fold()).by(__.values("age").max());" is 225.,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"surname\" AS \"alias1\"`\n"+ "\t\"public\".\"V_Person\".\"name\" AS \"alias2\"`\n"+ "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\"`\n"+ "\t\"public\".\"V_Person\".\"surname\""`sql);" is 352.,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 3,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 5,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 3,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 3,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 2,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 4,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 5,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValues,Magic Number,The method contains a magic number: 5,620
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"A"`"surname"`"C"`"age"`1);" is 148.,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"B"`"surname"`"D"`"age"`2);" is 148.,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"A"`"surname"`"C"`"age"`3);" is 148.,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"B"`"surname"`"E"`"age"`4);" is 148.,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"C"`"surname"`"E"`"age"`5);" is 148.,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<Map<String`List<String>>`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").<Map<String`List<String>>`Integer>group().by(__.valueMap("name"`"surname")).by(__.values("age").max());" is 244.,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_Person\".\"surname\" AS \"alias1\"`\n"+ "\t\"public\".\"V_Person\".\"name\" AS \"alias2\"`\n"+ "\tMAX(\"public\".\"V_Person\".\"age\") AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Person\".\"name\"`\n"+ "\t\"public\".\"V_Person\".\"surname\""`sql);" is 352.,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 100,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 100,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 100,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 100,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 2,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 3,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 4,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 5,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 2,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 3,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 2,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 4,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverTwoPropertiesWithValueMap,Magic Number,The method contains a magic number: 5,695
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Vertex person=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"A");" is 140.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Vertex address1=this.sqlgGraph.addVertex(T.label`"Address"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"A"`"year"`2);" is 152.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Vertex address2=this.sqlgGraph.addVertex(T.label`"Address"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"A"`"year"`4);" is 152.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Vertex address3=this.sqlgGraph.addVertex(T.label`"Address"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"C"`"year"`6);" is 152.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Vertex address4=this.sqlgGraph.addVertex(T.label`"Address"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"D"`"year"`8);" is 152.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Vertex address5=this.sqlgGraph.addVertex(T.label`"Address"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"D"`"year"`7);" is 152.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Vertex address6=this.sqlgGraph.addVertex(T.label`"Address"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"D"`"year"`6);" is 152.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("Person").out("livesAt").<String`Integer>group().by("name").by(__.values("year").max());" is 201.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Address\".\"year\") AS \"alias1\"`\n"+ "\t\"public\".\"V_Address\".\"name\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_Person\" INNER JOIN\n"+ "\t\"public\".\"E_livesAt\" ON \"public\".\"V_Person\".\"uid1\" = \"public\".\"E_livesAt\".\"public.Person.uid1__O\" AND \"public\".\"V_Person\".\"uid2\" = \"public\".\"E_livesAt\".\"public.Person.uid2__O\" INNER JOIN\n"+ "\t\"public\".\"V_Address\" ON \"public\".\"E_livesAt\".\"public.Address__I\" = \"public\".\"V_Address\".\"ID\"\n"+ "GROUP BY\n"+ "\t\"public\".\"V_Address\".\"name\""`sql);" is 603.,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 100,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 100,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 100,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 100,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 100,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 100,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 2,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 4,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 6,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 8,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 7,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 6,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 2,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 3,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 4,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 6,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupOverOnePropertyWithJoin,Magic Number,The method contains a magic number: 8,777
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().<String`Integer>group().by(T.label).by(__.values("age").max());" is 167.,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_Dog\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_Dog\""`sql);" is 135.,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 100,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 100,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 10,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 20,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 100,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 40,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 10,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 200,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 30,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 40,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 2,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 2,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 100,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByLabelMax,Magic Number,The method contains a magic number: 200,849
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").values("age").max();" is 124.,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a2.\"alias2\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.uid__I\" AS \"public.E_aa.public.A.uid__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_aa\".\"public.A.uid__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"uid\" AS \"alias1\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.uid__I\" = a2.\"alias1\""`sql);" is 599.,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 100,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 100,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 100,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 5,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 7,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 5,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 3,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 2,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery,Magic Number,The method contains a magic number: 7,903
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").values("age").max();" is 124.,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a2.\"alias2\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"age\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias1\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.age__I\" = a2.\"alias2\""`sql);" is 599.,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 100,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 100,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 2,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 3,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 4,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 3,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 2,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnUid,Magic Number,The method contains a magic number: 4,962
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testUserSuppliedIds,Magic Number,The method contains a magic number: 100,1020
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testUserSuppliedIds,Magic Number,The method contains a magic number: 100,1020
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testUserSuppliedIds,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").out("aa").values("age").max();" is 134.,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.name__I\" AS \"public.E_aa.public.A.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_aa\".\"public.A.name__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"name\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A.name__I\" AS \"public.E_aa.public.A.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_aa\".\"public.A.name__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.name__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A.name__I\" = a3.\"alias2\""`sql);" is 978.,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 100,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 100,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 5,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 7,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 5,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 3,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 2,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery2,Magic Number,The method contains a magic number: 7,1047
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").out("aa").values("age").max();" is 134.,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"age\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.age__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A.age__I\" = a3.\"alias3\""`sql);" is 965.,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 100,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 100,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 2,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 3,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 4,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 3,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 2,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMax,Magic Number,The method contains a magic number: 3,1113
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Long Statement,The length of the statement "DefaultTraversal<Vertex`Double> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").out("aa").values("age").mean();" is 134.,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tAVG(a3.\"alias3\")` COUNT(1) AS \"alias3_weight\" \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"age\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.age__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A.age__I\" = a3.\"alias3\""`sql);" is 996.,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 100,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 100,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 2,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 3,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 4,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 3,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 2,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMean,Magic Number,The method contains a magic number: 2,1179
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").out("aa").values("age").sum();" is 131.,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tSUM(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"age\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.age__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A.age__I\" = a3.\"alias3\""`sql);" is 965.,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 100,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 100,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 2,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 3,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 4,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 3,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 2,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierSum,Magic Number,The method contains a magic number: 4,1245
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Long Statement,The length of the statement "DefaultTraversal<Vertex`Integer> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("aa").out("aa").values("age").min();" is 134.,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMIN(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"age\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A.age__I\" AS \"public.E_aa.public.A.age__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"age\" = \"public\".\"E_aa\".\"public.A.age__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.age__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A.age__I\" = a3.\"alias3\""`sql);" is 965.,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Magic Number,The method contains a magic number: 100,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Magic Number,The method contains a magic number: 100,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Magic Number,The method contains a magic number: 2,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Magic Number,The method contains a magic number: 3,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Magic Number,The method contains a magic number: 4,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Magic Number,The method contains a magic number: 3,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQueryAggregateOnIdentifierMin,Magic Number,The method contains a magic number: 2,1311
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").values("age").sum();" is 126.,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tSUM(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_ab\".\"public.A.name__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.name__I\" = \"public\".\"V_B\".\"name\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"name\" = ?)"`sql);" is 407.,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 100,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 100,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 100,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 2,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 3,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 2,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 3,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 3,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 2,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathQuery3,Magic Number,The method contains a magic number: 12,1377
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").count());" is 166.,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"uid\" AS \"alias1\"`\n"+ "\t\"public\".\"V_B\".\"name\" AS \"alias2\"`\n"+ "\t\"public\".\"V_B\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_ab\".\"public.A.uid__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)"`sql);" is 496.,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 100,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 100,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 100,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 100,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 100,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 100,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 100,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 2,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 3,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 3,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 2,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 4,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 2,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery2,Magic Number,The method contains a magic number: 7L,1442
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.count());" is 152.,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"`\n"+ "\t\"public\".\"V_B\".\"name\" AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_ab\".\"public.A.uid__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 477.,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 100,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 2,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 3,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 3,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 2,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 3,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 2,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupCountQuery,Magic Number,The method contains a magic number: 7,1519
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Long>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").sum());" is 164.,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tSUM(\"public\".\"V_B\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_ab\".\"public.A.uid__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 501.,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 100,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 2,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 3,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 3,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 2,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 3,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 2,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupSumQuery,Magic Number,The method contains a magic number: 15,1598
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").max());" is 167.,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tMAX(\"public\".\"V_B\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_ab\".\"public.A.uid__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 501.,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 100,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 2,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 3,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 3,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 2,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 4,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 2,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMaxQuery,Magic Number,The method contains a magic number: 4,1677
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").min());" is 167.,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tMIN(\"public\".\"V_B\".\"age\") AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_ab\".\"public.A.uid__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 501.,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 100,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 2,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 3,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 3,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 2,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 4,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMinQuery,Magic Number,The method contains a magic number: 2,1756
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Double>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out("ab"`"ac").group().by("name").by(__.values("age").mean());" is 167.,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\t\"public\".\"V_B\".\"name\" AS \"alias1\"`\n"+ "\tAVG(\"public\".\"V_B\".\"age\") AS \"alias2\"` COUNT(1) AS \"alias2_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_ab\".\"public.A.uid__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)\n"+ "GROUP BY\n"+ "\t\"public\".\"V_B\".\"name\""`sql);" is 532.,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 100,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 3,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 3,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 4,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicatePathGroupMeanQuery,Magic Number,The method contains a magic number: 2.142857142857143D,1835
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Long Statement,The length of the statement "DefaultTraversal<Vertex`Map<String`Integer>> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V(a1).out().<String`Integer>group().by("name").by(__.values("age").max());" is 174.,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\ta2.\"alias2\"` MAX(a2.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.uid__I\" AS \"public.E_aa.public.A.uid__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"uid\" = \"public\".\"E_aa\".\"public.A.uid__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"uid\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"uid\" AS \"alias1\"`\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.uid__I\" = a2.\"alias1\"\n"+ "GROUP BY\n"+ "\ta2.\"alias2\""`sql);" is 699.,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 100,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 100,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 100,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 2,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 3,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 4,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 5,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 6,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 2,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 2,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 3,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testGroupByDuplicatePaths,Magic Number,The method contains a magic number: 6,1915
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMax,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 131.,1979
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMax,Magic Number,The method contains a magic number: 2,1979
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMax,Magic Number,The method contains a magic number: 3,1979
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMax,Magic Number,The method contains a magic number: 2,1979
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMax,Magic Number,The method contains a magic number: 2,1979
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMin,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMIN(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 131.,2018
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMin,Magic Number,The method contains a magic number: 2,2018
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMin,Magic Number,The method contains a magic number: 3,2018
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMin,Magic Number,The method contains a magic number: 2,2018
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQuerySum,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tSUM(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 131.,2057
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQuerySum,Magic Number,The method contains a magic number: 2,2057
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQuerySum,Magic Number,The method contains a magic number: 3,2057
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQuerySum,Magic Number,The method contains a magic number: 2,2057
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQuerySum,Magic Number,The method contains a magic number: 3,2057
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tAVG(\"public\".\"V_B\".\"age\") AS \"alias1\"` COUNT(1) AS \"alias1_weight\"\n"+ "FROM\n"+ "\t\"public\".\"V_B\""`sql);" is 162.,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 100,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 100,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 2,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 2,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 2,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 2,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 3,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 2,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,duplicateQueryMean,Magic Number,The method contains a magic number: 1.8,2096
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicateQueryNoLabel,Long Statement,The length of the statement "DefaultTraversal<Vertex`Double> traversal=(DefaultTraversal)this.sqlgGraph.traversal().V().hasLabel("person").out().out().values("age").max();" is 142.,2140
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicateQueryNoLabel,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_knows\".\"public.person.name__I\" AS \"public.E_knows.public.person.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_person\" INNER JOIN\n"+ "\t\"public\".\"E_knows\" ON \"public\".\"V_person\".\"name\" = \"public\".\"E_knows\".\"public.person.name__O\"\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_person\".\"name\" AS \"alias1\"`\n"+ "\t\"public\".\"E_knows\".\"public.person.name__I\" AS \"public.E_knows.public.person.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_person\" INNER JOIN\n"+ "\t\"public\".\"E_knows\" ON \"public\".\"V_person\".\"name\" = \"public\".\"E_knows\".\"public.person.name__O\"\n"+ ") a2 ON a1.\"public.E_knows.public.person.name__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_person\".\"name\" AS \"alias2\"`\n"+ "\t\"public\".\"V_person\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_person\"\n"+ ") a3 ON a2.\"public.E_knows.public.person.name__I\" = a3.\"alias2\""`sql);" is 1035.,2140
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 100,2140
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 100,2140
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 2,2140
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 3,2140
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testDuplicateQueryNoLabel,Magic Number,The method contains a magic number: 2,2140
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxAgain,Magic Number,The method contains a magic number: 100,2198
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxAgain,Magic Number,The method contains a magic number: 100,2198
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxAgain,Magic Number,The method contains a magic number: 3,2198
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxAgain,Magic Number,The method contains a magic number: 5,2198
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxAgain,Magic Number,The method contains a magic number: 7,2198
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxAgain,Magic Number,The method contains a magic number: 7,2198
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSummingNothing,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Number>> traversal=this.sqlgGraph.traversal().V().has("name"`"a5").<String`Number>group().by(T.label).by(__.values("age").sum());" is 157.,2229
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testSummingNothing,Magic Number,The method contains a magic number: 100,2229
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCount,Magic Number,The method contains a magic number: 100,2256
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCount,Magic Number,The method contains a magic number: 2,2256
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCount,Magic Number,The method contains a magic number: 3,2256
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCount,Magic Number,The method contains a magic number: 4,2256
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCount,Magic Number,The method contains a magic number: 4,2256
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCount,Magic Number,The method contains a magic number: 3,2256
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCount,Magic Number,The method contains a magic number: 2,2256
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountStartEdge,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,2288
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountStartEdge,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,2288
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountStartEdge,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V().hasLabel("A").outE().otherV().count();" is 140.,2288
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountStartEdge,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_ab\".\"public.A.name__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.name__I\" = \"public\".\"V_B\".\"name\""`sql);" is 330.,2288
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountStartEdge,Magic Number,The method contains a magic number: 100,2288
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountStartEdge,Magic Number,The method contains a magic number: 100,2288
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountStartEdge,Magic Number,The method contains a magic number: 100,2288
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V().hasLabel("A").out("ab").count();" is 134.,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_ab\".\"public.A.name__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\""`sql);" is 328.,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tMAX(\"public\".\"V_B\".\"age\") AS \"alias1\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_ab\".\"public.A.name__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\""`sql);" is 352.,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Long Statement,The length of the statement "Assert.assertEquals("\n" + "SELECT\n" + "\tCOUNT(1) AS \"count\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_ab\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_ab\".\"public.A.name__O\" INNER JOIN\n"+ "\t\"public\".\"V_B\" ON \"public\".\"E_ab\".\"public.B.uid__I\" = \"public\".\"V_B\".\"uid\""`sql);" is 328.,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 100,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 100,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 100,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 100,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 2,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 2,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 5,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 2,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 4,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 5,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountWithJoins,Magic Number,The method contains a magic number: 4,2330
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountMultipleLabels,Magic Number,The method contains a magic number: 100,2401
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountMultipleLabels,Magic Number,The method contains a magic number: 100,2401
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountMultipleLabels,Magic Number,The method contains a magic number: 8,2401
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountMultipleLabels,Magic Number,The method contains a magic number: 3,2401
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountMultipleLabels,Magic Number,The method contains a magic number: 2,2401
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V(a1).out().out().count();" is 124.,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tCOUNT(1) \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.name__I\" AS \"public.E_aa.public.A.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_aa\".\"public.A.name__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"name\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A.name__I\" AS \"public.E_aa.public.A.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_aa\".\"public.A.name__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.name__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias2\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A.name__I\" = a3.\"alias2\""`sql);" is 919.,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Magic Number,The method contains a magic number: 100,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Magic Number,The method contains a magic number: 100,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Magic Number,The method contains a magic number: 2,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Magic Number,The method contains a magic number: 3,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountDuplicatePaths,Magic Number,The method contains a magic number: 2,2443
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountOnPropertyNotYetExists,Long Statement,The length of the statement "DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V().has(T.label`"Person").has("name"`"john").count();" is 151.,2500
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testCountOnPropertyNotYetExists,Magic Number,The method contains a magic number: 100,2500
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Long Statement,The length of the statement "Assert.assertEquals("SELECT\n" + "\tMAX(a3.\"alias3\") \n" + "FROM (\n"+ "SELECT\n"+ "\t\"public\".\"E_aa\".\"public.A.name__I\" AS \"public.E_aa.public.A.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_aa\".\"public.A.name__O\"\n"+ "WHERE\n"+ "\t( \"public\".\"V_A\".\"name\" = ?)\n"+ ") a1 INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias1\"`\n"+ "\t\"public\".\"E_aa\".\"public.A.name__I\" AS \"public.E_aa.public.A.name__I\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\" INNER JOIN\n"+ "\t\"public\".\"E_aa\" ON \"public\".\"V_A\".\"name\" = \"public\".\"E_aa\".\"public.A.name__O\"\n"+ ") a2 ON a1.\"public.E_aa.public.A.name__I\" = a2.\"alias1\" INNER JOIN (\n"+ "SELECT\n"+ "\t\"public\".\"V_A\".\"name\" AS \"alias2\"`\n"+ "\t\"public\".\"V_A\".\"age\" AS \"alias3\"\n"+ "FROM\n"+ "\t\"public\".\"V_A\"\n"+ ") a3 ON a2.\"public.E_aa.public.A.name__I\" = a3.\"alias2\""`sql);" is 978.,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 100,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 100,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 2,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 3,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 4,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testMaxDuplicatePaths,Magic Number,The method contains a magic number: 4,2517
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testUserSuppliedPKCount,Magic Number,The method contains a magic number: 100,2572
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testUserSuppliedPKCount,Magic Number,The method contains a magic number: 100,2572
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testUserSuppliedPKCount,Magic Number,The method contains a magic number: 2,2572
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testAndColumns,Magic Number,The method contains a magic number: 100,2602
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testAndColumns,Magic Number,The method contains a magic number: 100,2602
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testAndColumns,Magic Number,The method contains a magic number: 2,2602
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestReducingUserSuppliedIds,testAndColumns,Magic Number,The method contains a magic number: 2,2602
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestMax,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_maxX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Number>> traversal=this.sqlgGraph.traversal().V().hasLabel("software").<String`Number>group().by("name").by(__.bothE().values("weight").max());" is 177.,18
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestMax,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_maxX,Magic Number,The method contains a magic number: 2,18
pietermartin_sqlg,org.umlg.sqlg.test.reducing,TestMax,g_V_hasLabelXsoftwareX_group_byXnameX_byXbothE_weight_maxX,Magic Number,The method contains a magic number: 0.4,18
pietermartin_sqlg,org.umlg.sqlg.test.rollback,TestRollback,shouldHaveExceptionConsistencyWhenUsingManualTransactionOnRollback,Empty catch clause,The method has an empty catch block.,68
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_both_both_count,Magic Number,The method contains a magic number: 30,25
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_treeXaX_capXaX,Long Statement,The length of the statement "Assert.assertTrue(((Map)tree.get(convertToVertex(this.sqlgGraph`"marko"))).containsKey(convertToVertex(this.sqlgGraph`"josh")));" is 128.,43
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_treeXaX_capXaX,Long Statement,The length of the statement "Assert.assertTrue(((Map)((Map)tree.get(convertToVertex(this.sqlgGraph`"marko"))).get(convertToVertex(this.sqlgGraph`"josh"))).containsKey(convertToVertex(this.sqlgGraph`"lop")));" is 178.,43
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_treeXaX_capXaX,Long Statement,The length of the statement "Assert.assertTrue(((Map)((Map)tree.get(convertToVertex(this.sqlgGraph`"marko"))).get(convertToVertex(this.sqlgGraph`"josh"))).containsKey(convertToVertex(this.sqlgGraph`"ripple")));" is 181.,43
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_path_byXnameX_byXageX,Magic Number,The method contains a magic number: 3,62
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_path_byXnameX_byXageX,Magic Number,The method contains a magic number: 32,62
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_path_byXnameX_byXageX,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_path_byXnameX_byXageX,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.travers,TestTraversals,g_V_out_out_path_byXnameX_byXageX,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 150.,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"name"`"a1"`"other"`"other" + i`"other2"`"other2" + i);" is 128.,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Magic Number,The method contains a magic number: 100,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchUpdatePartitioning,updatePartitionedTable,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalNullUpdate,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{true}`{(byte)1}`{(short)1}`{1}`{1L}`{1F}`{1.111D}`{"haloThere"}`{LocalDate.now()}`{LocalDateTime.now()}`{LocalTime.now().withNano(0)}`{ZonedDateTime.now()}});" is 195.,30
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testLocalDateTime,Magic Number,The method contains a magic number: 1000,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testLocalTime,Magic Number,The method contains a magic number: 1000,59
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testLocalDate,Magic Number,The method contains a magic number: 1000,78
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testZonedDateTime,Magic Number,The method contains a magic number: 1000,97
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testDuration,Magic Number,The method contains a magic number: 5,119
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testDuration,Magic Number,The method contains a magic number: 1000,119
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testPeriod,Magic Number,The method contains a magic number: 5,138
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testPeriod,Magic Number,The method contains a magic number: 5,138
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testPeriod,Magic Number,The method contains a magic number: 5,138
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeDateTime,testPeriod,Magic Number,The method contains a magic number: 1000,138
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamingVerticesAndEdges,Magic Number,The method contains a magic number: 1000,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamingVerticesAndEdges,Magic Number,The method contains a magic number: 1000,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamingVerticesAndEdges_assert,Magic Number,The method contains a magic number: 1000,153
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamingVerticesAndEdges_assert,Magic Number,The method contains a magic number: 1000,153
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamingVerticesAndEdges_assert,Magic Number,The method contains a magic number: 1000,153
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testMilCompleteEdges,Magic Number,The method contains a magic number: 1024,159
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testMilCompleteEdges,Magic Number,The method contains a magic number: 1024,159
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testEdgeWithProperties,Magic Number,The method contains a magic number: 1000,200
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testEdgeWithProperties,Magic Number,The method contains a magic number: 1000,200
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testEdgeWithProperties_assert,Magic Number,The method contains a magic number: 1000,234
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testEdgeWithProperties_assert,Magic Number,The method contains a magic number: 1000,234
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testEdgeWithProperties_assert,Magic Number,The method contains a magic number: 1000,234
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testEdgeWithProperties_assert,Magic Number,The method contains a magic number: 1000,234
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testEdgeWithProperties_assert,Magic Number,The method contains a magic number: 1000,234
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDateTime,Magic Number,The method contains a magic number: 10,244
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDateTime,Magic Number,The method contains a magic number: 10,244
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDateTime_assert,Magic Number,The method contains a magic number: 10,278
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDateTime_assert,Magic Number,The method contains a magic number: 10,278
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDateTime_assert,Magic Number,The method contains a magic number: 10,278
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDateTime_assert,Magic Number,The method contains a magic number: 10,278
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDate,Magic Number,The method contains a magic number: 10,286
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDate,Magic Number,The method contains a magic number: 10,286
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDate_assert,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDate_assert,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDate_assert,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalDate_assert,Magic Number,The method contains a magic number: 10,320
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalTime,Magic Number,The method contains a magic number: 10,328
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalTime,Magic Number,The method contains a magic number: 10,328
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalTime_assert,Long Statement,The length of the statement "Assert.assertEquals(localTime.toSecondOfDay()`sqlgGraph.traversal().E().hasLabel("married").<LocalTime>values("localTime").next().toSecondOfDay());" is 147.,362
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalTime_assert,Magic Number,The method contains a magic number: 10,362
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalTime_assert,Magic Number,The method contains a magic number: 10,362
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalTime_assert,Magic Number,The method contains a magic number: 10,362
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamLocalTime_assert,Magic Number,The method contains a magic number: 10,362
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamZonedDateTime,Magic Number,The method contains a magic number: 10,370
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamZonedDateTime,Magic Number,The method contains a magic number: 10,370
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamZonedDateTime_assert,Magic Number,The method contains a magic number: 10,404
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamZonedDateTime_assert,Magic Number,The method contains a magic number: 10,404
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamZonedDateTime_assert,Magic Number,The method contains a magic number: 10,404
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamZonedDateTime_assert,Magic Number,The method contains a magic number: 10,404
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod,Magic Number,The method contains a magic number: 10,412
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod,Magic Number,The method contains a magic number: 10,412
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod,Magic Number,The method contains a magic number: 2,412
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod,Magic Number,The method contains a magic number: 3,412
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod_assert,Magic Number,The method contains a magic number: 10,446
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod_assert,Magic Number,The method contains a magic number: 10,446
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod_assert,Magic Number,The method contains a magic number: 10,446
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamPeriod_assert,Magic Number,The method contains a magic number: 10,446
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamDuration,Magic Number,The method contains a magic number: 10,454
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamDuration,Magic Number,The method contains a magic number: 10,454
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamDuration,Magic Number,The method contains a magic number: 19,454
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamDuration_assert,Magic Number,The method contains a magic number: 10,488
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamDuration_assert,Magic Number,The method contains a magic number: 10,488
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamDuration_assert,Magic Number,The method contains a magic number: 10,488
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamDuration_assert,Magic Number,The method contains a magic number: 10,488
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamJson,Magic Number,The method contains a magic number: 10,496
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamJson,Magic Number,The method contains a magic number: 10,496
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamJson_assert,Magic Number,The method contains a magic number: 10,534
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamJson_assert,Magic Number,The method contains a magic number: 10,534
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamJson_assert,Magic Number,The method contains a magic number: 10,534
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,testStreamJson_assert,Magic Number,The method contains a magic number: 10,534
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,createMilPersonVertex,Magic Number,The method contains a magic number: 100,542
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,createMilPersonVertex,Magic Number,The method contains a magic number: 10,542
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,createMilCarVertex,Magic Number,The method contains a magic number: 100,565
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamEdge,createMilCarVertex,Magic Number,The method contains a magic number: 10,565
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchTemporaryVertex,testBatchTempVertex,Magic Number,The method contains a magic number: 1_000_000,20
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchTemporaryVertex,testBatchTempVertex,Magic Number,The method contains a magic number: 2,20
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchJson,batchJson,Magic Number,The method contains a magic number: 10,57
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchJson,batchJson_assert,Magic Number,The method contains a magic number: 10,75
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchJson,batchUpdateJson,Magic Number,The method contains a magic number: 10,82
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchJson,batchUpdateJson,Magic Number,The method contains a magic number: 10,82
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchJson,batchUpdateJson_assert,Magic Number,The method contains a magic number: 10,110
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchJson,batchUpdateJsonWithNulls_assert,Long Parameter List,The method has 5 parameters. ,145
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchJson,testBatchJsonContainingEmbeddedJson,Long Statement,The length of the statement "String jsonQuery="{" + "\"chartEnabled\":true`" + "\"geom\":\"{\\\"type\\\":\\\"LineString\\\"`"+ "\\\"coordinates\\\":[[29.86946571`-24.77036915]`[29.8698364927907`-24.7697827794629]`[29.8690949272093`-24.7697827794629]]}\"`"+ "\"id\":\"2\"}}";" is 245.,162
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMultipleOutLabels,Magic Number,The method contains a magic number: 5,36
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMultipleOutLabels,Magic Number,The method contains a magic number: 5,36
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMultipleOutLabels,Magic Number,The method contains a magic number: 5,36
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMultipleOutLabels,Magic Number,The method contains a magic number: 5,36
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMultipleOutLabels,Magic Number,The method contains a magic number: 5,36
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMultipleOutLabels,Magic Number,The method contains a magic number: 5,36
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMulitpleOutLabels_assert,Magic Number,The method contains a magic number: 10,68
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMulitpleOutLabels_assert,Magic Number,The method contains a magic number: 10,68
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMulitpleOutLabels_assert,Magic Number,The method contains a magic number: 10,68
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testBatchModeEdgeMulitpleOutLabels_assert,Magic Number,The method contains a magic number: 10,68
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,issue57,Magic Number,The method contains a magic number: 100,75
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("Patient").out("name").forEachRemaining(v -> assertTrue(v.label().equals("HumanNameDt")));" is 125.,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Long Statement,The length of the statement "assertEquals(indexCount`sqlgGraph.traversal().V().hasLabel("CodeableConceptDt").out("coding").count().next().intValue());" is 121.,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("Condition").out("code").forEachRemaining(v -> assertTrue(v.label().equals("CodeableConceptDt")));" is 133.,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("Condition").out("coding").forEachRemaining(v -> assertTrue(v.label().equals("CodingDt")));" is 126.,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("Condition").out("patient").forEachRemaining(v -> assertTrue(v.label().equals("Patient")));" is 126.,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("Condition").out("category").forEachRemaining(v -> assertTrue(v.label().equals("CodeableConcept")));" is 135.,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("CodeableConcept").out("coding").forEachRemaining(v -> assertTrue(v.label().equals("CodingDt")));" is 132.,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchEdgeWithMultipleOutLabels,testIssue57_assert,Magic Number,The method contains a magic number: 2,109
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitiveArrays,data,Long Statement,The length of the statement "return Arrays.asList(new Object[][]{{new String[]{"asdasd"`"asdasd"}}`{new boolean[]{false`true}}`{new Boolean[]{Boolean.TRUE`Boolean.FALSE}}`{new byte[]{(byte)1`(byte)2}}`{new short[]{(short)1`(short)2}}`{new Short[]{(short)1`(short)2}}`{new int[]{1`1}}`{new Integer[]{1`1}}`{new long[]{1L`2L}}`{new Long[]{1L`2L}}`{new double[]{2D`1D}}`{new Double[]{2D`3D}}});" is 362.,34
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitiveArrays,data,Magic Number,The method contains a magic number: 2,34
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitiveArrays,data,Magic Number,The method contains a magic number: 2,34
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitiveArrays,data,Magic Number,The method contains a magic number: 2,34
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitiveArrays,beforeTest,Complex Method,Cyclomatic complexity of the method is 9,44
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitiveArrays,test,Complex Method,Cyclomatic complexity of the method is 16,106
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testNullProperties,Magic Number,The method contains a magic number: 1000,63
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSize,Magic Number,The method contains a magic number: 100,90
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSize,Magic Number,The method contains a magic number: 1000,90
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSize,Magic Number,The method contains a magic number: 50,90
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSize,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSize,Magic Number,The method contains a magic number: 1000,90
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSize,Magic Number,The method contains a magic number: 2000,135
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSize,Magic Number,The method contains a magic number: 1000,135
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeNonDefaultSchema,Magic Number,The method contains a magic number: 1000,152
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeNonDefaultSchema,Magic Number,The method contains a magic number: 1000,152
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeNonDefaultSchema,Magic Number,The method contains a magic number: 50,152
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeNonDefaultSchema,Magic Number,The method contains a magic number: 2,152
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeNonDefaultSchema,Magic Number,The method contains a magic number: 1000,152
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeNonDefaultSchema_assert,Magic Number,The method contains a magic number: 2000,195
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeNonDefaultSchema_assert,Magic Number,The method contains a magic number: 1000,195
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeWithCallBack,Magic Number,The method contains a magic number: 10,211
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeWithCallBack,Magic Number,The method contains a magic number: 1000,211
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeWithCallBack_assert,Magic Number,The method contains a magic number: 10,238
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testStreamingWithBatchSizeWithCallBack_assert,Magic Number,The method contains a magic number: 9,238
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,streamJava8StyleWithSchema,Magic Number,The method contains a magic number: 1000,243
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,streamJava8StyleWithSchema_assert,Magic Number,The method contains a magic number: 5,256
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testBatchContinuations,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testBatchContinuations,Magic Number,The method contains a magic number: 1000,260
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchedStreaming,testBatchContinuations_assert,Magic Number,The method contains a magic number: 102,282
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamTooLongLabelName,Long Statement,The length of the statement "this.sqlgGraph.streamVertex(T.label`"AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFABCDEFGH"`"name"`"halo");" is 122.,41
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamTooLongLabelNameEnsureMethods,Long Statement,The length of the statement "this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFABCDEFGH"`new LinkedHashMap<String`PropertyType>(){" is 182.,48
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamTooLongLabelNameEnsureMethods,Long Statement,The length of the statement "this.sqlgGraph.streamVertex(T.label`"AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFABCDEFGH"`"name"`"halo");" is 122.,48
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamColumnTooLongLabelNameEnsureMethods,Long Statement,The length of the statement "this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("AAAAAAAAAA"`new LinkedHashMap<String`PropertyType>(){" is 124.,62
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamColumnTooLongLabelNameEnsureMethods,Long Statement,The length of the statement "this.sqlgGraph.streamVertex(T.label`"AAAAAAAAAA"`"AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFABCDEFGH"`"halo");" is 128.,62
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testAccessPropertyFromEdgeWhileStreaming,Magic Number,The method contains a magic number: 100,76
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testAccessPropertyFromVertexWhileStreaming,Long Statement,The length of the statement "Assert.assertEquals("a1"`SqlgVertex.of(this.sqlgGraph`recordId.sequenceId()`recordId.getSchemaTable().getSchema()`recordId.getSchemaTable().getTable()).value("name"));" is 167.,96
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testAccessPropertyFromVertexWhileStreaming,Magic Number,The method contains a magic number: 100,96
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryWhileStreaming,Magic Number,The method contains a magic number: 100,119
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryWhileStreaming,Magic Number,The method contains a magic number: 100,119
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromVertexWhileStreaming,Magic Number,The method contains a magic number: 100,129
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromVertexWhileStreaming,Magic Number,The method contains a magic number: 100,129
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromVertexWhileStreaming2,Magic Number,The method contains a magic number: 100,144
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromVertexWhileStreaming2,Magic Number,The method contains a magic number: 100,144
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromVertexWhileStreaming3,Magic Number,The method contains a magic number: 100,159
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromVertexWhileStreaming3,Magic Number,The method contains a magic number: 100,159
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromGraphVerticesWhileStreaming,Magic Number,The method contains a magic number: 100,174
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromGraphVerticesWhileStreaming,Magic Number,The method contains a magic number: 102,174
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromGraphEdgesWhileStreaming,Magic Number,The method contains a magic number: 100,189
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testCanNotQueryFromGraphEdgesWhileStreaming,Magic Number,The method contains a magic number: 102,189
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testVertexWithNoProperties,Magic Number,The method contains a magic number: 100,204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testVertexWithNoProperties,Magic Number,The method contains a magic number: 100,204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testVertexWithNoProperties,Magic Number,The method contains a magic number: 100,204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamingVertexDifferentSchema,Magic Number,The method contains a magic number: 2,296
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamingVertexDifferentSchema,Magic Number,The method contains a magic number: 2,296
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testUsingConnectionDuringResultSetIter,Magic Number,The method contains a magic number: 100_001,315
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testUsingConnectionDuringResultSetIter,Magic Number,The method contains a magic number: 2,315
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testUsingConnectionDuringResultSetIter,Magic Number,The method contains a magic number: 25_000,315
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testUsingConnectionDuringResultSetIter,Magic Number,The method contains a magic number: 100_000,315
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testUsingConnectionDuringResultSetIter,Magic Number,The method contains a magic number: 100_000,315
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testMilCompleteVertex,Magic Number,The method contains a magic number: 100_001,339
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testMilCompleteVertex,Magic Number,The method contains a magic number: 2,339
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testMilCompleteVertex,Magic Number,The method contains a magic number: 25_000,339
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testMilCompleteVertex,Magic Number,The method contains a magic number: 100_000L,339
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testMilCompleteVertex,Magic Number,The method contains a magic number: 100_000L,339
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamingRollback,Magic Number,The method contains a magic number: 1000,370
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamingRollback,Magic Number,The method contains a magic number: 1000,370
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,streamJava8Style,Magic Number,The method contains a magic number: 5,399
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,streamJava8Style,Magic Number,The method contains a magic number: 5,399
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLocalDateTime,Magic Number,The method contains a magic number: 10,412
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLocalDateTime_assert,Magic Number,The method contains a magic number: 10,427
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLocalDate,Magic Number,The method contains a magic number: 10,433
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLocalDate_assert,Magic Number,The method contains a magic number: 10,448
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLocalTime,Magic Number,The method contains a magic number: 10,454
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLocalTime_assert,Magic Number,The method contains a magic number: 10,469
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamZonedDateTime,Magic Number,The method contains a magic number: 10,475
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamZonedDateTime_assert,Magic Number,The method contains a magic number: 10,490
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamPeriod,Magic Number,The method contains a magic number: 2,496
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamPeriod,Magic Number,The method contains a magic number: 3,496
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamPeriod,Magic Number,The method contains a magic number: 10,496
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testSteamPeriod_assert,Magic Number,The method contains a magic number: 10,511
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamDuration,Magic Number,The method contains a magic number: 19,517
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamDuration,Magic Number,The method contains a magic number: 10,517
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamDuration_assert,Magic Number,The method contains a magic number: 10,532
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamJson,Magic Number,The method contains a magic number: 10,538
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamJson_assert,Magic Number,The method contains a magic number: 10,555
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamStringArray,Magic Number,The method contains a magic number: 10,562
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamStringArray_assert,Magic Number,The method contains a magic number: 10,577
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamBooleanArray,Magic Number,The method contains a magic number: 10,583
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testSteamBooleanArray_assert,Magic Number,The method contains a magic number: 10,598
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamIntArray,Magic Number,The method contains a magic number: 10,604
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamIntArray_assert,Magic Number,The method contains a magic number: 10,619
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLongArray,Magic Number,The method contains a magic number: 10,625
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamLongArray_assert,Magic Number,The method contains a magic number: 10,640
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamFloatArray,Magic Number,The method contains a magic number: 10,646
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamFloatArray_assert,Magic Number,The method contains a magic number: 10,661
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamDoubleArray,Magic Number,The method contains a magic number: 10,667
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamDoubleArray_assert,Magic Number,The method contains a magic number: 10,682
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamShortArray,Magic Number,The method contains a magic number: 10,688
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamShortArray_assert,Magic Number,The method contains a magic number: 10,703
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamByteArray,Magic Number,The method contains a magic number: 10,709
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamByteArray_assert,Magic Number,The method contains a magic number: 10,724
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testLocalDateTimeArray,Magic Number,The method contains a magic number: 10,730
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testLocalDateTimeArray_assert,Magic Number,The method contains a magic number: 10,745
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testLocalDateArray,Magic Number,The method contains a magic number: 10,751
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testLocalDateArray_assert,Magic Number,The method contains a magic number: 10,766
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testLocalTimeArray,Magic Number,The method contains a magic number: 10,772
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testLocalTimeArray_assert,Magic Number,The method contains a magic number: 10,787
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray,Magic Number,The method contains a magic number: 10,797
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 11,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 2,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 3,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 4,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 5,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 6,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 7,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 8,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 9,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testZonedDateTimeArray_assert,Magic Number,The method contains a magic number: 10,814
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray,Magic Number,The method contains a magic number: 5,834
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray,Magic Number,The method contains a magic number: 10,834
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray,Magic Number,The method contains a magic number: 10,834
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 11,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 2,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 3,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 4,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 5,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 6,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 7,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 8,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 9,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testDurationArray_assert,Magic Number,The method contains a magic number: 10,851
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray,Magic Number,The method contains a magic number: 2016,871
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray,Magic Number,The method contains a magic number: 2017,871
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray,Magic Number,The method contains a magic number: 2,871
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray,Magic Number,The method contains a magic number: 2,871
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray,Magic Number,The method contains a magic number: 10,871
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 11,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 2,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 3,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 4,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 5,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 6,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 7,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 8,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 9,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testPeriodArray_assert,Magic Number,The method contains a magic number: 10,888
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamJsonAsArray,Magic Number,The method contains a magic number: 10,908
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamVertex,testStreamJsonAsArray,Magic Number,The method contains a magic number: 10,908
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNormalModeEdgeMultiColumnProperties,Magic Number,The method contains a magic number: 2,46
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNormalModeEdgeMultiColumnProperties,Magic Number,The method contains a magic number: 2,46
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNormalModeMultiColumnProperties,Magic Number,The method contains a magic number: 2,66
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNormalModeMultiColumnProperties,Magic Number,The method contains a magic number: 4,66
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNormalModeMultiColumnProperties,Magic Number,The method contains a magic number: 3,66
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNormalModeMultiColumnProperties,Magic Number,The method contains a magic number: 6,66
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNormalModeMultiColumnProperties,Magic Number,The method contains a magic number: 5,66
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNonUTF8Chars,Long Statement,The length of the statement "Assert.assertEquals(1001`this.sqlgGraph.traversal().V().hasLabel("A").has("value"`"Rio’s Supermarket").count().next()`0);" is 121.,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNonUTF8Chars,Magic Number,The method contains a magic number: 1000,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNonUTF8Chars,Magic Number,The method contains a magic number: 1001,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchNonUTF8Chars,Magic Number,The method contains a magic number: 1001,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testNullProperties,Magic Number,The method contains a magic number: 1000,137
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testNullProperties_assert,Long Parameter List,The method has 5 parameters. ,154
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting,Magic Number,The method contains a magic number: 101,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting,Magic Number,The method contains a magic number: 10,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting,Magic Number,The method contains a magic number: 2,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting,Magic Number,The method contains a magic number: 2,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting,Magic Number,The method contains a magic number: 1000,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("A").forEachRemaining(v -> Assert.assertEquals(2`sqlgGraph.traversal().V(v).out("ab").count().next().intValue()));" is 149.,183
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting_assert,Magic Number,The method contains a magic number: 100,183
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting_assert,Magic Number,The method contains a magic number: 200,183
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting_assert,Magic Number,The method contains a magic number: 200,183
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testQueryWhileInserting_assert,Magic Number,The method contains a magic number: 2,183
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemoveWhileInserting,Magic Number,The method contains a magic number: 101,190
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemoveWhileInserting,Magic Number,The method contains a magic number: 10,190
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemoveWhileInserting,Magic Number,The method contains a magic number: 1000,190
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovalWhileInserting_assert,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("A").forEachRemaining(v -> Assert.assertEquals(2`sqlgGraph.traversal().V(v).out("ab").count().next().intValue()));" is 149.,215
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovalWhileInserting_assert,Magic Number,The method contains a magic number: 90,215
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovalWhileInserting_assert,Magic Number,The method contains a magic number: 200,215
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovalWhileInserting_assert,Magic Number,The method contains a magic number: 180,215
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovalWhileInserting_assert,Magic Number,The method contains a magic number: 2,215
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEscapingCharacters,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"MO1"`"name"`"marko" + i`"test1"`"\\"`"test2"`"\nhalo"`"test3"`"\rhalo"`"test4"`"\thalo");" is 133.,222
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEscapingCharacters,Long Statement,The length of the statement "Vertex v2=this.sqlgGraph.addVertex(T.label`"Person"`"name"`"marko" + i`"test1"`"\\"`"test2"`"\nhalo"`"test3"`"\rhalo"`"test4"`"\thalo");" is 136.,222
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEscapingCharacters,Magic Number,The method contains a magic number: 10000,222
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEscapingCharacters,Magic Number,The method contains a magic number: 1000,222
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEscapingCharacters_assert,Magic Number,The method contains a magic number: 20000,242
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEscapingCharacters_assert,Magic Number,The method contains a magic number: 10000,242
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesBatchOn,Magic Number,The method contains a magic number: 10000,247
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesBatchOn,Magic Number,The method contains a magic number: 1000,247
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesBatchOn_assert,Magic Number,The method contains a magic number: 20000,267
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesBatchOn_assert,Magic Number,The method contains a magic number: 10000,267
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchEdgesManyProperties,Magic Number,The method contains a magic number: 2,272
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchEdgesManyProperties,Magic Number,The method contains a magic number: 1000,272
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchEdgesManyProperties_assert,Magic Number,The method contains a magic number: 3,288
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchEdgesManyProperties_assert,Magic Number,The method contains a magic number: 2,288
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchEdgesDifferentProperties,Magic Number,The method contains a magic number: 2,300
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchVertexDifferentProperties,Magic Number,The method contains a magic number: 2,311
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchVertexDifferentProperties,Magic Number,The method contains a magic number: 1000,311
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchVertices,Magic Number,The method contains a magic number: 2,342
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchVertices,Magic Number,The method contains a magic number: 1000,342
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchVertices_assert,Magic Number,The method contains a magic number: 3,358
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchVertices_assert,Magic Number,The method contains a magic number: 2,358
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchModeNeedsCleanTransactionPass,Magic Number,The method contains a magic number: 4,367
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchModeNeedsCleanTransactionPass,Magic Number,The method contains a magic number: 1000,367
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchModeNeedsCleanTransactionPass,Magic Number,The method contains a magic number: 4,367
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEdgeCopyHappensInIsolation,Magic Number,The method contains a magic number: 100000,407
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEdgeCopyHappensInIsolation,Magic Number,The method contains a magic number: 200000,407
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEdgeCopyHappensInIsolation,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVertexProperties,Magic Number,The method contains a magic number: 100,468
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVertexProperties,Magic Number,The method contains a magic number: 100,468
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEdgeProperties,Magic Number,The method contains a magic number: 100,502
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEdgeProperties,Magic Number,The method contains a magic number: 100,502
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEdgeProperties,Magic Number,The method contains a magic number: 1000,502
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEdgeProperties_assert,Long Parameter List,The method has 5 parameters. ,532
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testUpdateInsertedVertexProperty,Magic Number,The method contains a magic number: 1000,546
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testAddPropertyToInsertedVertexProperty,Magic Number,The method contains a magic number: 1000,567
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testUpdateInsertedEdgeProperty,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testUpdateInsertedEdgeProperty,Magic Number,The method contains a magic number: 1000,588
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testUpdateInsertedEdgeProperty_assert,Magic Number,The method contains a magic number: 2,603
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testUpdateInsertedEdgeProperty_assert,Magic Number,The method contains a magic number: 2,603
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemoveProperty,Magic Number,The method contains a magic number: 1000,608
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 144.,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Long Statement,The length of the statement "Vertex marko=this.sqlgGraph.addVertex(T.label`"Person"`"name"`"marko"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 143.,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Long Statement,The length of the statement "Vertex john=this.sqlgGraph.addVertex(T.label`"Person"`"name"`"john"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 141.,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Long Statement,The length of the statement "Edge colleague=marko.addEdge("Colleague"`john`"toRemove"`"a"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 134.,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Magic Number,The method contains a magic number: 100,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Magic Number,The method contains a magic number: 100,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Magic Number,The method contains a magic number: 100,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Magic Number,The method contains a magic number: 100,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Magic Number,The method contains a magic number: 100,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Magic Number,The method contains a magic number: 100,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testRemovePropertyUserSuppliedPK,Magic Number,The method contains a magic number: 1000,627
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel rootVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("ROOT"`new HashMap<String`PropertyType>(){" is 140.,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel godVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("God"`new HashMap<String`PropertyType>(){" is 138.,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testGetEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance,Magic Number,The method contains a magic number: 10000,760
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance,Magic Number,The method contains a magic number: 3,760
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance,Magic Number,The method contains a magic number: 10000,760
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance,Magic Number,The method contains a magic number: 1000,760
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance_assert,Magic Number,The method contains a magic number: 10000,792
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance_assert,Magic Number,The method contains a magic number: 10000,792
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance_assert,Magic Number,The method contains a magic number: 10000,792
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testPerformance_assert,Magic Number,The method contains a magic number: 10000,792
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVertexLabelCache,Magic Number,The method contains a magic number: 1000,815
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVertexMultipleEdgesLabels,Magic Number,The method contains a magic number: 1000,840
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVertexMulitpleEdgesLabels_assert,Magic Number,The method contains a magic number: 2,856
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testAddEdgeAccrossSchema,Magic Number,The method contains a magic number: 1000,860
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testAddEdgeAccrossSchema_assert,Magic Number,The method contains a magic number: 2,878
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testCacheAndUpdateVERTICESLabels,Magic Number,The method contains a magic number: 10000,882
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testCacheAndUpdateVERTICESLabels,Magic Number,The method contains a magic number: 1000,882
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testCacheAndUpdateVERTICESLabels_assert,Magic Number,The method contains a magic number: 10000,903
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testCacheAndUpdateVERTICESLabels_assert,Magic Number,The method contains a magic number: 10000,903
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testCacheAndUpdateVERTICESLabels_assert,Magic Number,The method contains a magic number: 10000,903
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchInsertDifferentKeys,Magic Number,The method contains a magic number: 1000,915
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesOutLabelsForPersistentVertices,Long Statement,The length of the statement "Assert.assertEquals("Huawei_Gsm"`vertexTraversal(this.sqlgGraph`softwareVersion).in("vendorTechnology_softwareVersion").next().value("name"));" is 142.,942
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesOutLabelsForPersistentVertices,Magic Number,The method contains a magic number: 1000,942
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesOutLabelsForPersistentVertices_assert,Long Statement,The length of the statement "Assert.assertEquals("Huawei_Gsm"`vertexTraversal(sqlgGraph`softwareVersion).in("vendorTechnology_softwareVersion").next().value("name"));" is 137.,965
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesInLabelsForPersistentVertices,Long Statement,The length of the statement "Assert.assertEquals("Huawei_Gsm"`vertexTraversal(this.sqlgGraph`softwareVersion).out("softwareVersion_vendorTechnology").next().value("name"));" is 143.,970
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesInLabelsForPersistentVertices,Magic Number,The method contains a magic number: 1000,970
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testVerticesInLabelsForPersistentVertices_assert,Long Statement,The length of the statement "Assert.assertEquals("Huawei_Gsm"`vertexTraversal(sqlgGraph`softwareVersion).out("softwareVersion_vendorTechnology").next().value("name"));" is 138.,993
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVertices,Magic Number,The method contains a magic number: 1000,998
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes,Magic Number,The method contains a magic number: 2,1024
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes,Magic Number,The method contains a magic number: 2,1024
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes,Magic Number,The method contains a magic number: 2L,1024
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes,Magic Number,The method contains a magic number: 2F,1024
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes,Magic Number,The method contains a magic number: 2D,1024
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes,Magic Number,The method contains a magic number: 1000,1024
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes_assert,Magic Number,The method contains a magic number: 2,1061
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes_assert,Magic Number,The method contains a magic number: 2,1061
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes_assert,Magic Number,The method contains a magic number: 2L,1061
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes_assert,Magic Number,The method contains a magic number: 2F,1061
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdatePersistentVerticesAllTypes_assert,Magic Number,The method contains a magic number: 2D,1061
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testInsertUpdateQuotedStrings,Magic Number,The method contains a magic number: 100,1079
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVertexUsersSuppliedPK,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVertexUsersSuppliedPK,Long Statement,The length of the statement "Vertex v2=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVertexUsersSuppliedPK,Long Statement,The length of the statement "Vertex v3=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVertexUsersSuppliedPK,Magic Number,The method contains a magic number: 100,1120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVertexUsersSuppliedPK,Magic Number,The method contains a magic number: 100,1120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 144.,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Long Statement,The length of the statement "Vertex v2=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Long Statement,The length of the statement "Vertex v3=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Magic Number,The method contains a magic number: 100,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Magic Number,The method contains a magic number: 100,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Magic Number,The method contains a magic number: 100,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Magic Number,The method contains a magic number: 100,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_UserSuppliedPK,Magic Number,The method contains a magic number: 1000,1143
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges_assert,Magic Number,The method contains a magic number: 3,1180
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveEdges,Magic Number,The method contains a magic number: 1000,1185
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 144.,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Long Statement,The length of the statement "Vertex v2=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Long Statement,The length of the statement "Vertex v3=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 100,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdgesUserSuppliedPK,Magic Number,The method contains a magic number: 1000,1204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesAndEdges,Magic Number,The method contains a magic number: 1000,1244
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGone,Magic Number,The method contains a magic number: 1000,1271
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 144.,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Long Statement,The length of the statement "Vertex v2=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Long Statement,The length of the statement "Vertex v3=this.sqlgGraph.addVertex(T.label`"Person"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 125.,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Magic Number,The method contains a magic number: 100,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Magic Number,The method contains a magic number: 100,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Magic Number,The method contains a magic number: 100,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Magic Number,The method contains a magic number: 100,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveVerticesEdgesMustBeGoneUserSuppliedPK,Magic Number,The method contains a magic number: 1000,1291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testDeletePerformance,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`this.sqlgGraph.getSqlDialect().getPublicSchema() + ".WorkspaceElement"`"name"`"workspaceElement" + i);" is 145.,1334
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testDeletePerformance,Long Statement,The length of the statement "List<Vertex> vertexes=this.sqlgGraph.traversal().V().has(T.label`this.sqlgGraph.getSqlDialect().getPublicSchema() + ".WorkspaceElement").toList();" is 146.,1334
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testDeletePerformance,Magic Number,The method contains a magic number: 2810,1334
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testDeletePerformance,Magic Number,The method contains a magic number: 281,1334
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testDeletePerformance,Magic Number,The method contains a magic number: 1000,1334
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteVertexNewlyAdded,Magic Number,The method contains a magic number: 100,1427
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteVertexNewlyAdded,Magic Number,The method contains a magic number: 50,1427
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteVertexNewlyAdded,Magic Number,The method contains a magic number: 1000,1427
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteVertexNewlyAdded_assert,Magic Number,The method contains a magic number: 51,1447
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteVertexNewlyAdded_assert,Magic Number,The method contains a magic number: 50,1447
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteEdgeNewlyAdded,Magic Number,The method contains a magic number: 100,1452
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteEdgeNewlyAdded,Magic Number,The method contains a magic number: 50,1452
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteEdgeNewlyAdded,Magic Number,The method contains a magic number: 1000,1452
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteEdgeNewlyAdded_assert,Magic Number,The method contains a magic number: 101,1472
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchDeleteEdgeNewlyAdded_assert,Magic Number,The method contains a magic number: 50,1472
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testNullEdge,Magic Number,The method contains a magic number: 1000,1477
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdateDifferentPropertiesDifferentRows,Magic Number,The method contains a magic number: 1000,1506
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchUpdateNewVertex,Magic Number,The method contains a magic number: 1000,1563
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimit,Magic Number,The method contains a magic number: 100000,1591
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimit,Magic Number,The method contains a magic number: 100001,1591
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimit,Magic Number,The method contains a magic number: 100000,1591
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimit,Magic Number,The method contains a magic number: 1000,1591
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 144.,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"Person"`"dummy"`"a"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 137.,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Long Statement,The length of the statement "Vertex v2=this.sqlgGraph.addVertex(T.label`"Person"`"dummy"`"a"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 137.,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 100,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 100,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 100,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 100,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 100000,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 100001,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 100000,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimitUserSuppliedPK,Magic Number,The method contains a magic number: 1000,1613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchRemoveManyEdgesTestPostgresLimit_assert,Magic Number,The method contains a magic number: 100001,1655
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testNoProperties,Magic Number,The method contains a magic number: 100,1660
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testNoProperties,Magic Number,The method contains a magic number: 100,1660
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testBatchEdgeLoadProperty,Long Statement,The length of the statement "Assert.assertEquals("thisthatandanother"`this.sqlgGraph.traversal().E().hasLabel("edgeToRoot").next().value("className"));" is 122.,1675
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEmptyEdge,Magic Number,The method contains a magic number: 2,1691
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEmpty,Magic Number,The method contains a magic number: 1000,1702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatch,testEmpty106,Magic Number,The method contains a magic number: 1000,1720
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testString,Magic Number,The method contains a magic number: 10,40
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testString_assert,Magic Number,The method contains a magic number: 10,58
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testStringEdge,Magic Number,The method contains a magic number: 10,66
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testStringEdge_assert,Magic Number,The method contains a magic number: 10,86
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBoolean,Magic Number,The method contains a magic number: 10,94
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBoolean,Magic Number,The method contains a magic number: 2,94
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBoolean_assert,Magic Number,The method contains a magic number: 10,112
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanEdge,Magic Number,The method contains a magic number: 10,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanEdge,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanEdge_assert,Magic Number,The method contains a magic number: 10,140
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitive,Magic Number,The method contains a magic number: 10,148
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitive,Magic Number,The method contains a magic number: 10,148
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitive,Magic Number,The method contains a magic number: 2,148
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitive_assert,Magic Number,The method contains a magic number: 10,165
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitiveEdge,Magic Number,The method contains a magic number: 10,175
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitiveEdge,Magic Number,The method contains a magic number: 10,175
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitiveEdge,Magic Number,The method contains a magic number: 2,175
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testBooleanPrimitiveEdge_assert,Magic Number,The method contains a magic number: 10,194
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testInteger,Magic Number,The method contains a magic number: 10,204
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testInteger_assert,Magic Number,The method contains a magic number: 10,221
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerEdge,Magic Number,The method contains a magic number: 10,229
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerEdge_assert,Magic Number,The method contains a magic number: 10,248
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerPrimitive,Magic Number,The method contains a magic number: 10,256
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerPrimitive,Magic Number,The method contains a magic number: 10,256
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerPrimitive_assert,Magic Number,The method contains a magic number: 10,272
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerPrimitiveEdge,Magic Number,The method contains a magic number: 10,282
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerPrimitiveEdge,Magic Number,The method contains a magic number: 10,282
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testIntegerPrimitiveEdge_assert,Magic Number,The method contains a magic number: 10,300
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShort,Magic Number,The method contains a magic number: 10,310
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShort_assert,Magic Number,The method contains a magic number: 10,327
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortEdge,Magic Number,The method contains a magic number: 10,335
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortEdge_assert,Magic Number,The method contains a magic number: 10,354
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortPrimitive,Magic Number,The method contains a magic number: 10,362
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortPrimitive,Magic Number,The method contains a magic number: 10,362
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortPrimitive_assert,Magic Number,The method contains a magic number: 10,378
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortPrimitiveEdge,Magic Number,The method contains a magic number: 10,388
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortPrimitiveEdge,Magic Number,The method contains a magic number: 10,388
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testShortPrimitiveEdge_assert,Magic Number,The method contains a magic number: 10,406
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLong,Magic Number,The method contains a magic number: 10,416
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLong_assert,Magic Number,The method contains a magic number: 10,433
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongEdge,Magic Number,The method contains a magic number: 10,441
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongEdge_assert,Magic Number,The method contains a magic number: 10,460
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongPrimitive,Magic Number,The method contains a magic number: 10,468
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongPrimitive,Magic Number,The method contains a magic number: 10,468
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongPrimitive_assert,Magic Number,The method contains a magic number: 10,484
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongPrimitiveEdge,Magic Number,The method contains a magic number: 10,494
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongPrimitiveEdge,Magic Number,The method contains a magic number: 10,494
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testLongPrimitiveEdge_assert,Magic Number,The method contains a magic number: 10,512
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloat,Magic Number,The method contains a magic number: 10,522
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloat_assert,Magic Number,The method contains a magic number: 10,540
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatEdge,Magic Number,The method contains a magic number: 10,548
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatEdge_assert,Magic Number,The method contains a magic number: 10,568
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatPrimitive,Magic Number,The method contains a magic number: 10,576
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatPrimitive,Magic Number,The method contains a magic number: 10,576
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatPrimitive_assert,Magic Number,The method contains a magic number: 10,593
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatPrimitiveEdge,Magic Number,The method contains a magic number: 10,603
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatPrimitiveEdge,Magic Number,The method contains a magic number: 10,603
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testFloatPrimitiveEdge_assert,Magic Number,The method contains a magic number: 10,622
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDouble,Magic Number,The method contains a magic number: 10,632
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDouble_assert,Magic Number,The method contains a magic number: 10,649
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoubleEdge,Magic Number,The method contains a magic number: 10,657
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoubleEdge_assert,Magic Number,The method contains a magic number: 10,676
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoublePrimitive,Magic Number,The method contains a magic number: 10,684
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoublePrimitive,Magic Number,The method contains a magic number: 10,684
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoublePrimitive_assert,Magic Number,The method contains a magic number: 10,702
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoublePrimitiveEdge,Magic Number,The method contains a magic number: 10,712
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoublePrimitiveEdge,Magic Number,The method contains a magic number: 10,712
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalPrimitive,testDoublePrimitiveEdge_assert,Magic Number,The method contains a magic number: 10,730
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalDateTimeArray,Long Statement,The length of the statement "LocalDateTime[] localDateTimeArrayAgain=new LocalDateTime[]{isHsqldb() ? LocalDateTime.now().plusDays(1).truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now().plusDays(1)`isHsqldb() ? LocalDateTime.now().plusDays(2).truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now().plusDays(2)};" is 281.,33
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalDateTimeArray,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalDateTimeArray,Magic Number,The method contains a magic number: 2,33
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalDateTimeArray_assert,Long Parameter List,The method has 5 parameters. ,61
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalDateArray,Magic Number,The method contains a magic number: 2,78
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalDateArray_assert,Long Parameter List,The method has 5 parameters. ,103
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalTimeArray,Magic Number,The method contains a magic number: 2,120
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateLocalTimeArray_assert,Long Parameter List,The method has 5 parameters. ,141
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateZonedDateTimeArray,Long Statement,The length of the statement "ZonedDateTime[] zonedDateTimeArrayAgain=new ZonedDateTime[]{isHsqldb() ? ZonedDateTime.now().plusHours(1).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().plusHours(1)`isHsqldb() ? ZonedDateTime.now().plusHours(2).truncatedTo(ChronoUnit.MILLIS) : ZonedDateTime.now().plusHours(2)};" is 285.,163
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateZonedDateTimeArray,Magic Number,The method contains a magic number: 2,163
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateZonedDateTimeArray,Magic Number,The method contains a magic number: 2,163
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateZonedDateTimeArray_assert,Long Parameter List,The method has 5 parameters. ,190
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateDurationArray,Magic Number,The method contains a magic number: 3,208
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateDurationArray,Magic Number,The method contains a magic number: 4,208
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdateDurationArray_assert,Long Parameter List,The method has 5 parameters. ,232
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdatePeriodArray,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdatePeriodArray,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdatePeriodArray,Magic Number,The method contains a magic number: 2,250
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdatePeriodArray,Magic Number,The method contains a magic number: 4,250
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdatePeriodArray,Magic Number,The method contains a magic number: 4,250
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdatePeriodArray,Magic Number,The method contains a magic number: 4,250
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTimeArrays,testUpdatePeriodArray_assert,Long Parameter List,The method has 5 parameters. ,274
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchModeMultipleGraphs,testStreamingBatchModeOnMultipleGraphs,Magic Number,The method contains a magic number: 10,33
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchModeMultipleGraphs,testStreamingBatchModeOnMultipleGraphs,Magic Number,The method contains a magic number: 10,33
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchModeMultipleGraphs,testStreamingBatchModeOnMultipleGraphs,Magic Number,The method contains a magic number: 1000,33
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchModeMultipleGraphs,testNormalBatchModeOnMultipleGraphs,Magic Number,The method contains a magic number: 10,49
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchModeMultipleGraphs,testNormalBatchModeOnMultipleGraphs,Magic Number,The method contains a magic number: 1000,49
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testLocalDateTimeUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,64
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testLocalDateUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,104
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testLocalTimeUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,144
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testZonedDateTimeUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,190
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testDurationUpdateNull,Magic Number,The method contains a magic number: 2,207
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testDurationUpdateNull,Magic Number,The method contains a magic number: 3,207
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testDurationUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,230
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testPeriodUpdateNull,Magic Number,The method contains a magic number: 2,247
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testPeriodUpdateNull,Magic Number,The method contains a magic number: 2,247
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testPeriodUpdateNull,Magic Number,The method contains a magic number: 2,247
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testPeriodUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,270
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDateTime,Magic Number,The method contains a magic number: 10,287
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDateTime,Magic Number,The method contains a magic number: 10,287
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateLocalDateTime_assert,Magic Number,The method contains a magic number: 10,317
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDateTimeEdge,Magic Number,The method contains a magic number: 10,324
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDateTimeEdge,Magic Number,The method contains a magic number: 10,324
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateLoDateTimeEdge_assert,Magic Number,The method contains a magic number: 10,356
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDate,Magic Number,The method contains a magic number: 10,363
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDate,Magic Number,The method contains a magic number: 10,363
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateLocalDate_assert,Magic Number,The method contains a magic number: 10,387
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDateEdge,Magic Number,The method contains a magic number: 10,394
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalDateEdge,Magic Number,The method contains a magic number: 10,394
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateLocalDateEdge_assert,Magic Number,The method contains a magic number: 10,420
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalTime,Magic Number,The method contains a magic number: 10,427
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalTime,Magic Number,The method contains a magic number: 10,427
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalTime,Magic Number,The method contains a magic number: 1000,427
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateLocaTime_assert,Magic Number,The method contains a magic number: 10,452
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalTimeEdge,Magic Number,The method contains a magic number: 10,459
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalTimeEdge,Magic Number,The method contains a magic number: 10,459
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateLocalTimeEdge,Magic Number,The method contains a magic number: 3,459
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateLocalTimeEdge_assert,Magic Number,The method contains a magic number: 10,485
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDuration,Magic Number,The method contains a magic number: 5,492
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDuration,Magic Number,The method contains a magic number: 10,492
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDuration,Magic Number,The method contains a magic number: 10,492
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDuration,Magic Number,The method contains a magic number: 10,492
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateDuration_assert,Magic Number,The method contains a magic number: 10,516
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDurationEdge,Magic Number,The method contains a magic number: 5,523
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDurationEdge,Magic Number,The method contains a magic number: 10,523
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDurationEdge,Magic Number,The method contains a magic number: 10,523
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateDurationEdge,Magic Number,The method contains a magic number: 10,523
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdateDurationEdge_assert,Magic Number,The method contains a magic number: 10,549
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriod,Magic Number,The method contains a magic number: 5,556
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriod,Magic Number,The method contains a magic number: 5,556
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriod,Magic Number,The method contains a magic number: 5,556
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriod,Magic Number,The method contains a magic number: 10,556
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriod,Magic Number,The method contains a magic number: 10,556
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriod,Magic Number,The method contains a magic number: 10,556
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,testUpdatePeriod_assert,Magic Number,The method contains a magic number: 10,580
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriodEdge,Magic Number,The method contains a magic number: 5,587
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriodEdge,Magic Number,The method contains a magic number: 5,587
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriodEdge,Magic Number,The method contains a magic number: 5,587
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriodEdge,Magic Number,The method contains a magic number: 10,587
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriodEdge,Magic Number,The method contains a magic number: 10,587
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriodEdge,Magic Number,The method contains a magic number: 10,587
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdatePeriodEdge_assert,Magic Number,The method contains a magic number: 10,613
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateZonedDateTime,Magic Number,The method contains a magic number: 10,620
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateZonedDateTime,Magic Number,The method contains a magic number: 10,620
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateZonedDateTime_assert,Magic Number,The method contains a magic number: 10,650
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateZonedDateTimeEdge,Magic Number,The method contains a magic number: 10,657
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateZonedDateTimeEdge,Magic Number,The method contains a magic number: 10,657
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdateDateTime,batchUpdateZonedDateTimeEdge_assert,Magic Number,The method contains a magic number: 10,689
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testStringArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,54
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testshortArrayUpdateNull_Assert,Long Parameter List,The method has 5 parameters. ,96
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testShortArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,137
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testintArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,179
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testIntegerArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,220
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testbooleanArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,262
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testBooleanArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,304
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testbyteArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,346
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testByteArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,387
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testlongArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,429
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testLongArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,471
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testfloatArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,513
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testFloatArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,555
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testdoubleArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,597
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalUpdatePrimitiveArrays,testDoubleArrayUpdateNull_assert,Long Parameter List,The method has 5 parameters. ,639
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertex,Magic Number,The method contains a magic number: 2,40
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertex,Magic Number,The method contains a magic number: 50,40
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertex,Magic Number,The method contains a magic number: 1000,40
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertex,Magic Number,The method contains a magic number: 60000,40
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertex,Magic Number,The method contains a magic number: 50,40
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertex_assert,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph.getTopology().getVertexLabel(sqlgGraph.getSqlDialect().getPublicSchema()`"Person" + i).isPresent());" is 128.,77
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertex_assert,Magic Number,The method contains a magic number: 2000,77
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Complex Conditional,The conditional expression (isPostgres() && e.getCause().getClass().getSimpleName().equals("PSQLException")) || (isHsqldb() && e.getCause().getClass().getSimpleName().equals("SQLSyntaxErrorException")) || (isMariaDb() && e.getCause().getClass().getSimpleName().equals("SQLSyntaxErrorException"))|| (isMysql() && e.getCause().getClass().getSimpleName().equals("SQLSyntaxErrorException"))|| (isH2() && e.getCause().getClass().getSimpleName().equals("JdbcSQLSyntaxErrorException")) is complex.,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Complex Method,Cyclomatic complexity of the method is 8,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Long Statement,The length of the statement "if ((isPostgres() && e.getCause().getClass().getSimpleName().equals("PSQLException")) || (isHsqldb() && e.getCause().getClass().getSimpleName().equals("SQLSyntaxErrorException")) || (isMariaDb() && e.getCause().getClass().getSimpleName().equals("SQLSyntaxErrorException"))|| (isMysql() && e.getCause().getClass().getSimpleName().equals("SQLSyntaxErrorException"))|| (isH2() && e.getCause().getClass().getSimpleName().equals("JdbcSQLSyntaxErrorException"))) {" is 458.,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Magic Number,The method contains a magic number: 2,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Magic Number,The method contains a magic number: 50,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Magic Number,The method contains a magic number: 3,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Magic Number,The method contains a magic number: 1000,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Magic Number,The method contains a magic number: 1000,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Magic Number,The method contains a magic number: 60000,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel,Magic Number,The method contains a magic number: 50,88
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel_assert,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph.getTopology().getVertexLabel(sqlgGraph.getSqlDialect().getPublicSchema()`"House").isPresent());" is 123.,154
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel_assert,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph.getTopology().getVertexLabel(sqlgGraph.getSqlDialect().getPublicSchema()`"Street").isPresent());" is 124.,154
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel_assert,Long Statement,The length of the statement "Assert.assertEquals(String.valueOf(i)`1000`sqlgGraph.traversal().V().has(T.label`"House").has("name"`i).count().next().intValue());" is 131.,154
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel_assert,Long Statement,The length of the statement "Assert.assertEquals(String.valueOf(i)`1000`sqlgGraph.traversal().V().has(T.label`"House").has("name"`i).out("Overlooks").has("name"`i).count().next().intValue());" is 162.,154
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel_assert,Magic Number,The method contains a magic number: 1000,154
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestMultiThreadedBatch,testMultiThreadAddVertexSameLabel_assert,Magic Number,The method contains a magic number: 1000,154
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdges_assert,Magic Number,The method contains a magic number: 10,43
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdges_assert,Magic Number,The method contains a magic number: 100,43
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdges_assert,Magic Number,The method contains a magic number: 100,43
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesOnUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"A"`new LinkedHashMap<>(){" is 152.,49
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesOnUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"B"`new LinkedHashMap<>(){" is 152.,49
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesOnUserSuppliedIds,Long Statement,The length of the statement "EdgeLabel edgeLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedEdgeLabelExist("AB"`aVertexLabel`bVertexLabel`new LinkedHashMap<>(){" is 147.,49
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesOnUserSuppliedIds,Magic Number,The method contains a magic number: 10,49
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesOnUserSuppliedIds,Magic Number,The method contains a magic number: 10,49
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdges,Magic Number,The method contains a magic number: 10,112
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdges,Magic Number,The method contains a magic number: 10,112
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesCrossSchemas,Magic Number,The method contains a magic number: 10,137
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesCrossSchemas,Magic Number,The method contains a magic number: 10,137
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesCrossSchemas_assert,Magic Number,The method contains a magic number: 10,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesCrossSchemas_assert,Magic Number,The method contains a magic number: 100,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesCrossSchemas_assert,Magic Number,The method contains a magic number: 100,161
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdges2,Magic Number,The method contains a magic number: 1000,167
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdges2,Magic Number,The method contains a magic number: 50,167
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesTempTableUnique,Magic Number,The method contains a magic number: 1000,222
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkEdgesTempTableUnique,Magic Number,The method contains a magic number: 1000,222
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkAddEdgesStringAndIntegerIds,Long Statement,The length of the statement "this.sqlgGraph.bulkAddEdges("RealWorkspaceElement"`"VirtualGroup"`"realWorkspaceElement_virtualGroup"`Pair.of("cmUid"`"ID")`ids);" is 129.,260
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkAddEdgeStringAndIntegerIds_assert,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph.traversal().V(realWorkspaceElement1.id()).out("realWorkspaceElement_virtualGroup").hasNext());" is 122.,285
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testBulkAddEdgeStringAndIntegerIds_assert,Long Statement,The length of the statement "Assert.assertTrue(sqlgGraph.traversal().V(realWorkspaceElement2.id()).out("realWorkspaceElement_virtualGroup").hasNext());" is 122.,285
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testOnIds,Long Statement,The length of the statement "sqlgGraph.bulkAddEdges("RealWorkspaceElement"`"VirtualGroup"`"realWorkspaceElement_virtualGroup"`Pair.of("ID"`"ID")`ids);" is 121.,291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testOnIds,Long Statement,The length of the statement "assertEquals(1_000`this.sqlgGraph.traversal().V(virtualGroup).in("realWorkspaceElement_virtualGroup").count().next().intValue());" is 129.,291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testOnIds,Long Statement,The length of the statement "assertEquals(1_000`this.sqlgGraph1.traversal().V(virtualGroup).in("realWorkspaceElement_virtualGroup").count().next().intValue());" is 130.,291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testOnIds,Magic Number,The method contains a magic number: 1_000,291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testOnIds,Magic Number,The method contains a magic number: 1_000,291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchServerSideEdgeCreation,testOnIds,Magic Number,The method contains a magic number: 1_000,291
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamTemporaryVertex,testTempBatch,Magic Number,The method contains a magic number: 1000,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamTemporaryVertex,testTempBatch,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamTemporaryVertex,testTempBatch,Magic Number,The method contains a magic number: 1000,37
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamTemporaryVertex,testStreamTemporaryVertexMultipleThreads,Empty catch clause,The method has an empty catch block.,62
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamTemporaryVertex,testStreamTemporaryVertexMultipleThreads,Magic Number,The method contains a magic number: 2,62
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamTemporaryVertex,run,Empty catch clause,The method has an empty catch block.,76
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchStreamTemporaryVertex,run,Magic Number,The method contains a magic number: 2,76
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestFriendsterLike,testSeparateThread,Long Statement,The length of the statement "assertEquals(9`this.sqlgGraph.traversal().V(RecordId.from(SchemaTable.of("public"`"Person")`Long.valueOf(i))).out().count().next()`0);" is 134.,27
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestFriendsterLike,testSeparateThread,Magic Number,The method contains a magic number: 10,27
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestFriendsterLike,testSeparateThread,Magic Number,The method contains a magic number: 11,27
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestFriendsterLike,testSeparateThread,Magic Number,The method contains a magic number: 9,27
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestFriendsterLike,testFriendsterLoad,Complex Method,Cyclomatic complexity of the method is 8,68
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,testLocalTime,Long Statement,The length of the statement "Assert.assertEquals(localTime.toSecondOfDay()`this.sqlgGraph.traversal().V(a1).<LocalTime>values("localTime").next().toSecondOfDay());" is 134.,62
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,testLocalTime,Long Statement,The length of the statement "Assert.assertEquals(localTime.toSecondOfDay()`this.sqlgGraph1.traversal().V(a1).<LocalTime>values("localTime").next().toSecondOfDay());" is 135.,62
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,testDuration,Magic Number,The method contains a magic number: 5,106
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,testPeriod,Magic Number,The method contains a magic number: 5,119
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,testPeriod,Magic Number,The method contains a magic number: 5,119
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,testPeriod,Magic Number,The method contains a magic number: 5,119
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchLocalDateTime,Magic Number,The method contains a magic number: 10,132
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchLocalDateTime_assert,Magic Number,The method contains a magic number: 10,151
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchLocalDate,Magic Number,The method contains a magic number: 10,157
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchLocalDate_assert,Magic Number,The method contains a magic number: 10,172
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchLocalTime,Magic Number,The method contains a magic number: 10,178
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchLocalTime_assert,Magic Number,The method contains a magic number: 10,193
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchDuration,Magic Number,The method contains a magic number: 2,199
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchDuration,Magic Number,The method contains a magic number: 3,199
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchDuration_assert,Long Parameter List,The method has 5 parameters. ,218
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchDuration_assert,Magic Number,The method contains a magic number: 4,218
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchDuration_assert,Magic Number,The method contains a magic number: 2,218
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchDuration_assert,Magic Number,The method contains a magic number: 3,218
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 2015,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 3,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 2015,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 3,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 2015,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 3,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 2,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 2015,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 3,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod,Magic Number,The method contains a magic number: 3,227
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod_assert,Long Parameter List,The method has 5 parameters. ,246
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod_assert,Magic Number,The method contains a magic number: 4,246
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod_assert,Magic Number,The method contains a magic number: 2,246
pietermartin_sqlg,org.umlg.sqlg.test.batch,TestBatchNormalDateTime,batchPeriod_assert,Magic Number,The method contains a magic number: 3,246
pietermartin_sqlg,org.umlg.sqlg.test.inject,TestInject,testInjectWithChoose,Magic Number,The method contains a magic number: 10,18
pietermartin_sqlg,org.umlg.sqlg.test.inject,TestInject,testInjectWithChoose,Magic Number,The method contains a magic number: 10,18
pietermartin_sqlg,org.umlg.sqlg.test.inject,TestInject,testInjectAndUnion,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().inject("ignore").union(__.V().hasLabel("A")`__.V().hasLabel("A")).toList();" is 124.,28
pietermartin_sqlg,org.umlg.sqlg.test.inject,TestInject,testInjectAndUnion,Magic Number,The method contains a magic number: 2,28
pietermartin_sqlg,org.umlg.sqlg.test.inject,TestInject,testInjectNestedBranchTraversalStepBug,Long Statement,The length of the statement "List<String> result=this.sqlgGraph.traversal().inject("test1"`"test2").where(__.choose(__.V().hasLabel("DoesntMatter")`__.constant(true)`__.constant(false))).toList();" is 167.,37
pietermartin_sqlg,org.umlg.sqlg.test.inject,TestInject,testInjectNestedBranchTraversalStepBug,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRoleAgain,test441,Long Statement,The length of the statement "statement.execute("CREATE TABLE \"PUBLIC\".\"V_A\" (\"ID\" BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY` \"name\" LONGVARCHAR);");" is 137.,16
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRoleAgain,test441,Long Statement,The length of the statement "Connection readOnlyConnection=DriverManager.getConnection("jdbc:hsqldb:file:src/test/db2/sqlgraphdb"`"sqlgReadOnly"`"sqlgReadOnly");" is 132.,16
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRole,testReadOnlyRoleOnPublicTable,Empty catch clause,The method has an empty catch block.,42
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRole,testReadOnlyRoleOnPublicTable,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRole,testReadOnlyRoleOnSchema,Empty catch clause,The method has an empty catch block.,64
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRole,testReadOnlyRoleOnSchema,Magic Number,The method contains a magic number: 2,64
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRole,testReadOnlyRoleOnSchemasVertexLabelAndEdgeLabel,Empty catch clause,The method has an empty catch block.,86
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRole,testReadOnlyRoleOnSchemasVertexLabelAndEdgeLabel,Magic Number,The method contains a magic number: 2,86
pietermartin_sqlg,org.umlg.sqlg.test.roles,TestReadOnlyRole,testReadOnlyRoleOnSchemasVertexLabelAndEdgeLabel,Magic Number,The method contains a magic number: 2,86
pietermartin_sqlg,org.umlg.sqlg.test.doctests,TestForDocs,testMatch,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().match(__.as("a").in("ab").as("x")`__.as("a").out("bc").as("y"));" is 142.,20
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testLocalVertexStepNotOptimizedPerformance,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.gt.V().local(__.optional(__.where(__.has(T.label`"A")).out())).path();" is 156.,23
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testLocalVertexStepNotOptimizedPerformance,Magic Number,The method contains a magic number: 10_000,23
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testLocalVertexStepNotOptimizedPerformance,Magic Number,The method contains a magic number: 1000,23
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testLocalVertexStepNotOptimizedPerformance,Magic Number,The method contains a magic number: 30_000,23
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testBatchingIncomingTraversersOnVertexStep,Magic Number,The method contains a magic number: 10,52
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testBatchingIncomingTraversersOnVertexStep,Magic Number,The method contains a magic number: 10_000,52
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testBatchingIncomingTraversersOnVertexStep,Magic Number,The method contains a magic number: 10_000,52
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testBatchingIncomingTraversersOnVertexStep,Magic Number,The method contains a magic number: 10_000,52
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testBatchingIncomingTraversersOnVertexStep,Magic Number,The method contains a magic number: 10,52
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testPreformanceBatchingIncomingTraversersOnLocalVertexStep,Magic Number,The method contains a magic number: 10_000,81
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testPreformanceBatchingIncomingTraversersOnLocalVertexStep,Magic Number,The method contains a magic number: 10000,81
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testGroup,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Map<String`Number>>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Map<String`Number>>>)this.sqlgGraph.traversal().V().out("followedBy").<String`Map<String`Number>>group().by("songType").by(__.bothE().group().by(T.label).by(__.values("weight").sum()));" is 297.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestVertexStepPerformance,testGroup,Magic Number,The method contains a magic number: 10000,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalRepeatStep,testLocalRepeatStep,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1));" is 246.,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalRepeatStep,testLocalRepeatStep,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalRepeatStep,testLocalRepeatStep,Magic Number,The method contains a magic number: 3,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalRepeatStep,testLocalRepeatStep,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalRepeatStep,testLocalRepeatStep,Magic Number,The method contains a magic number: 3,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalRepeatStep,testLocalRepeatStep,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").local(__.out().order().by("order"`Order.desc));" is 177.,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Magic Number,The method contains a magic number: 2,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Magic Number,The method contains a magic number: 3,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Magic Number,The method contains a magic number: 3,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Magic Number,The method contains a magic number: 2,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Magic Number,The method contains a magic number: 3,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimple,Magic Number,The method contains a magic number: 2,34
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").as("a").local(__.out().as("b")).order().by(__.select("a").by("order")`Order.desc).by(__.select("b").by("order")`Order.desc);" is 254.,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 3,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 10,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 3,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 4,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 4,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 6,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 2,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 3,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 4,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testSimpleButLessSo,Magic Number,The method contains a magic number: 5,65
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").local(__.optional(__.out().order().by("name").optional(__.out().order().by("name"`Order.desc)))).path();" is 230.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 132.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 132.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 132.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc1)));" is 133.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc1)).findAny().orElseThrow(IllegalStateException::new));" is 176.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2)));" is 133.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2)).findAny().orElseThrow(IllegalStateException::new));" is 176.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc3)));" is 133.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc3)).findAny().orElseThrow(IllegalStateException::new));" is 176.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb1)).findAny().orElseThrow(IllegalStateException::new));" is 153.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb2)).findAny().orElseThrow(IllegalStateException::new));" is 153.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb3)).findAny().orElseThrow(IllegalStateException::new));" is 153.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 129.,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 4,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 12,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 5,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 4,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 3,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder,Magic Number,The method contains a magic number: 2,108
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").local(__.optional(__.out().order().by("name").optional(__.out().order().by("name"`Order.desc).range(2`3)))).path();" is 241.,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 3,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 4,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 3,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 7,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 3,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 4,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 3,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange,Magic Number,The method contains a magic number: 2,221
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").local(__.optional(__.out().order().by("name").range(1`2).optional(__.out().order().by("name"`Order.desc).range(2`3)))).path();" is 252.,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 3,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 4,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 3,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 3,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 3,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderAndRange2,Magic Number,The method contains a magic number: 2,299
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").as("a").local(__.optional(__.outE().as("e").otherV().as("v"))).order().by("order");" is 213.,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 13,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 12,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 11,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 3,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 2,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 4,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 4,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 2,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 3,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 2,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 5,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 2,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 3,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrder2,Magic Number,The method contains a magic number: 4,367
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1.id()).local(__.optional(__.outE("ab").as("ab").otherV().as("vb").order().by(__.select("ab").by("order")`Order.asc).optional(__.outE("bc").as("bc").otherV().as("vc").order().by(__.select("bc").by("order")`Order.asc).optional(__.outE("cd").as("cd").inV().as("vd").order().by(__.select("cd").by("order")`Order.asc))))).path();" is 436.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc3) && p.get(4).equals(c3)));" is 180.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc3) && p.get(4).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 223.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc2) && p.get(4).equals(c2)));" is 180.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 5 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc2) && p.get(4).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 223.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd1) && p.get(6).equals(d1)));" is 227.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd1) && p.get(6).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 270.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd2) && p.get(6).equals(d2)));" is 227.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd2) && p.get(6).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 270.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd3) && p.get(6).equals(d3)));" is 227.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 7 && p.get(0).equals(a1) && p.get(1).equals(ab1) && p.get(2).equals(b1) && p.get(3).equals(bc1) && p.get(4).equals(c1) && p.get(5).equals(cd3) && p.get(6).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 270.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab2) && p.get(2).equals(b2)));" is 133.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab2) && p.get(2).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 176.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "Assert.assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab3) && p.get(2).equals(b3)));" is 133.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(ab3) && p.get(2).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 176.,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 7,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 4,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 5,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 6,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 3,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testOptionalWithOrderBy2,Magic Number,The method contains a magic number: 2,407
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().hasLabel("A").local(__.optional(__.out("ab").optional(__.out()))).out().order().by("order"`Order.desc);" is 219.,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 3,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 3,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 5,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 3,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 6,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 2,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 3,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 4,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testVertexStepAfterOptional,Magic Number,The method contains a magic number: 5,585
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Long Method,The method has 100 lines of code.,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)sqlgGraph.traversal().V().hasLabel("A").as("a").order().by("name"`Order.desc).local(__.optional(__.outE().as("e1").inV().as("b").order().by(T.label).by(__.select("e1").by("order")).local(__.optional(__.outE().as("e2").inV().order().by(T.label).by(__.select("e2").by("order")))))).path();" is 368.,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Long Statement,The length of the statement "@SuppressWarnings("unchecked") DefaultGraphTraversal<Vertex`Vertex> t=(DefaultGraphTraversal<Vertex`Vertex>)sqlgLocalStepBarrier.getLocalChildren().get(0);" is 155.,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Long Statement,The length of the statement "@SuppressWarnings("unused") SqlgLocalStepBarrier sqlgLocalStepBarrier1=(SqlgLocalStepBarrier)optionalTraversal.getSteps().get(1);" is 129.,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 12,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 6,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 7,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 8,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 5,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 2,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 4,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 9,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirement,Magic Number,The method contains a magic number: 3,648
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)sqlgGraph.traversal().V().hasLabel("A").as("a").order().by("name"`Order.desc).local(__.optional(__.outE().as("e1").inV().as("b").order().by(__.select("a").by(T.id)).by(T.label).by(__.select("e1").by("order")).limit(1).local(__.optional(__.outE().as("e2").inV().order().by(__.select("b").by(T.id)).by(T.label).by(__.select("e2").by("order")))))).path();" is 433.,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Long Statement,The length of the statement "@SuppressWarnings("unchecked") DefaultGraphTraversal<Vertex`Vertex> t=(DefaultGraphTraversal<Vertex`Vertex>)localStep.getLocalChildren().get(0);" is 144.,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 3,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 3,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 3,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 3,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 5,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 4,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 3,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptionalWithOrder,testUmlgRequirementWithRange,Magic Number,The method contains a magic number: 2,789
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.gt.V(a11).local(__.optional(__.out()).values("name")).path();" is 147.,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexStepCompileds=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 156.,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Collections.singletonList(p -> p.size() == 2 && p.get(0).equals(a11) && p.get(1).equals("a11"));" is 132.,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Long Statement,The length of the statement "pathsToAssert=Collections.singletonList(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals("c1"));" is 154.,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Magic Number,The method contains a magic number: 3,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Magic Number,The method contains a magic number: 3,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Magic Number,The method contains a magic number: 2,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Magic Number,The method contains a magic number: 4,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Magic Number,The method contains a magic number: 2,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepOptimized,Magic Number,The method contains a magic number: 3,29
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepNotOptimized,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.gt.V().local(__.optional(__.where(__.has(T.label`"A")).out())).path();" is 156.,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepNotOptimized,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexStepCompileds=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 156.,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepNotOptimized,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 1 && p.get(0).equals(a2)`p -> p.size() == 1 && p.get(0).equals(b1));" is 200.,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepNotOptimized,Magic Number,The method contains a magic number: 3,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepNotOptimized,Magic Number,The method contains a magic number: 3,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepNotOptimized,Magic Number,The method contains a magic number: 3,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalVertexStepNotOptimized,Magic Number,The method contains a magic number: 2,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().local(__.optional(__.out()).optional(__.out())).path();" is 167.,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexSteps=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 148.,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)`p -> p.size() == 1 && p.get(0).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(b2)`p -> p.size() == 1 && p.get(0).equals(b2)`p -> p.size() == 1 && p.get(0).equals(a3));" is 395.,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Magic Number,The method contains a magic number: 3,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Magic Number,The method contains a magic number: 2,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Magic Number,The method contains a magic number: 6,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Magic Number,The method contains a magic number: 3,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Magic Number,The method contains a magic number: 2,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Magic Number,The method contains a magic number: 2,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptional2,Magic Number,The method contains a magic number: 2,121
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().local(__.optional(__.out().optional(__.out()))).path();" is 167.,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexStepCompileds=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 156.,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(b2)`p -> p.size() == 1 && p.get(0).equals(c1)`p -> p.size() == 1 && p.get(0).equals(b2)`p -> p.size() == 1 && p.get(0).equals(a3));" is 395.,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Magic Number,The method contains a magic number: 3,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Magic Number,The method contains a magic number: 6,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Magic Number,The method contains a magic number: 3,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testLocalOptionalNested,Magic Number,The method contains a magic number: 2,176
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testUnoptimizableChooseStep,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V().local(__.<Vertex`Vertex>choose(v -> v.label().equals("A")`__.out()`__.in()));" is 193.,224
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testUnoptimizableChooseStep,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexStepCompileds=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 156.,224
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testUnoptimizableChooseStep,Magic Number,The method contains a magic number: 2,224
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testUnoptimizableChooseStep,Magic Number,The method contains a magic number: 2,224
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testUnoptimizableChooseStep,Magic Number,The method contains a magic number: 4,224
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testUnoptimizableChooseStep,Magic Number,The method contains a magic number: 2,224
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptional,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).local(__.optional(__.out()).path());" is 150.,256
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptional,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexStepCompileds=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 156.,256
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptional,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 181.,256
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptional,Magic Number,The method contains a magic number: 2,256
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptional,Magic Number,The method contains a magic number: 2,256
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptional,Magic Number,The method contains a magic number: 2,256
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptional,Magic Number,The method contains a magic number: 2,256
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 204.,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Long Statement,The length of the statement "pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)`p -> p.size() == 1 && p.get(0).equals(a2));" is 224.,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 3,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 3,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 3,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNested,Magic Number,The method contains a magic number: 2,293
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalMultipleEdgeLabels,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb2));" is 313.,349
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 4,349
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,349
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,349
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,349
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,349
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V(a1).local(__.optional(__.out("ab"`"abb").optional(__.out("bc"`"bbcc"))).path()).toList();" is 135.,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(bb1) && p.get(2).equals(cc1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(bb2));" is 360.,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 4,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 3,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 3,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalNestedMultipleEdgeLabels,Magic Number,The method contains a magic number: 2,380
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalOnNonExistingEdgeLabel,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Collections.singletonList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 128.,415
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalOnNonExistingEdgeLabel,Magic Number,The method contains a magic number: 2,415
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V(a1).local(__.optional(__.out("ab").optional(__.out("bc"))).path()).toList();" is 122.,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 204.,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).local(__.optional(__.out("ab").optional(__.out("bc"))).out().path());" is 183.,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Long Statement,The length of the statement "pathsToAssert=Arrays.asList(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(cc1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(cc2));" is 230.,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 4,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 3,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testMultipleNestedOptional,Magic Number,The method contains a magic number: 2,447
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Long Statement,The length of the statement "pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"lop"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"vadas"))`p -> p.size() == 3 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"josh")) && p.get(2).equals(convertToVertex(g`"lop"))`p -> p.size() == 3 && p.get(0).equals(convertToVertex(g`"marko")) && p.get(1).equals(convertToVertex(g`"josh")) && p.get(2).equals(convertToVertex(g`"ripple"))`p -> p.size() == 1 && p.get(0).equals(convertToVertex(g`"vadas"))`p -> p.size() == 1 && p.get(0).equals(convertToVertex(g`"lop"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"josh")) && p.get(1).equals(convertToVertex(g`"lop"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"josh")) && p.get(1).equals(convertToVertex(g`"ripple"))`p -> p.size() == 1 && p.get(0).equals(convertToVertex(g`"ripple"))`p -> p.size() == 2 && p.get(0).equals(convertToVertex(g`"peter")) && p.get(1).equals(convertToVertex(g`"lop")));" is 1101.,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 10,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 3,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 3,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,g_VX2X_optionalXoutXknowsXX,Magic Number,The method contains a magic number: 2,514
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf1,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 1 && p.get(0).equals(a2)`p -> p.size() == 1 && p.get(0).equals(b1));" is 265.,565
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 4,565
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 2,565
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf1,Magic Number,The method contains a magic number: 2,565
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelfSimple,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 292.,594
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 3,594
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 3,594
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 2,594
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 3,594
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 2,594
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelfSimple,Magic Number,The method contains a magic number: 2,594
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(a1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a1) && p.get(2).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 885.,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 10,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 3,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testCurrentTreeLabelToSelf,Magic Number,The method contains a magic number: 2,621
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalLeftJoin,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b2) && p.get(2).equals(d1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3));" is 292.,656
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 3,656
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 3,656
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 2,656
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 3,656
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 2,656
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepOptional,testOptionalLeftJoin,Magic Number,The method contains a magic number: 2,656
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testCount,Long Statement,The length of the statement "@SuppressWarnings("unchecked") DefaultTraversal<Vertex`Long> traversal=(DefaultTraversal<Vertex`Long>)this.sqlgGraph.traversal().V().local(__.out().count());" is 157.,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testCount,Magic Number,The method contains a magic number: 6,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testCount,Magic Number,The method contains a magic number: 3L,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testCount,Magic Number,The method contains a magic number: 2L,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,g_V_localXoutE_limitX1X_inVX_limitX3X,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,g_V_localXoutE_limitX1X_inVX_limitX3X,Magic Number,The method contains a magic number: 3,43
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").order().by("age").local(__.out().order().by("order").range(2`4)).toList();" is 141.,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 10,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 3,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 4,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 5,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 6,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 7,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 8,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 9,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 10,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 4,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 20,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 2,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 3,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 4,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 5,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 6,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 7,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 8,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 9,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 10,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 11,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 12,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 13,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 14,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 15,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 16,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 17,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 18,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepLimit,testLocalStepLimitSingleQuery,Magic Number,The method contains a magic number: 19,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalEdgeOtherVertexStep,testEdgeOtherVertexStepDeeper,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).local(__.outE().otherV().out()).path();" is 153.,37
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalEdgeOtherVertexStep,testEdgeOtherVertexStepDeeper,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(e1) && p.get(2).equals(b1) && p.get(3).equals(c1));" is 162.,37
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalEdgeOtherVertexStep,testEdgeOtherVertexStepDeeper,Magic Number,The method contains a magic number: 4,37
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalEdgeOtherVertexStep,testEdgeOtherVertexStepDeeper,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalEdgeOtherVertexStep,testEdgeOtherVertexStepDeeper,Magic Number,The method contains a magic number: 3,37
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLocalStepCompile,Magic Number,The method contains a magic number: 3,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLocalStepCompile,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLocalStepCompile,Magic Number,The method contains a magic number: 3,24
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLocalStepWithLimitOnDb,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).local(__.out().limit(1).out());" is 149.,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLocalStepWithLimitOnDb,Magic Number,The method contains a magic number: 3,58
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLocalStepWithLimitNotOnDb,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).local(__.out().limit(1).out());" is 149.,98
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLocalStepWithLimitNotOnDb,Magic Number,The method contains a magic number: 3,98
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectBeforeOrder,Long Statement,The length of the statement "List<String> names=this.sqlgGraph.traversal().V().local(__.outE().as("e").inV().as("v").select("e").order().by("weight"`Order.asc).select("v").<String>values("name").dedup()).toList();" is 184.,153
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectBeforeOrder,Magic Number,The method contains a magic number: 3,153
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectBeforeOrder,Magic Number,The method contains a magic number: 2,153
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectBeforeOrder,Magic Number,The method contains a magic number: 3,153
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectBeforeOrder,Magic Number,The method contains a magic number: 2,153
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().order().by("name"`Order.asc);" is 153.,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal1=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().order().by("name"`Order.desc);" is 155.,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Magic Number,The method contains a magic number: 3,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Magic Number,The method contains a magic number: 3,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Magic Number,The method contains a magic number: 2,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Magic Number,The method contains a magic number: 3,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Magic Number,The method contains a magic number: 3,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderby,Magic Number,The method contains a magic number: 2,181
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderbyDuplicatePath,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().out().order().by("name"`Order.desc);" is 160.,218
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderbyDuplicatePath,Magic Number,The method contains a magic number: 4,218
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderbyDuplicatePath,Magic Number,The method contains a magic number: 2,218
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderByDuplicatePathLabelled,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().out().as("x").<Vertex>select("x").order().by(__.select("x").by("name")`Order.desc);" is 207.,246
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderByDuplicatePathLabelled,Magic Number,The method contains a magic number: 5,246
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderByDuplicatePathLabelled,Magic Number,The method contains a magic number: 2,246
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderByDuplicatePathLabelled,Magic Number,The method contains a magic number: 2,246
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderbyDuplicatePathOrderInMemory,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(a1).out().out().order().by("name"`Order.asc);" is 159.,275
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderbyDuplicatePathOrderInMemory,Magic Number,The method contains a magic number: 4,275
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderbyDuplicatePathOrderInMemory,Magic Number,The method contains a magic number: 3,275
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderbyDuplicatePathOrderInMemory,Magic Number,The method contains a magic number: 2,275
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(god).outE("godDream").as("e").inV().as("v").select("e"`"v").order().by(__.select("e").by("sequence")`Order.desc).map(m -> (Vertex)m.get().get("v"));" is 262.,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Magic Number,The method contains a magic number: 2,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Magic Number,The method contains a magic number: 3,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Magic Number,The method contains a magic number: 6,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Magic Number,The method contains a magic number: 3,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Magic Number,The method contains a magic number: 2,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderOnEdge,Magic Number,The method contains a magic number: 3,306
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Object>> traversal=(DefaultGraphTraversal<Vertex`Map<String`Object>>)this.sqlgGraph.traversal().V(god).outE("godDream").as("e").inV().as("v").select("e"`"v").order().by(__.select("e").by("sequence")`Order.desc);" is 251.,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 3,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 4,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 5,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 4,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 3,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 2,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testSelectVertexAndEdgeOrderByEdge,Magic Number,The method contains a magic number: 3,333
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderByToSelf,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Vertex> traversal=(DefaultGraphTraversal<Vertex`Vertex>)this.sqlgGraph.traversal().V(folder1).outE("subFolder").as("e").inV().as("v").select("e"`"v").order().by(__.select("e").by("sequence")`Order.asc).map(m -> (Vertex)m.get().get("v"));" is 266.,366
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderByToSelf,Magic Number,The method contains a magic number: 6,366
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderByToSelf,Magic Number,The method contains a magic number: 3,366
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().hasLabel("Fantasy").order().by("name").as("f").in("godDream").as("g").select("f"`"g");" is 164.,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Long Statement,The length of the statement "traversal=this.sqlgGraph.traversal().V().hasLabel("Fantasy").order().by("name").range(0`2).as("f").in("godDream").as("g").select("f"`"g");" is 138.,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 3,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 4,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 4,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 4,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testOrderRangeAs,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalStepCompile,testLimitOnVertexLabels,Long Statement,The length of the statement "Traversal<Vertex`Map<String`Map<String`Map<String`Object>>>> traversal=this.sqlgGraph.traversal().V().hasLabel("person").filter(__.outE("created")).aggregate("p").as("p1").values("name").as("p1n").select("p").unfold().where(P.neq("p1")).as("p2").values("name").as("p2n").select("p2").out("created").choose(__.in("created").where(P.eq("p1"))`__.values("name")`__.constant(Collections.emptySet())).<String`Map<String`Map<String`Object>>>group().by(__.select("p1n")).by(__.group().by(__.select("p2n")).by(__.unfold().fold().project("numCoCreated"`"coCreated").by(__.count(Scope.local)).by()));" is 590.,439
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesBefore,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1));" is 246.,27
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesBefore,Magic Number,The method contains a magic number: 2,27
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesBefore,Magic Number,The method contains a magic number: 3,27
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesBefore,Magic Number,The method contains a magic number: 2,27
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesBefore,Magic Number,The method contains a magic number: 3,27
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesBefore,Magic Number,The method contains a magic number: 2,27
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesAfter,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1));" is 204.,54
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesAfter,Magic Number,The method contains a magic number: 2,54
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesAfter,Magic Number,The method contains a magic number: 2,54
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesAfter,Magic Number,The method contains a magic number: 2,54
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesAfter,Magic Number,The method contains a magic number: 3,54
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testLocalRepeatStepEmitTimesAfter,Magic Number,The method contains a magic number: 2,54
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatSimpleTimesEmitBefore,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 158.,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatSimpleTimesEmitBefore,Magic Number,The method contains a magic number: 2,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatSimpleTimesEmitBefore,Magic Number,The method contains a magic number: 2,80
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatSimpleTimeEmitAfter,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Collections.singletonList(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1));" is 128.,100
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatSimpleTimeEmitAfter,Magic Number,The method contains a magic number: 2,100
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeat,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>times(0).repeat(__.out("ab").out("bc"))).toList();" is 134.,119
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeat,Magic Number,The method contains a magic number: 3,119
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeat,Magic Number,The method contains a magic number: 3,119
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeat,Magic Number,The method contains a magic number: 2,119
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeat,Magic Number,The method contains a magic number: 3,119
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeat,Magic Number,The method contains a magic number: 2,119
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeat,Magic Number,The method contains a magic number: 3,119
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab"`"bc")).times(1)).path().toList();" is 138.,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2));" is 223.,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab"`"bc")).times(1)).path().toList();" is 127.,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testSmallerRepeatWithEmitFirst,Magic Number,The method contains a magic number: 2,166
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirst,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab"`"bc"`"cd")).times(3)).toList();" is 141.,201
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 3,201
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirst,Magic Number,The method contains a magic number: 14,201
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstWithPeriod,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab"`"bc"`"cd")).times(3)).toList();" is 141.,244
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstWithPeriod,Magic Number,The method contains a magic number: 3,244
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstWithPeriod,Magic Number,The method contains a magic number: 14,244
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab"`"bc"`"cd")).times(3)).path().toList();" is 143.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 1 && p.get(0).equals(a1) && ((Vertex)p.get(0)).value("name.AA").equals("a1")));" is 131.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 125.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 125.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 14,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 4,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 2,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPathWithPeriod,Magic Number,The method contains a magic number: 3,287
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab"`"bc"`"cd")).times(3)).path().toList();" is 143.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 125.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 125.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 14,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitFirstPath,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().times(3).repeat(__.out("ab"`"bc"`"cd"))).path().toList();" is 143.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 125.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 125.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 14,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 4,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 2,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesFirst,Magic Number,The method contains a magic number: 3,413
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.repeat(__.out("ab"`"bc"`"cd")).emit().times(3)).path().toList();" is 135.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)));" is 125.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)));" is 125.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)));" is 148.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d2)).findAny().orElseThrow(IllegalStateException::new));" is 198.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)));" is 148.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d3)).findAny().orElseThrow(IllegalStateException::new));" is 198.,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 13,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 4,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 2,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitTimesLast,Magic Number,The method contains a magic number: 3,483
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").local(__.repeat(__.out("ab"`"bc"`"cd")).emit().times(3)).toList();" is 133.,550
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 3,550
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitLastShouldNotLeftJoinFirstDegree,Magic Number,The method contains a magic number: 13,550
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitLastWithTimesFirst,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>times(3).repeat(__.out("ab"`"bc"`"cd")).emit()).toList();" is 141.,596
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 3,596
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithEmitLastWithTimesFirst,Magic Number,The method contains a magic number: 19,596
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X,Magic Number,The method contains a magic number: 2,647
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X,Magic Number,The method contains a magic number: 2,647
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Long Statement,The length of the statement "final Traversal<Vertex`Path> traversal=graph.traversal().V().local(__.repeat(__.out()).times(2).path().by().by("name").by("lang"));" is 131.,669
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 2,669
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 3,669
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 2,669
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_path_byXitX_byXnameX_byXlangX,Magic Number,The method contains a magic number: 2,669
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,688
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,688
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 8,688
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 6,688
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,688
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 2,688
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_repeatXoutX_timesX2X_emit_path,Magic Number,The method contains a magic number: 3,688
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBefore,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a1));" is 246.,712
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 3,712
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBefore,Magic Number,The method contains a magic number: 2,712
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBefore,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a1));" is 246.,736
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 2,736
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 2,736
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 3,736
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBefore,Magic Number,The method contains a magic number: 2,736
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBeforeToSelf,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3));" is 311.,760
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,760
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,760
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,760
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 3,760
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,760
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBeforeToSelf,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3));" is 246.,788
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 3,788
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesAfterEmitBeforeToSelf,Magic Number,The method contains a magic number: 2,788
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Long Statement,The length of the statement "final List<Traversal<Vertex`Path>> traversals=Arrays.asList(g.V().local(__.<Vertex>emit().times(2).repeat(__.out()).path())`g.V().local(__.<Vertex>emit().repeat(__.out()).times(2).path()));" is 189.,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 3,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 6,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 6,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,g_V_emit_timesX2X_repeatXoutX_path,Magic Number,The method contains a magic number: 2,813
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(marko) && p.get(1).equals(lop)).findAny().orElseThrow(IllegalStateException::new));" is 156.,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(josh) && p.get(1).equals(lop)).findAny().orElseThrow(IllegalStateException::new));" is 155.,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(marko) && p.get(1).equals(josh)).findAny().orElseThrow(IllegalStateException::new));" is 157.,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(marko) && p.get(1).equals(josh) && p.get(2).equals(lop)));" is 131.,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(marko) && p.get(1).equals(josh) && p.get(2).equals(lop)).findAny().orElseThrow(IllegalStateException::new));" is 181.,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 4,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 3,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 2,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testGremlinLeftJoin,Magic Number,The method contains a magic number: 4,846
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)));" is 125.,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 3,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelf,Magic Number,The method contains a magic number: 2,877
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().local(__.<Vertex>emit().repeat(__.out("knows")).times(2).path()).toList();" is 122.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)));" is 125.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 175.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 152.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a3)).findAny().orElseThrow(IllegalStateException::new));" is 129.,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 6,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 6,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 3,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testDuplicatePathToSelfEmitFirst,Magic Number,The method contains a magic number: 2,908
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnLeftJoinOnLeaveNode,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab")).times(1)).toList();" is 131.,948
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnLeftJoinOnLeaveNode,Magic Number,The method contains a magic number: 4,948
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePaths,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>emit().repeat(__.out("ab"`"ba")).times(2)).toList();" is 136.,960
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePaths,Magic Number,The method contains a magic number: 2,960
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePaths,Magic Number,The method contains a magic number: 4,960
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().local(__.<Vertex>emit().repeat(__.out("ab"`"ba")).times(2).path()).toList();" is 124.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 125.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 6,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 3,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimesAfter,Magic Number,The method contains a magic number: 2,972
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().local(__.<Vertex>emit().repeat(__.out("ab"`"ba")).times(1).path()).toList();" is 124.,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 5,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1After,Magic Number,The method contains a magic number: 2,997
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().local(__.<Vertex>emit().repeat(__.out("ab"`"ba")).times(2).path()).toList();" is 124.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 125.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 6,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 3,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 3,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2After,Magic Number,The method contains a magic number: 2,1020
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1045
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1045
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1045
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1045
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1045
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1045
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes1EmitAfter,Magic Number,The method contains a magic number: 2,1045
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)));" is 125.,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 3,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 3,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 3,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testOnDuplicatePathsFromVertexTimes2EmitAfter,Magic Number,The method contains a magic number: 2,1062
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithTimesBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1081
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithTimesBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1081
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithTimesBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1081
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,1081
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 3,1081
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,1081
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testRepeatWithTimesBefore,Magic Number,The method contains a magic number: 2,1081
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.repeat(__.out()).emit().times(2)).path().toList();" is 121.,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)));" is 125.,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 3,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testPathToSelfTreeValidatedTakingTheRootIntoAccount,Magic Number,The method contains a magic number: 2,1098
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.repeat(__.out()).emit().times(3).path()).toList();" is 121.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)).findAny().orElseThrow(IllegalStateException::new));" is 198.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 4,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 3,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitAfterTimesAfterAndBefore,Magic Number,The method contains a magic number: 2,1120
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("A").local(__.<Vertex>times(3).repeat(__.out()).path()).toList();" is 122.,1170
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeAfterFirstNoEmit,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 4 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1) && p.get(3).equals(d1)));" is 148.,1170
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,1170
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,1170
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 2,1170
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 3,1170
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testTimesBeforeAfterFirstNoEmit,Magic Number,The method contains a magic number: 4,1170
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "List<Path> paths=this.sqlgGraph.traversal().V().hasLabel("B").local(__.<Vertex>emit().times(2).repeat(__.out()).path()).toList();" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)));" is 125.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(b1) && p.get(1).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(c1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 6,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 3,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimesBeforeAfter,Magic Number,The method contains a magic number: 2,1188
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePathsSimple,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 1 && p.get(0).equals(a1)`p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)`p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1));" is 246.,1286
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 2,1286
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 3,1286
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 2,1286
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 3,1286
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePathsSimple,Magic Number,The method contains a magic number: 2,1286
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "assertTrue(paths.stream().anyMatch(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)));" is 125.,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 1 && p.get(0).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 129.,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a1) && p.get(1).equals(a2)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 152.,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Long Statement,The length of the statement "paths.remove(paths.stream().filter(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(a2) && p.get(2).equals(b1)).findAny().orElseThrow(IllegalStateException::new));" is 175.,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 6,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 3,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepRepeatStep,testEmitTimes2MultiplePaths,Magic Number,The method contains a magic number: 2,1313
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V(a1).local(__.out("ab"`"abb").order().by("order"`Order.desc).local(__.out("bc"`"bcc").order().by("order"`Order.desc))).path();" is 235.,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 5,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 4,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 6,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 4,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 6,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 5,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 18,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 3,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 4,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 4,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 5,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 5,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 6,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 6,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 7,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 7,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 8,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 8,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 9,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 9,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 10,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 10,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 11,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 11,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 12,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 12,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 13,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 13,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 14,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 14,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 15,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 15,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 16,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 16,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 17,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 17,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgBranchStepKeepsIncomingOrderNotOnDb,Magic Number,The method contains a magic number: 2,21
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").order().by("order").local(__.outE("ab").order().by("order"`Order.desc).inV().local(__.out("bc").order().by("order"`Order.desc))).path();" is 262.,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 18,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 2,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 4,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 4,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 5,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 5,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 6,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 6,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 7,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 7,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 8,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 8,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 9,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 9,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 10,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 10,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 11,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 11,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 12,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 12,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 13,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 13,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 14,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 14,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 15,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 15,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 16,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 16,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 17,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 17,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestLocalVertexStepWithOrder,testSqlgVertexStepOrderStartsProperly,Magic Number,The method contains a magic number: 3,115
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestSchemaTableTreeAndHasContainer,issue63,Long Statement,The length of the statement "Vertex dPrims=sqlgGraph.addVertex(T.label`"structuredData"`"__type"`"structuredData"`"__structuredDataKey"`"primitives");" is 121.,19
pietermartin_sqlg,org.umlg.sqlg.test.localvertexstep,TestSchemaTableTreeAndHasContainer,issue63,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> results=gt.V(res).out("contains").has("__type"`"dataEntity").local(__.out("hasData").out("contains").has("__type"`"structuredData").has("__structuredDataKey"`"primitives").out("contains").has("__type"`"structuredData"));" is 250.,19
pietermartin_sqlg,org.umlg.sqlg.test.edgehas,TestEdgeHas,testEdgeHas,Magic Number,The method contains a magic number: 2.0d,15
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testOptionalLabel,Magic Number,The method contains a magic number: 2,39
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testOptionalOptionalLabel,Long Statement,The length of the statement "Traversal<Vertex`Path> pathTraversal=this.sqlgGraph.traversal().V().hasLabel("A").optional(__.out().optional(__.out())).path();" is 127.,70
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testOptionalOptionalLabel,Magic Number,The method contains a magic number: 3,70
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testOptionalOptionalLabel,Magic Number,The method contains a magic number: 3,70
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testMapUserSuppliedPK,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 138.,96
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testMapUserSuppliedPK,Magic Number,The method contains a magic number: 100,96
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Path> traversal=(DefaultGraphTraversal<Vertex`Path>)this.sqlgGraph.traversal().V().hasLabel("A").local(__.optional(__.out().optional(__.out()))).path();" is 181.,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Long Statement,The length of the statement "List<SqlgVertexStep> sqlgVertexStepCompileds=TraversalHelper.getStepsOfAssignableClassRecursively(SqlgVertexStep.class`localStep.getLocalChildren().get(0));" is 156.,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Long Statement,The length of the statement "List<Predicate<Path>> pathsToAssert=Arrays.asList(p -> p.size() == 3 && p.get(0).equals(a1) && p.get(1).equals(b1) && p.get(2).equals(c1)`p -> p.size() == 2 && p.get(0).equals(a2) && p.get(1).equals(b2)`p -> p.size() == 1 && p.get(0).equals(a3));" is 246.,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Magic Number,The method contains a magic number: 3,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Magic Number,The method contains a magic number: 3,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Magic Number,The method contains a magic number: 3,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Magic Number,The method contains a magic number: 2,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testLocalOptionalNested,Magic Number,The method contains a magic number: 2,130
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testDuplicatePath,Long Statement,The length of the statement "@SuppressWarnings("unused") EdgeLabel livesAt=person.ensureEdgeLabelExist("loves"`person`new HashMap<String`PropertyType>(){" is 124.,175
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testDuplicatePath,Magic Number,The method contains a magic number: 100,175
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testDuplicatePath,Magic Number,The method contains a magic number: 100,175
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testDuplicatePath,Magic Number,The method contains a magic number: 2,175
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testDuplicatePath,Magic Number,The method contains a magic number: 2,175
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testDuplicatePath,Magic Number,The method contains a magic number: 2,175
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,testDuplicatePath,Magic Number,The method contains a magic number: 2,175
pietermartin_sqlg,org.umlg.sqlg.test.columnRefactor,TestColumnRefactor,dropMultiplePathsToVertices,Magic Number,The method contains a magic number: 6,213
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,26
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Long Statement,The length of the statement "@SuppressWarnings("Duplicates") VertexLabel person=this.sqlgGraph.getTopology().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 147.,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Long Statement,The length of the statement "@SuppressWarnings("unused") EdgeLabel livesAt=person.ensureEdgeLabelExist("livesAt"`address`new HashMap<String`PropertyType>(){" is 127.,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Long Statement,The length of the statement "Vertex person1=this.sqlgGraph.addVertex(T.label`"Person"`"uid"`UUID.randomUUID().toString()`"name"`"John"`"surname"`"Smith"`"country"`"SA");" is 140.,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Long Statement,The length of the statement "Vertex address1=this.sqlgGraph.addVertex(T.label`"Address"`"uid"`UUID.randomUUID().toString()`"street"`"X"`"suburb"`"Y"`"country"`"SA");" is 136.,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Long Statement,The length of the statement "List<Map<String`Object>> result=this.sqlgGraph.traversal().V().hasLabel("Person").as("a").outE().as("b").otherV().as("c").select("a"`"b"`"c").toList();" is 151.,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Long Statement,The length of the statement "result=this.sqlgGraph.traversal().V().hasLabel("Address").as("a").inE().as("b").otherV().as("c").select("a"`"b"`"c").toList();" is 126.,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Long Statement,The length of the statement "result=this.sqlgGraph1.traversal().V().hasLabel("Address").as("a").inE().as("b").otherV().as("c").select("a"`"b"`"c").toList();" is 127.,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Magic Number,The method contains a magic number: 4,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Magic Number,The method contains a magic number: 4,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Magic Number,The method contains a magic number: 4,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Magic Number,The method contains a magic number: 3,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Magic Number,The method contains a magic number: 3,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Magic Number,The method contains a magic number: 1000,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testSinglePath,Magic Number,The method contains a magic number: 3,49
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Long Statement,The length of the statement "@SuppressWarnings("Duplicates") VertexLabel person=this.sqlgGraph.getTopology().ensureVertexLabelExist("Person"`new HashMap<String`PropertyType>(){" is 147.,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Long Statement,The length of the statement "@SuppressWarnings("unused") EdgeLabel livesAt=person.ensureEdgeLabelExist("loves"`person`new HashMap<String`PropertyType>(){" is 124.,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Long Statement,The length of the statement "Vertex person1=this.sqlgGraph.addVertex(T.label`"Person"`"uid"`UUID.randomUUID().toString()`"name"`"John"`"surname"`"Smith"`"country"`"SA");" is 140.,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Long Statement,The length of the statement "Vertex person2=this.sqlgGraph.addVertex(T.label`"Person"`"uid"`UUID.randomUUID().toString()`"name"`"Suzi"`"surname"`"Lovenot"`"country"`"SA");" is 142.,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 32,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 32,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 1000,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,156
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Long Statement,The length of the statement "bVertexLabel.ensureDistributed(4`bVertexLabel.getProperty("country").orElseThrow(IllegalStateException::new)`aVertexLabel);" is 123.,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Long Statement,The length of the statement "@SuppressWarnings("unused") EdgeLabel livesAt=aVertexLabel.ensureEdgeLabelExist("ab"`bVertexLabel`new HashMap<String`PropertyType>(){" is 133.,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid"`UUID.randomUUID().toString()`"name"`"a1"`"name2"`"a11"`"country"`"SA");" is 124.,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid"`UUID.randomUUID().toString()`"name"`"b1"`"name2"`"b11"`"country"`"SA");" is 124.,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"uid"`UUID.randomUUID().toString()`"name"`"a2"`"name2"`"a22"`"country"`"SA");" is 124.,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"uid"`UUID.randomUUID().toString()`"name"`"b2"`"name2"`"b22"`"country"`"SA");" is 124.,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 4,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 4,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 4,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 2,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 2,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 1000,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 2,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestShardingGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 2,214
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey("jdbc.url")) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`"jdbc.url"));" is 159.,33
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardCount1,Magic Number,The method contains a magic number: 32,56
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "PropertyColumn distributionPropertyColumn=this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionPropertyColumn();" is 168.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionColocate());" is 139.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getShardCount());" is 133.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionPropertyColumn();" is 153.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 142.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 154.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getShardCount());" is 133.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionPropertyColumn();" is 153.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionColocate());" is 139.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getShardCount());" is 133.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionPropertyColumn();" is 153.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 142.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 154.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getShardCount());" is 133.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph1.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionPropertyColumn();" is 154.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph1.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionColocate());" is 140.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph1.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getShardCount());" is 134.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph1.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionPropertyColumn();" is 154.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph1.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 143.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph1.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 155.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph1.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getShardCount());" is 134.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "this.sqlgGraph.streamVertex(T.label`"A.A"`"uid"`UUID.randomUUID().toString()`"dist"`Character.toString(x)`"value"`Integer.toString(i));" is 135.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertTrue(this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().isDistributed());" is 129.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionPropertyColumn();" is 153.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getDistributionColocate());" is 139.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("A")).orElseThrow().getShardCount());" is 133.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionPropertyColumn();" is 153.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 142.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getDistributionColocate());" is 154.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Long Statement,The length of the statement "Assert.assertEquals(8`this.sqlgGraph.getTopology().getSchema("A").flatMap(a -> a.getVertexLabel("B")).orElseThrow().getShardCount());" is 133.,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 1000,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 1000,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 4,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 250,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingVertex,Magic Number,The method contains a magic number: 8,77
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Method,The method has 106 lines of code.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Vertex a=this.sqlgGraph.addVertex(T.label`"A"`"uid"`UUID.randomUUID().toString()`"dist"`tenantId`"value"`Integer.toString(i));" is 126.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Vertex b=this.sqlgGraph.addVertex(T.label`"B"`"uid"`UUID.randomUUID().toString()`"dist"`tenantId`"value"`Integer.toString(i));" is 126.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "PropertyColumn distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionPropertyColumn();" is 155.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionColocate());" is 126.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionPropertyColumn();" is 141.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionColocate());" is 127.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(4`this.sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getShardCount());" is 121.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionPropertyColumn();" is 140.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 129.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 141.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionPropertyColumn();" is 141.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 130.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 142.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(4`this.sqlgGraph1.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getShardCount());" is 121.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionPropertyColumn();" is 139.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 128.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 140.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph1.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionPropertyColumn();" is 140.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph1.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 129.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph1.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 141.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionPropertyColumn();" is 140.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionColocate());" is 126.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionPropertyColumn();" is 140.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 129.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 141.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionPropertyColumn();" is 139.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 128.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 140.,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 1000,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingEdge,Magic Number,The method contains a magic number: 4,178
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Vertex a=this.sqlgGraph.addVertex(T.label`"A"`"uid"`UUID.randomUUID().toString()`"dist"`tenantId`"value"`Integer.toString(i));" is 126.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Vertex b=this.sqlgGraph.addVertex(T.label`"B"`"uid"`UUID.randomUUID().toString()`"dist"`tenantId`"value"`Integer.toString(i));" is 126.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "PropertyColumn distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionPropertyColumn();" is 155.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionColocate());" is 126.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionPropertyColumn();" is 140.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 129.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 141.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionPropertyColumn();" is 139.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 128.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 140.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionPropertyColumn();" is 140.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("A").orElseThrow().getDistributionColocate());" is 126.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionPropertyColumn();" is 140.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 129.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getVertexLabel("B").orElseThrow().getDistributionColocate());" is 141.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "distributionPropertyColumn=this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionPropertyColumn();" is 139.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertNotNull(this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 128.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Long Statement,The length of the statement "Assert.assertEquals(aVertexLabel`this.sqlgGraph.getTopology().getPublicSchema().getEdgeLabel("ab").orElseThrow().getDistributionColocate());" is 140.,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingDifferentInAndOut,Magic Number,The method contains a magic number: 4,306
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingWithPartition,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new HashMap<>(){" is 126.,401
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingWithPartition,Magic Number,The method contains a magic number: 32,401
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingWithPartition,Magic Number,The method contains a magic number: 2016,401
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingWithPartition,Magic Number,The method contains a magic number: 7,401
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingWithPartition,Magic Number,The method contains a magic number: 2016,401
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardingWithPartition,Magic Number,The method contains a magic number: 8,401
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,test,Magic Number,The method contains a magic number: 1000,430
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,test,Magic Number,The method contains a magic number: 1000,430
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Long Statement,The length of the statement "VertexLabel rncVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("ObjectType1"`new HashMap<>(){" is 138.,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Long Statement,The length of the statement "sqlgGraph.addVertex(T.label`"ObjectType1"`"rncId"`rnc`"cellId"`"cellId_" + i`"dateTime"`next`"date"`next.toLocalDate()`"count1"`i`"count2"`i`"count3"`i`"count4"`i`"count5"`i`"count6"`i`"count7"`i`"count8"`i`"count9"`i`"count10"`i);" is 231.,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Magic Number,The method contains a magic number: 32,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Magic Number,The method contains a magic number: 10,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Magic Number,The method contains a magic number: 2018,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Magic Number,The method contains a magic number: 5,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Magic Number,The method contains a magic number: 4,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Magic Number,The method contains a magic number: 1_000_000,443
pietermartin_sqlg,org.umlg.sqlg.test.sharding,TestSharding,testShardRNC,Magic Number,The method contains a magic number: 10_000,443
pietermartin_sqlg,org.umlg.sqlg.test.graph,TestGraphStepWithIds,testGraphWithIdsGroupingOfIdsAccordingToLabel,Magic Number,The method contains a magic number: 5,34
pietermartin_sqlg,org.umlg.sqlg.test.graph,MidTraversalGraphTest,g_V_hasLabelXpersonX_V_hasLabelXsoftwareX_name,Long Statement,The length of the statement "GraphTraversal<Vertex`String> t=this.sqlgGraph.traversal().V().hasLabel("person").V().hasLabel("software").values("name");" is 122.,24
pietermartin_sqlg,org.umlg.sqlg.test.graph,MidTraversalGraphTest,testMidTraversalV,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Object>> g=this.sqlgGraph.traversal().V().hasLabel("A").as("a").V().hasLabel("B").as("b").select("a"`"b");" is 139.,32
pietermartin_sqlg,org.umlg.sqlg.test.graph,MidTraversalGraphTest,testMidTraversalV,Magic Number,The method contains a magic number: 2,32
pietermartin_sqlg,org.umlg.sqlg.test.graph,MidTraversalGraphTest,testMidTraversalV,Magic Number,The method contains a magic number: 2,32
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,testOutEWithAttributes,Magic Number,The method contains a magic number: 10_000,64
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,testOutEWithAttributes,Magic Number,The method contains a magic number: 20_000,64
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,testWhereVertexStepTraversalStep1,Magic Number,The method contains a magic number: 2,97
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_hasXageX_asXaX_out_in_hasXageX_asXbX_selectXa_bX_whereXa_eqXbXX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().has("age").as("a").out().in().has("age").as("b").select("a"`"b").where("a"`P.eq("b"));" is 170.,133
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_hasXageX_asXaX_out_in_hasXageX_asXbX_selectXa_bX_whereXa_eqXbXX,Magic Number,The method contains a magic number: 2,133
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_hasXageX_asXaX_out_in_hasXageX_asXbX_selectXa_bX_whereXa_eqXbXX,Magic Number,The method contains a magic number: 6,133
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_VX1X_asXaX_out_hasXageX_whereXgtXaXX_byXageX_name,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V(marko).as("a").out().has("age").where(P.gt("a")).by("age").values("name");" is 144.,155
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_matchXa_created_lop_b__b_0created_29_c__c_whereXrepeatXoutX_timesX2XXX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`String>> traversal=this.sqlgGraph.traversal().V().match(__.as("a").out("created").has("name"`"lop").as("b")`__.as("b").in("created").has("age"`29).as("c")`__.as("c").where(__.repeat(__.out()).times(2)));" is 237.,169
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_matchXa_created_lop_b__b_0created_29_c__c_whereXrepeatXoutX_timesX2XXX,Long Statement,The length of the statement "checkResults(makeMapList(3`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"lop")`"c"`convertToVertex(this.sqlgGraph`"marko")`"a"`convertToVertex(this.sqlgGraph`"josh")`"b"`convertToVertex(this.sqlgGraph`"lop")`"c"`convertToVertex(this.sqlgGraph`"marko")`"a"`convertToVertex(this.sqlgGraph`"peter")`"b"`convertToVertex(this.sqlgGraph`"lop")`"c"`convertToVertex(this.sqlgGraph`"marko"))`traversal);" is 428.,169
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_matchXa_created_lop_b__b_0created_29_c__c_whereXrepeatXoutX_timesX2XXX,Magic Number,The method contains a magic number: 29,169
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_matchXa_created_lop_b__b_0created_29_c__c_whereXrepeatXoutX_timesX2XXX,Magic Number,The method contains a magic number: 2,169
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_matchXa_created_lop_b__b_0created_29_c__c_whereXrepeatXoutX_timesX2XXX,Magic Number,The method contains a magic number: 3,169
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_matchXa_hasXsong_name_sunshineX__a_mapX0followedBy_weight_meanX_b__a_0followedBy_c__c_filterXweight_whereXgteXbXXX_outV_dX_selectXdX_byXnameX,Long Statement,The length of the statement "final Traversal<Vertex`String> traversal=this.sqlgGraph.traversal().V().match(__.as("a").has("song"`"name"`"HERE COMES SUNSHINE")`__.as("a").map(__.inE("followedBy").values("weight").mean()).as("b")`__.as("a").inE("followedBy").as("c")`__.as("c").filter(__.values("weight").where(P.gte("b"))).outV().as("d")).<String>select("d").by("name");" is 340.,183
pietermartin_sqlg,org.umlg.sqlg.test.where,TestTraversalFilterStepBarrier,g_V_matchXa_hasXsong_name_sunshineX__a_mapX0followedBy_weight_meanX_b__a_0followedBy_c__c_filterXweight_whereXgteXbXXX_outV_dX_selectXdX_byXnameX,Long Statement,The length of the statement "checkResults(Arrays.asList("THE MUSIC NEVER STOPPED"`"PROMISED LAND"`"PLAYING IN THE BAND"`"CASEY JONES"`"BIG RIVER"`"EL PASO"`"LIBERTY"`"LOOKS LIKE RAIN")`traversal);" is 167.,183
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_matchXa__a_out_b__notXa_created_bXX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().match(__.as("a").out().as("b")`__.not(__.as("a").out("created").as("b")));" is 158.,24
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_matchXa__a_out_b__notXa_created_bXX,Long Statement,The length of the statement "checkResults(makeMapList(2`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"josh")`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"vadas"))`traversal);" is 214.,24
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_matchXa__a_out_b__notXa_created_bXX,Magic Number,The method contains a magic number: 2,24
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,coworkerSummaryOLTP,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Map<String`Map<String`Object>>>> traversal=this.sqlgGraph.traversal().V().hasLabel("person").filter(__.outE("created")).as("p1").V().hasLabel("person").where(P.neq("p1")).filter(__.outE("created")).as("p2").map(__.out("created").where(__.in("created").as("p1")).values("name").fold()).<String`Map<String`Map<String`Object>>>group().by(__.select("p1").by("name")).by(__.group().by(__.select("p2").by("name")).by(__.project("numCoCreated"`"coCreated").by(__.count(Scope.local)).by()));" is 517.,36
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,checkCoworkerSummary,Magic Number,The method contains a magic number: 3,52
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,checkCoworkerSummary,Magic Number,The method contains a magic number: 2,52
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_asXaX_out_asXbX_whereXin_count_isXeqX3XX_or_whereXoutXcreatedX_and_hasXlabel_personXXX_selectXa_bX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().as("a").out().as("b").where(__.as("b").in().count().is(P.eq(3)).or().where(__.as("b").out("created").and().as("b").has(T.label`"person"))).select("a"`"b");" is 239.,83
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_asXaX_out_asXbX_whereXin_count_isXeqX3XX_or_whereXoutXcreatedX_and_hasXlabel_personXXX_selectXa_bX,Long Statement,The length of the statement "checkResults(makeMapList(2`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"josh")`"a"`convertToVertex(this.sqlgGraph`"marko")`"b"`convertToVertex(this.sqlgGraph`"lop")`"a"`convertToVertex(this.sqlgGraph`"peter")`"b"`convertToVertex(this.sqlgGraph`"lop")`"a"`convertToVertex(this.sqlgGraph`"josh")`"b"`convertToVertex(this.sqlgGraph`"lop"))`traversal);" is 383.,83
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_asXaX_out_asXbX_whereXin_count_isXeqX3XX_or_whereXoutXcreatedX_and_hasXlabel_personXXX_selectXa_bX,Magic Number,The method contains a magic number: 3,83
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_asXaX_out_asXbX_whereXin_count_isXeqX3XX_or_whereXoutXcreatedX_and_hasXlabel_personXXX_selectXa_bX,Magic Number,The method contains a magic number: 2,83
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_hasXageX_asXaX_out_in_hasXageX_asXbX_selectXa_bX_whereXb_hasXname_markoXX,Long Statement,The length of the statement "final Traversal<Vertex`Map<String`Object>> traversal=this.sqlgGraph.traversal().V().has("age").as("a").out().in().has("age").as("b").select("a"`"b").where(__.as("a").out("knows").as("b"));" is 188.,106
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,g_V_hasXageX_asXaX_out_in_hasXageX_asXbX_selectXa_bX_whereXb_hasXname_markoXX,Magic Number,The method contains a magic number: 2,106
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,testWhere,Long Statement,The length of the statement "GraphTraversal<Vertex`Vertex> traversal=sqlgGraph.traversal().V().hasLabel("A").as("a").where(__.as("a").out()).select("a");" is 124.,131
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,testWhere,Magic Number,The method contains a magic number: 2,131
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,testWhere2Labels,Long Statement,The length of the statement "GraphTraversal<Vertex`Map<String`Vertex>> traversal=this.sqlgGraph.traversal().V().hasLabel("A").as("a").out().as("b").where(__.as("a").out().as("b")).select("a"`"b");" is 167.,155
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,testWhere2Labels,Magic Number,The method contains a magic number: 4,155
pietermartin_sqlg,org.umlg.sqlg.test.where,TestWhereWithSelect,testWhere2Labels,Magic Number,The method contains a magic number: 2,155
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexViaTopology,Long Statement,The length of the statement "Optional<VertexLabel> personVertexOptional=this.sqlgGraph.getTopology().getVertexLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"Person");" is 146.,29
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexViaTopology,Long Statement,The length of the statement "Index index=personVertexOptional.get().ensureIndexExists(IndexType.NON_UNIQUE`Collections.singletonList(namePropertyOptional.get()));" is 133.,29
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexViaTopology,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"V_Person\" a WHERE a.\"name\" = 'john'");" is 121.,29
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexViaTopology,Magic Number,The method contains a magic number: 5000,29
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testUniqueIndexViaTopolgy,Empty catch clause,The method has an empty catch block.,69
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testUniqueIndexViaTopolgy,Long Statement,The length of the statement "Optional<VertexLabel> personVertexLabelOptional=this.sqlgGraph.getTopology().getVertexLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"Person");" is 151.,69
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnInteger,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"V_Person\" a WHERE a.\"name\" = 'john50'");" is 123.,89
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnInteger,Magic Number,The method contains a magic number: 5000,89
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex2,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().has(T.label`"Person").has("name"`P.eq("john50")).count().next().intValue());" is 129.,119
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex2,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"V_Person\" a WHERE a.\"name\" = 'john50'");" is 123.,119
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex2,Magic Number,The method contains a magic number: 5000,119
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().has(T.label`"Person").has("name1"`P.eq("john50")).count().next().intValue());" is 130.,146
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"V_Person\" a WHERE a.\"name1\" = 'john50'");" is 124.,146
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex,Magic Number,The method contains a magic number: 5000,146
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex1,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"V_Person\" a WHERE a.\"name1\" = 'john50'");" is 124.,179
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex1,Magic Number,The method contains a magic number: 5000,179
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex1Schema,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().ensureSchemaExist("MySchema").ensureVertexLabelExist("Person"`new LinkedHashMap<>(){" is 137.,211
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex1Schema,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().has(T.label`"MySchema.Person").has("name1"`"john50").count().next()`0);" is 124.,211
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex1Schema,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"MySchema\".\"V_Person\" a WHERE a.\"name1\" = 'john50'");" is 126.,211
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnVertex1Schema,Magic Number,The method contains a magic number: 5000,211
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexExistSchema,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().ensureSchemaExist("MySchema").ensureVertexLabelExist("Person"`new LinkedHashMap<>(){" is 137.,275
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexExistSchema,Long Statement,The length of the statement "vertexLabel=this.sqlgGraph.getTopology().ensureSchemaExist("MySchema").ensureVertexLabelExist("Person"`new LinkedHashMap<>(){" is 125.,275
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexExistSchema,Long Statement,The length of the statement "vertexLabel=this.sqlgGraph.getTopology().ensureSchemaExist("MySchema").ensureVertexLabelExist("Person"`new LinkedHashMap<>(){" is 125.,275
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexExistSchema,Long Statement,The length of the statement "vertexLabel=this.sqlgGraph.getTopology().ensureSchemaExist("MySchema").ensureVertexLabelExist("Person"`new LinkedHashMap<>(){" is 125.,275
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdge,Long Statement,The length of the statement "this.sqlgGraph.getTopology().ensureEdgeLabelExist("person_address"`SchemaTable.of(publicSchema`"Person")`SchemaTable.of(publicSchema`"Address")`columns);" is 153.,313
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdge,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getEdgeLabel(publicSchema`"person_address").orElseThrow(IllegalStateException::new);" is 133.,313
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdge,Long Statement,The length of the statement "edgeLabel.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(edgeLabel.getProperty("name").orElseThrow(IllegalStateException::new)));" is 143.,313
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdge,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"E_person_address\" a WHERE a.\"name\" = 'address1001'");" is 136.,313
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdge,Long Statement,The length of the statement "edgeLabel=this.sqlgGraph.getTopology().getEdgeLabel(publicSchema`"person_address").orElseThrow(IllegalStateException::new);" is 123.,313
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdge,Long Statement,The length of the statement "edgeLabel.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(edgeLabel.getProperty("name").orElseThrow(IllegalStateException::new)));" is 143.,313
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdge,Magic Number,The method contains a magic number: 5000,313
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdgeAcrossSchemas,Empty catch clause,The method has an empty catch block.,352
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdgeAcrossSchemas,Long Statement,The length of the statement "edgeLabel.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(edgeLabel.getProperty("name").orElseThrow(IllegalStateException::new)));" is 143.,352
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdgeAcrossSchemas,Long Statement,The length of the statement "Assert.assertEquals(IndexType.UNIQUE`edgeLabel.getIndex(this.sqlgGraph.getSqlDialect().indexName(SchemaTable.of("A"`"test")`Topology.EDGE_PREFIX`Collections.singletonList("name"))).orElseThrow(IllegalStateException::new).getIndexType());" is 237.,352
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testIndexOnEdgeAcrossSchemas,Long Statement,The length of the statement "Assert.assertFalse(edgeLabel.getIndex(this.sqlgGraph.getSqlDialect().indexName(SchemaTable.of("B"`"test")`Topology.EDGE_PREFIX`Collections.singletonList("name"))).isPresent());" is 176.,352
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,buildLongIndex,Long Statement,The length of the statement "List<PropertyColumn> properties=Arrays.asList(label.getProperty("longpropertyname1").orElseThrow(IllegalStateException::new)`label.getProperty("longpropertyname2").orElseThrow(IllegalStateException::new)`label.getProperty("longpropertyname3").orElseThrow(IllegalStateException::new));" is 284.,406
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,buildShortIndex,Long Statement,The length of the statement "List<PropertyColumn> properties=Arrays.asList(label.getProperty("short1").orElseThrow(IllegalStateException::new)`label.getProperty("short2").orElseThrow(IllegalStateException::new)`label.getProperty("short3").orElseThrow(IllegalStateException::new));" is 251.,434
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testMultipleIndexesOnLabel,Magic Number,The method contains a magic number: 2,451
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testDropIndex,Magic Number,The method contains a magic number: 2,480
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testDropIndex,Magic Number,The method contains a magic number: 2,480
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndex,testDropIndex,Magic Number,The method contains a magic number: 2,480
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedVertexLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 1000,34
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedVertexLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 1000,87
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedEdgeLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("A.A").outE("ab").has("int1"`100).otherV().count().next()`0);" is 123.,140
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedEdgeLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 1000,140
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedEdgeLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 100,140
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedEdgeLabelAfterCreatingPartitions,Long Statement,The length of the statement "Assert.assertEquals(1`this.sqlgGraph.traversal().V().hasLabel("A.A").outE("ab").has("int1"`100).otherV().count().next()`0);" is 123.,191
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedEdgeLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 1000,191
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnPartitionedEdgeLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 100,191
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Partition int1_1_5=vertexLabel.ensureRangePartitionWithSubPartitionExists("int1_1_5"`"1"`"5"`PartitionType.RANGE`"int2");" is 121.,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Partition int1_5_10=vertexLabel.ensureRangePartitionWithSubPartitionExists("int1_5_10"`"5"`"10"`PartitionType.RANGE`"int2");" is 124.,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_1_5=int1_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_1_5"`"1"`"5"`PartitionType.RANGE`"int2");" is 128.,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_5_10=int1_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_5_10"`"5"`"10"`PartitionType.RANGE`"int2");" is 131.,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_int3_1_5=int1_int2_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_int3_1_5"`"1"`"5"`PartitionType.RANGE`"int3");" is 143.,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_int3_5_10=int1_int2_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_int3_5_10"`"5"`"10"`PartitionType.RANGE`"int3");" is 146.,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Long Statement,The length of the statement "Map<String`Partition> partitions=sqlgGraph1.getTopology().getSchema("A").get().getVertexLabel("A").get().getPartitions();" is 121.,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 4,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelBeforeCreatingPartitions,Magic Number,The method contains a magic number: 4,243
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Long Statement,The length of the statement "Partition int1_1_5=vertexLabel.ensureRangePartitionWithSubPartitionExists("int1_1_5"`"1"`"5"`PartitionType.RANGE`"int2");" is 121.,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Long Statement,The length of the statement "Partition int1_5_10=vertexLabel.ensureRangePartitionWithSubPartitionExists("int1_5_10"`"5"`"10"`PartitionType.RANGE`"int2");" is 124.,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_1_5=int1_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_1_5"`"1"`"5"`PartitionType.RANGE`"int2");" is 128.,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_5_10=int1_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_5_10"`"5"`"10"`PartitionType.RANGE`"int2");" is 131.,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_int3_1_5=int1_int2_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_int3_1_5"`"1"`"5"`PartitionType.RANGE`"int3");" is 143.,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Long Statement,The length of the statement "Partition int1_int2_int3_5_10=int1_int2_1_5.ensureRangePartitionWithSubPartitionExists("int1_int2_int3_5_10"`"5"`"10"`PartitionType.RANGE`"int3");" is 146.,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Long Statement,The length of the statement "Map<String`Partition> partitions=sqlgGraph1.getTopology().getSchema("A").get().getVertexLabel("A").get().getPartitions();" is 121.,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 4,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 2,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 2,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 2,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 2,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAfterCreatingPartitions,Magic Number,The method contains a magic number: 4,309
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition aInt1_1_int2_1=aInt1_1.ensureListPartitionWithSubPartitionExists("aInt_1_int2_1"`"1"`PartitionType.LIST`"int3");" is 122.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition aInt1_1_int2_2=aInt1_1.ensureListPartitionWithSubPartitionExists("aInt_1_int2_2"`"2"`PartitionType.LIST`"int3");" is 122.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition aInt1__1_int2_int3_1=aInt1_1_int2_1.ensureListPartitionWithSubPartitionExists("aInt1_1_int2_1_int3_1"`"1"`PartitionType.LIST`"int4");" is 143.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition aInt1__1_int2_int3_2=aInt1_1_int2_1.ensureListPartitionWithSubPartitionExists("aInt1_1_int2_1_int3_2"`"2"`PartitionType.LIST`"int4");" is 143.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition bInt1_int2_int3_1=bInt1_int2_1.ensureListPartitionWithSubPartitionExists("bInt1_int2_int3_1"`"1"`PartitionType.LIST`"int4");" is 134.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition bInt1_int2_int3_2=bInt1_int2_1.ensureListPartitionWithSubPartitionExists("bInt1_int2_int3_2"`"2"`PartitionType.LIST`"int4");" is 134.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition abInt1_int2_1=abInt1_1.ensureListPartitionWithSubPartitionExists("abInt1_int2_1"`"1"`PartitionType.LIST`"int3");" is 122.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition abInt1_int2_2=abInt1_1.ensureListPartitionWithSubPartitionExists("abInt1_int2_2"`"2"`PartitionType.LIST`"int3");" is 122.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition abInt1_int2_int3_1=abInt1_int2_1.ensureListPartitionWithSubPartitionExists("abInt1_int2_int3_1"`"1"`PartitionType.LIST`"int4");" is 137.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Partition abInt1_int2_int3_2=abInt1_int2_1.ensureListPartitionWithSubPartitionExists("abInt1_int2_int3_2"`"2"`PartitionType.LIST`"int4");" is 137.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A.A"`"uid"`UUID.randomUUID().toString()`"int1"`1`"int2"`1`"int3"`1`"int4"`1);" is 121.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B.B"`"uid"`UUID.randomUUID().toString()`"int1"`1`"int2"`1`"int3"`1`"int4"`1);" is 121.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A.A"`"uid"`UUID.randomUUID().toString()`"int1"`1`"int2"`1`"int3"`1`"int4"`2);" is 121.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B.B"`"uid"`UUID.randomUUID().toString()`"int1"`1`"int2"`1`"int3"`1`"int4"`2);" is 121.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A.A").has("int1"`1).outE("ab").has("int1"`1).inV().has("int4"`2).toList();" is 137.,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Magic Number,The method contains a magic number: 1_000,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testCreateIndexOnSubPartitionedVertexLabelAndEdgeBeforeCreatingPartitions,Magic Number,The method contains a magic number: 2,375
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Identifier,The length of the identifier VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL is 47.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Identifier,The length of the identifier virtualGroupRootRealWorkspaceElementVertexLabel is 47.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Statement,The length of the statement "VertexLabel virtualGroupRootRealWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist(VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL`attributeMap`ListOrderedSet.listOrderedSet(List.of(cmUid`VIRTUAL_GROUP_ID))`PartitionType.LIST`"\"" + VIRTUAL_GROUP_ID + "\"");" is 311.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Statement,The length of the statement "virtualGroupRootRealWorkspaceElementVertexLabel.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(cmUidPropertyColumn));" is 131.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Statement,The length of the statement "VertexLabel realVertexLabel=sqlgGraph.getTopology().getPublicSchema().getVertexLabel(VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL).orElseThrow();" is 148.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Statement,The length of the statement "Partition partition=realVertexLabel.ensureListPartitionExists("VirtualGroupRootReal_" + virtualGroupId`"'" + virtualGroupId + "'");" is 131.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Statement,The length of the statement "realVertexLabel=sqlgGraph.getTopology().getPublicSchema().getVertexLabel(VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL).orElseThrow();" is 136.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testListPartitiongetsIndex,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"V_" + VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL + "\" a WHERE a.\""+ cmUid+ "\" = 'john'");" is 177.,481
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Identifier,The length of the identifier VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL is 47.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Identifier,The length of the identifier virtualGroupRootRealWorkspaceElementVertexLabel is 47.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Statement,The length of the statement "VertexLabel virtualGroupRootRealWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist(VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL`attributeMap`ListOrderedSet.listOrderedSet(List.of(cmUid`VIRTUAL_GROUP_ID))`PartitionType.RANGE`"\"" + VIRTUAL_GROUP_ID + "\"");" is 312.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Statement,The length of the statement "virtualGroupRootRealWorkspaceElementVertexLabel.ensureIndexExists(IndexType.UNIQUE`Collections.singletonList(cmUidPropertyColumn));" is 131.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Statement,The length of the statement "VertexLabel realVertexLabel=sqlgGraph.getTopology().getPublicSchema().getVertexLabel(VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL).orElseThrow();" is 148.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Statement,The length of the statement "Partition partition=realVertexLabel.ensureRangePartitionExists("VirtualGroupRootReal_" + virtualGroupId`"'" + virtualGroupId + "'"`"'" + virtualGroupIdTo + "'");" is 161.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Statement,The length of the statement "realVertexLabel=sqlgGraph.getTopology().getPublicSchema().getVertexLabel(VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL).orElseThrow();" is 136.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Long Statement,The length of the statement "ResultSet rs=statement.executeQuery("explain analyze SELECT * FROM \"public\".\"V_" + VIRTUAL_GROUP_ROOT_REAL_WORKSPACE_ELEMENT_LABEL + "\" a WHERE a.\""+ cmUid+ "\" = 'john'");" is 177.,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexOnPartition,testRangePartitiongetsIndex,Magic Number,The method contains a magic number: 2,550
pietermartin_sqlg,org.umlg.sqlg.test.index,TestIndexTopologyTraversal,testIndexTopologyTraversal,Long Statement,The length of the statement "List<Vertex> indexProperties=this.sqlgGraph.topology().V().hasLabel("sqlg_schema.schema").has("name"`"A").out(Topology.SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(Topology.SQLG_SCHEMA_OUT_EDGES_EDGE).out(Topology.SQLG_SCHEMA_EDGE_INDEX_EDGE).out(Topology.SQLG_SCHEMA_INDEX_PROPERTY_EDGE).toList();" is 289.,22
pietermartin_sqlg,org.umlg.sqlg.test.json,TestJson,testJsonExampleFiles,Long Statement,The length of the statement "Vertex v1=this.sqlgGraph.addVertex(T.label`"A"`"json1"`jsonNode1`"json2"`jsonNode2`"json3"`jsonNode3`"json4"`jsonNode4`"json5"`jsonNode5);" is 138.,107
pietermartin_sqlg,org.umlg.sqlg.test.sack,TestSack,g_withSackX1_sumX_VX1X_localXoutXknowsX_barrierXnormSackXX_inXknowsX_barrier_sack,Long Statement,The length of the statement "final Traversal<Vertex`Double> traversal=this.sqlgGraph.traversal().withSack(1.0d`Operator.sum).V(convertToVertexId("marko")).local(__.out("knows").barrier(SackFunctions.Barrier.normSack)).in("knows").barrier().sack();" is 218.,20
pietermartin_sqlg,org.umlg.sqlg.test.sack,TestSack,g_withBulkXfalseX_withSackX1_sumX_VX1X_localXoutEXknowsX_barrierXnormSackX_inVX_inXknowsX_barrier_sack,Long Statement,The length of the statement "final Traversal<Vertex`Double> traversal=this.sqlgGraph.traversal().withBulk(false).withSack(1.0d`Operator.sum).V(convertToVertexId("marko")).local(__.outE("knows").barrier(SackFunctions.Barrier.normSack).inV()).in("knows").barrier().sack();" is 241.,36
pietermartin_sqlg,org.umlg.sqlg.test.sack,TestSack,g_withBulkXfalseX_withSackX1_sumX_V_out_barrier_sack,Long Statement,The length of the statement "final Traversal<Vertex`Integer> traversal=this.sqlgGraph.traversal().withBulk(false).withSack(1`Operator.sum).V().out().barrier().sack();" is 137.,53
pietermartin_sqlg,org.umlg.sqlg.test.sack,TestSack,g_withBulkXfalseX_withSackX1_sumX_V_out_barrier_sack,Magic Number,The method contains a magic number: 3,53
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 600,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 800,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 200,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 200,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 400,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 2L,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 3L,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 600,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 800,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 200,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 2L,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexOutWithHas,Magic Number,The method contains a magic number: 400,17
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Long Statement,The length of the statement "List<Vertex> inFriendNameMarko3Age20=vertexTraversal(this.sqlgGraph`marko1).in("friend").<Vertex>has("age"`20).<Vertex>has("name"`"marko3").toList();" is 149.,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Long Statement,The length of the statement "List<Vertex> inFriendNameMarko4Age20=vertexTraversal(this.sqlgGraph`marko1).in("friend").<Vertex>has("age"`20).<Vertex>has("name"`"marko4").toList();" is 149.,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 20,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 20,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 30,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 40,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 20,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 2,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 30,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 40,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 20,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexInWithHas,Magic Number,The method contains a magic number: 20,46
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexHasLabel,Long Statement,The length of the statement "Assert.assertEquals(1`vertexTraversal(this.sqlgGraph`marko).out("drives").has(T.label`"Car").has("name"`"bmw").count().next()`0);" is 129.,85
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexHasLabel,Long Statement,The length of the statement "Assert.assertEquals(0`vertexTraversal(this.sqlgGraph`marko).out("drives").has(T.label`"Person").has("name"`"vw").count().next()`0);" is 131.,85
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexHasLabelInSchema,Long Statement,The length of the statement "Assert.assertEquals(1`vertexTraversal(this.sqlgGraph`marko).out("drives").has(T.label`"TestSchema.Car").has("name"`"bmw").count().next()`0);" is 140.,97
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testVertexHasLabelInSchema,Long Statement,The length of the statement "Assert.assertEquals(0`vertexTraversal(this.sqlgGraph`marko).out("drives").has(T.label`"TestSchema.Person").has("name"`"vw").count().next()`0);" is 142.,97
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testHasWithPercentageInIt,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"uid"`"\"BLRNC5->CXC4030052~%%%~FAJ1211373~%%%~2015-07-19~%%%~9999-12-31~%%%~Enabled~%%%~Licensed~%%%~Improved~%%%~compressed~%%%~mode~%%%~handling.~%%%~Restricted:~%%%~\"\"Partial.~%%%~Feature~%%%~is~%%%~restricted~%%%~in~%%%~RNC~%%%~W12B~%%%~SW.~%%%~RNC~%%%~W13.0.1.1~%%%~or~%%%~later~%%%~SW~%%%~is~%%%~required~%%%~in~%%%~order~%%%~to~%%%~run~%%%~this~%%%~feature.~%%%~For~%%%~RBS~%%%~W12.1.2.2/~%%%~W13.0.0.0~%%%~or~%%%~later~%%%~is~%%%~required.~%%%~OSS-RC~%%%~12.2~%%%~or~%%%~later~%%%~is~%%%~required.\"\".~%%%~GA:~%%%~W13A\"");" is 577.,112
pietermartin_sqlg,org.umlg.sqlg.test.vertexout,TestVertexOutWithHas,testHasWithPercentageInIt,Long Statement,The length of the statement "List<Vertex> persons=this.sqlgGraph.traversal().V().hasLabel("Person").has("uid"`"\"BLRNC5->CXC4030052~%%%~FAJ1211373~%%%~2015-07-19~%%%~9999-12-31~%%%~Enabled~%%%~Licensed~%%%~Improved~%%%~compressed~%%%~mode~%%%~handling.~%%%~Restricted:~%%%~\"\"Partial.~%%%~Feature~%%%~is~%%%~restricted~%%%~in~%%%~RNC~%%%~W12B~%%%~SW.~%%%~RNC~%%%~W13.0.1.1~%%%~or~%%%~later~%%%~SW~%%%~is~%%%~required~%%%~in~%%%~order~%%%~to~%%%~run~%%%~this~%%%~feature.~%%%~For~%%%~RBS~%%%~W12.1.2.2/~%%%~W13.0.0.0~%%%~or~%%%~later~%%%~is~%%%~required.~%%%~OSS-RC~%%%~12.2~%%%~or~%%%~later~%%%~is~%%%~required.\"\".~%%%~GA:~%%%~W13A\"").toList();" is 619.,112
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalDateTimeArray,Long Statement,The length of the statement "LocalDateTime[] localDateTimes=new LocalDateTime[]{isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()};" is 224.,23
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalDateTimeArray,Long Statement,The length of the statement "List<? extends Property<LocalDateTime[]>> properties=sqlgGraph1.traversal().V().hasLabel("A").<LocalDateTime[]>properties("localDateTimes").toList();" is 149.,23
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalDateTimeArrayOnEdge,Long Statement,The length of the statement "LocalDateTime[] localDateTimes=new LocalDateTime[]{isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()};" is 224.,43
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalDateTimeArrayOnEdge,Long Statement,The length of the statement "List<? extends Property<LocalDateTime[]>> properties=sqlgGraph1.traversal().E().hasLabel("aa").<LocalDateTime[]>properties("localDateTimes").toList();" is 150.,43
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalDateArray,Long Statement,The length of the statement "List<? extends Property<LocalDate[]>> properties=sqlgGraph1.traversal().V().hasLabel("A").<LocalDate[]>properties("localDates").toList();" is 137.,65
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalDateArrayOnEdge,Long Statement,The length of the statement "List<? extends Property<LocalDate[]>> properties=sqlgGraph1.traversal().E().hasLabel("aa").<LocalDate[]>properties("localDates").toList();" is 138.,81
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalTimeArray,Long Statement,The length of the statement "List<? extends Property<LocalTime[]>> properties=sqlgGraph1.traversal().V().hasLabel("A").<LocalTime[]>properties("localTimes").toList();" is 137.,99
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testLocalTimeArrayOnEdge,Long Statement,The length of the statement "List<? extends Property<LocalTime[]>> properties=sqlgGraph1.traversal().E().hasLabel("aa").<LocalTime[]>properties("localTimes").toList();" is 138.,120
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArray,Long Statement,The length of the statement "ZonedDateTime zonedDateTimeAGT=ZonedDateTime.of(isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`zoneIdShanghai);" is 150.,142
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArray,Long Statement,The length of the statement "ZonedDateTime zonedDateTimeAGTHarare=ZonedDateTime.of(isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`zoneIdHarare);" is 154.,142
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArray,Long Statement,The length of the statement "List<? extends Property<ZonedDateTime[]>> properties=sqlgGraph1.traversal().V().hasLabel("A").<ZonedDateTime[]>properties("zonedDateTimes").toList();" is 149.,142
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArrayOnEdge,Long Statement,The length of the statement "ZonedDateTime zonedDateTimeAGT=ZonedDateTime.of(isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`zoneIdShanghai);" is 150.,164
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArrayOnEdge,Long Statement,The length of the statement "ZonedDateTime zonedDateTimeAGTHarare=ZonedDateTime.of(isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`zoneIdHarare);" is 154.,164
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArrayOnEdge,Long Statement,The length of the statement "List<? extends Property<ZonedDateTime[]>> properties=sqlgGraph1.traversal().E().hasLabel("aa").<ZonedDateTime[]>properties("zonedDateTimes").toList();" is 150.,164
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testDurationArray,Long Statement,The length of the statement "List<? extends Property<Duration[]>> properties=sqlgGraph1.traversal().V().hasLabel("A").<Duration[]>properties("durations").toList();" is 134.,188
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testDurationArray,Magic Number,The method contains a magic number: 5,188
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testDurationArrayOnEdge,Long Statement,The length of the statement "List<? extends Property<Duration[]>> properties=sqlgGraph1.traversal().E().hasLabel("aa").<Duration[]>properties("duration").toList();" is 134.,205
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testDurationArrayOnEdge,Magic Number,The method contains a magic number: 5,205
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArray,Long Statement,The length of the statement "List<? extends Property<Period[]>> properties=sqlgGraph1.traversal().V().hasLabel("A").<Period[]>properties("periods").toList();" is 128.,224
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArray,Magic Number,The method contains a magic number: 2016,224
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArray,Magic Number,The method contains a magic number: 5,224
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArray,Magic Number,The method contains a magic number: 5,224
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArray,Magic Number,The method contains a magic number: 2015,224
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArray,Magic Number,The method contains a magic number: 4,224
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArray,Magic Number,The method contains a magic number: 4,224
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArrayOnEdge,Long Statement,The length of the statement "List<? extends Property<Period[]>> properties=sqlgGraph1.traversal().E().hasLabel("aa").<Period[]>properties("periods").toList();" is 129.,241
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArrayOnEdge,Magic Number,The method contains a magic number: 2016,241
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArrayOnEdge,Magic Number,The method contains a magic number: 5,241
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArrayOnEdge,Magic Number,The method contains a magic number: 5,241
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArrayOnEdge,Magic Number,The method contains a magic number: 2015,241
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArrayOnEdge,Magic Number,The method contains a magic number: 4,241
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testPeriodArrayOnEdge,Magic Number,The method contains a magic number: 4,241
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArray2,Long Statement,The length of the statement "ZonedDateTime zonedDateTimeAGT=ZonedDateTime.of(isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`zoneIdShanghai);" is 150.,260
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArray2,Long Statement,The length of the statement "ZonedDateTime zonedDateTimeAGTHarare=ZonedDateTime.of(isHsqldb() ? LocalDateTime.now().truncatedTo(ChronoUnit.MILLIS) : LocalDateTime.now()`zoneIdHarare);" is 154.,260
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDateArray,testZonedDateTimeArray2,Long Statement,The length of the statement "List<? extends Property<ZonedDateTime[]>> properties=sqlgGraph1.traversal().V().hasLabel("A").<ZonedDateTime[]>properties("zonedDateTimes").toList();" is 149.,260
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLocalTime,Long Statement,The length of the statement "List<? extends Property<LocalTime>> properties=sqlgGraph1.traversal().V().hasLabel("A").<LocalTime>properties("time").toList();" is 127.,74
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testZonedDateTime,Long Statement,The length of the statement "List<? extends Property<ZonedDateTime>> properties=sqlgGraph1.traversal().V().hasLabel("A").<ZonedDateTime>properties("zonedDateTime").toList();" is 144.,90
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testDuration,Magic Number,The method contains a magic number: 5,110
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod,Magic Number,The method contains a magic number: 2016,125
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod,Magic Number,The method contains a magic number: 5,125
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod,Magic Number,The method contains a magic number: 5,125
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLocalDateManyTimes,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"created1"`now`"created2"`now1`"created3"`zonedDateTimeAGT`"created4"`zonedDateTimeAGTHarare);" is 141.,182
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLocalDateEdge,Long Statement,The length of the statement "Edge e1=a1.addEdge("halo"`a2`"created1"`now`"created2"`now1`"created3"`zonedDateTimeAGT`"created4"`zonedDateTimeAGTHarare`"created5"`time);" is 139.,213
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLocalDateEdge,Long Statement,The length of the statement "Assert.assertEquals(time.toSecondOfDay()`this.sqlgGraph.traversal().E(e1.id()).next().<LocalTime>value("created5").toSecondOfDay());" is 132.,213
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 22,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 10,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 22,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 22,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 10,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 22,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testPeriod2,Magic Number,The method contains a magic number: 11,248
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testDuration2,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testDuration2,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testDuration2,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testDuration2,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Long Statement,The length of the statement "List<Map<String`Vertex>> result=this.sqlgGraph.traversal().V().hasLabel("A").as("a").out().as("b").out().as("c").<Vertex>select("a"`"b"`"c").toList();" is 150.,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Long Statement,The length of the statement "List<Vertex> cs=Arrays.asList(result.get(0).get("c")`result.get(1).get("c")`result.get(2).get("c")`result.get(3).get("c"));" is 123.,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 1000,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 4,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 2,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 3,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 2,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 3,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 2,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 3,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 2,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDate,Magic Number,The method contains a magic number: 3,272
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateWithDuplicatedEntitiesInPath,Long Statement,The length of the statement "List<Map<String`Vertex>> result=this.sqlgGraph.traversal().V().hasLabel("A").as("a").out().as("b").out().as("c").out().as("a_again").<Vertex>select("a"`"b"`"c"`"a_again").toList();" is 180.,317
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Long Statement,The length of the statement "List<Map<String`Object>> result=this.sqlgGraph.traversal().V().hasLabel("A").as("a").outE().as("ab").inV().outE().as("bc").inV().as("c").select("a"`"ab"`"bc"`"c").toList();" is 172.,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Long Statement,The length of the statement "List<Object> cs=Arrays.asList(result.get(0).get("c")`result.get(1).get("c")`result.get(2).get("c")`result.get(3).get("c"));" is 123.,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Long Statement,The length of the statement "List<Object> bc=Arrays.asList(result.get(0).get("bc")`result.get(1).get("bc")`result.get(2).get("bc")`result.get(3).get("bc"));" is 127.,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Long Statement,The length of the statement "Set<Object> ab=new HashSet<>(Arrays.asList(result.get(0).get("ab")`result.get(1).get("ab")`result.get(2).get("ab")`result.get(3).get("ab")));" is 141.,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 1000,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 4,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 3,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLabelledZonedDateOnEdge,Magic Number,The method contains a magic number: 2,350
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testMultipleLabelledZonedDate,Long Statement,The length of the statement "List<Map<String`Vertex>> result=this.sqlgGraph.traversal().V().hasLabel("A").as("a1"`"a2"`"a3").out().as("b1"`"b2"`"b3").out().as("c1"`"c2"`"c3").<Vertex>select("a1"`"a2"`"a3"`"b1"`"b2"`"b3"`"c1"`"c2"`"c3").toList();" is 216.,388
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testMultipleLabelledZonedDate,Magic Number,The method contains a magic number: 1000,388
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testMultipleLabelledZonedDate,Magic Number,The method contains a magic number: 4,388
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testMultipleLabelledZonedDate,Magic Number,The method contains a magic number: 3,388
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLoadDateTypes,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"Person"`"dateTime"`localDateTime`"date"`localDate`"time"`localTime`"zonedDateTime"`zonedDateTime`"period"`period`"duration"`duration);" is 168.,423
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLoadDateTypes,Magic Number,The method contains a magic number: 12,423
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLoadDateTypes,Magic Number,The method contains a magic number: 13,423
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLoadDateTypes,Magic Number,The method contains a magic number: 14,423
pietermartin_sqlg,org.umlg.sqlg.test.localdate,TestLocalDate,testLoadDateTypes,Magic Number,The method contains a magic number: 2,423
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,data,Long Statement,The length of the statement "return Arrays.asList(new Object[]{Boolean.TRUE`Boolean.FALSE}`new Object[]{Boolean.FALSE`Boolean.FALSE}`new Object[]{Boolean.TRUE`Boolean.TRUE}`new Object[]{Boolean.FALSE`Boolean.TRUE});" is 186.,42
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Long Statement,The length of the statement "VertexLabel policyDiscrepancyVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("PolicyDiscrepancy"`new LinkedHashMap<String`PropertyType>(){" is 183.,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"PolicyDiscrepancy"`"uid1"`"uid1" + i`"uid2"`"uid2" + i`"name"`"name" + i`"part"`(i & 1) == 0 ? "part1" : "part2");" is 148.,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Long Statement,The length of the statement "sqlgGraph.traversal().V().hasLabel("PolicyDiscrepancy").has("uid1"`"uid10").has("uid2"`"uid20").has("part"`"part1").drop().iterate();" is 133.,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 100,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 100,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 10,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 10,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 9,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 6,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 3,81
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 132.,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 151.,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 100,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 100,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 100,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 1_000_000,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 2,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 2,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 2,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 1_000_000,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 2_000_000,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 2_000_000,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 500_000,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 500_000,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsInPerformance,Magic Number,The method contains a magic number: 10,138
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsIn,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 140.,211
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsIn,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 151.,211
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 100,211
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 100,211
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 2,211
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 2,211
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsOut,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 151.,261
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsOut,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 140.,261
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 100,261
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 100,261
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 2,261
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 2,261
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 2,261
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 131.,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a2");" is 122.,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a3");" is 122.,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel("A").hasId(RecordId.from(sqlgGraph`schemaTable.getSchema() + "." + schemaTable.getTable()+ RecordId.RECORD_ID_DELIMITER+ "["+ uid1+ "`"+ uid2+ "`a1"+ "]")).drop().iterate();" is 213.,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Magic Number,The method contains a magic number: 100,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Magic Number,The method contains a magic number: 100,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Magic Number,The method contains a magic number: 3,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testUserSuppliedDrop,Magic Number,The method contains a magic number: 2,313
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStep,Long Statement,The length of the statement "VertexLabel vertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 131.,355
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStep,Magic Number,The method contains a magic number: 100,355
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStep,Magic Number,The method contains a magic number: 100,355
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStep,Magic Number,The method contains a magic number: 2,355
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("A"`new LinkedHashMap<>(){" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("B"`new LinkedHashMap<>(){" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("C"`new LinkedHashMap<>(){" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a1");" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b1");" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b2");" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b3");" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex c1=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c1");" is 132.,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepPartition,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 2,388
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Identifier,The length of the identifier realWorkspaceElementVertexLabel is 31.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "VertexLabel realWorkspaceElementVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensurePartitionedVertexLabelExist("RealWorkspaceElement"`attributeMap`ListOrderedSet.listOrderedSet(List.of("cmUid"`"vendorTechnology"))`PartitionType.LIST`"\"vendorTechnology\"");" is 266.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Partition partition=realWorkspaceElementVertexLabel.ensureListPartitionExists(vendorTechnology.name()`"'" + vendorTechnology.name() + "'");" is 139.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "PropertyColumn propertyColumn=realWorkspaceElementVertexLabel.getProperty("cmUid").orElseThrow(IllegalStateException::new);" is 123.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "VertexLabel virtualGroupVertexLabel=sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("VirtualGroup"`new LinkedHashMap<>(){" is 138.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "EdgeLabel edgeLabel=this.sqlgGraph.getTopology().getPublicSchema().ensurePartitionedEdgeLabelExistOnInOrOutVertexLabel("virtualGroup_RealWorkspaceElement"`virtualGroupVertexLabel`realWorkspaceElementVertexLabel`new LinkedHashMap<>(){" is 233.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Partition partition=edgeLabel.ensureListPartitionExists("Northern"`"'" + ((RecordId)northern.id()).getID().getIdentifiers().get(0).toString() + "'");" is 149.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "partition=edgeLabel.ensureListPartitionExists("Western"`"'" + ((RecordId)western.id()).getID().getIdentifiers().get(0).toString() + "'");" is 137.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Vertex hgsm=this.sqlgGraph.addVertex(T.label`"RealWorkspaceElement"`"cmUid"`"a" + i`"name"`"hgsm" + i`"vendorTechnology"`VENDOR_TECHNOLOGY.HGSM.name());" is 152.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Vertex humts=this.sqlgGraph.addVertex(T.label`"RealWorkspaceElement"`"cmUid"`"b" + i`"name"`"humts" + i`"vendorTechnology"`VENDOR_TECHNOLOGY.HUMTS.name());" is 155.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Vertex hlte=this.sqlgGraph.addVertex(T.label`"RealWorkspaceElement"`"cmUid"`"c" + i`"name"`"hlte" + i`"vendorTechnology"`VENDOR_TECHNOLOGY.HLTE.name());" is 152.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Vertex hcompt=this.sqlgGraph.addVertex(T.label`"RealWorkspaceElement"`"cmUid"`"d" + i`"name"`"hcompt" + i`"vendorTechnology"`VENDOR_TECHNOLOGY.HCOMPT.name());" is 158.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(10`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HGSM.name()).count().next()`0);" is 159.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(10`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HUMTS.name()).count().next()`0);" is 160.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(10`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HLTE.name()).count().next()`0);" is 159.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "Assert.assertEquals(10`this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HCOMPT.name()).count().next()`0);" is 161.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "List<Object> ids=this.sqlgGraph.traversal().V(northern).outE("virtualGroup_RealWorkspaceElement").as("e").otherV().has("vendorTechnology"`VENDOR_TECHNOLOGY.HGSM.name()).select("e").by(T.id).toList();" is 199.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HGSM.name()).drop().iterate();" is 135.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "ids=this.sqlgGraph.traversal().V(northern).outE("virtualGroup_RealWorkspaceElement").as("e").otherV().has("vendorTechnology"`VENDOR_TECHNOLOGY.HGSM.name()).select("e").by(T.id).toList();" is 186.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "List<Vertex> realWorkspaceVertices=this.sqlgGraph.traversal().V(northern).out("virtualGroup_RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HCOMPT.name()).toList();" is 180.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel("RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HCOMPT.name()).drop().iterate();" is 137.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Long Statement,The length of the statement "realWorkspaceVertices=this.sqlgGraph.traversal().V(northern).out("virtualGroup_RealWorkspaceElement").has("vendorTechnology"`VENDOR_TECHNOLOGY.HGSM.name()).toList();" is 165.,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 2,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 10,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 5,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestPartitionedDrop,testPartitionEdgeOnUserDefinedForeignKey,Magic Number,The method contains a magic number: 5,37
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,data,Long Statement,The length of the statement "return Arrays.asList(new Object[]{Boolean.TRUE`Boolean.FALSE}`new Object[]{Boolean.FALSE`Boolean.FALSE}`new Object[]{Boolean.TRUE`Boolean.TRUE}`new Object[]{Boolean.FALSE`Boolean.TRUE});" is 186.,49
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 100,87
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 100,87
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 10,87
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 10,87
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 9,87
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedIdsWithinID,Magic Number,The method contains a magic number: 6,87
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsIn,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,128
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsIn,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,128
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 100,128
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 100,128
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 2,128
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsIn,Magic Number,The method contains a magic number: 2,128
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsOut,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,174
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsOut,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,174
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 100,174
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 100,174
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 2,174
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 2,174
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testNormalAndUserSuppliedIdsOut,Magic Number,The method contains a magic number: 2,174
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a2");" is 122.,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Long Statement,The length of the statement "this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a3");" is 122.,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().hasLabel("A").hasId(RecordId.from(sqlgGraph`schemaTable.getSchema() + "." + schemaTable.getTable()+ RecordId.RECORD_ID_DELIMITER+ "["+ uid1+ "`"+ uid2+ "]")).drop().iterate();" is 206.,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Magic Number,The method contains a magic number: 100,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Magic Number,The method contains a magic number: 100,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Magic Number,The method contains a magic number: 3,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Magic Number,The method contains a magic number: 3,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testUserSuppliedDrop,Magic Number,The method contains a magic number: 2,222
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,g_V_properties_drop,Long Statement,The length of the statement "this.sqlgGraph.traversal().V().forEachRemaining(vertex -> Assert.assertEquals(0`IteratorUtils.count(vertex.properties())));" is 123.,259
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,g_V_properties_drop,Magic Number,The method contains a magic number: 6,259
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,g_V_properties_drop,Magic Number,The method contains a magic number: 6,259
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,shouldReferenceVertexWhenRemoved,Long Statement,The length of the statement "final EventStrategy.Builder builder=EventStrategy.build().addListener(listener).detach(EventStrategy.Detachment.REFERENCE);" is 123.,270
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,shouldReferenceVertexWhenRemoved,Long Statement,The length of the statement "if (this.sqlgGraph.features().graph().supportsTransactions()) builder.eventQueue(new EventStrategy.TransactionalEventQueue(this.sqlgGraph));" is 140.,270
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,shouldReferenceVertexWhenRemovedUserSuppliedIds,Long Statement,The length of the statement "final EventStrategy.Builder builder=EventStrategy.build().addListener(listener).detach(EventStrategy.Detachment.REFERENCE);" is 123.,302
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,shouldReferenceVertexWhenRemovedUserSuppliedIds,Long Statement,The length of the statement "if (this.sqlgGraph.features().graph().supportsTransactions()) builder.eventQueue(new EventStrategy.TransactionalEventQueue(this.sqlgGraph));" is 140.,302
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,shouldReferenceVertexWhenRemovedUserSuppliedIds,Magic Number,The method contains a magic number: 100,302
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,shouldReferenceVertexWhenRemovedUserSuppliedIds,Magic Number,The method contains a magic number: 100,302
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStep,Magic Number,The method contains a magic number: 2,344
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepUserSuppliedIds,Magic Number,The method contains a magic number: 100,362
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepUserSuppliedIds,Magic Number,The method contains a magic number: 2,362
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1,Magic Number,The method contains a magic number: 3,389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Long Statement,The length of the statement "VertexLabel dVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("D"`new LinkedHashMap<>(){" is 121.,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 100,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat1UserSuppliedIds,Magic Number,The method contains a magic number: 3,415
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testAsWithDuplicatePaths,Magic Number,The method contains a magic number: 5,513
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testAsWithDuplicatePaths_assert,Long Statement,The length of the statement "DefaultGraphTraversal<Vertex`Map<String`Element>> gt=(DefaultGraphTraversal<Vertex`Map<String`Element>>)sqlgGraph.traversal().V(a1).outE().as("e").inV().in().as("v").<Element>select("e"`"v");" is 191.,527
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testAsWithDuplicatePaths_assert,Magic Number,The method contains a magic number: 5,527
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testAsWithDuplicatePaths_assert,Magic Number,The method contains a magic number: 2,527
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2,Magic Number,The method contains a magic number: 3,544
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2,Magic Number,The method contains a magic number: 3,544
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2,Magic Number,The method contains a magic number: 2,544
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2,Magic Number,The method contains a magic number: 2,544
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Long Method,The method has 102 lines of code.,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Long Statement,The length of the statement "VertexLabel dVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("D"`new LinkedHashMap<>(){" is 121.,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 100,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 3,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepRepeat2UserSuppliedIds,Magic Number,The method contains a magic number: 2,588
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoin,Magic Number,The method contains a magic number: 2,721
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoin,Magic Number,The method contains a magic number: 2,721
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoin,Magic Number,The method contains a magic number: 2,721
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a1");" is 132.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b1");" is 132.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b2");" is 132.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b3");" is 132.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Long Statement,The length of the statement "Vertex c1=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c1");" is 132.,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 100,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 2,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 2,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinWithuserSuppliedIds,Magic Number,The method contains a magic number: 2,759
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdges,Magic Number,The method contains a magic number: 3L,844
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdges,Magic Number,The method contains a magic number: 3,844
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 3L,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 3,875
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropAll,Magic Number,The method contains a magic number: 6,947
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropAll,Magic Number,The method contains a magic number: 6,947
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropAllEdges,Magic Number,The method contains a magic number: 6,961
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropAllEdges,Magic Number,The method contains a magic number: 6,961
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVertices,Magic Number,The method contains a magic number: 6,976
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVertices,Magic Number,The method contains a magic number: 5,976
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVertices,Magic Number,The method contains a magic number: 6,976
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a1");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a2");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b1");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b2");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b3");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex c1=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c1");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex c2=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c2");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex c3=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c3");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex c4=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c4");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Long Statement,The length of the statement "Vertex c5=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c5");" is 132.,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 100,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 6,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 5,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesUserSuppliedIds,Magic Number,The method contains a magic number: 6,1023
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHas,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").out().out().has("name"`P.within("c1"`"c2"`"c3"`"c4")).toList();" is 130.,1117
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHas,Magic Number,The method contains a magic number: 5,1117
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHas,Magic Number,The method contains a magic number: 4,1117
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHas,Magic Number,The method contains a magic number: 5,1117
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a1");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a2");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b1");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b2");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b3");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex c1=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c1");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex c2=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c2");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex c3=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c3");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex c4=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c4");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "Vertex c5=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c5");" is 132.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").out().out().has("name"`P.within("c1"`"c2"`"c3"`"c4")).toList();" is 130.,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 100,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 5,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 4,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,dropMultiplePathsToVerticesWithHasWithUserSuppliedIds,Magic Number,The method contains a magic number: 5,1163
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStep,Magic Number,The method contains a magic number: 2,1256
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStep,Magic Number,The method contains a magic number: 2,1256
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStep,Magic Number,The method contains a magic number: 2,1256
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a1");" is 132.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a2");" is 132.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "Vertex a3=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a3");" is 132.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b1");" is 132.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b2");" is 132.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b3");" is 132.,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 100,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 100,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 100,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 100,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 100,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 100,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 2,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 2,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropStepWithJoinVertexStepUserSuppliedIds,Magic Number,The method contains a magic number: 2,1292
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultiple,Magic Number,The method contains a magic number: 4,1357
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Magic Number,The method contains a magic number: 100,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Magic Number,The method contains a magic number: 100,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Magic Number,The method contains a magic number: 100,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Magic Number,The method contains a magic number: 100,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Magic Number,The method contains a magic number: 100,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleOneUserSuppliedId,Magic Number,The method contains a magic number: 4,1389
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 100,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIds,Magic Number,The method contains a magic number: 4,1463
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 100,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleUserSuppliedIdsSimpler,Magic Number,The method contains a magic number: 2,1542
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemas,Magic Number,The method contains a magic number: 4,1605
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A.A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a1");" is 134.,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B.B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b1");" is 134.,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A.A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a2");" is 134.,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Long Statement,The length of the statement "Vertex c2=this.sqlgGraph.addVertex(T.label`"C.C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c2");" is 134.,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 100,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testDropOutMultipleAcrossSchemasuserSuppliedIds,Magic Number,The method contains a magic number: 4,1637
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStep,testOptionalAndDrop,Magic Number,The method contains a magic number: 2,1716
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,data,Long Statement,The length of the statement "return Arrays.asList(new Object[]{Boolean.TRUE`Boolean.FALSE}`new Object[]{Boolean.FALSE`Boolean.FALSE}`new Object[]{Boolean.TRUE`Boolean.TRUE}`new Object[]{Boolean.FALSE`Boolean.TRUE});" is 186.,41
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrier,Magic Number,The method contains a magic number: 2,90
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("C"`new LinkedHashMap<String`PropertyType>(){" is 122.,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 100,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropBarrierUserSuppliedIds,Magic Number,The method contains a magic number: 2,111
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptional,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").as("a").optional(__.select("a").out()).out().toList();" is 121.,175
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptional,Magic Number,The method contains a magic number: 2,175
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptional,Magic Number,The method contains a magic number: 4,175
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptional,Magic Number,The method contains a magic number: 5,175
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("C"`new LinkedHashMap<String`PropertyType>(){" is 122.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b3"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex c1=this.sqlgGraph.addVertex(T.label`"C"`"name"`"c1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex c2=this.sqlgGraph.addVertex(T.label`"C"`"name"`"c2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "Vertex c3=this.sqlgGraph.addVertex(T.label`"C"`"name"`"c3"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Long Statement,The length of the statement "List<Vertex> vertices=this.sqlgGraph.traversal().V().hasLabel("A").as("a").optional(__.select("a").out()).out().toList();" is 121.,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 100,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 2,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 4,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,unontimizedOptionaluserSuppliedIds,Magic Number,The method contains a magic number: 5,216
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDrop,Magic Number,The method contains a magic number: 4,301
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDrop,Magic Number,The method contains a magic number: 4,301
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDrop,Magic Number,The method contains a magic number: 3,301
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b3"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 4,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 4,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testOptionalDropuserSuppliedIds,Magic Number,The method contains a magic number: 3,337
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 156.,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 156.,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Long Statement,The length of the statement "a1.addEdge("ab"`b1`"name"`"e1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 140.,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Long Statement,The length of the statement "a1.addEdge("ab"`b1`"name"`"e2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 140.,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 2,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDropuserSuppliedIds,Magic Number,The method contains a magic number: 2,400
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 156.,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 156.,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 100,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testEdgePropertyDrop,Magic Number,The method contains a magic number: 2,454
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,playlistPaths,Magic Number,The method contains a magic number: 100,507
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,playlistPaths,Magic Number,The method contains a magic number: 804,507
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,playlistPaths,Magic Number,The method contains a magic number: 803,507
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,getPlaylistPaths,Long Statement,The length of the statement "return graphTraversal.V().has("name"`"Bob_Dylan").in("sungBy").as("a").repeat(__.out().order().by(Order.shuffle).simplePath().from("a")).until(__.out("writtenBy").has("name"`"Johnny_Cash")).limit(1).as("b").repeat(__.out().order().by(Order.shuffle).as("c").simplePath().from("b").to("c")).until(__.out("sungBy").has("name"`"Grateful_Dead")).limit(100);" is 352.,523
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,getPlaylistPaths,Magic Number,The method contains a magic number: 100,523
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Long Statement,The length of the statement "Vertex a3=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Magic Number,The method contains a magic number: 100,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Magic Number,The method contains a magic number: 100,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Magic Number,The method contains a magic number: 100,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Magic Number,The method contains a magic number: 100,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Magic Number,The method contains a magic number: 100,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,dropPropertyuserSuppliedIds,Magic Number,The method contains a magic number: 100,553
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDrop,Magic Number,The method contains a magic number: 4,594
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDrop,Magic Number,The method contains a magic number: 2,594
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDrop,Magic Number,The method contains a magic number: 4,594
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDrop,Magic Number,The method contains a magic number: 4,594
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 168.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 168.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a3=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a3"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 168.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a4=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a4"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 168.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a5=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a5"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 168.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "Vertex a6=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a6"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 168.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "a1.addEdge("aa"`a2`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 128.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "a2.addEdge("aa"`a3`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 128.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "a3.addEdge("aa"`a4`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 128.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "a4.addEdge("aa"`a5`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 128.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Long Statement,The length of the statement "a5.addEdge("aa"`a6`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"uid3"`UUID.randomUUID().toString());" is 128.,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 100,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 4,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 2,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 4,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,multiplePathQueriesDropuserSuppliedIds,Magic Number,The method contains a magic number: 4,620
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropEdgesUserSuppliedIds,Magic Number,The method contains a magic number: 100,686
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelect,Long Statement,The length of the statement "List<Edge> ees=this.sqlgGraph.traversal().V().hasLabel("A").outE("ab").as("e").otherV().has("status"`1).<Edge>select("e").toList();" is 131.,735
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelect,Magic Number,The method contains a magic number: 2,735
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new LinkedHashMap<String`PropertyType>(){" is 122.,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("B"`new LinkedHashMap<String`PropertyType>(){" is 122.,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"name"`"a1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString());" is 132.,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b1"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"status"`1);" is 143.,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Long Statement,The length of the statement "Vertex b2=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b2"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"status"`0);" is 143.,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Long Statement,The length of the statement "Vertex b3=this.sqlgGraph.addVertex(T.label`"B"`"name"`"b3"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"status"`1);" is 143.,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Long Statement,The length of the statement "List<Edge> ees=this.sqlgGraph.traversal().V().hasLabel("A").outE("ab").as("e").otherV().has("status"`1).<Edge>select("e").toList();" is 131.,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 100,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepBarrier,testDropWithSelectAndUserSuppliedIds,Magic Number,The method contains a magic number: 2,754
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepTruncate,data,Long Statement,The length of the statement "return Arrays.asList(new Object[]{Boolean.TRUE`Boolean.FALSE}`new Object[]{Boolean.FALSE`Boolean.FALSE}`new Object[]{Boolean.TRUE`Boolean.TRUE}`new Object[]{Boolean.FALSE`Boolean.TRUE});" is 186.,32
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepTruncate,testTruncateVertexOnly,Magic Number,The method contains a magic number: 2,68
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepTruncate,testTruncateEdgeOnly,Magic Number,The method contains a magic number: 2,82
pietermartin_sqlg,org.umlg.sqlg.test.process.dropstep,TestDropStepTruncate,testTruncateVertexLabelWithMultipleOutEdgeLabels,Magic Number,The method contains a magic number: 2,107
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testSimpleVertexInsertAndUpdateAndQuery,Empty catch clause,The method has an empty catch block.,22
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testSimpleVertexInsertAndUpdateAndQuery,Magic Number,The method contains a magic number: 100,22
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testSimpleVertexInsertAndUpdateAndQuery,Magic Number,The method contains a magic number: 100,22
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testSimpleVertexInsertAndUpdateAndQuery,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testEdgeInsertUpdate,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"A"`new HashMap<String`PropertyType>(){" is 165.,66
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testEdgeInsertUpdate,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"B"`new HashMap<String`PropertyType>(){" is 165.,66
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testEdgeInsertUpdate,Magic Number,The method contains a magic number: 100,66
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testEdgeInsertUpdate,Magic Number,The method contains a magic number: 100,66
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testEdgeInsertUpdate,Magic Number,The method contains a magic number: 100,66
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testGetEdgeById,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"A"`new HashMap<String`PropertyType>(){" is 165.,110
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testGetEdgeById,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist(this.sqlgGraph.getSqlDialect().getPublicSchema()`"B"`new HashMap<String`PropertyType>(){" is 165.,110
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testGetEdgeById,Magic Number,The method contains a magic number: 100,110
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testGetEdgeById,Magic Number,The method contains a magic number: 100,110
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleVertexEdgeGremlin,testGetEdgeById,Magic Number,The method contains a magic number: 100,110
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,beforeClass,Long Statement,The length of the statement "if (!configuration.containsKey(SqlgGraph.JDBC_URL)) throw new IllegalArgumentException(String.format("SqlGraph configuration requires that the %s be set"`SqlgGraph.JDBC_URL));" is 175.,36
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedIds,Long Statement,The length of the statement "VertexLabel personVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("Person"`new LinkedHashMap<>(){" is 131.,53
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedIds,Magic Number,The method contains a magic number: 100,53
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedIds,Magic Number,The method contains a magic number: 100,53
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedIds,Magic Number,The method contains a magic number: 100,53
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedIds,Magic Number,The method contains a magic number: 100,53
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedLongKeys,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,88
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedLongKeys,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,88
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedLongKeys,Magic Number,The method contains a magic number: 100,88
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testUserSuppliedLongKeys,Magic Number,The method contains a magic number: 100,88
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Long Statement,The length of the statement "VertexLabel aVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("A"`new LinkedHashMap<>(){" is 121.,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Long Statement,The length of the statement "VertexLabel bVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("B"`new LinkedHashMap<>(){" is 121.,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Long Statement,The length of the statement "VertexLabel cVertexLabel=this.sqlgGraph.getTopology().getPublicSchema().ensureVertexLabelExist("C"`new LinkedHashMap<>(){" is 121.,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Long Statement,The length of the statement "Vertex a1=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a1");" is 132.,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Long Statement,The length of the statement "Vertex b1=this.sqlgGraph.addVertex(T.label`"B"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"b1");" is 132.,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Long Statement,The length of the statement "Vertex a2=this.sqlgGraph.addVertex(T.label`"A"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"a2");" is 132.,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Long Statement,The length of the statement "Vertex c2=this.sqlgGraph.addVertex(T.label`"C"`"uid1"`UUID.randomUUID().toString()`"uid2"`UUID.randomUUID().toString()`"name"`"c2");" is 132.,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testAddEdgeUserSuppliedPK,Magic Number,The method contains a magic number: 100,121
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 100,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 100,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 100,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 2,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 100,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 100,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 100,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 1000,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 2,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 2,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 2,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 1000,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testVertexCompositeIds,Magic Number,The method contains a magic number: 2,184
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Long Statement,The length of the statement "Optional<EdgeLabel> livesAt=this.sqlgGraph.getTopology().getEdgeLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"livesAt");" is 130.,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Long Statement,The length of the statement "Optional<EdgeLabel> livesAt=this.sqlgGraph.getTopology().getEdgeLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"livesAt");" is 130.,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Long Statement,The length of the statement "List<Vertex> edgeLabels=sqlgGraph.topology().V().hasLabel(SQLG_SCHEMA + "." + Topology.SQLG_SCHEMA_SCHEMA).has(Topology.SQLG_SCHEMA_SCHEMA_NAME`this.sqlgGraph.getSqlDialect().getPublicSchema()).out(SQLG_SCHEMA_SCHEMA_VERTEX_EDGE).out(SQLG_SCHEMA_OUT_EDGES_EDGE).has(Topology.SQLG_SCHEMA_EDGE_LABEL_NAME`"livesAt").toList();" is 323.,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Long Statement,The length of the statement "Preconditions.checkState(edgeLabels.size() == 1`"BUG: There can only ever be one EdgeLabel vertex` found %s"`edgeLabels.size());" is 128.,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 100,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 1000,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 1000,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeCompositeIds,Magic Number,The method contains a magic number: 2,260
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Long Statement,The length of the statement "Optional<EdgeLabel> livesAt=this.sqlgGraph.getTopology().getEdgeLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"livesAt");" is 130.,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Long Statement,The length of the statement "Optional<EdgeLabel> livesAt=this.sqlgGraph1.getTopology().getEdgeLabel(this.sqlgGraph1.getSqlDialect().getPublicSchema()`"livesAt");" is 132.,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Long Statement,The length of the statement "Optional<EdgeLabel> livesAt=this.sqlgGraph.getTopology().getEdgeLabel(this.sqlgGraph.getSqlDialect().getPublicSchema()`"livesAt");" is 130.,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 100,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 1000,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testEdgeNormal,Magic Number,The method contains a magic number: 1000,360
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 100,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 100,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 100,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 5,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 7,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 5,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 2,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 3,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 5,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 7,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKTopology,testDuplicatePath,Magic Number,The method contains a magic number: 5,433
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testBulkUpdateUser,Magic Number,The method contains a magic number: 2,23
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testBulkUpdateUserSuppliedBulkMode,Magic Number,The method contains a magic number: 2,43
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testBulkUpdateUserSuppliedBulkModeOnEdges,Magic Number,The method contains a magic number: 4,76
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testVertexLabelUserSuppliedBulkMode,Magic Number,The method contains a magic number: 2,118
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testVertexAndEdgeLabelUserSuppliedBulkMode,Long Statement,The length of the statement "@SuppressWarnings("Duplicates") VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new HashMap<String`PropertyType>(){" is 148.,137
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testVertexAndEdgeLabelUserSuppliedBulkMode,Magic Number,The method contains a magic number: 100,137
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testVertexAndEdgeLabelUserSuppliedBulkMode,Magic Number,The method contains a magic number: 100,137
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testVertexBatchStreamMode,Magic Number,The method contains a magic number: 100,174
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testVertexBatchStreamMode,Magic Number,The method contains a magic number: 100,174
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testEdgeBatchStreamMode,Magic Number,The method contains a magic number: 100,194
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestUserSuppliedPKBulkMode,testEdgeBatchStreamMode,Magic Number,The method contains a magic number: 100,194
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Long Statement,The length of the statement "@SuppressWarnings("unused") EdgeLabel livesAt=person.ensureEdgeLabelExist("livesAt"`address`new HashMap<String`PropertyType>(){" is 127.,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Long Statement,The length of the statement "List<Map<String`Object>> result=this.sqlgGraph.traversal().V().hasLabel("Person").as("a").outE().as("b").otherV().as("c").select("a"`"b"`"c").toList();" is 151.,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Long Statement,The length of the statement "result=this.sqlgGraph.traversal().V().hasLabel("Address").as("a").inE().as("b").otherV().as("c").select("a"`"b"`"c").toList();" is 126.,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Magic Number,The method contains a magic number: 100,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Magic Number,The method contains a magic number: 100,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Magic Number,The method contains a magic number: 100,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Magic Number,The method contains a magic number: 100,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Magic Number,The method contains a magic number: 3,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testSinglePath,Magic Number,The method contains a magic number: 3,25
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath,Long Statement,The length of the statement "@SuppressWarnings("unused") EdgeLabel livesAt=person.ensureEdgeLabelExist("loves"`person`new HashMap<String`PropertyType>(){" is 124.,101
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 100,101
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 100,101
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,101
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,101
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,101
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath,Magic Number,The method contains a magic number: 2,101
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 100,139
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 100,139
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 100,139
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 100,139
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 2,139
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestSimpleJoinGremlin,testDuplicatePath2,Magic Number,The method contains a magic number: 2,139
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testAbstractLabelAddIdentifierLogic,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testAbstractLabelAddIdentifierLogic,Magic Number,The method contains a magic number: 2,22
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testMultipleIDs,Magic Number,The method contains a magic number: 100,42
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testMultipleIDs,Magic Number,The method contains a magic number: 100,42
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testMultipleIDs,Magic Number,The method contains a magic number: 2,42
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testMultipleIDsNormal,Magic Number,The method contains a magic number: 5,65
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdAsPrimaryKeyIsUnique,Magic Number,The method contains a magic number: 5,87
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdsOnEdge,Long Statement,The length of the statement "@SuppressWarnings("Duplicates") VertexLabel aVertexLabel=this.sqlgGraph.getTopology().ensureVertexLabelExist("A"`new HashMap<>(){" is 129.,108
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdsOnEdge,Magic Number,The method contains a magic number: 100,108
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdsOnEdge,Magic Number,The method contains a magic number: 100,108
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdsOnEdge,Magic Number,The method contains a magic number: 100,108
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdsOnEdge,Magic Number,The method contains a magic number: 100,108
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdsOnEdge,Magic Number,The method contains a magic number: 100,108
pietermartin_sqlg,org.umlg.sqlg.test.usersuppliedpk.topology,TestMultipleIDQuery,testIdsOnEdge,Magic Number,The method contains a magic number: 100,108
pietermartin_sqlg,org.umlg.sqlg.test.docs,DocumentationUsecases,showStreamingWithLockBulkEdgeCreation,Magic Number,The method contains a magic number: 10,301
pietermartin_sqlg,org.umlg.sqlg.test.docs,DocumentationUsecases,showStreamingWithLockBulkEdgeCreation,Magic Number,The method contains a magic number: 1_000_000,301
pietermartin_sqlg,org.umlg.sqlg.test.docs,DocumentationUsecases,showStreamingWithLockBulkEdgeCreation,Magic Number,The method contains a magic number: 1_000_000,301
pietermartin_sqlg,org.umlg.sqlg.test.tinkerpopjira,TestTinkerPopJira,testLazy1AddE,Magic Number,The method contains a magic number: 3,23
pietermartin_sqlg,org.umlg.sqlg.test.tinkerpopjira,TestTinkerPopJira,testLazy1,Magic Number,The method contains a magic number: 3,40
pietermartin_sqlg,org.umlg.sqlg.test.tinkerpopjira,TestTinkerPopJira,testLazy2,Magic Number,The method contains a magic number: 4,58
pietermartin_sqlg,org.umlg.sqlg.test.memory,TestMemoryUsage,testMemoryUsage,Magic Number,The method contains a magic number: 1_000_000,22
pietermartin_sqlg,org.umlg.sqlg.test.memory,TestMemoryUsage,testMemoryUsage,Magic Number,The method contains a magic number: 3000,22
pietermartin_sqlg,org.umlg.sqlg.test.memory,TestMemoryUsage,testMemoryUsage,Magic Number,The method contains a magic number: 1_000_000,22
pietermartin_sqlg,org.umlg.sqlg.test.memory,TestMemoryUsage,testMemoryUsage,Magic Number,The method contains a magic number: 3000,22

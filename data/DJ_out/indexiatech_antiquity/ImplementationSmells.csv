Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
indexiatech_antiquity,co.indexia.antiquity.range,Range,intersectionWith,Long Statement,The length of the statement "throw new IllegalArgumentException(String.format("The specified range %s does not overlap with this range %s"`otherRange.toString()`toString()));" is 145.,398
indexiatech_antiquity,co.indexia.antiquity.range,Range,hashCode,Magic Number,The method contains a magic number: 17,465
indexiatech_antiquity,co.indexia.antiquity.range,Range,hashCode,Magic Number,The method contains a magic number: 37,465
indexiatech_antiquity,co.indexia.antiquity.range,Range,hashCode,Magic Number,The method contains a magic number: 37,465
indexiatech_antiquity,co.indexia.antiquity.range,Range,hashCode,Magic Number,The method contains a magic number: 37,465
indexiatech_antiquity,co.indexia.antiquity.range,Range,toString,Magic Number,The method contains a magic number: 32,483
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,setUp,Magic Number,The method contains a magic number: 10L,32
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testRangesEquality,Magic Number,The method contains a magic number: 10L,42
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testRangesEquality,Magic Number,The method contains a magic number: 10L,42
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testRangesEquality,Magic Number,The method contains a magic number: 10L,42
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testRangesEquality,Magic Number,The method contains a magic number: 10L,42
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXContainsPointY,Magic Number,The method contains a magic number: 10,51
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXContainsPointY,Magic Number,The method contains a magic number: 11L,51
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXContainsPointY,Magic Number,The method contains a magic number: 12L,51
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXIsBeforePointY,Magic Number,The method contains a magic number: 5L,65
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXIsBeforePointY,Magic Number,The method contains a magic number: 10L,65
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXIsBeforePointY,Magic Number,The method contains a magic number: 11L,65
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXIsAfterPointY,Magic Number,The method contains a magic number: 5L,74
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfXIsAfterPointY,Magic Number,The method contains a magic number: 10L,74
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeYIsContainedWithinX,Magic Number,The method contains a magic number: 2L,83
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeYIsContainedWithinX,Magic Number,The method contains a magic number: 8L,83
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeYIsConttainedWithinEqualStartX,Magic Number,The method contains a magic number: 5L,95
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeYIsContainedWithinEqualEndX,Magic Number,The method contains a magic number: 4L,107
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeYIsContainedWithinEqualEndX,Magic Number,The method contains a magic number: 10L,107
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeYIsContainedWitinEqualStartAndEndX,Magic Number,The method contains a magic number: 10L,119
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeNotFullyContainedOverlapsStart,Magic Number,The method contains a magic number: 3L,132
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeNotFullyContainedOverlapsStart,Magic Number,The method contains a magic number: 8L,132
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeNotFullyContainedOverlapsStart,Magic Number,The method contains a magic number: 8L,132
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeNotFullyContainedOverlapsEnd,Magic Number,The method contains a magic number: 4L,145
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeNotFullyContainedOverlapsEnd,Magic Number,The method contains a magic number: 15L,145
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeNotFullyContainedOverlapsEnd,Magic Number,The method contains a magic number: 4L,145
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeNotFullyContainedOverlapsEnd,Magic Number,The method contains a magic number: 10L,145
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeOverlapsEntirePeriod,Magic Number,The method contains a magic number: 4L,157
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeOverlapsEntirePeriod,Magic Number,The method contains a magic number: 15L,157
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeXStartsBeforeY,Empty catch clause,The method has an empty catch block.,169
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeXStartsBeforeY,Magic Number,The method contains a magic number: 5L,169
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeXStartsBeforeY,Magic Number,The method contains a magic number: 2L,169
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeXEndsBeforeY,Empty catch clause,The method has an empty catch block.,187
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeXEndsBeforeY,Magic Number,The method contains a magic number: 11L,187
indexiatech_antiquity,co.indexia.antiquity.range,LongRangeTest,testIfRangeXEndsBeforeY,Magic Number,The method contains a magic number: 15L,187
indexiatech_antiquity,co.indexia.antiquity.graph,IndexableTransactionalVersionedGraphImpl,IndexableTransactionalVersionedGraphImpl,Long Parameter List,The method has 5 parameters. ,43
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedElement,ActiveVersionedElement,Long Statement,The length of the statement "Preconditions.checkArgument((!(rawElement instanceof ActiveVersionedElement))`"rawElement cannot be instance of ActiveVersionElement");" is 135.,47
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedElement,ActiveVersionedElement,Long Statement,The length of the statement "Preconditions.checkArgument(graph.utils.getElementType(rawElement) != VEProps.GRAPH_TYPE.HISTORIC`"Raw element cannot be historic");" is 132.,47
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedElement,getRaw,Complex Conditional,The conditional expression (rawElement instanceof ActiveVersionedElement) || (rawElement instanceof HistoricVersionedElement) || (rawElement instanceof EventElement)|| (rawElement instanceof ReadOnlyEdge)|| (rawElement instanceof ReadOnlyVertex) is complex.,90
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedElement,getRaw,Long Statement,The length of the statement "if ((rawElement instanceof ActiveVersionedElement) || (rawElement instanceof HistoricVersionedElement) || (rawElement instanceof EventElement)|| (rawElement instanceof ReadOnlyEdge)|| (rawElement instanceof ReadOnlyVertex)) {" is 225.,90
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,TransactionalVersionedGraph,Long Parameter List,The method has 5 parameters. ,59
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,vertexPropertyChanged,Long Statement,The length of the statement "putEntryOnMap(transactionData.get().getModifiedPropsPerVertex()`transactionData.get().getModifiedPropsPerVertex().get(vertex)`vertex`key`oldValue);" is 147.,70
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,vertexPropertyRemoved,Long Statement,The length of the statement "putEntryOnMap(transactionData.get().getModifiedPropsPerVertex()`transactionData.get().getModifiedPropsPerVertex().get(vertex)`vertex`key`removedValue);" is 151.,78
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,edgePropertyChanged,Long Statement,The length of the statement "putEntryOnMap(transactionData.get().getModifiedPropsPerEdge()`transactionData.get().getModifiedPropsPerEdge().get(edge)`edge`key`oldValue);" is 139.,98
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,edgePropertyRemoved,Long Statement,The length of the statement "putEntryOnMap(transactionData.get().getModifiedPropsPerEdge()`transactionData.get().getModifiedPropsPerEdge().get(edge)`edge`key`removedValue);" is 143.,106
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,handleTransactionData,Long Statement,The length of the statement "for ( Map.Entry<Vertex`Map<String`Object>> oldPropsPerVertex : transactionData.get().getModifiedPropsPerVertex().entrySet()) {" is 126.,120
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,handleTransactionData,Long Statement,The length of the statement "log.trace(String.format("Modifications found for vertex [%s] but it's new` skipping modifications."`oldPropsPerVertex.getKey()));" is 129.,120
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,handleTransactionData,Long Statement,The length of the statement "log.trace(String.format("Modifications found for edge [%s] but it's new` skipping modifications."`oldPropsPerEdge.getKey()));" is 125.,120
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalVersionedGraph,putEntryOnMap,Long Parameter List,The method has 5 parameters. ,239
indexiatech_antiquity,co.indexia.antiquity.graph,ElementUtils,getSingleElement,Long Statement,The length of the statement "Iterable<?> it=Vertex.class.isAssignableFrom(clazz) ? graph.query().has(key`value).vertices() : graph.query().has(key`value).edges();" is 133.,144
indexiatech_antiquity,co.indexia.antiquity.graph,HistoricVersionedEdgeIterable,iterator,Long Statement,The length of the statement "private final Iterator<Edge> itty=Iterables.filter(iterable`new HistoricVersionedVertexEdgePredicate<V>(graph`version`withInternalEdges)).iterator();" is 149.,72
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionData,isEmpty,Long Statement,The length of the statement "return getAddedVertices().isEmpty() && getRemovedVertices().isEmpty() && getAddedEdges().isEmpty()&& getRemovedEdges().isEmpty()&& getModifiedPropsPerVertex().isEmpty()&& getModifiedPropsPerEdge().isEmpty();" is 207.,156
indexiatech_antiquity,co.indexia.antiquity.graph,NonTransactionalVersionedGraph,NonTransactionalVersionedGraph,Long Parameter List,The method has 5 parameters. ,56
indexiatech_antiquity,co.indexia.antiquity.graph,HistoricVersionedElement,HistoricVersionedElement,Long Statement,The length of the statement "Preconditions.checkArgument((!(rawElement instanceof HistoricVersionedElement))`"rawElement cannot be instance of HistoricVersionElement");" is 139.,48
indexiatech_antiquity,co.indexia.antiquity.graph,HistoricVersionedElement,HistoricVersionedElement,Long Statement,The length of the statement "Preconditions.checkArgument(graph.utils.getElementType(rawElement) != VEProps.GRAPH_TYPE.ACTIVE`"Raw element cannot be active");" is 128.,48
indexiatech_antiquity,co.indexia.antiquity.graph,HistoricVersionedGraph,getVertexByHardId,Long Statement,The length of the statement "return new HistoricVersionedVertex<V>(vertex`this`Range.range(utils.getStartVersion(vertex)`utils.getStartVersion(vertex)));" is 124.,96
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,ActiveVersionedGraph,Long Parameter List,The method has 6 parameters. ,108
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,validate,Long Statement,The length of the statement "Preconditions.checkState((getFeatures().supportsKeyIndices)`"With natural IDs enabled` The underline database must support vertex/edge`key indices.");" is 150.,135
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addEdge,Long Statement,The length of the statement "ActiveVersionedEdge<V> edge=addActiveEdgeInUnderline(id`(ActiveVersionedVertex<V>)outVertex`(ActiveVersionedVertex<V>)inVertex`label);" is 134.,288
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,dropKeyIndex,Long Statement,The length of the statement "throw new IllegalArgumentException(String.format("Key [%s] is reserved and cannot be dropped."`VEProps.NATURAL_VERTEX_ID_PROP_KEY));" is 132.,375
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,createKeyIndex,Long Statement,The length of the statement "throw new IllegalArgumentException(String.format("Index key [%s] is reserved and cannot be created"`VEProps.NATURAL_VERTEX_ID_PROP_KEY));" is 137.,387
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,validateNewId,Long Statement,The length of the statement "throw new IllegalArgumentException(String.format("%s with the given ID [%s] already exists."`elementType.getSimpleName()`newId));" is 129.,440
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,versionRemovedVertices,Long Statement,The length of the statement "HistoricVersionedVertex<V> hv=getHistoricGraph().getLatestHistoricRevision((String)v.getValue().get(VEProps.REF_TO_LATEST_HISTORIC_ID_KEY));" is 140.,520
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,versionRemovedEdges,Long Statement,The length of the statement "HistoricVersionedEdge<V> he=getHistoricGraph().getEdgeByHardId((String)v.getValue().get(VEProps.REF_TO_LATEST_HISTORIC_ID_KEY));" is 128.,584
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addHistoricVertex,Long Statement,The length of the statement "HistoricVersionedVertex hv=new HistoricVersionedVertex(vertex`this.getHistoricGraph()`Range.range(startVersion`startVersion));" is 126.,678
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addHistoricalVertexInChain,Long Parameter List,The method has 5 parameters. ,703
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addHistoricalVertexInChain,Long Statement,The length of the statement "Edge prevEdge=ElementUtils.getSingleElement(latestHistoricVertex.getRaw().getEdges(Direction.OUT`VEProps.PREV_VERSION_LABEL));" is 126.,703
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addHistoricalVertexInChain,Long Statement,The length of the statement "getBaseGraph().addEdge(edgeIdFactory.createId()`latestHistoricVertex.getRaw()`(Vertex)newHistoricVertex.getRaw()`VEProps.PREV_VERSION_LABEL);" is 141.,703
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addHistoricalEdgeInChain,Long Parameter List,The method has 5 parameters. ,736
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addHistoricalEdgeInChain,Long Statement,The length of the statement "throw new UnsupportedOperationException("This method is unsupported as version edges properties was configured to be disabled.");" is 129.,736
indexiatech_antiquity,co.indexia.antiquity.graph,ActiveVersionedGraph,addHistoricEdge,Long Statement,The length of the statement "HistoricVersionedEdge<V> hv=new HistoricVersionedEdge(edge`this.getHistoricGraph()`Range.range(startVersion`startVersion));" is 123.,802
indexiatech_antiquity,co.indexia.antiquity.graph,Configuration,Configuration,Long Identifier,The length of the field useNaturalIdsOnlyIfSuppliedIdsAreIgnored is 40.,54
indexiatech_antiquity,co.indexia.antiquity.graph,Configuration,getUseNaturalIdsOnlyIfSuppliedIdsAreIgnored,Long Identifier,The length of the field useNaturalIdsOnlyIfSuppliedIdsAreIgnored is 40.,87
indexiatech_antiquity,co.indexia.antiquity.graph,HistoricVersionedVertex,getEdges,Long Statement,The length of the statement "return new HistoricVersionedEdgeIterable<V>((getRaw().getEdges(direction`labels))`getGraph()`getVersion()`internalEdges);" is 121.,65
indexiatech_antiquity,co.indexia.antiquity.graph,HistoricVersionedVertexIterable,iterator,Long Statement,The length of the statement "private final Iterator<Vertex> itty=Iterables.filter(iterable`new HistoricVersionedVertexPredicate<V>(graph`version)).iterator();" is 129.,79
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphBase,VersionedGraphBase,Complex Conditional,The conditional expression this.conf.useNaturalIds || (this.conf.useNaturalIdsOnlyIfSuppliedIdsAreIgnored && baseGraph.getFeatures().ignoresSuppliedIds) is complex.,59
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphBase,VersionedGraphBase,Long Statement,The length of the statement "if (this.conf.useNaturalIds || (this.conf.useNaturalIdsOnlyIfSuppliedIdsAreIgnored && baseGraph.getFeatures().ignoresSuppliedIds)) {" is 132.,59
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphBase,getRootVertex,Long Statement,The length of the statement "rv=ElementUtils.getSingleElement(getBaseGraph()`VEProps.ROOT_GRAPH_VERTEX_ID`VEProps.ACTIVE_ROOT_GRAPH_VERTEX_VALUE`Vertex.class);" is 130.,121
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphBase,getRootVertex,Long Statement,The length of the statement "rv=ElementUtils.getSingleElement(getBaseGraph()`VEProps.ROOT_GRAPH_VERTEX_ID`VEProps.HISTORIC_ROOT_GRAPH_VERTEX_VALUE`Vertex.class);" is 132.,121
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphBase,isNaturalIds,Long Statement,The length of the statement "return (conf.getUseNaturalIds() || (conf.getUseNaturalIdsOnlyIfSuppliedIdsAreIgnored() && getBaseGraph().getFeatures().ignoresSuppliedIds));" is 140.,194
indexiatech_antiquity,co.indexia.antiquity.graph,NonTransactionalLongTypeVersionedGraphTest,generateGraph,Long Statement,The length of the statement "return new ActiveVersionedGraph.ActiveVersionedNonTransactionalGraphBuilder<TinkerGraph`Long>(new TinkerGraph()`new LongGraphIdentifierBehavior()).init(true).conf(conf).build();" is 177.,39
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,createGraphInstanceWithoutInit,Long Statement,The length of the statement "ActiveVersionedGraph<?`V> g=new ActiveVersionedGraph.ActiveVersionedNonTransactionalGraphBuilder(new TinkerGraph()`new LongGraphIdentifierBehavior()).build();" is 158.,84
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,simpleSingleVertexWithMultipleVersionsTest,Magic Number,The method contains a magic number: 5,139
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,simpleSingleVertexWithMultipleVersionsTest,Magic Number,The method contains a magic number: 4,139
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,simpleSingleVertexWithMultipleVersionsTest,Magic Number,The method contains a magic number: 4,139
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,simpleSingleVertexWithMultipleVersionsTest,Magic Number,The method contains a magic number: 3,139
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,simpleSingleVertexWithMultipleVersionsTest,Magic Number,The method contains a magic number: 3,139
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,simpleSingleVertexWithMultipleVersionsTest,Magic Number,The method contains a magic number: 2,139
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,simpleSingleVertexWithMultipleVersionsTest,Magic Number,The method contains a magic number: 2,139
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,removeVersionedEdge,Long Statement,The length of the statement "assertThat(Range.range(e1Ver`graph.getMaxPossibleGraphVersion())`is(graph.utils.getVersionRange(graph.getHistoricGraph().getEdge(e1.getId()))));" is 144.,465
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,removeVersionedEdge,Long Statement,The length of the statement "assertThat(Range.range(e2Ver`graph.getMaxPossibleGraphVersion())`is(graph.utils.getVersionRange(graph.getHistoricGraph().getEdge(e2.getId()))));" is 144.,465
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,removeVersionedEdge,Magic Number,The method contains a magic number: 2,465
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,removeVersionedEdge,Magic Number,The method contains a magic number: 2,465
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,testGetVerticesAndEdges,Magic Number,The method contains a magic number: 2,523
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,testGetVerticesAndEdges,Magic Number,The method contains a magic number: 2,523
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,testGetVerticesAndEdges,Magic Number,The method contains a magic number: 2,523
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,testGetVerticesAndEdges,Magic Number,The method contains a magic number: 2,523
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,testGetVerticesAndEdges,Magic Number,The method contains a magic number: 4,523
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,testGetVerticesAndEdges,Magic Number,The method contains a magic number: 2,523
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,testThatDeletedVertexIsFlaggedAsRemovedWithItsEdges,Magic Number,The method contains a magic number: 2,584
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Long Method,The method has 287 lines of code.,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Long Statement,The length of the statement "assertThat(((HistoricVersionedEdge<V>)commit3V1EdgesOut.iterator().next()).getHardId()`is(((HistoricVersionedEdge<V>)commit3V2EdgesIn.iterator().next()).getHardId()));" is 167.,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Long Statement,The length of the statement "assertThat(((HistoricVersionedEdge<V>)commit8V2EdgesOut.iterator().next()).getHardId()`is(((HistoricVersionedEdge<V>)commit8V3EdgesIn.iterator().next()).getHardId()));" is 167.,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Long Statement,The length of the statement "assertThat(((HistoricVersionedEdge<V>)commit8V2EdgesOut.iterator().next()).getHardId()`is(((HistoricVersionedEdge<V>)commit8V3EdgesIn.iterator().next()).getHardId()));" is 167.,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Long Statement,The length of the statement "assertThat(((HistoricVersionedEdge<V>)commit10V2EdgesOut.iterator().next()).getHardId()`is(((HistoricVersionedEdge<V>)commit8V3EdgesIn.iterator().next()).getHardId()));" is 168.,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,VersionedGraphTestSuite,fullScenarioTest,Magic Number,The method contains a magic number: 2,671
indexiatech_antiquity,co.indexia.antiquity.graph,GraphInitTest,causeExceptionIfGraphNotInitialized,Long Statement,The length of the statement "ActiveVersionedGraph<TinkerGraph`Long> vg=new ActiveVersionedGraph.ActiveVersionedNonTransactionalGraphBuilder<TinkerGraph`Long>(graph`new LongGraphIdentifierBehavior()).init(false).conf(conf).build();" is 201.,33
indexiatech_antiquity,co.indexia.antiquity.graph,GraphInitTest,shouldNotCreateDuplicatedRootVertices,Long Statement,The length of the statement "new ActiveVersionedGraph.ActiveVersionedNonTransactionalGraphBuilder<TinkerGraph`Long>(graph`new LongGraphIdentifierBehavior()).init(true).conf(conf).build();" is 158.,43
indexiatech_antiquity,co.indexia.antiquity.graph,GraphInitTest,shouldNotCreateDuplicatedRootVertices,Long Statement,The length of the statement "new ActiveVersionedGraph.ActiveVersionedNonTransactionalGraphBuilder<TinkerGraph`Long>(graph`new LongGraphIdentifierBehavior()).init(true).conf(conf).build();" is 158.,43
indexiatech_antiquity,co.indexia.antiquity.graph,GraphInitTest,shouldNotCreateDuplicatedRootVertices,Magic Number,The method contains a magic number: 2,43
indexiatech_antiquity,co.indexia.antiquity.graph,GraphInitTest,shouldNotCreateDuplicatedRootVertices,Magic Number,The method contains a magic number: 2,43
indexiatech_antiquity,co.indexia.antiquity.graph,TitanTxLongVersionedGraphTest,generateGraph,Long Statement,The length of the statement "return new ActiveVersionedGraph.ActiveVersionedTransactionalGraphBuilder<TitanGraph`Long>(g`new LongGraphIdentifierBehavior()).init(true).conf(null).build();" is 157.,35
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalLongVersionedGraphTest,testMultipleChangesInOneTransactionHaveSameVersion,Long Statement,The length of the statement "assertThat(graph.utils.getVersionRange(graph.getHistoricGraph().getVertex(v1.getId()))`is(Range.range(ver2`graph.getMaxPossibleGraphVersion())));" is 145.,51
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalLongVersionedGraphTest,testMultipleChangesInOneTransactionHaveSameVersion,Long Statement,The length of the statement "assertThat(graph.utils.getVersionRange(graph.getHistoricGraph().getVertex(v2.getId()))`is(Range.range(ver2`graph.getMaxPossibleGraphVersion())));" is 145.,51
indexiatech_antiquity,co.indexia.antiquity.graph,TransactionalLongVersionedGraphTest,testMultipleChangesInOneTransactionHaveSameVersion,Long Statement,The length of the statement "assertThat(graph.utils.getVersionRange(graph.getHistoricGraph().getVertex(v3.getId()))`is(Range.range(ver2`graph.getMaxPossibleGraphVersion())));" is 145.,51
indexiatech_antiquity,co.indexia.antiquity.graph,VersionContextGraphTest,setUp,Long Statement,The length of the statement "graph=(TransactionalVersionedGraph<?`Long>)new ActiveVersionedGraph.ActiveVersionedTransactionalGraphBuilder<Neo4j2Graph`Long>(new Neo4j2Graph(new ImpermanentGraphDatabase())`new LongGraphIdentifierBehavior()).init(true).build();" is 229.,62
indexiatech_antiquity,co.indexia.antiquity.graph,VersionContextGraphTest,contextCreationTest,Magic Number,The method contains a magic number: 104L,97
indexiatech_antiquity,co.indexia.antiquity.graph,Neo4j2TxLongVersionedGraphTest,generateGraph,Long Statement,The length of the statement "return new ActiveVersionedGraph.ActiveVersionedTransactionalGraphBuilder<Neo4j2Graph`Long>(new Neo4j2Graph(new ImpermanentGraphDatabase())`new LongGraphIdentifierBehavior()).init(true).conf(null).build();" is 204.,29
indexiatech_antiquity,co.indexia.antiquity.graph.identifierBehavior,LongGraphIdentifierBehavior,getLatestGraphVersion,Long Statement,The length of the statement "Long lastVer=(Long)getGraph().getRootVertex(VEProps.GRAPH_TYPE.HISTORIC).getProperty(VEProps.LATEST_GRAPH_VERSION_PROP_KEY);" is 124.,38
indexiatech_antiquity,co.indexia.antiquity.graph.matchers,ElementHasProperty,describeTo,Long Statement,The length of the statement "description.appendText("expected: ").appendText(key).appendText(":").appendText(value.toString()).appendText(" property.");" is 123.,50

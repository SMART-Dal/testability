Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testSimpleGroup,Long Statement,The length of the statement "Pipe pipe=assembly.startBranch("test").each(fields("line")).function(function().RegexParser().fieldDeclaration(fields("ip")).patternString("^[^ ]*").end()).outgoing(fields("ip")).groupBy(fields("ip")).every(Fields.ALL).aggregator(aggregator().Count(fields("count"))).outgoing(fields("ip"`"count")).completeGroupBy().completeBranch();" is 333.,52
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testGroupByMerge,Long Statement,The length of the statement "Pipe pipeLower=assembly.startBranch("lower").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 127.,83
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testGroupByMerge,Long Statement,The length of the statement "Pipe pipeUpper=assembly.startBranch("upper").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 127.,83
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testGroupByMerge,Long Statement,The length of the statement "Pipe pipeOffset=assembly.startBranch("offset").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 129.,83
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testGroupByMerge,Long Statement,The length of the statement "GroupBy merge=assembly.startGroupByMerge().pipes(pipes(pipeLower`pipeUpper`pipeOffset)).groupFields(fields("num")).sortFields(fields("char")).createGroupByMerge();" is 163.,83
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testGroupByMerge,Long Statement,The length of the statement "Pipe splice=assembly.continueBranch(merge).every(fields("char")).aggregator(aggregator().First().fieldDeclaration(fields("first")).end()).outgoing(Fields.ALL).each(fields("num"`"first")).function(function().Identity().fieldDeclaration(Fields.ALL).end()).outgoing(Fields.RESULTS).completeBranch();" is 296.,83
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testGroupByMerge,Long Statement,The length of the statement "FlowDef flowDef=flowDef().addSource("lower"`sourceLower).addSource("upper"`sourceUpper).addSource("offset"`sourceLowerOffset).addTailSink(splice`sink);" is 151.,83
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testCoGroup,Long Statement,The length of the statement "Pipe pipeLower=assembly.startBranch("lower").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 127.,147
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testCoGroup,Long Statement,The length of the statement "Pipe pipeUpper=assembly.startBranch("upper").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 127.,147
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testCoGroup,Long Statement,The length of the statement "Pipe coGroup=assembly.startCoGroup().lhs(pipeLower).lhsGroupFields(fields("num")).rhs(pipeUpper).rhsGroupFields(fields("num")).declaredFields(fields("num1"`"char1"`"num2"`"char2")).joiner(new OuterJoin()).createCoGroup();" is 221.,147
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testCoGroup,Long Statement,The length of the statement "assembly.continueBranch("result"`coGroup).retain(fields("num1"`"char1")).rename(Fields.ALL`fields("num"`"char")).completeBranch();" is 130.,147
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testCoGroup,Long Statement,The length of the statement "FlowDef flowDef=flowDef().addSource("lower"`sourceLower).addSource("upper"`sourceUpper).addSink("result"`sink).addTails(tails);" is 127.,147
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "Pipe pipeLower=assembly.startBranch("lower").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 127.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "Pipe pipeUpper=assembly.startBranch("upper").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 127.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "Pipe pipeLhs=assembly.startBranch("lhs").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 123.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "Pipe pipeRhs=assembly.startBranch("rhs").each(fields("line")).function(splitter).outgoing(Fields.RESULTS).completeBranch();" is 123.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "Pipe upperLower=assembly.startHashJoin().lhs(pipeLower).lhsJoinFields(fields("num")).rhs(pipeUpper).rhsJoinFields(fields("num")).declaredFields(fields("numUpperLower"`"charUpperLower"`"num2UpperLower"`"char2UpperLower")).createHashJoin();" is 238.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "upperLower=assembly.continueBranch(upperLower).each(Fields.ALL).function(function().Identity().fieldDeclaration(Fields.ALL).end()).outgoing(Fields.RESULTS).completeBranch();" is 173.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "Pipe lhsUpperLower=assembly.startHashJoin().lhs(pipeLhs).lhsJoinFields(fields("num")).rhs(upperLower).rhsJoinFields(fields("numUpperLower")).declaredFields(fields("numLhs"`"charLhs"`"numUpperLower"`"charUpperLower"`"num2UpperLower"`"char2UpperLower")).createHashJoin();" is 269.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "lhsUpperLower=assembly.continueBranch(lhsUpperLower).each(Fields.ALL).function(function().Identity().fieldDeclaration(Fields.ALL).end()).outgoing(Fields.RESULTS).completeBranch();" is 179.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "assembly.continueBranch(assembly.startCoGroup().groupName("cogrouping").lhs(lhsUpperLower).lhsGroupFields(fields("numLhs")).rhs(pipeRhs).rhsGroupFields(fields("num")).createCoGroup()).completeBranch();" is 201.,203
Cascading_fluid,cascading.fluid,SimpleAssembliesTest,testHashJoin,Long Statement,The length of the statement "FlowDef flowDef=flowDef().addSource("lower"`sourceLower).addSource("upper"`sourceUpper).addSource("lhs"`sourceLhs).addSource("rhs"`sourceRhs).addSink("cogrouping"`sink).addTails(tails);" is 185.,203
Cascading_fluid,cascading.fluid,SimpleTest,testAssemblyBuilder,Long Statement,The length of the statement "Pipe rhs=builder.startBranch("rhs").groupBy(Fields.ALL).every(Fields.ALL).aggregator(new Count()).outgoing(Fields.ALL).completeGroupBy().each(Fields.ALL).filter(new RegexFilter("")).pipe("rhs2").each(Fields.ALL).debugLevel(DebugLevel.VERBOSE).debug(new Debug(true)).each(Fields.ALL).assertionLevel(AssertionLevel.STRICT).assertion(new AssertMatches(".*")).coerce().coerceFields(fields("foo"`int.class)).end().completeBranch();" is 426.,53
Cascading_fluid,cascading.fluid,SimpleTest,testAssemblyBuilder,Long Statement,The length of the statement "Pipe lhs=builder.startBranch("lhs").each(Fields.ALL).function(new Identity()).outgoing(Fields.RESULTS).each(Fields.ALL).filter(new RegexFilter("")).checkpoint().groupBy(Fields.ALL).completeGroupBy().completeBranch();" is 216.,53
Cascading_fluid,cascading.fluid,SimpleTest,testAssemblyBuilder,Magic Number,The method contains a magic number: 2,53
Cascading_fluid,cascading.fluid,SimpleTest,testSubAssemblyBuilder,Long Statement,The length of the statement "Pipe rhs=builder.startBranch("rhs").groupBy(Fields.ALL).every(Fields.ALL).aggregator(new Count()).outgoing(Fields.ALL).completeGroupBy().each(Fields.ALL).filter(new RegexFilter("")).rename(Fields.ALL`Fields.size(2)).completeBranch();" is 233.,113
Cascading_fluid,cascading.fluid,SimpleTest,testSubAssemblyBuilder,Magic Number,The method contains a magic number: 2,113
Cascading_fluid,cascading.fluid,SimpleTest,testChainedAggregatorsBuilder,Long Statement,The length of the statement "Pipe rhs=builder.startBranch("rhs").each(Fields.ALL).filter(new RegexFilter("")).groupBy(Fields.ALL).every(Fields.ALL).aggregator(Fluid.aggregator().Average(fields("avg"))).outgoing(Fields.ALL).every(Fields.ALL).aggregator(Fluid.aggregator().Count(fields("count"))).outgoing(Fields.ALL).completeGroupBy().completeBranch();" is 322.,158
Cascading_fluid,cascading.fluid,SimpleTest,testSymbolicBuilder,Long Statement,The length of the statement "HashJoin hashJoin=builder.startHashJoin().lhs(lhs).lhsJoinFields(Fields.ALL).rhs(rhs).rhsJoinFields(Fields.ALL).createHashJoin();" is 129.,178
Cascading_fluid,cascading.fluid,SimpleTest,testAggregateByAssemblyBuilder,Long Statement,The length of the statement "Pipe rhs=builder.startBranch("rhs").each(Fields.ALL).filter(new RegexFilter("")).aggregateBy().groupingFields(fields("grouping")).assemblies(Fluid.aggregateBy().AverageBy().valueField(fields("value")).averageField(fields("average")).end()`Fluid.aggregateBy().SumBy().valueField(fields("value")).sumField(fields("sum"`long.class)).end()).end().completeBranch();" is 360.,202
Cascading_fluid,cascading.fluid.builder,ReflectionMethodHandler,handleFactory,Complex Method,Cyclomatic complexity of the method is 15,72
Cascading_fluid,cascading.fluid.builder,ReflectionMethodHandler,handleFactory,Long Statement,The length of the statement "if (factory instanceof PipeFactory && self instanceof PipeFactory) ((PipeFactory)factory).setContext(((PipeFactory)self).getContext());" is 135.,72
Cascading_fluid,cascading.fluid.factory,Reflection,create,Long Parameter List,The method has 5 parameters. ,61
Cascading_fluid,cascading.fluid.factory,Reflection,setInstanceFieldIfExistsSafe,Empty catch clause,The method has an empty catch block.,168
Cascading_fluid,cascading.fluid.generator.util,Types,getAllInstantiableSubTypes,Long Statement,The length of the statement "Map<Class<? extends T>`Set<Constructor>> types=new TreeMap<Class<? extends T>`Set<Constructor>>(new Comparator<Class<? extends T>>(){" is 133.,54
Cascading_fluid,cascading.fluid.generator.util,ParameterGraphs,createParameterGraph,Complex Conditional,The conditional expression i == 0 && !found && after.contains(parameterType) is complex.,53
Cascading_fluid,cascading.fluid.generator.util,ParameterGraphs,createParameterGraph,Long Statement,The length of the statement "if (propertyArray.length != typeArray.length) throw new IllegalStateException("parameter and type mismatch: params: " + Arrays.toString(propertyArray) + "` types: "+ Arrays.toString(typeArray));" is 194.,53
Cascading_fluid,cascading.fluid.generator.util,ParameterGraphs,writeDOT,Long Statement,The length of the statement "new DOTExporter<Prefix<String`String`Class>`Integer>(new IntegerNameProvider<Prefix<String`String`Class>>()`new VertexNameProvider<Prefix<String`String`Class>>(){" is 162.,134
Cascading_fluid,cascading.fluid.generator.util,Prefix,hashCode,Magic Number,The method contains a magic number: 31,116
Cascading_fluid,cascading.fluid.generator.util,Pair,hashCode,Magic Number,The method contains a magic number: 31,77
Cascading_fluid,cascading.fluid.generator.builder,Generator,addBuilderBlock,Long Parameter List,The method has 6 parameters. ,123
Cascading_fluid,cascading.fluid.generator.builder,Generator,addBuilderBlock,Long Statement,The length of the statement "MethodBuilder_2m12_4f_2m13_4f_2m14_4f_2m15_4f_2m16_4f_2m17_4f_2m18_4f tmp1=builder.startBlock(typeName`Text.toFirstLower(typeName) + "()");" is 139.,123
Cascading_fluid,cascading.fluid.generator.builder,Generator,addBuilderBlock,Long Statement,The length of the statement "BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f block=(BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f)(isFactory ? tmp1.last() : tmp1.after(group).last());" is 160.,123
Cascading_fluid,cascading.fluid.generator.builder,Generator,addBuilderBlock,Long Statement,The length of the statement "return (DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>)addSubTypeBlocks(block`type`isFactory`false`factoryClass`allConstructors).endBlock();" is 175.,123
Cascading_fluid,cascading.fluid.generator.builder,Generator,addSubTypeBlocks,Long Parameter List,The method has 7 parameters. ,135
Cascading_fluid,cascading.fluid.generator.builder,Generator,addSubTypeBlocks,Long Statement,The length of the statement "Map<Class<? extends T>`Set<Constructor>> constructorMap=Types.getAllInstantiableSubTypes(reflections`type`allConstructors);" is 123.,135
Cascading_fluid,cascading.fluid.generator.builder,Generator,addSubTypeBlocks,Long Statement,The length of the statement "if (constructors.size() > 1) block=addTypeBuilderBlock(block`isFactory`subType`constructors`addReference`factoryClass`startsWithExclusive);" is 139.,135
Cascading_fluid,cascading.fluid.generator.builder,Generator,addPipeBranchBuilderType,Long Parameter List,The method has 6 parameters. ,154
Cascading_fluid,cascading.fluid.generator.builder,Generator,addPipeTypeBuilderBlock,Long Parameter List,The method has 7 parameters. ,168
Cascading_fluid,cascading.fluid.generator.builder,Generator,addPipeTypeBuilderBlock,Long Statement,The length of the statement "DirectedGraph<Prefix<String`String`Class>`Integer> parameterGraph=ParameterGraphs.createParameterGraph(constructors`true`startsWithExclusive);" is 142.,168
Cascading_fluid,cascading.fluid.generator.builder,Generator,addPipeTypeBuilderBlock,Long Statement,The length of the statement "BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>> tmp=block.startBlock(operationName`startMethod).withDocumentation().addContent("Create a new " + type.getSimpleName() + " pipe to the current branch with the given groupFields.\n").addContent("@see " + type.getName()).finish().addAnnotation(METHOD_ANNOTATION).withParameter("factory"`new ClassReference(factoryClass)).withParameter("creates"`type).withParameter("method"`startMethod).finish().any(groupID);" is 539.,168
Cascading_fluid,cascading.fluid.generator.builder,Generator,addPipeTypeBuilderBlock,Long Statement,The length of the statement "return ((BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>)blockBuilder).endBlock();" is 167.,168
Cascading_fluid,cascading.fluid.generator.builder,Generator,addPipeTypeBuilderBlock,Magic Number,The method contains a magic number: 2,168
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderMethod,Long Parameter List,The method has 6 parameters. ,204
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderMethod,Long Statement,The length of the statement "final DirectedGraph<Prefix<String`String`Class>`Integer> graph=ParameterGraphs.createParameterGraph(constructors`true`startsWithExclusive);" is 139.,204
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderMethod,Long Statement,The length of the statement "MethodBuilder_2m12_4f_2m13_4f_2m14_4f_2m15_4f_2m16_4f_2m17_4f_2m18_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>> tmp=((BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>)block).addMethod(methodName).addAnnotation(METHOD_ANNOTATION).withParameter("factory"`new ClassReference(factoryClass)).withParameter("creates"`type).withParameter("method"`methodName).finish();" is 639.,204
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderMethod,Magic Number,The method contains a magic number: 2,204
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderBlock,Long Parameter List,The method has 7 parameters. ,229
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderBlock,Long Statement,The length of the statement "DirectedGraph<Prefix<String`String`Class>`Integer> parameterGraph=ParameterGraphs.createParameterGraph(constructors`true`startsWithExclusive);" is 142.,229
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderBlock,Long Statement,The length of the statement "if (addReference) return (BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f)block.addBlockReference(operationName`methodName).any();" is 132.,229
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderBlock,Long Statement,The length of the statement "MethodBuilder_2m12_4f_2m13_4f_2m14_4f_2m15_4f_2m16_4f_2m17_4f_2m18_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>>> tmp=((BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>)block).startBlock(operationName`methodName).addAnnotation(METHOD_ANNOTATION).withParameter("factory"`new ClassReference(factoryClass)).withParameter("creates"`type).withParameter("method"`methodName).finish();" is 705.,229
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderBlock,Long Statement,The length of the statement "BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f blockBuilder=generateBlock(block`isFactory`type`"end()"`parameterGraph);" is 122.,229
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderBlock,Long Statement,The length of the statement "block=(BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>)blockBuilder.endBlock();" is 164.,229
Cascading_fluid,cascading.fluid.generator.builder,Generator,addTypeBuilderBlock,Magic Number,The method contains a magic number: 2,229
Cascading_fluid,cascading.fluid.generator.builder,Generator,generateBlock,Long Parameter List,The method has 5 parameters. ,267
Cascading_fluid,cascading.fluid.generator.builder,Generator,generateBlock,Long Statement,The length of the statement "final FloydWarshallShortestPaths<Prefix<String`String`Class>`Integer> shortestPaths=new FloydWarshallShortestPaths<Prefix<String`String`Class>`Integer>(graph);" is 159.,267
Cascading_fluid,cascading.fluid.generator.builder,Generator,generateBlock,Long Statement,The length of the statement "TraversalListenerAdapter<Prefix<String`String`Class>`Integer> listener=new TraversalListenerAdapter<Prefix<String`String`Class>`Integer>(){" is 139.,267
Cascading_fluid,cascading.fluid.generator.builder,Generator,generateBlock,Long Statement,The length of the statement "LOG.info("{} - opening property: {}` creating method: {}` group: {}` prior: {}"`depth`vertex.getLhs()`methodSignature`depth`prior != null);" is 139.,267
Cascading_fluid,cascading.fluid.generator.builder,Generator,generateBlock,Long Statement,The length of the statement "blockBuilder[0]=(BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f)((BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>)blockBuilder[0]).startBlock(methodSignature).last().addMethod(endMethod).last(type);" is 337.,267
Cascading_fluid,cascading.fluid.generator.builder,Generator,generateBlock,Long Statement,The length of the statement "blockBuilder[0]=(BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f)((BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>)blockBuilder[0]).startBlock(methodSignature).last().addMethod(endMethod).last();" is 333.,267
Cascading_fluid,cascading.fluid.generator.builder,Generator,generateBlock,Long Statement,The length of the statement "DepthFirstIterator<Prefix<String`String`Class>`Integer> iterator=new DepthFirstIterator<Prefix<String`String`Class>`Integer>(graph`BEGIN);" is 138.,267
Cascading_fluid,cascading.fluid.generator.builder,Generator,vertexTraversed,Long Statement,The length of the statement "LOG.info("{} - opening property: {}` creating method: {}` group: {}` prior: {}"`depth`vertex.getLhs()`methodSignature`depth`prior != null);" is 139.,279
Cascading_fluid,cascading.fluid.generator.builder,Generator,vertexTraversed,Long Statement,The length of the statement "blockBuilder[0]=(BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f)((BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>)blockBuilder[0]).startBlock(methodSignature).last().addMethod(endMethod).last(type);" is 337.,279
Cascading_fluid,cascading.fluid.generator.builder,Generator,vertexTraversed,Long Statement,The length of the statement "blockBuilder[0]=(BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f)((BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>>>)blockBuilder[0]).startBlock(methodSignature).last().addMethod(endMethod).last();" is 333.,279
Cascading_fluid,cascading.fluid.generator.builder,Generator,createMethodSignature,Long Statement,The length of the statement "DepthFirstIterator<Prefix<String`String`Class>`Integer> iterator=new DepthFirstIterator<Prefix<String`String`Class>`Integer>(graph`BEGIN);" is 138.,348
Cascading_fluid,cascading.fluid.generator.builder,Generator,createMethodSignature,Long Statement,The length of the statement "String args=Joiner.on("`").skipNulls().join(Iterators.transform(iterator`new Function<Prefix<String`String`Class>`Object>(){" is 124.,348
Cascading_fluid,cascading.fluid.generator.builder,Generator,createMethodArg,Complex Conditional,The conditional expression isEnableVarArgs() && isVarArg && varArgsAllowed is complex.,390
Cascading_fluid,cascading.fluid.generator.builder,Generator,createMethodArg,Long Statement,The length of the statement "if (isEnableVarArgs() && isVarArg && varArgsAllowed) return parameterType.getComponentType().getName() + "... " + property;" is 123.,390
Cascading_fluid,cascading.fluid.generator.builder,SubAssembliesGenerator,createOperationBuilder,Long Statement,The length of the statement "DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void> builder=getBuilder().setPackage("cascading.fluid.api.subassembly").setDescriptorName("SubAssembly").setStartingMethodName("build");" is 213.,41
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,createAssemblyBuilder,Long Statement,The length of the statement "DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void> builder=getBuilder().setPackage("cascading.fluid.api.assembly").setDescriptorName("Assembly").setStartingMethodName("startAssembly");" is 215.,52
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "BlockBuilder_2m1_4f_2m2_4f_2m3_4f_2m10_4f_2m11_4f<DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void>> branch=builder.startBlock("Branch"`"startBranch(String name)").withDocumentation("Begin a new branch with the given name.").any();" is 263.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "branch=branch.startBlock("Each"`"each(cascading.tuple.Fields argumentSelector)").withDocumentation().addContent("Append a new Each operator to the current branch with the given argumentSelector.\n").addContent("@see " + Each.class.getName()).finish().addAnnotation(METHOD_ANNOTATION).withParameter("factory"`new ClassReference(PIPE_FACTORY)).withParameter("creates"`Each.class).withParameter("method"`"each(cascading.tuple.Fields argumentSelector)").finish().any(EACH).startBlock("function(cascading.operation.Function function)").last().addMethod("outgoing(cascading.tuple.Fields outgoingSelector)").last().endBlock().addMethod("filter(cascading.operation.Filter filter)").last().startBlock("debugLevel(cascading.operation.DebugLevel debugLevel)").last().addMethod("debug(cascading.operation.Debug debug)").last().endBlock().startBlock("assertionLevel(cascading.operation.AssertionLevel assertionLevel)").last().addMethod("assertion(cascading.operation.ValueAssertion assertion)").last().endBlock().endBlock();" is 1011.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "branch=branch.startBlock("GroupBy"`"groupBy(cascading.tuple.Fields groupFields)").withDocumentation().addContent("Append a new GroupBy pipe to the current branch with the given groupFields.\n").addContent("@see " + GroupBy.class.getName()).finish().addAnnotation(METHOD_ANNOTATION).withParameter("factory"`new ClassReference(PIPE_FACTORY)).withParameter("creates"`GroupBy.class).withParameter("createOnNext"`true).withParameter("method"`"groupBy(cascading.tuple.Fields groupFields)").finish().any(GROUP).startBlock("Every"`"every(cascading.tuple.Fields argumentSelector)").withDocumentation().addContent("Append a new Every operator to the current branch with the given argumentSelector.\n").addContent("@see " + Every.class.getName()).finish().addAnnotation(METHOD_ANNOTATION).withParameter("factory"`new ClassReference(PIPE_FACTORY)).withParameter("creates"`Every.class).withParameter("method"`"every(cascading.tuple.Fields argumentSelector)").finish().any(EVERY).startBlock("aggregator(cascading.operation.Aggregator aggregator)").last().addMethod("outgoing(cascading.tuple.Fields outgoingSelector)").last().endBlock().startBlock("buffer(cascading.operation.Buffer buffer)").last().addMethod("outgoing(cascading.tuple.Fields outgoingSelector)").last().endBlock().endBlock().addMethod("completeGroupBy()").last().endBlock();" is 1326.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "branch=branch.addBlockReference("GroupBy"`"groupBy(cascading.tuple.Fields groupFields` cascading.tuple.Fields sortFields)").any(GROUP);" is 135.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "branch=branch.addMethod("checkpoint(String name)").withDocumentation().addContent("Append a new Checkpoint pipe to the current branch with the given name.\n").addContent("@see " + Checkpoint.class.getName()).finish().any().addMethod("checkpoint()").withDocumentation().addContent("Append a new Checkpoint pipe to the current branch.\n").addContent("@see " + Checkpoint.class.getName()).finish().any();" is 401.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "branch=addSubTypeBlocks(branch`Reflection.loadClass(SubAssembly.class.getName())`false`false`PIPE_FACTORY`true`Reflection.loadClass(Pipe.class.getName()));" is 155.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder=branch.addMethod("completeBranch()").withDocumentation("Complete the current branch and return the current tail.").last(Pipe.class).endBlock();" is 151.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "branch=builder.startBlock("Group"`"continueBranch(cascading.pipe.GroupBy groupBy)").withDocumentation("Continue a branch from the given groupBy.").any().addBlockReference("Every"`"every(cascading.tuple.Fields argumentSelector)").any().addBlockReference("Each"`"each(cascading.tuple.Fields argumentSelector)").any();" is 315.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "branch=addSubTypeBlocks(branch`Reflection.loadClass(SubAssembly.class.getName())`false`true`PIPE_FACTORY`true`Reflection.loadClass(Pipe.class.getName()));" is 154.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder=branch.addMethod("completeBranch()").withDocumentation("Complete the current branch and return the current tail.").last(Pipe.class).endBlock();" is 151.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder.addBlockReference("Group"`"continueBranch(cascading.pipe.CoGroup coGroup)").withDocumentation("Continue a branch from the given coGroup.").any();" is 153.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder.addBlockReference("Branch"`"continueBranch(cascading.pipe.Pipe pipe)").withDocumentation("Continue a branch from the given pipe.").any();" is 145.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder.addBlockReference("Branch"`"continueBranch(String name)").withDocumentation("Continue a branch with the given name.").any();" is 132.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder.addBlockReference("Group"`"continueBranch(String name` cascading.pipe.GroupBy groupBy)").withDocumentation("Continue a branch from the given groupBy with the new given name.").any();" is 190.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder.addBlockReference("Group"`"continueBranch(String name` cascading.pipe.CoGroup coGroup)").withDocumentation("Continue a branch from the given coGroup with the new given name.").any();" is 190.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder.addBlockReference("Branch"`"continueBranch(String name` cascading.pipe.Pipe pipe)").withDocumentation("Continue a branch from the given pipe with the new given name.").any();" is 182.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder=addPipeBranchBuilderType(builder`"HashJoin"`Reflection.loadClass(HashJoin.class.getName())`HASH_JOIN`false`FACTORY);" is 124.,68
Cascading_fluid,cascading.fluid.generator.builder,AssemblyGenerator,addBranchBlock,Long Statement,The length of the statement "builder=addPipeBranchBuilderType(builder`"GroupByMerge"`Reflection.loadClass(GroupBy.class.getName())`GROUP_MERGE`true`FACTORY);" is 128.,68
Cascading_fluid,cascading.fluid.generator.builder,OperationsGenerator,createOperationBuilder,Long Statement,The length of the statement "DescriptorBuilder_2m1_4f_2m2_4f_2m3_4f_2m4_4f_2m7_4f_2m8_4f_2m10_4f_2m11_4f<Void> builder=getBuilder().setPackage("cascading.fluid.api.operation").setDescriptorName("Operation").setStartingMethodName("build");" is 209.,46
Cascading_fluid,cascading.fluid.generator,Main,main,Magic Number,The method contains a magic number: 2,41
Cascading_fluid,cascading.fluid.generator,Main,main,Magic Number,The method contains a magic number: 2,41

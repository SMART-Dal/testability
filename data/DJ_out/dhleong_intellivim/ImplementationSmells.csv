Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
dhleong_intellivim,(default package),IVCore,wrapAppIcon,Long Statement,The length of the statement "@Override public boolean setProgress( final Project project` final Object processId` final AppIconScheme.Progress scheme` final double value` final boolean isOk){" is 162.,152
dhleong_intellivim,(default package),IVCore,wrapAppIcon,Long Statement,The length of the statement "final Set<Field> iconFields=ReflectionUtils.getAllFields(AppIcon.class`ReflectionUtils.withTypeAssignableTo(AppIcon.class));" is 124.,152
dhleong_intellivim,(default package),IVCore,setProgress,Long Parameter List,The method has 5 parameters. ,168
dhleong_intellivim,org.intellivim,IVGson,newInstance,Long Statement,The length of the statement "return new GsonBuilder().registerTypeAdapter(HighlightSeverity.class`new SeverityTypeAdapter()).registerTypeAdapterFactory(new CommandTypeAdapterFactory()).registerTypeAdapterFactory(new OnlyInjectableTypesAdapterFactory()).create();" is 233.,199
dhleong_intellivim,org.intellivim,IVGson,init,Long Statement,The length of the statement "final Reflections ref=new Reflections(new ConfigurationBuilder().setUrls(ClasspathHelper.forPackage("org.intellivim")).setScanners(new SubTypesScanner()`new TypeAnnotationsScanner()).addClassLoader(ICommand.class.getClassLoader()).filterInputsBy(new FilterBuilder().include("org.intellivim.*")));" is 296.,213
dhleong_intellivim,org.intellivim,CommandExecutor,execute,Long Statement,The length of the statement "result.setResult(new SimpleResult(String.format("Server is v%s but client is v%s; versions must match"`version`commandVersion)`null));" is 134.,92
dhleong_intellivim,org.intellivim,IVGsonTest,testValidCommand,Long Statement,The length of the statement "String json="{command: 'get_problems'` project: '" + projectPath + "'` file: 'src/org/intellivim/javaproject/SubClass.java'}";" is 126.,56
dhleong_intellivim,org.intellivim,IVGsonTest,testInjectPsiElement,Long Statement,The length of the statement "String json="{command: 'rename_element'`" + "project: '" + projectPath + "'`"+ "file: 'src/org/intellivim/javaproject/Dummy.java'`"+ "offset: 314`"+ "rename: 'list2'}";" is 168.,64
dhleong_intellivim,org.intellivim,IVGsonTest,testInjectRunner,Long Statement,The length of the statement "String json="{command: 'run'` client: 'vim'` exe: '/usr/bin/vim'`" + "instance: 'VIM1'` project: '" + projectPath + "'}";" is 121.,75
dhleong_intellivim,org.intellivim,BaseTestCase,setUp,Long Statement,The length of the statement "myFixture=JavaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(fixture`new LightTempDirTestFixtureImpl(true));" is 125.,55
dhleong_intellivim,org.intellivim,CommandExecutorTest,testCorrectVersion,Long Statement,The length of the statement "final String command="{'command':'get_problems'`" + "'project': '" + getProjectPath() + "'`"+ "'file': '"+ filePath+ "'`"+ "'v': '42.0'}";" is 138.,26
dhleong_intellivim,org.intellivim,CommandExecutorTest,testWrongVersion,Long Statement,The length of the statement "final String command="{'command':'get_problems'`" + "'project': '" + getProjectPath() + "'`"+ "'file': '"+ filePath+ "'`"+ "'v': '3.5'}";" is 137.,35
dhleong_intellivim,org.intellivim,CommandExecutorTest,testEmptyVersion,Long Statement,The length of the statement "final String command="{'command':'get_problems'`" + "'project': '" + getProjectPath() + "'`"+ "'file': '"+ filePath+ "'`"+ "'v': ''}";" is 134.,45
dhleong_intellivim,org.intellivim,CommandExecutorTest,testMissingVersion,Long Statement,The length of the statement "final String command="{'command':'get_problems'`" + "'project': '" + getProjectPath() + "'`"+ "'file': '"+ filePath+ "'}";" is 122.,55
dhleong_intellivim,org.intellivim.java.command,JavaNewCommand,doExecute,Long Statement,The length of the statement "return SimpleResult.success(ContainerUtil.newHashMap(Collections.singletonList("dirs")`Collections.singletonList(mapDirs(dirs))));" is 130.,83
dhleong_intellivim,org.intellivim.java.command,JavaNewCommand,resolveNewDirectory,Complex Method,Cyclomatic complexity of the method is 9,147
dhleong_intellivim,org.intellivim.java.command,OptimizeImportsCommand,execute,Empty catch clause,The method has an empty catch block.,70
dhleong_intellivim,org.intellivim.java.command,OptimizeImportsCommand,findUnresolvedReferences,Complex Method,Cyclomatic complexity of the method is 11,131
dhleong_intellivim,org.intellivim.java.command,OptimizeImportsCommand,findUnresolvedReferences,Long Statement,The length of the statement "if (javaReference instanceof JavaClassReference && ((JavaClassReference)javaReference).getContextReference() != null) continue;" is 127.,131
dhleong_intellivim,org.intellivim.java.command,JavaNewTest,testNewFQN,Long Statement,The length of the statement "final SimpleResult result=(SimpleResult)new JavaNewCommand(project`"class"`"org.intellivim.test.NewlyCreated").execute();" is 121.,43
dhleong_intellivim,org.intellivim.java.command,OptimizeImportsTest,testProblemsEquivalence,Magic Number,The method contains a magic number: 2,45
dhleong_intellivim,org.intellivim.java.command.junit,JUnitRunTestCommand,changeNodeState,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@7165e154,194
dhleong_intellivim,org.intellivim.java.command.junit,JUnitRunTestCommand,getCtor,Long Statement,The length of the statement "final Class<? extends TestConsoleProperties> klass=(Class<? extends TestConsoleProperties>)configClass.getClassLoader().loadClass(JUNIT_CONSOLE_PROPS_CLASSNAME);" is 161.,281
dhleong_intellivim,org.intellivim.morph,PolymorphTest,testJunit,Long Statement,The length of the statement "final ICommand cmd=inflateAndInject("{command:'run_test'`" + "file:'" + filePath + "'`"+ "project:'"+ projectPath+ "'}");" is 121.,76
dhleong_intellivim,org.intellivim.inject,Client,reflections,Long Statement,The length of the statement "final Reflections newInstance=new Reflections(new ConfigurationBuilder().setUrls(ClasspathHelper.forPackage("org.intellivim")).setScanners(new SubTypesScanner()`new TypeAnnotationsScanner()).filterInputsBy(new FilterBuilder().include("org.intellivim.*")));" is 256.,42
dhleong_intellivim,org.intellivim.inject,Client,candidates,Long Statement,The length of the statement "final Set<Class<? extends T>> base=ReflectionUtils.getAll(reflections().getSubTypesOf(parentType)`ReflectionUtils.withAnnotation(ClientSpecific.class));" is 152.,58
dhleong_intellivim,org.intellivim.inject,Client,pickClientImplementation,Long Statement,The length of the statement "throw new IllegalArgumentException(implementation + " must provide a valid client name for its ClientSpecific annotation");" is 123.,126
dhleong_intellivim,org.intellivim.inject,PsiElementInjector,canInject,Long Statement,The length of the statement "return PsiElement.class.isAssignableFrom(field.getType()) && !PsiFile.class.isAssignableFrom(field.getType()) && command instanceof ProjectCommand;" is 147.,32
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsCommand,execute,Long Statement,The length of the statement "final ShowParameterInfoContext context=new ShowParameterInfoContext(editor`project`file`offset`findParametersStart(psiElement));" is 128.,53
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsCommand,execute,Long Statement,The length of the statement "ParameterInfoHandler[] handlers=ShowParameterInfoHandler.getHandlers(project`language`file.getViewProvider().getBaseLanguage());" is 128.,53
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsCommand,buildParamPresentations,Long Statement,The length of the statement "final DummyUpdateParameterInfoContext updateContext=new DummyUpdateParameterInfoContext(project`file`editor`itemsToShow);" is 121.,138
dhleong_intellivim,org.intellivim.core.command.params,DummyUpdateParameterInfoContext,getPresentedString,Complex Conditional,The conditional expression params.length <= 1 || currentIndex < 0 || currentIndex >= params.length is complex.,114
dhleong_intellivim,org.intellivim.core.command.params,DummyParameterInfoUIContext,setupUIComponentPresentation,Long Parameter List,The method has 7 parameters. ,42
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testNone,Magic Number,The method contains a magic number: 390,23
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testNone,Magic Number,The method contains a magic number: 386,23
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testMethod,Magic Number,The method contains a magic number: 387,32
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testMethod,Magic Number,The method contains a magic number: 386,32
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testMethod,Magic Number,The method contains a magic number: 2,32
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testConstructor,Long Statement,The length of the statement "assertThat(params.hints).hasSize(4).contains("*<no parameters>*"`"*int number*"`"*String string*"`"*int number*` String andString");" is 132.,43
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testConstructor,Magic Number,The method contains a magic number: 267,43
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testConstructor,Magic Number,The method contains a magic number: 266,43
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testConstructor,Magic Number,The method contains a magic number: 4,43
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testSecondParam,Magic Number,The method contains a magic number: 905,56
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testSecondParam,Magic Number,The method contains a magic number: 900,56
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testNestedParam,Magic Number,The method contains a magic number: 946,65
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testNestedParam,Magic Number,The method contains a magic number: 945,65
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testAfterNestedParam,Magic Number,The method contains a magic number: 955,74
dhleong_intellivim,org.intellivim.core.command.params,GetParamHintsTest,testAfterNestedParam,Magic Number,The method contains a magic number: 930,74
dhleong_intellivim,org.intellivim.core.command.find,FindUsagesTest,testFindUsagesFromDeclaration,Magic Number,The method contains a magic number: 521,23
dhleong_intellivim,org.intellivim.core.command.find,FindUsagesTest,testFindUsagesFromDeclaration,Magic Number,The method contains a magic number: 2,23
dhleong_intellivim,org.intellivim.core.command.find,FindUsagesTest,testFindUsagesFromDeclaration,Magic Number,The method contains a magic number: 891,23
dhleong_intellivim,org.intellivim.core.command.find,FindUsagesTest,testFindUsagesFromUsage,Magic Number,The method contains a magic number: 891,38
dhleong_intellivim,org.intellivim.core.command.find,FindUsagesTest,testFindUsagesFromUsage,Magic Number,The method contains a magic number: 2,38
dhleong_intellivim,org.intellivim.core.command.find,FindImplementationsTest,testFindMethodImplementation,Magic Number,The method contains a magic number: 170,25
dhleong_intellivim,org.intellivim.core.command.find,FindImplementationsTest,testFindMethodImplementation,Magic Number,The method contains a magic number: 144,25
dhleong_intellivim,org.intellivim.core.command.find,FindDeclarationTest,testFindProblematicInDummy,Magic Number,The method contains a magic number: 484,22
dhleong_intellivim,org.intellivim.core.command.find,FindDeclarationTest,testFindProblematicInDummy,Magic Number,The method contains a magic number: 105,22
dhleong_intellivim,org.intellivim.core.command.complete,CompleteCommand,execute,Empty catch clause,The method has an empty catch block.,69
dhleong_intellivim,org.intellivim.core.command.complete,CompletionInfo,CompletionInfo,Abstract Function Call From Constructor,The constructor CompletionInfo calls a virtual method formatDetail.,42
dhleong_intellivim,org.intellivim.core.command.complete,CompletionParametersUtil,newInstance,Long Parameter List,The method has 6 parameters. ,29
dhleong_intellivim,org.intellivim.core.command.complete,CompletionParametersUtil,newInstance,Long Statement,The length of the statement "ctor=CompletionParameters.class.getDeclaredConstructor(PsiElement.class`PsiFile.class`CompletionType.class`int.class`int.class`Editor.class);" is 141.,29
dhleong_intellivim,org.intellivim.core.command.complete,CompletionResultSetImpl,CompletionResultSetImpl,Long Parameter List,The method has 7 parameters. ,20
dhleong_intellivim,org.intellivim.core.command.complete,CompletionResultSetImpl,withPrefixMatcher,Long Statement,The length of the statement "return new CompletionResultSetImpl(getConsumer()`myLengthOfTextBeforePosition`matcher`myContributor`myParameters`mySorter`this);" is 128.,47
dhleong_intellivim,org.intellivim.core.command.complete,CompletionResultSetImpl,withRelevanceSorter,Long Statement,The length of the statement "return new CompletionResultSetImpl(getConsumer()`myLengthOfTextBeforePosition`getPrefixMatcher()`myContributor`myParameters`(CompletionSorterImpl)sorter`this);" is 159.,74
dhleong_intellivim,org.intellivim.core.command.complete,CompletionTest,testCompletion,Magic Number,The method contains a magic number: 269,25
dhleong_intellivim,org.intellivim.core.command.complete,CompletionTest,testCompletion,Magic Number,The method contains a magic number: 4,25
dhleong_intellivim,org.intellivim.core.command.complete,CompletionTest,testCompletion,Magic Number,The method contains a magic number: 2,25
dhleong_intellivim,org.intellivim.core.command.complete,CompletionTest,testCompletion,Magic Number,The method contains a magic number: 3,25
dhleong_intellivim,org.intellivim.core.command.locate,LocateFileCommand,execute,Long Statement,The length of the statement "new DefaultChooseByNameItemProvider(context).filterElements(chooser`pattern`false`new ProgressIndicatorBase()`new CommonProcessors.CollectProcessor<Object>(results){" is 165.,54
dhleong_intellivim,org.intellivim.core.command.problems,QuickFixDescriptor,QuickFixDescriptor,Long Parameter List,The method has 6 parameters. ,30
dhleong_intellivim,org.intellivim.core.command.problems,QuickFixDescriptor,hashCode,Magic Number,The method contains a magic number: 31,53
dhleong_intellivim,org.intellivim.core.command.problems,QuickFixDescriptor,prepareExecuteAction,Long Parameter List,The method has 5 parameters. ,81
dhleong_intellivim,org.intellivim.core.command.problems,QuickFixDescriptor,invoke,Long Parameter List,The method has 5 parameters. ,96
dhleong_intellivim,org.intellivim.core.command.problems,ImportsQuickFixDescriptor,ImportsQuickFixDescriptor,Long Parameter List,The method has 6 parameters. ,26
dhleong_intellivim,org.intellivim.core.command.problems,ImportsQuickFixDescriptor,invoke,Long Parameter List,The method has 5 parameters. ,32
dhleong_intellivim,org.intellivim.core.command.problems,PromptingQuickFixDescriptor,PromptingQuickFixDescriptor,Long Parameter List,The method has 7 parameters. ,21
dhleong_intellivim,org.intellivim.core.command.problems,Problem,Problem,Long Parameter List,The method has 8 parameters. ,34
dhleong_intellivim,org.intellivim.core.command.problems,Problem,from,Long Statement,The length of the statement "return new Problem(id`line + 1`col + 1`info.getActualStartOffset()`info.getActualEndOffset()`info.getSeverity()`description`quickFixes);" is 136.,81
dhleong_intellivim,org.intellivim.core.command.problems,GetProblemsTest,testProblematic,Magic Number,The method contains a magic number: 2,20
dhleong_intellivim,org.intellivim.core.command.problems,GetProblemsTest,testProblematicFromExecutor,Long Statement,The length of the statement "String command="{'command':'get_problems'`" + "'project': '" + getProjectPath() + "'`"+ "'file': '"+ filePath+ "'`"+ "'v': '42.0'}";" is 132.,29
dhleong_intellivim,org.intellivim.core.command.problems,GetProblemsTest,testProblematicFromExecutor,Magic Number,The method contains a magic number: 2,29
dhleong_intellivim,org.intellivim.core.command.problems,GetFixesTest,testClosestOnLine,Magic Number,The method contains a magic number: 2,45
dhleong_intellivim,org.intellivim.core.command.problems,AmbiguousImportTest,testExecute,Magic Number,The method contains a magic number: 2,35
dhleong_intellivim,org.intellivim.core.command.problems,AmbiguousImportTest,testExecute,Magic Number,The method contains a magic number: 2,35
dhleong_intellivim,org.intellivim.core.command.problems,FixProblemTest,testExecute,Magic Number,The method contains a magic number: 2,35
dhleong_intellivim,org.intellivim.core.command.impl,Implementable,describe,Long Statement,The length of the statement "builder.append(FormatUtil.getTypeName(method.getReturnType())).append(' ').append(method.getName()).append(FormatUtil.buildParamsList(method));" is 143.,56
dhleong_intellivim,org.intellivim.core.command.impl,Implementable,describe,Magic Number,The method contains a magic number: 128,56
dhleong_intellivim,org.intellivim.core.command.impl,GetImplementablesTest,testOutside,Magic Number,The method contains a magic number: 36,38
dhleong_intellivim,org.intellivim.core.command.impl,GetImplementablesTest,testSubClass,Long Statement,The length of the statement "assertThat(impl).extracting("description"`CharSequence.class).usingElementComparator(charSequenceComparator).contains("public void normalMethod()").contains("public abstract void abstractMethod()");" is 198.,45
dhleong_intellivim,org.intellivim.core.command.impl,GetImplementablesTest,testSubClass,Magic Number,The method contains a magic number: 161,45
dhleong_intellivim,org.intellivim.core.command.impl,GetImplementablesTest,testNestedClass,Long Statement,The length of the statement "assertThat(impl).extracting("description"`CharSequence.class).usingElementComparator(charSequenceComparator).contains("public void boring()").contains("public Dummy fluid()").contains("public void notBoring(int number)");" is 221.,57
dhleong_intellivim,org.intellivim.core.command.impl,GetImplementablesTest,testNestedClass,Magic Number,The method contains a magic number: 153,57
dhleong_intellivim,org.intellivim.core.command.impl,ImplementTest,testSubClassNormal,Magic Number,The method contains a magic number: 161,26
dhleong_intellivim,org.intellivim.core.command.impl,ImplementTest,testSubClassAbstract,Magic Number,The method contains a magic number: 161,38
dhleong_intellivim,org.intellivim.core.command.impl,ImplementTest,testImplementMultiple,Magic Number,The method contains a magic number: 161,51
dhleong_intellivim,org.intellivim.core.command.impl,ImplementTest,testNestedClass,Magic Number,The method contains a magic number: 153,79
dhleong_intellivim,org.intellivim.core.command.impl,ImplementTest,testNestedClassWithJavadoc,Magic Number,The method contains a magic number: 153,91
dhleong_intellivim,org.intellivim.core.command,GetDocumentationCommand,stripHtml,Long Statement,The length of the statement "return input.replaceAll("(<br[ /]*>|</?PRE>)"`"\n").replaceAll("<li>"`"\n - ").replaceAll("<style .*style>"`"").replaceAll("<[^>]+>"`"").replaceAll("&nbsp;"`" ").replaceAll("&amp;"`"&").replaceAll("&lt;"`"<").replaceAll("&gt;"`">").trim();" is 239.,54
dhleong_intellivim,org.intellivim.core.command,GetDocumentationTest,testClassConstructor,Magic Number,The method contains a magic number: 570,20
dhleong_intellivim,org.intellivim.core.command,GetDocumentationTest,testMethod,Magic Number,The method contains a magic number: 377,28
dhleong_intellivim,org.intellivim.core.command,RenameElementTest,testRenameLocalVariable,Magic Number,The method contains a magic number: 314,32
dhleong_intellivim,org.intellivim.core.command,RenameElementTest,testRenameClassInternally,Magic Number,The method contains a magic number: 147,55
dhleong_intellivim,org.intellivim.core.command,RenameElementTest,testRenameClassExternally,Magic Number,The method contains a magic number: 145,106
dhleong_intellivim,org.intellivim.core.command.test,AbstractRunTestCommand,execute,Long Statement,The length of the statement "CompileAndRunner runner=CompileAndRunner.forProject(project).usingConfiguration(configuration).withExecutor(executor).build();" is 126.,71
dhleong_intellivim,org.intellivim.core.command.test,AbstractRunTestCommand,execute,Long Statement,The length of the statement "@Override public void onCompileComplete( final boolean aborted` final int errors` final int warnings` final CompileContext compileContext){" is 139.,71
dhleong_intellivim,org.intellivim.core.command.test,AbstractRunTestCommand,handleProcessStarted,Long Statement,The length of the statement "final OutputToGeneralTestEventsConverter outputConsumer=new OutputToGeneralTestEventsConverter(getTestFrameworkName()`properties);" is 130.,182
dhleong_intellivim,org.intellivim.core.command.test,TestTest,setUp,Long Statement,The length of the statement "ExtensionPoint<ConfigurationType> configEp=Extensions.getRootArea().getExtensionPoint(ConfigurationType.CONFIGURATION_TYPE_EP);" is 127.,79
dhleong_intellivim,org.intellivim.core.command.test,TestTest,setUp,Long Statement,The length of the statement "ExtensionPoint<RunConfigurationProducer> runEp=Extensions.getRootArea().getExtensionPoint(RunConfigurationProducer.EP_NAME);" is 124.,79
dhleong_intellivim,org.intellivim.core.command.test,TestTest,testMocksWorked,Magic Number,The method contains a magic number: 132,96
dhleong_intellivim,org.intellivim.core.command.test,TestTest,testOutputHandling,Long Statement,The length of the statement "assertThat(runner.testingRoot).as("TestingRoot").isNotNull().hasId("0").hasName("org.intellivim.runnable.test.Testable").hasKidsCount(2).hasKidWithId("1").hasKidWithId("2");" is 173.,130
dhleong_intellivim,org.intellivim.core.command.test,TestTest,testOutputHandling,Long Statement,The length of the statement "junit.processPacket("S2:6 51 junit.framework.AssertionFailedError: test2 failed\n" + "869 \tat org.intellivim.runnable.test.Testable.test2(Testable.java:12)\n" + "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n"+ "\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n"+ "\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n"+ "\tat com.intellij.junit3.JUnit3IdeaTestRunner.doRun(JUnit3IdeaTestRunner.java:141)\n"+ "\tat com.intellij.junit3.JUnit3IdeaTestRunner.startRunnerWithArgs(JUnit3IdeaTestRunner.java:52)\n"+ "\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)\n"+ "\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\n"+ "\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)"`runner);" is 863.,130
dhleong_intellivim,org.intellivim.core.command.test,TestTest,testOutputHandling,Magic Number,The method contains a magic number: 115,130
dhleong_intellivim,org.intellivim.core.command.test,TestTest,testOutputHandling,Magic Number,The method contains a magic number: 2,130
dhleong_intellivim,org.intellivim.core.command.test,TestTest,prepareElementImpl,Long Statement,The length of the statement "softly.assertThat(JavaPsiFacade.getInstance(project).findClass("junit.framework.TestCase"`scope)).as("TestCase").isNotNull();" is 125.,292
dhleong_intellivim,org.intellivim.core.command.run,RunListCommand,execute,Long Statement,The length of the statement "return SimpleResult.success(ContainerUtil.map(manager.getAllSettings()`new Function<RunnerAndConfigurationSettings`RunConfigInfo>(){" is 132.,39
dhleong_intellivim,org.intellivim.core.command.run,RunCommand,execute,Long Statement,The length of the statement "@Override public void onCompileComplete( final boolean aborted` final int errors` final int warnings` final CompileContext compileContext){" is 139.,43
dhleong_intellivim,org.intellivim.core.command.run,RunTest,testRun,Magic Number,The method contains a magic number: 2,42
dhleong_intellivim,org.intellivim.core.command.run,RunTest,testCompileError,Long Statement,The length of the statement "softly.assertThat(runner.stderr).as("stderr").haveAtLeast(3`containing("cannot find symbol")).haveAtLeastOne(containing("is not abstract and does not override"));" is 162.,71
dhleong_intellivim,org.intellivim.core.command.run,RunTest,testCompileError,Magic Number,The method contains a magic number: 3,71
dhleong_intellivim,org.intellivim.core.command.run,RunTest,testTerminate,Magic Number,The method contains a magic number: 3,91
dhleong_intellivim,org.intellivim.core.command.run,RunTest,testTerminate,Magic Number,The method contains a magic number: 2,91
dhleong_intellivim,org.intellivim.core.util,FileUtil,createFileCopy,Complex Conditional,The conditional expression cached != null && cached.first.getClass().equals(file.getClass()) && isCopyUpToDate(cached.second`cached.first) is complex.,81
dhleong_intellivim,org.intellivim.core.util,FileUtil,createFileCopy,Long Statement,The length of the statement "if (copy.getViewProvider().getModificationStamp() > file.getViewProvider().getModificationStamp() && cached.third != combinedOffsets) {" is 135.,81
dhleong_intellivim,org.intellivim.core.util,FileUtil,createFileCopy,Long Statement,The length of the statement "file.putUserData(FILE_COPY_KEY`new SoftReference<Trinity<PsiFile`Document`Long>>(Trinity.create(copy`document`combinedOffsets)));" is 129.,81
dhleong_intellivim,org.intellivim.core.util,FileUtil,createFileCopy,Long Statement,The length of the statement "file.putUserData(FILE_COPY_KEY`new SoftReference<Trinity<PsiFile`Document`Long>>(Trinity.create(copy`document`combinedOffsets)));" is 129.,81
dhleong_intellivim,org.intellivim.core.util,FileUtil,createFileCopy,Magic Number,The method contains a magic number: 32,81
dhleong_intellivim,org.intellivim.core.util,CompileAndRunner,execute,Complex Method,Cyclomatic complexity of the method is 8,152
dhleong_intellivim,org.intellivim.core.util,CompileAndRunner,execute,Long Statement,The length of the statement "final boolean startedCompile=BuildUtil.compileProject(project`settings.getConfiguration()`new CompileStatusNotification(){" is 122.,152
dhleong_intellivim,org.intellivim.core.util,CompileAndRunner,execute,Long Statement,The length of the statement "@Override public void finished( final boolean aborted` final int errors` final int warnings` final CompileContext compileContext){" is 130.,152
dhleong_intellivim,org.intellivim.core.util,CompileAndRunner,prepareEnvironment,Long Statement,The length of the statement "return ApplicationManager.getApplication().runReadAction(new ThrowableComputable<ExecutionEnvironment`ExecutionException>(){" is 124.,276
dhleong_intellivim,org.intellivim.core.util,CompileAndRunner,prepareEnvironment,Long Parameter List,The method has 5 parameters. ,292
dhleong_intellivim,org.intellivim.core.util,CompileAndRunner,prepareEnvironment,Long Statement,The length of the statement "throw new ExecutionException(StringUtil.escapeXml("Cannot run '" + configuration.getName() + "' on '"+ target.getDisplayName()+ "'"));" is 134.,292
dhleong_intellivim,org.intellivim.core.util,CompileAndRunner,getExecutionEnvironment,Long Parameter List,The method has 5 parameters. ,323
dhleong_intellivim,org.intellivim.core.util,FormatUtil,buildParamsList,Magic Number,The method contains a magic number: 128,22
dhleong_intellivim,org.intellivim.core.util,BuildUtil,compileProject,Complex Method,Cyclomatic complexity of the method is 8,42
dhleong_intellivim,org.intellivim.core.util,BuildUtil,compileProject,Long Statement,The length of the statement "if (configuration instanceof RunConfigurationBase && ((RunConfigurationBase)configuration).excludeCompileBeforeLaunchOption()) {" is 128.,42
dhleong_intellivim,org.intellivim.core.util,ExternalRunnerAssert,isSuccess,Long Statement,The length of the statement "failWithMessage("Expected success` but:\n" + " - interrupted: <%s>\n" + " - stdout: <%s>\n"+ " - stderr: <%s>\n"+ " - error: <%s>\n"+ " - exit: <%d>"`actual.isInterrupted()`actual.getStdOut()`actual.getStdErr()`actual.getError()`actual.getExitValue());" is 252.,21
dhleong_intellivim,org.intellivim.core.util,BuildUtilTest,testBuildRunnable,Long Statement,The length of the statement "@Override public void finished( final boolean aborted` final int errors` final int warnings` final CompileContext compileContext){" is 130.,35
dhleong_intellivim,org.intellivim.core.util,ExternalRunnerTest,testTimeout,Magic Number,The method contains a magic number: 10,28
dhleong_intellivim,org.intellivim.runnable.test,Testable,test1,Magic Number,The method contains a magic number: 2000,8
dhleong_intellivim,org.intellivim.runnable.test,Testable,test2,Magic Number,The method contains a magic number: 3000,12
dhleong_intellivim,org.intellivim.looping,LoopingMain,main,Empty catch clause,The method has an empty catch block.,4
dhleong_intellivim,org.intellivim.looping,LoopingMain,main,Magic Number,The method contains a magic number: 500,4
dhleong_intellivim,org.intellivim.javaproject,Dummy,boring,Magic Number,The method contains a magic number: 42,10
dhleong_intellivim,org.intellivim.javaproject,Dummy,moreBoring,Magic Number,The method contains a magic number: 42,43
dhleong_intellivim,org.intellivim.javaproject,Dummy,answerQuestion,Magic Number,The method contains a magic number: 42,48

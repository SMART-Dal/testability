Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
takari_takari-lifecycle,io.tesla.maven.plugins.test,MultimoduleSkipInstallDeployTest,testBasic,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).execute("deploy");" is 136.,17
takari_takari-lifecycle,io.tesla.maven.plugins.test,DeployAtEndTest,testGood,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).execute("deploy");" is 136.,19
takari_takari-lifecycle,io.tesla.maven.plugins.test,DeployAtEndTest,testBad,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).execute("deploy");" is 136.,41
takari_takari-lifecycle,io.tesla.maven.plugins.test,PomPackagingTest,testPomPackaging,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).execute("deploy");" is 136.,16
takari_takari-lifecycle,io.tesla.maven.plugins.test,BasicTest,testBasic,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).withCliOption("-X").execute("deploy");" is 156.,26
takari_takari-lifecycle,io.tesla.maven.plugins.test,BasicTest,testBasicPlugin,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).execute("deploy");" is 136.,62
takari_takari-lifecycle,io.tesla.maven.plugins.test,BasicTest,testBasicPlugin,Long Statement,The length of the statement "Assert.assertEquals(readFileUTF8(new File(basedir`"src/main/m2e/lifecycle-mapping-metadata.xml"))`readZipFileEntryUTF8(new File(basedir`"target/basic-plugin-1.0.jar")`"META-INF/m2e/lifecycle-mapping-metadata.xml"));" is 215.,62
takari_takari-lifecycle,io.tesla.maven.plugins.test,BasicTest,testBasicBuilder,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).withCliOption("-Dincrementalbuild.version=" + properties.get("incrementalbuild.version")).execute("deploy");" is 226.,112
takari_takari-lifecycle,io.tesla.maven.plugins.test,BasicTest,testBasicComponent,Long Statement,The length of the statement "MavenExecutionResult result=verifier.forProject(basedir).withCliOption("-Drepopath=" + remoterepo.getCanonicalPath()).execute("deploy");" is 136.,151
takari_takari-lifecycle,io.tesla.maven.plugins.test,BasicTest,testBasicComponent,Long Statement,The length of the statement "assertFilesPresent(basedir`"target/classes/META-INF/sisu/javax.inject.Named"`"target/test-classes/META-INF/sisu/javax.inject.Named"`"target/test-classes/test.properties");" is 171.,151
takari_takari-lifecycle,processor,ProcessorCreateResource,createFile,Long Statement,The length of the statement "return processingEnv.getFiler().createResource(StandardLocation.SOURCE_OUTPUT`pkgName`clsSimpleName + JavaFileObject.Kind.SOURCE.extension`element);" is 148.,15
takari_takari-lifecycle,io.takari.resources.filtering,FilterResourcesProcessor,process,Long Parameter List,The method has 8 parameters. ,49
takari_takari-lifecycle,io.takari.resources.filtering,FilterResourcesProcessor,readProperties,Empty catch clause,The method has an empty catch block.,64
takari_takari-lifecycle,io.takari.resources.filtering,FilterResourcesProcessor,filterResource,Long Parameter List,The method has 6 parameters. ,74
takari_takari-lifecycle,io.takari.resources.filtering,FilterResourcesProcessor,filter,Long Parameter List,The method has 5 parameters. ,82
takari_takari-lifecycle,io.takari.resources.filtering,ResourcesProcessor,process,Long Parameter List,The method has 5 parameters. ,38
takari_takari-lifecycle,io.takari.resources.filtering,ResourcesProcessor,process,Long Parameter List,The method has 7 parameters. ,42
takari_takari-lifecycle,io.takari.resources.filtering,ResourcesProcessor,process,Long Statement,The length of the statement "filterProcessor.process(sourceDirectory`targetDirectory`includes`excludes`filterProperties`Collections.emptyList()`encoding`mpa);" is 129.,42
takari_takari-lifecycle,io.takari.resources.filtering,ResourcesProcessor,process,Long Parameter List,The method has 8 parameters. ,47
takari_takari-lifecycle,io.takari.resources.filtering,ResourcesProcessor,filter,Long Parameter List,The method has 5 parameters. ,52
takari_takari-lifecycle,io.takari.resources.filtering,CopyResourcesProcessor,process,Long Parameter List,The method has 5 parameters. ,32
takari_takari-lifecycle,io.takari.resources.filtering,CopyResourcesProcessor,copyResource,Long Parameter List,The method has 5 parameters. ,38
takari_takari-lifecycle,io.takari.maven.plugins.exportpackage,ExportPackageMojoTest,assertExportedPackages,Long Statement,The length of the statement "List<String> actual=Files.readLines(new File(basedir`"target/classes/" + ExportPackageMojo.PATH_EXPORT_PACKAGE)`Charsets.UTF_8);" is 128.,104
takari_takari-lifecycle,io.takari.maven.plugins.resources,AbstractProcessResourcesMojo,process,Long Statement,The length of the statement "processor.process(sourceDirectory`targetDirectory`resource.getIncludes()`resource.getExcludes()`properties`filters`encoding`missingPropertyAction);" is 147.,79
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,IncrementalFileOutputStream,arrayEquals,Long Parameter List,The method has 5 parameters. ,90
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,IncrementalFileOutputStream,write,Magic Number,The method contains a magic number: 0xFF,99
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavac,getSystemJavaCompiler,Long Statement,The length of the statement "throw new MojoExecutionException("No compiler is provided in this environment. " + "Perhaps you are running on a JRE rather than a JDK?");" is 138.,42
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavac,compile,Long Statement,The length of the statement "final JavaCompiler.CompilationTask task=compiler.getTask(stdout`recordingFileManager`diagnosticCollector`options`null`javaSources);" is 131.,74
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavac,toSeverity,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@3c1b2d64,126
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,AbstractCompilerJavac,getCompilerOptions,Complex Method,Cyclomatic complexity of the method is 20,56
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,AbstractCompilerJavac,getCompilerOptions,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@130c7716,56
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,AbstractCompilerJavac,setPrivatePackageReference,Long Statement,The length of the statement "String msg=String.format("Compiler %s does not support privatePackageReference=error` use compilerId=%s"`getCompilerId()`CompilerJdt.ID);" is 137.,230
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,AbstractCompilerJavac,setTransitiveDependencyReference,Long Statement,The length of the statement "String msg=String.format("Compiler %s does not support transitiveDependencyReference=error` use compilerId=%s"`getCompilerId()`CompilerJdt.ID);" is 143.,238
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,RecordingJavaFileManager,getFileForOutput,Long Statement,The length of the statement "return encoding != null ? new OutputStreamWriter(openOutputStream()`encoding) : new OutputStreamWriter(openOutputStream());" is 123.,33
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,RecordingJavaFileManager,openWriter,Long Statement,The length of the statement "return encoding != null ? new OutputStreamWriter(openOutputStream()`encoding) : new OutputStreamWriter(openOutputStream());" is 123.,43
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,RecordingJavaFileManager,getJavaFileForOutput,Long Statement,The length of the statement "return encoding != null ? new OutputStreamWriter(openOutputStream()`encoding) : new OutputStreamWriter(openOutputStream());" is 123.,50
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,RecordingJavaFileManager,openWriter,Long Statement,The length of the statement "return encoding != null ? new OutputStreamWriter(openOutputStream()`encoding) : new OutputStreamWriter(openOutputStream());" is 123.,60
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacForked,compile,Long Statement,The length of the statement "output.addMessage("."`0`0`"No compiler is provided in this environment. " + "Perhaps you are running on a JRE rather than a JDK?"`Kind.ERROR);" is 142.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacForked,compile,Long Statement,The length of the statement "final StandardJavaFileManager standardFileManager=compiler.getStandardFileManager(diagnosticCollector`null`sourceEncoding);" is 123.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacForked,compile,Long Statement,The length of the statement "final Iterable<? extends JavaFileObject> fileObjects=standardFileManager.getJavaFileObjectsFromFiles(config.getSources());" is 122.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacForked,compile,Long Statement,The length of the statement "final JavaCompiler.CompilationTask task=compiler.getTask(stdout`recordingFileManager`diagnosticCollector`options`null`fileObjects);" is 131.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacForked,compile,Long Statement,The length of the statement "output.addMessage(file.getAbsolutePath()`(int)diagnostic.getLineNumber()`(int)diagnostic.getColumnNumber()`diagnostic.getMessage(null)`kind);" is 141.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacForked,compile,Long Statement,The length of the statement "output.addLogMessage(String.format("Unsupported compiler message on %s resource %s: %s"`source.getKind()`source.toUri()`diagnostic.getMessage(null)));" is 150.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacLauncher,compile,Complex Method,Cyclomatic complexity of the method is 9,69
takari_takari-lifecycle,io.takari.maven.plugins.compile.javac,CompilerJavacLauncher,addMessage,Long Parameter List,The method has 5 parameters. ,122
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompilerBuildContext,getRemovedSources,Complex Conditional,The conditional expression isJavaSource(resource) && !oldState.isOutput(resource) && !isRegisteredResource(resource) is complex.,108
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompilerBuildContext,addAssociatedOutputs,Long Statement,The length of the statement "for ( ResourceMetadata<File> output : super.getAssociatedOutputs(getState(resource.getResource())`resource.getResource())) {" is 124.,196
takari_takari-lifecycle,io.takari.maven.plugins.compile,ProcessorpathResolver,resolve,Complex Method,Cyclomatic complexity of the method is 9,51
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getSources,Complex Method,Cyclomatic complexity of the method is 10,298
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getSources,Long Statement,The length of the statement "throw new MojoExecutionException(String.format("<includes> patterns must end with %s. Illegal patterns: %s"`Kind.SOURCE.extension`illegal.toString()));" is 151.,298
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,execute,Complex Conditional,The conditional expression sourcesChanged || classpathChanged || sourcepathChanged|| processorpathChanged is complex.,369
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,execute,Complex Method,Cyclomatic complexity of the method is 10,369
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getSourcepath,Complex Method,Cyclomatic complexity of the method is 12,472
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getSourcepath,Long Statement,The length of the statement "throw new MojoExecutionException("Unsupported <sourcepath> classified reactor dependencies: " + unsupportedDependencies);" is 121.,472
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getEffectiveProc,Complex Method,Cyclomatic complexity of the method is 10,538
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getEffectiveProc,Empty catch clause,The method has an empty catch block.,538
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getEffectiveProc,Empty catch clause,The method has an empty catch block.,538
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,getEffectiveProc,Long Statement,The length of the statement "processors.putAll(jar`Files.readLines(new File(jar`"META-INF/services/javax.annotation.processing.Processor")`Charsets.UTF_8));" is 127.,538
takari_takari-lifecycle,io.takari.maven.plugins.compile,AbstractCompileMojo,parseDebug,Complex Conditional,The conditional expression result.size() > 1 && (result.contains(Debug.all) || result.contains(Debug.none)) is complex.,594
takari_takari-lifecycle,io.takari.maven.plugins.compile,ProjectClasspathDigester,digest,Complex Method,Cyclomatic complexity of the method is 9,65
takari_takari-lifecycle,io.takari.maven.plugins.compile,ProjectClasspathDigester,newDirectoryArtifact,Long Statement,The length of the statement "msg.append("\n classfolder member count changed (new ").append(fileCount).append(" previous ").append(previousArtifact.length).append(')');" is 139.,143
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileJavacClasspathVisibilityTest,testBasic,Long Statement,The length of the statement "ErrorMessage.isMatch(e.getMessage()`"Compiler javac does not support transitiveDependencyReference=error` use compilerId=jdt");" is 127.,19
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileJavacClasspathVisibilityTest,testBasic,Long Statement,The length of the statement "ErrorMessage.isMatch(e.getMessage()`"Compiler javac does not support privatePackageReference=error` use compilerId=jdt");" is 121.,19
takari_takari-lifecycle,io.takari.maven.plugins.compile,ProcessorpathResolverTest,testVersionlessDependency,Long Statement,The length of the statement "SimpleReactorReader.builder().addArtifact("g:a:1"`temp.newFile()).addArtifact("g:a:pom:1"`temp.newFile()).toSession(repoSession);" is 129.,32
takari_takari-lifecycle,io.takari.maven.plugins.compile,SimpleReactorReader,keyGAVCE,Long Statement,The length of the statement "key.append(artifact.getGroupId()).append(":").append(artifact.getArtifactId()).append(":").append(artifact.getVersion()).append(":").append(artifact.getClassifier()).append(":").append(artifact.getExtension());" is 210.,73
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_debugInfo,Long Statement,The length of the statement "assertThat(new File(basedir`"target/classes/basic/Basic.class")`allOf(not(hasDebugSource())`not(hasDebugLines())`not(hasDebugVars())));" is 135.,77
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_debugInfo,Long Statement,The length of the statement "assertThat(new File(basedir`"target/classes/basic/Basic.class")`allOf(not(hasDebugSource())`not(hasDebugLines())`not(hasDebugVars())));" is 135.,77
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_debugInfo,Long Statement,The length of the statement "assertThat(new File(basedir`"target/classes/basic/Basic.class")`allOf(hasDebugSource()`not(hasDebugLines())`not(hasDebugVars())));" is 130.,77
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_debugInfo,Long Statement,The length of the statement "assertThat(new File(basedir`"target/classes/basic/Basic.class")`allOf(hasDebugSource()`hasDebugLines()`not(hasDebugVars())));" is 125.,77
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_java7,Magic Number,The method contains a magic number: 51,144
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_java8,Magic Number,The method contains a magic number: 52,150
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_java9,Magic Number,The method contains a magic number: 53,156
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_java10,Magic Number,The method contains a magic number: 54,163
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testBasic_java11,Magic Number,The method contains a magic number: 55,170
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testError,Empty catch clause,The method has an empty catch block.,237
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testWarn,Long Statement,The length of the statement "expected.setSnippets("jdt"`"WARNING Warn.java [5:3] List is a raw type. References to generic type List<E> should be parameterized");" is 133.,254
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testWarn,Long Statement,The length of the statement "expected.setSnippets("javac"`"WARNING Warn.java [5:12] found raw type: java.util.List\n missing type arguments for generic class java.util.List<E>");" is 149.,254
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testEncoding,Empty catch clause,The method has an empty catch block.,270
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testEncoding,Long Statement,The length of the statement "mojos.assertMessage(new File(basedir`"src/main/java/encoding/ISO8859p5.java")`"\u043f\u043e\u0440\u0443\u0441\u0441\u043a\u0438");" is 130.,270
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testParameters,Long Statement,The length of the statement "assertThat(new File(basedir`"target/classes/parameters/MethodParameter.class")`hasMethodParameterWithName("myNamedParameter"));" is 127.,282
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileTest,testFailOnErrorTrue,Empty catch clause,The method has an empty catch block.,387
takari_takari-lifecycle,io.takari.maven.plugins.compile,ForkedCompileTest,testJvmMemoryOptions,Empty catch clause,The method has an empty catch block.,21
takari_takari-lifecycle,io.takari.maven.plugins.compile,ForkedCompileTest,testJvmMemoryOptions,Empty catch clause,The method has an empty catch block.,21
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileIncrementalTest,testBasic_identicalClassfile,Magic Number,The method contains a magic number: 20000L,40
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileIncrementalTest,testBasic_identicalClassfile,Magic Number,The method contains a magic number: 10000L,40
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileIncrementalTest,testError,Empty catch clause,The method has an empty catch block.,74
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileIncrementalTest,testError,Empty catch clause,The method has an empty catch block.,74
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileIncrementalTest,testError,Long Statement,The length of the statement "expected.setSnippets("javac"`"ERROR Error.java [4:11]"`"cannot find symbol"`"class Errorr"`"location"`"class error.Error");" is 123.,74
takari_takari-lifecycle,io.takari.maven.plugins.compile,CompileIncrementalTest,testReferenceNested,Empty catch clause,The method has an empty catch block.,180
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,processAnnotations,Long Parameter List,The method has 6 parameters. ,76
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,compileAnnotationProcessor,Long Statement,The length of the statement "cp(processor`"src/main/resources/META-INF/services/javax.annotation.processing.Processor"`"target/classes/META-INF/services/javax.annotation.processing.Processor");" is 164.,95
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_only,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target/generated-sources/annotations")`"proc/GeneratedSource.java"`"proc/AnotherGeneratedSource.java");" is 146.,102
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_proc,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"generated-sources/annotations/proc/AnotherGeneratedSource.java"`"classes/proc/AnotherGeneratedSource.class");" is 285.,114
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalTypeIndex,Long Statement,The length of the statement "JavaFile.builder("proc"`TypeSpec.classBuilder("AnotherSource").addAnnotation(AnnotationSpec.builder(ClassName.get("processor"`"Annotation")).build()).build()).build().writeTo(src);" is 180.,125
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalProcessorChange,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"generated-sources/annotations/proc/AnotherGeneratedSource.java"`"classes/proc/AnotherGeneratedSource.class");" is 285.,153
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalProcessorChange,Long Statement,The length of the statement "mojos.assertDeletedOutputs(new File(basedir`"target")`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"generated-sources/annotations/proc/AnotherGeneratedSource.java"`"classes/proc/AnotherGeneratedSource.class");" is 259.,153
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcTypeReference,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"classes/proc/GeneratedSourceSubclass.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"generated-sources/annotations/proc/AnotherGeneratedSource.java"`"classes/proc/AnotherGeneratedSource.class");" is 330.,182
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_createResource,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java");" is 139.,194
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_annotationProcessors,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 176.,208
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcRef_annotationProcessors,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"classes/proc/GeneratedSourceSubclass.class");" is 221.,225
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcRef_annotationProcessors_LastRound,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"classes/proc/GeneratedSourceSubclass.class");" is 221.,246
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcRef_annotationProcessors_recompile,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"classes/proc/GeneratedSourceSubclass.class");" is 221.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcRef_annotationProcessors_recompile,Long Statement,The length of the statement "expectedOuput=new String[]{"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"};" is 151.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcRef_annotationProcessors_recompile,Long Statement,The length of the statement "expectedOuput=new String[]{"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"classes/proc/GeneratedSourceSubclass.class"};" is 196.,269
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcRef_annotationProcessors_LastRound_recompile,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"classes/proc/GeneratedSourceSubclass.class");" is 221.,311
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProcRef_annotationProcessors_LastRound_recompile,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"classes/proc/GeneratedSourceSubclass.class");" is 221.,311
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_processorErrorMessage,Empty catch clause,The method has an empty catch block.,349
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_processorErrorMessage,Magic Number,The method contains a magic number: 3,349
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_messages,Empty catch clause,The method has an empty catch block.,371
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_messages,Empty catch clause,The method has an empty catch block.,371
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_staleGeneratedSourcesCleanup,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"generated-sources/annotations/proc/AnotherGeneratedSource.java"`"classes/proc/AnotherGeneratedSource.class");" is 285.,428
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_staleGeneratedSourcesCleanup,Long Statement,The length of the statement "mojos.assertDeletedOutputs(new File(basedir`"target")`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class"`"generated-sources/annotations/proc/AnotherGeneratedSource.java"`"classes/proc/AnotherGeneratedSource.class");" is 259.,428
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalDeleteLastAnnotatedSource,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 176.,451
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalDeleteLastAnnotatedSource,Long Statement,The length of the statement "mojos.assertCarriedOverOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 182.,451
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalDeleteLastAnnotatedSource,Long Statement,The length of the statement "mojos.assertDeletedOutputs(new File(basedir`"target")`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/Source.class"`"classes/proc/GeneratedSource.class");" is 178.,451
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_projectSourceRoots,Long Statement,The length of the statement "Assert.assertTrue(project.getCompileSourceRoots().contains(new File(basedir`"target/generated-sources/annotations").getAbsolutePath()));" is 136.,501
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testIncrementalDelete,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Keep.class"`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 202.,516
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testIncrementalDelete,Long Statement,The length of the statement "mojos.assertCarriedOverOutputs(new File(basedir`"target")`"classes/proc/Keep.class"`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 208.,516
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testIncrementalDelete,Long Statement,The length of the statement "mojos.assertDeletedOutputs(new File(basedir`"target")`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/Source.class"`"classes/proc/GeneratedSource.class");" is 178.,516
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testConvertGeneratedSourceToHandwritten,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(moduleA`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 176.,548
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testConvertGeneratedSourceToHandwritten,Long Statement,The length of the statement "mojos.assertDeletedOutputs(new File(moduleA`"target")`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 150.,548
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testRequireProc,Empty catch clause,The method has an empty catch block.,597
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testRequireProc_processorpath,Empty catch clause,The method has an empty catch block.,622
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testRequireProc_processorpath,Long Statement,The length of the statement "cp(processor.getBasedir()`"src/main/resources/META-INF/services/javax.annotation.processing.Processor"`"target/classes/META-INF/services/javax.annotation.processing.Processor");" is 177.,622
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testRecompile,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"classes/proc/Client.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 204.,653
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testRecompile,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"classes/proc/Client.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 204.,653
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testIncremental_proc_only,Long Statement,The length of the statement "mojos.assertBuildOutputs(generatedSources`"proc/GeneratedConcrete.java"`"proc/GeneratedAbstract.java"`"proc/GeneratedAnother.java");" is 132.,699
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testMultiround_processorLastRound,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"classes/proc/AnotherSource.class"`"classes/types.lst");" is 136.,749
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testMultiround_processorLastRound,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"classes/proc/AnotherSource.class"`"classes/types.lst");" is 136.,749
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testLastRound_typeIndex,Long Statement,The length of the statement "mojos.assertBuildOutputs(target`"generated-sources/annotations/generated/TypeIndex.java"`"generated-sources/annotations/generated/TypeIndex2.java"`"classes/generated/TypeIndex.class"`"classes/generated/TypeIndex2.class"`"classes/typeindex/Annotated.class"`"classes/typeindex/Consumer.class");" is 292.,772
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testReprocess,Long Statement,The length of the statement "mojos.assertBuildOutputs(target`"classes/reprocess/Annotated.class"`"classes/reprocess/Annotated.value"`"classes/reprocess/SimpleA.class"`"classes/reprocess/SimpleB.class");" is 173.,790
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testReprocess,Long Statement,The length of the statement "mojos.assertBuildOutputs(target`"classes/reprocess/Annotated.class"`"classes/reprocess/Annotated.value"`"classes/reprocess/SimpleA.class"`"classes/reprocess/SimpleB.class");" is 173.,790
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_nonIncrementalProcessor,Long Statement,The length of the statement "mojos.assertBuildOutputs(target`"classes/proc/Source.class"`"generated-sources/annotations/proc/NonIncrementalSource.java"`"classes/proc/NonIncrementalSource.class");" is 166.,819
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_nonIncrementalProcessor,Long Statement,The length of the statement "mojos.assertBuildOutputs(target`"classes/proc/Source.class"`"generated-sources/annotations/proc/NonIncrementalSource.java"`"classes/proc/NonIncrementalSource.class");" is 166.,819
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_processorpath,Long Statement,The length of the statement "cp(processor.getBasedir()`"src/main/resources/META-INF/services/javax.annotation.processing.Processor"`"target/classes/META-INF/services/javax.annotation.processing.Processor");" is 177.,851
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_processorpath,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc/Source.class"`"generated-sources/annotations/proc/GeneratedSource.java"`"classes/proc/GeneratedSource.class");" is 176.,851
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalTypeJump,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc.SourceJump"`"classes/proc/Source.class"`"classes/proc/SourceJump.class");" is 139.,888
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalTypeJump,Long Statement,The length of the statement "mojos.assertCarriedOverOutputs(new File(basedir`"target")`"classes/proc.SourceJump"`"classes/proc/Source.class"`"classes/proc/SourceJump.class");" is 145.,888
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testProc_incrementalTypeJump,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"classes/proc.SourceJump"`"classes/proc/Source.class"`"classes/proc/SourceJump.class"`"classes/proc/Unrelated.class");" is 170.,888
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setVersion(dependency.getVersion()).addTo(project);" is 195.,946
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(projectBasedir`"target")`"generated-sources/annotations/sourcepath/project/GeneratedSource.java");" is 132.,946
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependencyNestedTypeThroughBinaryDependency,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setVersion(dependency.getVersion()).addTo(project);" is 195.,975
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependencyNestedTypeThroughBinaryDependency,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(projectBasedir`"target")`"generated-sources/annotations/sourcepath/nestedtype/project/GeneratedSource.java");" is 143.,975
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_incremental,Empty catch clause,The method has an empty catch block.,1007
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_incremental,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setVersion(dependency.getVersion()).addTo(project);" is 195.,1007
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_incremental,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(projectBasedir`"target")`"generated-sources/annotations/sourcepath/project/GeneratedSource.java");" is 132.,1007
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_incremental,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setVersion(dependency.getVersion()).addTo(project);" is 195.,1007
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_classifiedDependency,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setVersion(dependency.getVersion()).setClassifier("classifier").addTo(project);" is 223.,1063
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathIncludes,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target")`"generated-sources/annotations/sourcepath/project/GeneratedSource.java");" is 125.,1095
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_testCompile,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setVersion(dependency.getVersion()).addTo(project);" is 195.,1107
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_testCompile,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/test-classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setType("test-jar").setVersion(dependency.getVersion()).addTo(project);" is 220.,1107
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathDependency_testCompile,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(projectBasedir`"target")`"generated-test-sources/test-annotations/sourcepath/project/test/GeneratedSourceTest.java");" is 151.,1107
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathSecondatytype,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyBasedir`"target/classes")).setGroupId(dependency.getGroupId()).setArtifactId(dependency.getArtifactId()).setVersion(dependency.getVersion()).addTo(project);" is 195.,1158
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathCache,Long Statement,The length of the statement "mojos.newDependency(new File(projectaBasedir`"target/classes")).setGroupId(projecta.getGroupId()).setArtifactId(projecta.getArtifactId()).setVersion(projecta.getVersion()).addTo(projectb);" is 188.,1185
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathCache,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(projectaBasedir`"target")`"generated-sources/annotations/sourcepath/projecta/GeneratedSourceA.java");" is 135.,1185
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testSourcepathCache,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(projectbBasedir`"target")`"generated-sources/annotations/sourcepath/projectb/GeneratedSourceB.java");" is 135.,1185
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testAnnotatedMember_incrementalProcessingTrigger,Long Statement,The length of the statement "JavaFile.builder("proc"`TypeSpec.classBuilder("AnnotatedMemberSource").addField(FieldSpec.builder(String.class`"annotatedfield").addAnnotation(annotation).build()).build()).build().writeTo(src);" is 194.,1231
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testAnnotatedMember_incrementalProcessingTrigger,Long Statement,The length of the statement "JavaFile.builder("proc"`TypeSpec.classBuilder("AnnotatedSource").addAnnotation(annotation).build()).build().writeTo(src);" is 121.,1231
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testAnnotatedMember_incrementalProcessingTrigger,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target/classes")`"proc/AnnotatedMemberSource.class"`"proc/AnnotatedSource.class"`"elements.lst");" is 140.,1231
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testAnnotatedMember_incrementalProcessingTrigger,Long Statement,The length of the statement "assertFileContents("/proc/AnnotatedMemberSource/annotatedfield FIELD\n/proc/AnnotatedSource CLASS\n"`basedir`"target/classes/elements.lst");" is 140.,1231
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testNestedTypeReference,Long Statement,The length of the statement "JavaFile.builder("proc"`TypeSpec.classBuilder("Dependency").addType(TypeSpec.classBuilder("Nested").build()).build()).build().writeTo(src);" is 139.,1259
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testNestedTypeReference,Long Statement,The length of the statement "JavaFile.builder("proc"`TypeSpec.classBuilder("AnnotatedSource").addField(FieldSpec.builder(ClassName.get("proc"`"Dependency")`"annotatedfield").addAnnotation(annotation).build()).build()).build().writeTo(src);" is 210.,1259
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testNestedTypeReference,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target/classes")`"proc/AnnotatedSource.class"`"proc/Dependency.class"`"proc/Dependency$Nested.class"`"elements.lst");" is 160.,1259
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testNestedTypeReference,Long Statement,The length of the statement "JavaFile.builder("proc"`TypeSpec.classBuilder("Dependency").addType(TypeSpec.classBuilder("Nested").addField(FieldSpec.builder(String.class`"nestedTypeField").build()).build()).build()).build().writeTo(src);" is 207.,1259
takari_takari-lifecycle,io.takari.maven.plugins.compile,AnnotationProcessingTest,testNestedTypeReference,Long Statement,The length of the statement "mojos.assertBuildOutputs(new File(basedir`"target/classes")`"proc/AnnotatedSource.class"`"proc/Dependency.class"`"proc/Dependency$Nested.class"`"elements.lst");" is 160.,1259
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,digest,Complex Method,Cyclomatic complexity of the method is 13,48
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,digest,Long Statement,The length of the statement "long OnlyStructuralTagBits=TagBits.AnnotationTargetMASK | TagBits.AnnotationDeprecated | TagBits.AnnotationRetentionMASK| TagBits.HierarchyHasProblems;" is 151.,48
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateConstant,Complex Method,Cyclomatic complexity of the method is 10,157
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateConstant,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@607c728d,157
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,affectsSignature,Long Statement,The length of the statement "if (targetType >= AnnotationTargetTypeConstants.LOCAL_VARIABLE && targetType <= AnnotationTargetTypeConstants.METHOD_REFERENCE_TYPE_ARGUMENT) {" is 143.,246
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 8,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0x08,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 2,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0x10,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 3,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0x18,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 4,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0x20,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 5,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0x28,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 6,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0x30,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 7,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0x38,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateLong,Magic Number,The method contains a magic number: 0xFF,258
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 4,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 0xFF,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 0x08,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 0xFF,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 2,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 0x10,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 0xFF,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 3,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 0x18,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateInt,Magic Number,The method contains a magic number: 0xFF,271
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateShort,Magic Number,The method contains a magic number: 2,280
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateShort,Magic Number,The method contains a magic number: 0xFF,280
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateShort,Magic Number,The method contains a magic number: 0x08,280
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClassfileDigester,updateShort,Magic Number,The method contains a magic number: 0xFF,280
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClasspathDigester,digestJar,Empty catch clause,The method has an empty catch block.,86
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClasspathDigester,digestDirectory,Empty catch clause,The method has an empty catch block.,122
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImpl,createSourceFile,Long Statement,The length of the statement "JavaFileObject sourceFile=fileManager.getJavaFileForOutput(StandardLocation.SOURCE_OUTPUT`name.toString()`JavaFileObject.Kind.SOURCE`null);" is 139.,112
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImpl,createClassFile,Long Statement,The length of the statement "JavaFileObject classFile=fileManager.getJavaFileForOutput(StandardLocation.CLASS_OUTPUT`name.toString()`JavaFileObject.Kind.CLASS`null);" is 136.,135
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClasspathEntryCache,revalidate,Complex Conditional,The conditional expression entry == null || entry.getSize() != length || entry.getTimestamp() != lastModified is complex.,51
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ClasspathEntryCache,revalidate,Empty catch clause,The method has an empty catch block.,51
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,AnnotationProcessorManager,AnnotationProcessorManager,Long Parameter List,The method has 5 parameters. ,111
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,AnnotationProcessorManager,AnnotationProcessorManager,Long Statement,The length of the statement "this.processors=processors != null ? new SpecifiedProcessors(procLoader`processors) : new DiscoveredProcessors(procLoader);" is 123.,111
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,AnnotationProcessorManager,processAnnotations,Long Statement,The length of the statement "RoundDispatcher dispatcher=new RoundDispatcher(this`roundEnv`roundEnv.getRootAnnotations()`traceProcessorInfo`traceRounds);" is 123.,235
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ProcessingEnvImpl,ProcessingEnvImpl,Long Parameter List,The method has 5 parameters. ,39
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ReferenceCollection,includes,Complex Method,Cyclomatic complexity of the method is 9,66
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ReferenceCollection,includes,Long Statement,The length of the statement "if (qualifiedName.indexOf('.') > 0 ? qualifiedNameReferences.contains(qualifiedName) : simpleNameReferences.contains(qualifiedName)) {" is 134.,66
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ReferenceCollection,internQualifiedNames,Complex Method,Cyclomatic complexity of the method is 10,135
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,ReferenceCollection,internSimpleNames,Complex Method,Cyclomatic complexity of the method is 10,170
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,MessagerImpl,printMessage,Long Parameter List,The method has 5 parameters. ,44
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,MessagerImpl,printMessage,Long Statement,The length of the statement "input.addMessage(problem.getSourceLineNumber()`problem.getSourceColumnNumber()`problem.getMessage()`getSeverity(kind)`null);" is 124.,44
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,MessagerImpl,getSeverity,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@fa8331c,58
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,compile,Complex Method,Cyclomatic complexity of the method is 13,624
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,compile,Magic Number,The method contains a magic number: 4,624
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,compile,Missing default,The following switch statement is missing a default case: !org.eclipse.jdt.core.dom.SwitchStatement@19205a22,624
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,addCompilationUnit,Magic Number,The method contains a magic number: 4,692
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,persistAnnotationProcessingState,Long Statement,The length of the statement "aptstate=new AnnotationProcessingState(aptmanager.getProcessedSources()`aptmanager.getReferencedTypes()`aptmanager.getWittenOutputs());" is 135.,740
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,createCPEntry,Empty catch clause,The method has an empty catch block.,806
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,setClasspath,Complex Method,Cyclomatic complexity of the method is 11,824
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,setClasspath,Long Statement,The length of the statement "@SuppressWarnings("unchecked") Map<String`byte[]> oldDigest=(Map<String`byte[]>)context.setAttribute(ATTR_CLASSPATH_DIGEST`digest);" is 131.,824
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,acceptResult,Complex Conditional,The conditional expression result.rootReferences != null && result.qualifiedReferences != null && result.simpleNameReferences != null is complex.,923
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,acceptResult,Complex Method,Cyclomatic complexity of the method is 8,923
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,acceptResult,Long Statement,The length of the statement "context.setAttribute(input.getResource()`ATTR_REFERENCES`new ReferenceCollection(result.rootReferences`result.qualifiedReferences`result.simpleNameReferences));" is 160.,923
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,acceptResult,Magic Number,The method contains a magic number: 6,923
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,acceptResult,Magic Number,The method contains a magic number: 6,923
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompilerJdt,digestClassFile,Empty catch clause,The method has an empty catch block.,1006
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,AccessRestrictionClasspathEntry,forbidAll,Long Statement,The length of the statement "AccessRestriction accessRestriction=new AccessRestriction(accessRule`AccessRestriction.COMMAND_LINE`entry.getEntryName());" is 122.,42
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testReference_indirectDependencyArtifact,Long Statement,The length of the statement "mojos.assertMessage(new File(basedir`"src/main/java/reference/Reference.java")`"The type 'DependencyClass' is not API"`"test-dependency-0.1.jar");" is 146.,31
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testReference_accessRulesViolationIgnore,Long Statement,The length of the statement "mojos.executeMojo(session`project`"compile"`param("compilerId"`"jdt")`param("transitiveDependencyReference"`"ignore")`param("privatePackageReference"`"ignore"));" is 161.,44
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testReference_testCompile,Long Statement,The length of the statement "Xpp3Dom[] params=new Xpp3Dom[]{param("compilerId"`"jdt")`param("transitiveDependencyReference"`"error")`param("privatePackageReference"`"error")};" is 146.,59
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testReference_testCompile_internal,Long Statement,The length of the statement "Xpp3Dom[] params=new Xpp3Dom[]{param("compilerId"`"jdt")`param("transitiveDependencyReference"`"error")`param("privatePackageReference"`"error")};" is 146.,77
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testInternalReference,Long Statement,The length of the statement "mojos.assertMessage(new File(basedir`"src/main/java/reference/Reference.java")`"The type 'DependencyInternalClass' is not API"`"test-dependency-0.1.jar");" is 154.,114
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testInternalReference_testCompile,Empty catch clause,The method has an empty catch block.,127
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testInternalReference_testCompile,Long Statement,The length of the statement "mojos.executeMojo(session`project`"testCompile"`param("compilerId"`"jdt")`param("transitiveDependencyReference"`"error")`param("privatePackageReference"`"error"));" is 163.,127
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testInternalReference_testCompile,Long Statement,The length of the statement "mojos.assertMessage(new File(basedir`"src/test/java/reference/ReferenceTest.java")`"The type 'DependencyInternalClass' is not API"`"test-dependency-0.1.jar");" is 158.,127
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testInternalReference_dependencyBundle,Long Statement,The length of the statement "addDependency(project`"indirect-dependency"`new File("src/test/projects/compile-jdt-classpath-visibility/test-dependency-bundle/test-dependency-bundle-0.1.jar"));" is 162.,151
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathVisibilityTest,testInternalReference_dependencyBundle,Long Statement,The length of the statement "mojos.assertMessage(new File(basedir`"src/main/java/reference/Reference.java")`"The type 'DependencyInternalClass' is not API"`"test-dependency-bundle-0.1.jar");" is 161.,151
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testBasic_timestampChangeRebuild,Magic Number,The method contains a magic number: 20000L,47
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testBasic_timestampChangeRebuild,Magic Number,The method contains a magic number: 10000L,47
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testSupertype,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/supertype/SubClass.class"`"target/classes/supertype/SuperClass.class"`"target/classes/supertype/SuperInterface.class");" is 168.,68
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testSupertype,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/supertype/SuperClass.class"`"target/classes/supertype/SuperInterface.class");" is 126.,68
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testSupertype_superClassChangeDoesNotTriggerRebuildOfImplementedInterfaces,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/supertype/SubClass.class"`"target/classes/supertype/SuperClass.class"`"target/classes/supertype/SuperInterface.class");" is 168.,88
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testMissing,Empty catch clause,The method has an empty catch block.,140
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testMissing,Empty catch clause,The method has an empty catch block.,140
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testMissing,Empty catch clause,The method has an empty catch block.,140
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testMissing,Long Statement,The length of the statement "final String[] messages={"ERROR Error.java [6:12] Missing cannot be resolved to a type"`"ERROR Error.java [8:20] Missing cannot be resolved to a type"};" is 152.,140
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testMultifile,Empty catch clause,The method has an empty catch block.,182
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testMultifile,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/multifile/ClassA.class"`"target/classes/multifile/ClassB.class"`"target/classes/multifile/ClassB$Nested.class");" is 161.,182
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testMultifile,Long Statement,The length of the statement "mojos.assertDeletedOutputs(basedir`"target/classes/multifile/ClassA.class"`"target/classes/multifile/ClassB$Nested.class");" is 123.,182
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testSecondaryType,Long Statement,The length of the statement "mojos.assertBuildOutputs(classes`"secondary/Primary.class"`"secondary/Secondary.class"`"secondary/SecondarySubclass.class"`"secondary/SecondarySubclassClient.class");" is 166.,200
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtTest,testRemoveSecondaryType,Empty catch clause,The method has an empty catch block.,233
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImplTest,testGetResource_unsupportedLocation,Empty catch clause,The method has an empty catch block.,50
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImplTest,testGetResource_location_classpath,Long Statement,The length of the statement "Assert.assertEquals("pkg jar resource"`toString(filer.getResource(StandardLocation.CLASS_PATH`"pkg"`"jarresource.txt")));" is 121.,64
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImplTest,testRecreateSourceFile,Empty catch clause,The method has an empty catch block.,86
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImplTest,testRecreateResource,Empty catch clause,The method has an empty catch block.,107
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImplTest,testRecreateResource,Empty catch clause,The method has an empty catch block.,107
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImplTest,testResourceDoesNotExist,Empty catch clause,The method has an empty catch block.,166
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,FilerImplTest,createClasspath,Empty catch clause,The method has an empty catch block.,183
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathTest,testReactor_missingType,Empty catch clause,The method has an empty catch block.,36
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathTest,testReactor_missingType,Long Statement,The length of the statement "mojos.assertMessages(parent`"module-a/src/main/java/modulea/Error.java"`"ERROR Error.java [3:8] The import moduleb cannot be resolved"`"ERROR Error.java [8:12] Missing cannot be resolved to a type"`"ERROR Error.java [10:20] Missing cannot be resolved to a type");" is 263.,36
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathTest,testReactor_missingOnDemandImport,Empty catch clause,The method has an empty catch block.,56
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathTest,testReactor_missingOnDemandImport,Long Statement,The length of the statement "mojos.assertMessages(parent`"module-a/src/main/java/modulea/Error.java"`"ERROR Error.java [3:8] The import moduleb cannot be resolved");" is 136.,56
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathTest,testReactor_missingType_splitpackage,Empty catch clause,The method has an empty catch block.,75
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt,CompileJdtClasspathTest,testReactor_missingType_splitpackage,Long Statement,The length of the statement "mojos.assertMessages(parent`"module-a/src/main/java/missing/Error.java"`"ERROR Error.java [6:12] Missing cannot be resolved to a type"`"ERROR Error.java [8:20] Missing cannot be resolved to a type");" is 199.,75
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt.classpath,ClasspathJar,findType,Empty catch clause,The method has an empty catch block.,52
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt.classpath,ClasspathJar,create,Empty catch clause,The method has an empty catch block.,71
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt.classpath,ClasspathDirectory,findType,Empty catch clause,The method has an empty catch block.,32
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt.classpath,AbstractClasspathDirectory,scanDirectory,Empty catch clause,The method has an empty catch block.,29
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt.classpath,AbstractClasspathDirectory,getExportedPackages,Empty catch clause,The method has an empty catch block.,57
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt.classpath,AbstractClasspathDirectory,getExportedPackages,Empty catch clause,The method has an empty catch block.,57
takari_takari-lifecycle,io.takari.maven.plugins.compile.jdt.classpath,ClasspathTest,testEmptyJarPackage,Empty catch clause,The method has an empty catch block.,16
takari_takari-lifecycle,io.takari.maven.plugins,Deploy,installProject,Long Statement,The length of the statement "getLog().info("Will deploy " + project.getGroupId() + ":"+ project.getArtifactId()+ ":"+ project.getVersion()+ " at the end of build");" is 135.,63
takari_takari-lifecycle,io.takari.maven.plugins,Deploy,remoteRepository,Long Statement,The length of the statement "throw new MojoExecutionException(altDeploymentRepository`"Invalid syntax for repository."`"Invalid syntax for alternative repository. Use \"id::layout::url\".");" is 161.,114
takari_takari-lifecycle,io.takari.maven.plugins,Deploy,remoteRepository,Magic Number,The method contains a magic number: 2,114
takari_takari-lifecycle,io.takari.maven.plugins,Deploy,remoteRepository,Magic Number,The method contains a magic number: 3,114
takari_takari-lifecycle,io.takari.maven.plugins,TakariLifecycleMojo,alternateLifecycleProvidingPrimaryArtifact,Long Identifier,The length of the identifier alternateLifecycleProvidingPrimaryArtifact is 42.,107
takari_takari-lifecycle,io.takari.maven.plugins,TakariLifecycleMojo,alternateLifecycleProvidingPrimaryArtifact,Long Statement,The length of the statement "String alternateLifecycleProvidingPrimaryArtifact=session.getUserProperties().getProperty(TakariLifecycleFlags.ALTERNATE_LIFECYCLE_PROVIDING_PRIMARY_ARTIFACT);" is 159.,107
takari_takari-lifecycle,io.takari.maven.plugins.jar,Jar,executeMojo,Complex Method,Cyclomatic complexity of the method is 13,78
takari_takari-lifecycle,io.takari.maven.plugins.jar,Jar,executeMojo,Long Method,The method has 102 lines of code.,78
takari_takari-lifecycle,io.takari.maven.plugins.jar,Jar,executeMojo,Long Statement,The length of the statement "logger.info("The '{}' lifecycle has indicated it will produce the primary artifact. Attaching JAR as a secondary artifact."`project.getPackaging());" is 148.,78
takari_takari-lifecycle,io.takari.maven.plugins.jar,PomPropertiesTest,testBasic,Long Statement,The length of the statement "try (InputStream is=new FileInputStream(new File(basedir`"target/classes/META-INF/maven/io.takari.lifecycle.its/test/pom.properties"))){" is 136.,22
takari_takari-lifecycle,io.takari.maven.plugins.jar,JarTest,testJarEntries,Long Statement,The length of the statement "assertZipEntries(jar`"D META-INF/ 315561600000"`"F META-INF/MANIFEST.MF 315561600000"`"D META-INF/maven/ 315561600000"`"D META-INF/maven/io.takari.lifecycle.its/ 315561600000"`"D META-INF/maven/io.takari.lifecycle.its/test/ 315561600000"`"F META-INF/maven/io.takari.lifecycle.its/test/pom.properties 315561600000"`"F resource.txt 315561600000"`"D subdir/ 315561600000"`"F subdir/resource.txt 315561600000");" is 407.,165
takari_takari-lifecycle,io.takari.maven.plugins.jar,JarTest,assertZipEntries,Long Statement,The length of the statement "actualSb.append(entry.isDirectory() ? "D " : "F ").append(entry.getName()).append(' ').append(entry.getTime()).append('\n');" is 124.,184
takari_takari-lifecycle,io.takari.maven.plugins.jar,JarTest,testSymlinkedDirectories,Long Statement,The length of the statement "java.nio.file.Files.createSymbolicLink(new File(orig`"target/classes/symlinked-resource.txt").toPath()`new File(orig`"target/classes/resource.txt").toPath());" is 158.,294
takari_takari-lifecycle,io.takari.maven.plugins.jar,JarTest,testSymlinkedDirectories,Long Statement,The length of the statement "assertZipEntries(new File(symlink`"target/test-1.jar")`"D META-INF/ 315561600000"`"F META-INF/MANIFEST.MF 315561600000"`"D META-INF/maven/ 315561600000"`"D META-INF/maven/test/ 315561600000"`"D META-INF/maven/test/test/ 315561600000"`"F META-INF/maven/test/test/pom.properties 315561600000"`"F resource.txt 315561600000"`"D subdir/ 315561600000"`"F subdir/resource.txt 315561600000"`"F symlinked-resource.txt 315561600000");" is 424.,294
takari_takari-lifecycle,io.takari.maven.plugins.jar,JarTest,testSymlinkedDirectories,Long Statement,The length of the statement "assertZipEntries(new File(symlink`"target/test-1-tests.jar")`"D META-INF/ 315561600000"`"F META-INF/MANIFEST.MF 315561600000"`"F test-resource.txt 315561600000");" is 162.,294
takari_takari-lifecycle,io.takari.maven.plugins.jar,JarTest,testSymlinkedDirectories,Long Statement,The length of the statement "assertZipEntries(new File(symlink`"target/test-1-sources.jar")`"D META-INF/ 315561600000"`"F META-INF/MANIFEST.MF 315561600000"`"D pkg/ 315561600000"`"F pkg/Class.java 315561600000");" is 183.,294
takari_takari-lifecycle,io.takari.maven.plugins.pgp,SignArtifactMojo,executeMojo,Complex Method,Cyclomatic complexity of the method is 9,32
takari_takari-lifecycle,io.takari.maven.plugins.pgp,SignArtifactMojo,executeMojo,Long Statement,The length of the statement "projectHelper.attachArtifact(project`bundle.getExtension() + SIGNATURE_EXTENSION`bundle.getClassifier()`bundle.getSignature());" is 127.,32
takari_takari-lifecycle,io.takari.maven.plugins.util,AetherUtils,toArtifact,Long Statement,The length of the statement "org.apache.maven.artifact.Artifact result=new org.apache.maven.artifact.DefaultArtifact(artifact.getGroupId()`artifact.getArtifactId()`artifact.getVersion()`null`artifact.getProperty(ArtifactProperties.TYPE`artifact.getExtension())`nullify(artifact.getClassifier())`handler);" is 275.,81
takari_takari-lifecycle,io.takari.maven.plugins.util,AetherUtils,toArtifact,Long Statement,The length of the statement "Artifact result=new DefaultArtifact(artifact.getGroupId()`artifact.getArtifactId()`artifact.getClassifier()`artifact.getArtifactHandler().getExtension()`version`props`newArtifactType(artifact.getType()`artifact.getArtifactHandler()));" is 234.,121
takari_takari-lifecycle,io.takari.maven.plugins.util,AetherUtils,newHandler,Long Statement,The length of the statement "handler.setIncludesDependencies(Boolean.parseBoolean(artifact.getProperty(ArtifactProperties.INCLUDES_DEPENDENCIES`"")));" is 121.,236
takari_takari-lifecycle,io.takari.maven.plugins.util,AetherUtils,newArtifactType,Long Statement,The length of the statement "return new DefaultArtifactType(id`handler.getExtension()`handler.getClassifier()`handler.getLanguage()`handler.isAddedToClasspath()`handler.isIncludesDependencies());" is 166.,246
takari_takari-lifecycle,io.takari.maven.plugins.util,AetherUtils,toDependency,Long Statement,The length of the statement "Artifact artifact=new DefaultArtifact(dependency.getGroupId()`dependency.getArtifactId()`dependency.getClassifier()`null`dependency.getVersion()`props`stereotype);" is 163.,250
takari_takari-lifecycle,io.takari.maven.plugins.util,AetherUtils,toRemoteRepository,Long Statement,The length of the statement "RemoteRepository.Builder builder=new RemoteRepository.Builder(repository.getId()`repository.getLayout()`repository.getUrl());" is 125.,311
takari_takari-lifecycle,io.takari.maven.plugins.install_deploy,InstallDeployTest,testBasic_release,Magic Number,The method contains a magic number: 2,37
takari_takari-lifecycle,io.takari.maven.plugins.install_deploy,InstallDeployTest,newSession,Long Statement,The length of the statement "repoSession.setLocalRepositoryManager(mojos.getContainer().lookup(LocalRepositoryManagerFactory.class`"simple").newInstance(repoSession`localRepo));" is 148.,72
takari_takari-lifecycle,io.takari.maven.plugins.install_deploy,InstallDeployTest,testAltDeployRepository,Long Statement,The length of the statement "mojos.executeMojo(session`project`"deploy"`newParameter("altDeploymentRepository"`"default::default::file://" + altDeploymentRepository.getAbsolutePath()));" is 156.,103
takari_takari-lifecycle,io.takari.maven.plugins.install_deploy,InstallDeployTest,testAltDeployRepository,Magic Number,The method contains a magic number: 2,103
takari_takari-lifecycle,io.takari.maven.plugins.install_deploy,InstallDeployTest,testDeployAtEnd,Magic Number,The method contains a magic number: 3,134
takari_takari-lifecycle,io.takari.maven.plugins.sisu,AbstractSisuIndexMojo,gleanNamedType,Empty catch clause,The method has an empty catch block.,62
takari_takari-lifecycle,io.takari.maven.plugins.configurator,TakariMojoExecutionConfigurator,configure,Complex Conditional,The conditional expression mojoConfigurationFromPom != null && mojoConfigurationFromPom.getChild(mojoExecution.getGoal()) != null && mojoConfigurationFromPom.getChild(mojoExecution.getGoal()).getChildCount() > 0 is complex.,15
takari_takari-lifecycle,io.takari.maven.plugins.configurator,TakariMojoExecutionConfigurator,configure,Long Statement,The length of the statement "if (mojoConfigurationFromPom != null && mojoConfigurationFromPom.getChild(mojoExecution.getGoal()) != null && mojoConfigurationFromPom.getChild(mojoExecution.getGoal()).getChildCount() > 0) {" is 191.,15
takari_takari-lifecycle,io.takari.maven.plugins.configurator,MojoConfigurator,configureComponent,Long Parameter List,The method has 5 parameters. ,19
takari_takari-lifecycle,io.takari.maven.plugins.configurator,MojoConfigurationProcessor,extractAndMerge,Long Statement,The length of the statement "return new XmlPlexusConfiguration(Xpp3Dom.mergeXpp3Dom(convert(mojoConfigurationFromPom)`convert(defaultMojoConfiguration)));" is 125.,46
takari_takari-lifecycle,io.takari.maven.plugins.configurator,MojoConfigurationMergerTest,extractionOfMojoSpecificConfigurationAndMergingwithDefaultMojoConfiguration,Long Statement,The length of the statement "PlexusConfiguration configurationFromMaven=builder("configuration").es("jar").es("sourceJar").v("true").ee().ee().buildPlexusConfiguration();" is 141.,34
takari_takari-lifecycle,io.takari.maven.plugins.configurator,MojoConfigurationMergerTest,plexusConfigurationMerging,Long Statement,The length of the statement "PlexusConfiguration mojoConfigurationFromPom=builder("configuration").es("sourceJar").v("true").ee().buildPlexusConfiguration();" is 128.,62
takari_takari-lifecycle,io.takari.maven.plugins.configurator,MojoConfigurationMergerTest,plexusConfigurationMerging,Long Statement,The length of the statement "PlexusConfiguration defaultMojoConfiguration=builder("configuration").entry("classesDirectory"`"java.io.File"`"${project.build.outputDirectory}").entry("reactorProjects"`"java.util.List"`"${reactorProjects}").entry("souceJar"`"boolean"`"${sourceJar").buildPlexusConfiguration();" is 278.,62
takari_takari-lifecycle,io.takari.maven.plugins.configurator,MojoConfigurationMergerTest,plexusConfigurationMerging,Long Statement,The length of the statement "PlexusConfiguration mojoConfiguration=merger.mergePlexusConfiguration(mojoConfigurationFromPom`defaultMojoConfiguration);" is 121.,62
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Complex Conditional,The conditional expression "link".equals(tag) || "linkplain".equals(tag) || "value".equals(tag) is complex.,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Complex Method,Cyclomatic complexity of the method is 12,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Magic Number,The method contains a magic number: 1024,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Magic Number,The method contains a magic number: 2,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Magic Number,The method contains a magic number: 7,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Magic Number,The method contains a magic number: 3,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Magic Number,The method contains a magic number: 5,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,GeneratorUtils,decodeJavadocTags,Magic Number,The method contains a magic number: 6,64
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorWriter,writeMojoDescriptor,Complex Method,Cyclomatic complexity of the method is 10,98
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojo,executeMojo,Complex Method,Cyclomatic complexity of the method is 9,97
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojo,executeMojo,Long Statement,The length of the statement "throw new MojoExecutionException(String.format("Unexpected Eclipse m2e metadata found %s. Did you mean to move it to %s"`otherEclipseMetadataFile`eclipseMetadataFile));" is 168.,97
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojo,createPluginXml,Complex Method,Cyclomatic complexity of the method is 10,154
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojo,newPluginDescriptor,Long Statement,The length of the statement "getLog().warn("\n\nGoal prefix is specified as: '" + goalPrefix + "'. "+ "Maven currently expects it to be '"+ defaultGoalPrefix+ "'.\n");" is 138.,263
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojo,createEclipseMetadataXml,Long Statement,The length of the statement "List<String> goals=mojos.values().stream().filter(md -> md.isTakariBuilder()).map(md -> md.getGoal()).collect(Collectors.toList());" is 131.,283
takari_takari-lifecycle,io.takari.maven.plugins.plugin,MojoDescriptorGleaner,addAnnotatedMembers,Long Statement,The length of the statement "processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR`annotation + " only applicable to top-level class members"`member);" is 130.,76
takari_takari-lifecycle,io.takari.maven.plugins.plugin,MojoDescriptorGleaner,isTakariBuilderMojo,Long Statement,The length of the statement "TypeElement abstractIncrementalMojoType=getElementUtils().getTypeElement("io.takari.builder.internal.maven.AbstractIncrementalMojo");" is 133.,146
takari_takari-lifecycle,io.takari.maven.plugins.plugin,MojoDescriptorGleaner,isTakariBuilderMojo,Long Statement,The length of the statement "return abstractIncrementalMojoType != null && getTypeUtils().isSubtype(type.asType()`abstractIncrementalMojoType.asType());" is 123.,146
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testBasic,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 138.,34
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testBasic,Long Statement,The length of the statement "assertFileContents(basedir`"expected/lifecycle-mapping-metadata.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 131.,34
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testLegacyInheritance,Long Statement,The length of the statement "mojos.assertBuildOutputs(legacyBasedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 144.,68
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testLegacyInheritance,Long Statement,The length of the statement "mojos.assertBuildOutputs(pluginBasedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 144.,68
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testInheritance_incremental,Long Statement,The length of the statement "mojos.assertBuildOutputs(abstractBasedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 146.,92
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testInheritance_incremental,Long Statement,The length of the statement "mojos.assertBuildOutputs(concreteBasedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 146.,92
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testInheritance_incremental,Long Statement,The length of the statement "cp(new File(abstractBasedir`"src/main/java/io/takari/lifecycle/uts/plugindescriptor")`"AbstractExternalMojo.java-changed"`"AbstractExternalMojo.java");" is 151.,92
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testInheritance_incremental,Long Statement,The length of the statement "cp(new File(abstractBasedir`"src/main/java/io/takari/lifecycle/uts/plugindescriptor")`"AbstractExternalMojo.java-removed"`"AbstractExternalMojo.java");" is 151.,92
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testIndirectReference_incremental,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 138.,137
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testIndirectReference_incremental,Long Statement,The length of the statement "cp(basedir`"src/main/java/io/takari/lifecycle/uts/plugindescriptor/IndirectReference.java-changed"`"src/main/java/io/takari/lifecycle/uts/plugindescriptor/IndirectReference.java");" is 180.,137
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testIndirectReference_incremental,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 138.,137
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testJavadocInheritance_incremental,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 138.,154
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testJavadocInheritance_incremental,Long Statement,The length of the statement "cp(basedir`"src/main/java/io/takari/lifecycle/uts/plugindescriptor/AbstractBasicMojo.java-changed"`"src/main/java/io/takari/lifecycle/uts/plugindescriptor/AbstractBasicMojo.java");" is 180.,154
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testJavadocInheritance_incremental,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 138.,154
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testIncrementalDependencyChange,Long Statement,The length of the statement "mojos.assertBuildOutputs(plugin`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 137.,201
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testIncrementalDependencyChange,Long Statement,The length of the statement "cp(dependency`"src/main/java/io/takari/lifecycle/uts/plugindescriptor/ComponentClass.java-private-change"`"src/main/java/io/takari/lifecycle/uts/plugindescriptor/ComponentClass.java");" is 184.,201
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testIncrementalDependencyChange,Long Statement,The length of the statement "mojos.assertCarriedOverOutputs(plugin`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 143.,201
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testSourcepathDependency,Long Statement,The length of the statement "mojos.newDependency(new File(dependencyProject.getBuild().getOutputDirectory())).setGroupId(dependencyProject.getGroupId()).setArtifactId(dependencyProject.getArtifactId()).setVersion(dependencyProject.getVersion()).addTo(pluginProject);" is 237.,231
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testSourcepathDependency,Long Statement,The length of the statement "mojos.assertBuildOutputs(plugin`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 137.,231
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testBuilderM2eMetadataGeneration,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 138.,258
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testBuilderM2eMetadataGeneration,Long Statement,The length of the statement "assertFileContents(basedir`"expected/lifecycle-mapping-metadata.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 131.,258
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testPluginEclipseMatadata,Long Statement,The length of the statement "mojos.assertBuildOutputs(basedir`"target/classes/META-INF/maven/plugin.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 138.,272
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testPluginEclipseMatadata,Long Statement,The length of the statement "assertFileContents(basedir`"src/main/m2e/lifecycle-mapping-metadata.xml"`"target/classes/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 135.,272
takari_takari-lifecycle,io.takari.maven.plugins.plugin,PluginDescriptorMojoTest,testPluginEclipseMatadataResource,Long Statement,The length of the statement "cp(basedir`"src/main/m2e/lifecycle-mapping-metadata.xml"`"src/main/resources/META-INF/m2e/lifecycle-mapping-metadata.xml");" is 123.,286
takari_takari-lifecycle,io.takari.maven.plugins.testproperties,TestPropertiesMojo,putArtifact,Long Statement,The length of the statement "state.putArtifact(artifact.getFile()`artifact.getGroupId()`artifact.getArtifactId()`artifact.getArtifactHandler().getExtension()`artifact.getClassifier()`artifact.getBaseVersion());" is 181.,238
takari_takari-lifecycle,io.takari.maven.plugins.testproperties,TestPropertiesMojo,logWarningNotAccessibleFile,Complex Conditional,The conditional expression file.exists() && file.isFile() && !file.canRead() is complex.,301
takari_takari-lifecycle,io.takari.maven.plugins.testproperties,TestPropertiesMojoTest,newMojoExecution,Long Statement,The length of the statement "DefaultArtifact workspaceResolver=new DefaultArtifact("io.takari.m2e.workspace"`"org.eclipse.m2e.workspace.cli"`"1"`Artifact.SCOPE_COMPILE`".jar"`null`handler);" is 160.,51
takari_takari-lifecycle,io.takari.maven.plugins.testproperties,TestPropertiesMojoTest,testWorkspaceResolver,Long Statement,The length of the statement "mojos.newDependency(basedir).setGroupId("io.takari.m2e.workspace").setArtifactId("org.eclipse.m2e.workspace.cli").addTo(project);" is 129.,216
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model,MojoDescriptor,clone,Long Statement,The length of the statement "throw (java.lang.RuntimeException)new java.lang.UnsupportedOperationException(getClass().getName() + " does not support clone()").initCause(ex);" is 144.,172
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model,MojoParameter,clone,Long Statement,The length of the statement "throw (java.lang.RuntimeException)new java.lang.UnsupportedOperationException(getClass().getName() + " does not support clone()").initCause(ex);" is 144.,82
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model,MojoRequirement,clone,Long Statement,The length of the statement "throw (java.lang.RuntimeException)new java.lang.UnsupportedOperationException(getClass().getName() + " does not support clone()").initCause(ex);" is 144.,42
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,getDoubleValue,Long Statement,The length of the statement "throw new XmlPullParserException("Unable to parse element '" + attribute + "'` must be a floating point number"`parser`nfe);" is 124.,317
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,getFloatValue,Long Statement,The length of the statement "throw new XmlPullParserException("Unable to parse element '" + attribute + "'` must be a floating point number"`parser`nfe);" is 124.,347
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,read,Long Statement,The length of the statement "XmlPullParser parser=addDefaultEntities ? new MXParser(EntityReplacementMap.defaultEntityReplacementMap) : new MXParser();" is 122.,540
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Complex Method,Cyclomatic complexity of the method is 33,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Method,The method has 116 lines of code.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setRequiresDirectInvocation(getBooleanValue(interpolatedTrimmed(parser.nextText()`"requiresDirectInvocation")`"requiresDirectInvocation"`parser`"false"));" is 169.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setRequiresProject(getBooleanValue(interpolatedTrimmed(parser.nextText()`"requiresProject")`"requiresProject"`parser`"false"));" is 142.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setRequiresReports(getBooleanValue(interpolatedTrimmed(parser.nextText()`"requiresReports")`"requiresReports"`parser`"false"));" is 142.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setAggregator(getBooleanValue(interpolatedTrimmed(parser.nextText()`"aggregator")`"aggregator"`parser`"false"));" is 127.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setRequiresOnline(getBooleanValue(interpolatedTrimmed(parser.nextText()`"requiresOnline")`"requiresOnline"`parser`"false"));" is 139.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setInheritedByDefault(getBooleanValue(interpolatedTrimmed(parser.nextText()`"inheritedByDefault")`"inheritedByDefault"`parser`"false"));" is 151.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setThreadSafe(getBooleanValue(interpolatedTrimmed(parser.nextText()`"threadSafe")`"threadSafe"`parser`"false"));" is 127.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoDescriptor,Long Statement,The length of the statement "mojoDescriptor.setTakariBuilder(getBooleanValue(interpolatedTrimmed(parser.nextText()`"takariBuilder")`"takariBuilder"`parser`"false"));" is 136.,603
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parseMojoParameter,Complex Method,Cyclomatic complexity of the method is 15,770
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,parsePluginDependency,Complex Method,Cyclomatic complexity of the method is 8,904
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Reader,read,Long Statement,The length of the statement "throw new XmlPullParserException("Expected root element 'mojos' but found no element at all: invalid XML document"`parser`null);" is 128.,1012
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Complex Method,Cyclomatic complexity of the method is 27,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"requiresDependencyResolution").text(mojoDescriptor.getRequiresDependencyResolution()).endTag(NAMESPACE`"requiresDependencyResolution");" is 166.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"requiresDependencyCollection").text(mojoDescriptor.getRequiresDependencyCollection()).endTag(NAMESPACE`"requiresDependencyCollection");" is 166.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"requiresDirectInvocation").text(String.valueOf(mojoDescriptor.isRequiresDirectInvocation())).endTag(NAMESPACE`"requiresDirectInvocation");" is 169.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"requiresProject").text(String.valueOf(mojoDescriptor.isRequiresProject())).endTag(NAMESPACE`"requiresProject");" is 142.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"requiresReports").text(String.valueOf(mojoDescriptor.isRequiresReports())).endTag(NAMESPACE`"requiresReports");" is 142.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"aggregator").text(String.valueOf(mojoDescriptor.isAggregator())).endTag(NAMESPACE`"aggregator");" is 127.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"requiresOnline").text(String.valueOf(mojoDescriptor.isRequiresOnline())).endTag(NAMESPACE`"requiresOnline");" is 139.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"inheritedByDefault").text(String.valueOf(mojoDescriptor.isInheritedByDefault())).endTag(NAMESPACE`"inheritedByDefault");" is 151.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"implementation").text(mojoDescriptor.getImplementation()).endTag(NAMESPACE`"implementation");" is 124.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"instantiationStrategy").text(mojoDescriptor.getInstantiationStrategy()).endTag(NAMESPACE`"instantiationStrategy");" is 145.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"executionStrategy").text(mojoDescriptor.getExecutionStrategy()).endTag(NAMESPACE`"executionStrategy");" is 133.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"threadSafe").text(String.valueOf(mojoDescriptor.isThreadSafe())).endTag(NAMESPACE`"threadSafe");" is 127.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoDescriptor,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"takariBuilder").text(String.valueOf(mojoDescriptor.isTakariBuilder())).endTag(NAMESPACE`"takariBuilder");" is 136.,84
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoParameter,Complex Method,Cyclomatic complexity of the method is 12,209
takari_takari-lifecycle,io.takari.maven.plugins.plugin.model.io.xpp3,PluginDescriptorXpp3Writer,writeMojoParameter,Long Statement,The length of the statement "serializer.startTag(NAMESPACE`"implementation").text(mojoParameter.getImplementation()).endTag(NAMESPACE`"implementation");" is 123.,209
